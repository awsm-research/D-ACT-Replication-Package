@java.lang.Override public void get@@ I@@ cc@@ S@@ lo@@ ts@@ Statu@@ s(@@ android.os.@@ Mess@@ age result@@ ) { if ((m@@ I@@ cc@@ S@@ lo@@ t@@ Statu@@ s) != null@@ ) { result@@ Su@@ c@@ ces@@ s(@@ result@@ , m@@ I@@ cc@@ S@@ lo@@ t@@ Statu@@ s); } else { result@@ Fail@@ (@@ result@@ , null@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ Exception@@ (@@ Command@@ Exception@@ .@@ Error@@ .@@ RE@@ Q@@ UE@@ ST_@@ NO@@ T_@@ S@@ U@@ P@@ O@@ RT@@ E@@ D@@ )); } }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ S@@ an@@ ity@@ () { assert@@ NotNull@@ (m@@ U@@ ic@@ c@@ Control@@ ler@@ UT@@ .get@@ U@@ ic@@ c@@ C@@ ard@@ (0@@ )); assert@@ Null@@ (m@@ U@@ ic@@ c@@ Control@@ ler@@ UT@@ .get@@ I@@ cc@@ Record@@ s(@@ 0, U@@ ic@@ c@@ Control@@ ler.@@ AP@@ P@@ _@@ F@@ AM@@ _@@ 3@@ G@@ P@@ P@@ )); assert@@ Null@@ (m@@ U@@ ic@@ c@@ Control@@ ler@@ UT@@ .get@@ I@@ cc@@ Record@@ s(@@ 0, U@@ ic@@ c@@ Control@@ ler.@@ AP@@ P@@ _@@ F@@ AM@@ _@@ 3@@ G@@ P@@ P@@ 2@@ )); assert@@ Null@@ (m@@ U@@ ic@@ c@@ Control@@ ler@@ UT@@ .get@@ I@@ cc@@ Record@@ s(@@ 0, U@@ ic@@ c@@ Control@@ ler.@@ AP@@ P@@ _@@ F@@ AM@@ _@@ I@@ M@@ S@@ )); assert@@ Null@@ (m@@ U@@ ic@@ c@@ Control@@ ler@@ UT@@ .get@@ I@@ cc@@ File@@ Handler@@ (@@ 0, U@@ ic@@ c@@ Control@@ ler.@@ AP@@ P@@ _@@ F@@ AM@@ _@@ 3@@ G@@ P@@ P@@ )); assert@@ Null@@ (m@@ U@@ ic@@ c@@ Control@@ ler@@ UT@@ .get@@ I@@ cc@@ File@@ Handler@@ (@@ 0, U@@ ic@@ c@@ Control@@ ler.@@ AP@@ P@@ _@@ F@@ AM@@ _@@ 3@@ G@@ P@@ P@@ 2@@ )); assert@@ Null@@ (m@@ U@@ ic@@ c@@ Control@@ ler@@ UT@@ .get@@ I@@ cc@@ File@@ Handler@@ (@@ 0, U@@ ic@@ c@@ Control@@ ler.@@ AP@@ P@@ _@@ F@@ AM@@ _@@ I@@ M@@ S@@ )); }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (@@ this@@ .get@@ Class@@ ().get@@ Sim@@ ple@@ Name@@ ()); do@@ Return@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ ler@@ Test.@@ P@@ H@@ ON@@ E_@@ C@@ O@@ UN@@ T@@ ).@@ when@@ (m@@ Telephony@@ Manager@@ )@@ .get@@ Phone@@ Count@@ (); do@@ Return@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ ler@@ Test.@@ P@@ H@@ ON@@ E_@@ C@@ O@@ UN@@ T@@ ).@@ when@@ (m@@ Telephony@@ Manager@@ )@@ .get@@ Sim@@ Count@@ (); re@@ pla@@ ce@@ Instance@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ ler@@ .@@ class@@ , "@@ m@@ Instance@@ ", null@@ , null@@ ); m@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ m@@ Application@@ s = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Application@@ Statu@@ s@@ []{ }; m@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ mC@@ d@@ ma@@ Sub@@ s@@ cription@@ App@@ In@@ dex = m@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ m@@ Im@@ s@@ Sub@@ s@@ cription@@ App@@ In@@ dex = m@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ m@@ G@@ s@@ m@@ U@@ m@@ ts@@ Sub@@ s@@ cription@@ App@@ In@@ dex = -1@@ ; m@@ Sim@@ ul@@ ated@@ Command@@ s.@@ set@@ I@@ cc@@ C@@ ard@@ Statu@@ s@@ (m@@ I@@ cc@@ C@@ ard@@ Statu@@ s); m@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ ph@@ y@@ si@@ cal@@ S@@ lo@@ t@@ In@@ dex = U@@ ic@@ c@@ Control@@ ler.@@ IN@@ V@@ AL@@ ID@@ _S@@ LO@@ T_@@ ID@@ ; m@@ U@@ ic@@ c@@ Control@@ ler@@ Handler@@ Th@@ re@@ ad = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ ler@@ Test.@@ U@@ ic@@ c@@ Control@@ ler@@ Handler@@ Thread@@ (@@ TAG@@ ); m@@ U@@ ic@@ c@@ Control@@ ler@@ Handler@@ Thread@@ .@@ start@@ (); wait@@ Un@@ ti@@ l@@ Read@@ y(); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Telephony@@ Test@@ Utils.@@ wait@@ For@@ M@@ s(@@ 1@@ 00@@ ); }
@java.lang.Override public void get@@ I@@ cc@@ S@@ lo@@ ts@@ Statu@@ s(@@ android.os.@@ Mess@@ age result@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y = get@@ R@@ ad@@ io@@ Prox@@ y@@ (@@ result@@ ); if (@@ rad@@ io@@ Prox@@ y != null@@ ) { ri@@ l@@ j@@ Log@@ ("@@ get@@ I@@ cc@@ S@@ lo@@ ts@@ Statu@@ s@@ "); if (@@ rad@@ io@@ Prox@@ y != null@@ ) { ri@@ l@@ j@@ Log@@ ("@@ get@@ I@@ cc@@ S@@ lo@@ ts@@ Statu@@ s@@ : rad@@ io@@ Prox@@ y != null android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y@@ 1@@ 2 = android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ I@@ R@@ ad@@ io.@@ cast@@ From@@ (@@ rad@@ io@@ Prox@@ y@@ ); if (@@ rad@@ io@@ Prox@@ y@@ 1@@ 2 == null@@ ) { ri@@ l@@ j@@ Log@@ ("@@ get@@ I@@ cc@@ S@@ lo@@ ts@@ Statu@@ s@@ ", "@@ get@@ I@@ cc@@ S@@ lo@@ t@@ Statu@@ s@@ ", e); } if (@@ result != null@@ ) { ri@@ l@@ j@@ Log@@ ("@@ get@@ I@@ cc@@ S@@ lo@@ ts@@ Statu@@ s@@ ", "@@ get@@ I@@ cc@@ S@@ lo@@ t@@ Statu@@ s@@ ", e); } else { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Requ@@ est r@@ r = ob@@ t@@ ain@@ Request@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ _RE@@ Q@@ UE@@ ST_@@ GE@@ T_@@ S@@ LO@@ T_@@ STAT@@ US@@ , result@@ , m@@ R@@ IL@@ Default@@ W@@ or@@ k@@ Source@@ ); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ R@@ IL@@ J@@ _@@ LO@@ G@@ D@@ ) { ri@@ l@@ j@@ Log@@ ((((@@ r@@ r.@@ ser@@ i@@ al@@ String@@ ()) + "@@ > ") + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ request@@ To@@ String(@@ r@@ r.@@ m@@ Request@@ )))); } try { rad@@ io@@ Prox@@ y@@ 12@@ .get@@ Sim@@ S@@ lo@@ ts@@ Statu@@ s(@@ r@@ r.@@ m@@ Ser@@ i@@ al@@ ); } catch (android.os.@@ Remote@@ Exception | java.lang.@@ Runtime@@ Exception e) { handle@@ R@@ ad@@ io@@ Prox@@ y@@ Exception@@ For@@ R@@ (@@ r@@ r@@ r@@ r@@ , "@@ get@@ I@@ cc@@ S@@ lo@@ t@@ Statu@@ s@@ ", e); } } } }
private void do@@ wn@@ load@@ Data@@ (android.os.@@ Bund@@ le ex@@ tr@@ as@@ , android.content.@@ Context context@@ ) { if (@@ ex@@ tra@@ s == null@@ ) return@@ ; java.lang.String ur@@ l@@ ; ur@@ l = ex@@ tra@@ s.get@@ String@@ (com.android.@@ tests.@@ connec@@ tivity.@@ u@@ id@@ .@@ Connectivity@@ Test@@ Ac@@ tivity.@@ URL@@ ); android.util.Log.@@ e@@ (com.android.@@ tests.@@ connec@@ tivity.@@ u@@ id@@ .@@ Connectivity@@ Test@@ Ac@@ tivity.@@ TAG, ("@@ UR@@ L IS@@ : " + ur@@ l@@ )); check@@ And@@ G@@ r@@ ant@@ Runtime@@ Permission@@ s(@@ context@@ ); h@@ ttp@@ Do@@ wn@@ load@@ File@@ (@@ ur@@ l@@ ); }
public void on@@ Res@@ um@@ e@@ () { super@@ .@@ on@@ Res@@ um@@ e@@ (); boolean con@@ n = check@@ No@@ w@@ (@@ this@@ .get@@ Application@@ Context@@ ()); android.content.@@ Int@@ ent return@@ Int@@ ent = new android.content.@@ Intent@@ (); return@@ Int@@ ent.@@ put@@ Extra@@ (com.android.@@ tests.@@ connec@@ tivity.@@ u@@ id@@ .@@ Connectivity@@ Test@@ Ac@@ tivity.@@ RE@@ S@@ UL@@ T@@ , con@@ n@@ ); set@@ Result@@ (com.android.@@ tests.@@ connec@@ tivity.@@ u@@ id@@ .@@ RE@@ S@@ UL@@ T_@@ O@@ K@@ , return@@ Intent@@ ); android.os.@@ Bund@@ le ex@@ tra@@ s = get@@ Intent@@ ().get@@ Ex@@ tr@@ as@@ (); do@@ wn@@ load@@ Data@@ (@@ ex@@ tr@@ as@@ , this@@ .get@@ Application@@ Context@@ ()); fin@@ is@@ h@@ (); }
private boolean is@@ Run@@ ning@@ In@@ V@@ R@@ () { final android.content.@@ Context con@@ tex@@ t = android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ (); if (((@@ con@@ tex@@ t.get@@ Res@@ ources@@ ().get@@ Configuration@@ ().@@ ui@@ Mode@@ ) & (android.@@ content.@@ res@@ .@@ Configur@@ ation.@@ U@@ I@@ _MOD@@ E_@@ TYP@@ E@@ _M@@ A@@ S@@ K@@ )) == (android.@@ content.@@ res@@ .@@ Configur@@ ation.@@ U@@ I@@ _MOD@@ E_@@ TYP@@ E_@@ V@@ R@@ _@@ H@@ E@@ AD@@ SE@@ T@@ )) { return true@@ ; } return false@@ ; }
protected boolean sup@@ port@@ s@@ Key@@ guard@@ () throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception { return (is@@ Hand@@ h@@ eld@@ ()) && (!(@@ is@@ U@@ i@@ Mode@@ Lock@@ ed@@ To@@ V@@ r@@ He@@ ad@@ set@@ ())); }
private void test@@ Chang@@ e@@ F@@ on@@ t@@ S@@ c@@ ale@@ (java.lang.String ac@@ tivity@@ Name, boolean re@@ la@@ unch@@ ) throw@@ s java.lang.Exception { java.lang.String log@@ Se@@ par@@ at@@ or = clear@@ Log@@ cat@@ (); la@@ unch@@ Activity@@ (@@ ac@@ tivity@@ Name); final java.lang.String[] wait@@ For@@ Ac@@ ti@@ vi@@ ties@@ Vi@@ si@@ b@@ le = new java.lang.String@@ []{ ac@@ tivity@@ Name }; m@@ A@@ m@@ W@@ m@@ State.@@ com@@ pu@@ te@@ State@@ (m@@ Device@@ , wait@@ For@@ Ac@@ ti@@ vi@@ ties@@ Vi@@ si@@ ble@@ ); set@@ F@@ on@@ t@@ S@@ c@@ ale@@ (@@ 1.@@ 0F@@ ); m@@ A@@ m@@ W@@ m@@ State.@@ com@@ pu@@ te@@ State@@ (m@@ Device@@ , wait@@ For@@ Ac@@ ti@@ vi@@ ties@@ Vi@@ si@@ ble@@ ); final int d@@ en@@ s@@ ity@@ D@@ p@@ i = get@@ G@@ lo@@ b@@ al@@ D@@ en@@ s@@ ity@@ D@@ pi@@ (@@ ac@@ tivity@@ Name, log@@ Se@@ par@@ at@@ or ); for (@@ float f@@ on@@ t@@ S@@ cal@@ e = 0.@@ 8@@ 5@@ F@@ ; f@@ on@@ t@@ S@@ cal@@ e <@@ = 1.@@ 3@@ F@@ ; f@@ on@@ t@@ S@@ cal@@ e +@@ = 0.@@ 1@@ 5@@ F@@ ) { log@@ Se@@ par@@ at@@ or = clear@@ Log@@ cat@@ (); set@@ F@@ on@@ t@@ S@@ c@@ ale@@ (f@@ on@@ t@@ S@@ c@@ ale@@ ); m@@ A@@ m@@ W@@ m@@ State.@@ com@@ pu@@ te@@ State@@ (m@@ Device@@ , wait@@ For@@ Ac@@ ti@@ vi@@ ties@@ Vi@@ si@@ ble@@ ); assert@@ Re@@ la@@ unch@@ Or@@ Config@@ Changed@@ (@@ ac@@ tivity@@ Name, (re@@ la@@ un@@ ch ? 1 : 0@@ ), (re@@ la@@ un@@ ch ? 0 : 1@@ ), log@@ Se@@ par@@ ator@@ ); assert@@ Ex@@ pec@@ ted@@ F@@ on@@ t@@ P@@ i@@ x@@ el@@ Size@@ (@@ ac@@ tivity@@ Name, android.@@ server.@@ cts.@@ Activity@@ Manager@@ Config@@ Chang@@ e@@ Tests.@@ sc@@ ale@@ d@@ P@@ i@@ x@@ el@@ s@@ To@@ P@@ i@@ x@@ el@@ s(@@ android.@@ server.@@ cts.@@ Activity@@ Manager@@ Config@@ Chang@@ e@@ Tests.@@ EX@@ P@@ EC@@ TE@@ D_@@ F@@ ON@@ T_@@ SIZ@@ E_@@ S@@ P@@ , f@@ on@@ t@@ S@@ c@@ ale@@ , d@@ en@@ s@@ ity@@ D@@ pi@@ ), log@@ Se@@ par@@ ator@@ ); } }
private int get@@ G@@ lo@@ b@@ al@@ D@@ en@@ s@@ ity@@ D@@ pi@@ (java.lang.String ac@@ tivity@@ Name, java.lang.String log@@ Se@@ par@@ ator@@ ) throw@@ s java.lang.Exception { final java.lang.String[] line@@ s = get@@ Device@@ Log@@ s@@ For@@ Comp@@ onent@@ (@@ ac@@ tivity@@ Name, log@@ Se@@ par@@ ator@@ ); for (@@ int i = (@@ lin@@ es.@@ length) -@@ 1@@ ; i >@@ = 0; i@@ -@@ ) { final java.lang.String lin@@ e = lin@@ es@@ [@@ i@@ ]@@ .@@ tr@@ im@@ (); final java.util.@@ reg@@ ex@@ .@@ Match@@ er match@@ er = android.@@ server.@@ cts.@@ Activity@@ Manager@@ Config@@ Chang@@ e@@ Tests.@@ s@@ Device@@ D@@ en@@ s@@ ity@@ Pat@@ tern@@ .@@ match@@ er(@@ lin@@ e); if (m@@ atch@@ er.@@ match@@ es@@ ()) { return java.lang.Integ@@ er.@@ parse@@ Int@@ (m@@ atch@@ er.@@ g@@ roup@@ (@@ 2@@ )); } } fail@@ (("@@ N@@ o f@@ on@@ t@@ Activity@@ D@@ p@@ i re@@ por@@ ted@@ : f@@ ro@@ m ac@@ tiv@@ it@@ y " + ac@@ tivity@@ Name@@ )); return -@@ 1@@ ; }
@@@ android.@@ pla@@ t@@ for@@ m.@@ test.@@ annotations.@@ P@@ res@@ u@@ b@@ m@@ i@@ t public void test@@ F@@ ull@@ s@@ creen@@ App@@ O@@ ri@@ ent@@ ation@@ Request@@ s() throw@@ s java.lang.Exception { java.lang.String log@@ Se@@ par@@ at@@ or = "@@ se@@ par@@ at@@ or ch@@ "; la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ P@@ O@@ RT@@ R@@ A@@ I@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Vi@@ si@@ b@@ ili@@ ty@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ P@@ O@@ RT@@ R@@ A@@ I@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E, true@@ ); android.@@ server.@@ cts.@@ Re@@ ported@@ Size@@ s in@@ iti@@ al@@ Re@@ ported@@ Size@@ s = get@@ L@@ ast@@ Re@@ ported@@ Siz@@ es@@ For@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ P@@ O@@ RT@@ R@@ A@@ I@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E, log@@ Se@@ par@@ ator@@ ); assert@@ Equal@@ s("@@ S@@ k@@ ip@@ p@@ ing ac@@ tiv@@ it@@ y sho@@ ul@@ d b@@ e in@@ iti@@ al@@ ", 1, in@@ iti@@ al@@ Re@@ ported@@ Siz@@ es@@ .@@ or@@ i@@ ent@@ ation@@ ); log@@ Se@@ par@@ at@@ or = clear@@ Log@@ cat@@ (); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ L@@ AN@@ D@@ S@@ C@@ AP@@ E_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Vi@@ si@@ b@@ ili@@ ty@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ L@@ AN@@ D@@ S@@ C@@ AP@@ E_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E, true@@ ); in@@ iti@@ al@@ Re@@ ported@@ Size@@ s = get@@ L@@ ast@@ Re@@ ported@@ Siz@@ es@@ For@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ L@@ AN@@ D@@ S@@ C@@ AP@@ E_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E, log@@ Se@@ par@@ ator@@ ); assert@@ Equal@@ s("@@ S@@ k@@ ip@@ p@@ ed ac@@ tiv@@ it@@ y sho@@ ul@@ d b@@ e in l@@ and@@ sc@@ ap@@ e 2, in@@ iti@@ al@@ Re@@ ported@@ Siz@@ es.@@ or@@ i@@ ent@@ ation@@ ); log@@ Se@@ par@@ at@@ or = clear@@ Log@@ cat@@ (); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ P@@ O@@ RT@@ R@@ A@@ I@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Vi@@ si@@ b@@ ili@@ ty@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ P@@ O@@ RT@@ R@@ A@@ I@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E, true@@ ); in@@ iti@@ al@@ Re@@ ported@@ Size@@ s = get@@ L@@ ast@@ Re@@ ported@@ Siz@@ es@@ For@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ App@@ Configuration@@ Tests.@@ P@@ O@@ RT@@ R@@ A@@ I@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E, log@@ Se@@ par@@ ator@@ ); assert@@ Equal@@ s("@@ GE@@ T ac@@ tiv@@ it@@ y sho@@ ul@@ d b@@ e in tra@@ i@@ t@@ ", 1, in@@ iti@@ al@@ Re@@ ported@@ Siz@@ es@@ .@@ or@@ i@@ ent@@ ation@@ ); log@@ Se@@ par@@ at@@ or = clear@@ Log@@ cat@@ (); }
public void test_@@ 2@@ 3@@ 8@@ 3@@ 1@@ () throw@@ s java.lang.Exception { byte@@ [] byte@@ s = new byte@@ []{ (@@ (@@ byte@@ ) (@@ 24@@ 5@@ )), (@@ (@@ byte@@ ) (1@@ 6@@ 9@@ )), (@@ (@@ byte@@ ) (@@ 2@@ 3@@ 4@@ )), (@@ (@@ byte@@ ) (@@ 3@@ 3@@ )) }; java.lang.String expec@@ ted = "@@ \@@ u@@ 7@@ "; java.@@ n@@ io@@ .@@ char@@ set.@@ Char@@ set@@ De@@ co@@ der de@@ co@@ der = java.@@ n@@ io@@ .@@ char@@ set.@@ Char@@ set@@ .@@ for@@ Name("@@ UT@@ F@@ -@@ 8@@ "@@ )@@ .@@ new@@ De@@ co@@ der@@ (); de@@ cod@@ er.@@ on@@ M@@ al@@ for@@ m@@ ed@@ Input@@ (@@ java.@@ n@@ io@@ .@@ char@@ set.@@ Co@@ d@@ ing@@ Error@@ Action@@ .@@ RE@@ P@@ L@@ AC@@ E); assert@@ Equal@@ s(@@ expected@@ , de@@ cod@@ er.@@ de@@ code@@ (@@ java.nio.Byte@@ Buff@@ er.@@ w@@ rap@@ (@@ byte@@ s@@ )).@@ toString@@ ()); assert@@ Equal@@ s(@@ expected@@ , new java.lang.String@@ (@@ byte@@ s, "@@ UT@@ F@@ -@@ 8@@ ")); }
public void test@@ As@@ si@@ stan@@ t@@ Stack@@ Z@@ Or@@ der@@ () throw@@ s java.lang.Exception { if ((@@ !@@ (s@@ up@@ port@@ s@@ P@@ ip@@ ())) || (!@@ (s@@ up@@ port@@ s@@ S@@ pli@@ t@@ S@@ creen@@ Multi@@ W@@ in@@ do@@ w@@ ()))) return@@ ; la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ P@@ IP@@ _@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ EX@@ TR@@ A@@ _@@ EN@@ TER@@ _P@@ IP@@ , "@@ true@@ "); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ P@@ IP@@ _@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ P@@ IN@@ N@@ E@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Stack@@ ("@@ M@@ us@@ t cont@@ a@@ in p@@ in@@ ne@@ d st@@ ack@@ .@@ ", android.@@ server.@@ cts.@@ P@@ IN@@ N@@ E@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); la@@ unch@@ Activity@@ On@@ Display@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ D@@ IS@@ P@@ LA@@ Y@@ ); la@@ unch@@ Activity@@ In@@ D@@ ock@@ Stack@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ D@@ O@@ C@@ KE@@ D_@@ AC@@ TI@@ V@@ I@@ TY@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Stack@@ ("@@ M@@ us@@ t cont@@ a@@ in f@@ ull@@ s@@ cre@@ e@@ n st@@ ack@@ .@@ ", android.@@ server.@@ cts.@@ F@@ UL@@ L@@ S@@ C@@ RE@@ EN@@ _@@ W@@ OR@@ K@@ S@@ P@@ AC@@ E_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Stack@@ ("@@ M@@ us@@ t cont@@ a@@ in do@@ ck@@ ed st@@ ack@@ .@@ ", android.@@ server.@@ cts.@@ D@@ O@@ C@@ KE@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); en@@ able@@ As@@ si@@ stan@@ t@@ (); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ LA@@ UN@@ CH@@ _@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ F@@ RO@@ M@@ _S@@ E@@ SS@@ ION@@ ); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ N@@ T_@@ C@@ K@@ _@@ ID@@ ); assert@@ As@@ si@@ stan@@ t@@ Stack@@ Ex@@ ist@@ s(); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ ron@@ t@@ Stack@@ ("@@ M@@ us@@ t st@@ ac@@ k sho@@ ul@@ d b@@ e on to@@ p@@ .@@ ", android.@@ server.@@ cts.@@ P@@ IN@@ N@@ E@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ o@@ c@@ u@@ sed@@ Stack@@ ("@@ ac@@ k sho@@ ul@@ d b@@ e fo@@ c@@ u@@ sed@@ .@@ ", android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ N@@ T_@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); dis@@ able@@ As@@ si@@ stan@@ t@@ (); }
public void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (); en@@ able@@ As@@ si@@ stan@@ t@@ (); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ LA@@ UN@@ CH@@ _@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ F@@ RO@@ M@@ _S@@ E@@ SS@@ ION@@ ); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); android.@@ server.@@ cts.@@ Activity@@ Manager@@ State.@@ Activity@@ St@@ ac@@ k as@@ si@@ stan@@ t@@ St@@ ac@@ k = m@@ A@@ m@@ W@@ m@@ Stat@@ e.get@@ A@@ m@@ State@@ ().get@@ Stack@@ By@@ Id@@ (android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ D@@ IS@@ P@@ LA@@ Y = as@@ si@@ stan@@ t@@ Stack@@ .@@ m@@ Display@@ Id@@ ; dis@@ able@@ As@@ si@@ stan@@ t@@ (); }
public void test@@ As@@ si@@ stan@@ t@@ Stack@@ F@@ in@@ is@@ h@@ To@@ Pre@@ vi@@ ou@@ s@@ App@@ () throw@@ s java.lang.Exception { la@@ unch@@ Activity@@ On@@ Display@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ D@@ IS@@ P@@ LA@@ Y@@ ); en@@ able@@ As@@ si@@ stan@@ t@@ (); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ LA@@ UN@@ CH@@ _@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ IN@@ TO@@ _@@ STA@@ C@@ K@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ EX@@ TR@@ A@@ _@@ F@@ IN@@ IS@@ H@@ _S@@ E@@ L@@ F@@ , "@@ true@@ "); dis@@ able@@ As@@ si@@ stan@@ t@@ (); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ F@@ UL@@ L@@ S@@ C@@ RE@@ EN@@ _@@ W@@ OR@@ K@@ S@@ P@@ AC@@ E_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Activity@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ State.@@ STATE_@@ RE@@ S@@ U@@ ME@@ D@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ o@@ c@@ u@@ sed@@ Activity@@ ("@@ Th@@ is sho@@ ul@@ d b@@ e res@@ um@@ ed android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ ron@@ t@@ Stack@@ ("@@ W@@ m@@ State@@ .@@ ", st@@ ac@@ k sho@@ ul@@ d b@@ e on to@@ p@@ .@@ ", android.@@ server.@@ cts.@@ F@@ UL@@ L@@ S@@ C@@ RE@@ EN@@ _@@ W@@ OR@@ K@@ S@@ P@@ AC@@ E_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ o@@ c@@ u@@ sed@@ Stack@@ ("@@ Th@@ e st@@ ac@@ k sho@@ ul@@ d b@@ e fo@@ c@@ u@@ sed@@ . android.@@ server.@@ cts.@@ F@@ UL@@ L@@ S@@ C@@ RE@@ EN@@ _@@ W@@ OR@@ K@@ S@@ P@@ AC@@ E_@@ STA@@ C@@ K@@ _@@ ID@@ ); }
public void test@@ As@@ si@@ stan@@ t@@ Stack@@ L@@ a@@ unch@@ New@@ Task@@ With@@ D@@ ock@@ ed@@ Stack@@ () throw@@ s java.lang.Exception { if (!@@ (s@@ up@@ port@@ s@@ S@@ pli@@ t@@ S@@ creen@@ Multi@@ W@@ in@@ do@@ w@@ ())) return@@ ; la@@ unch@@ Activity@@ On@@ Dis@@ pla@@ y@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ T@@ Y@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ D@@ IS@@ P@@ LA@@ Y@@ ); la@@ unch@@ Activity@@ In@@ D@@ ock@@ Stack@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ D@@ O@@ C@@ KE@@ D_@@ AC@@ TI@@ V@@ I@@ TY@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Stack@@ ("@@ M@@ us@@ t cont@@ a@@ in f@@ ull@@ s@@ cre@@ e@@ n st@@ ack@@ .@@ ", android.@@ server.@@ cts.@@ F@@ UL@@ L@@ S@@ C@@ RE@@ EN@@ _@@ W@@ OR@@ K@@ S@@ P@@ AC@@ E_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Stack@@ ("@@ M@@ us@@ t cont@@ a@@ in do@@ ck@@ ed@@ "); android.@@ server.@@ cts.@@ D@@ O@@ C@@ KE@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); en@@ able@@ As@@ si@@ stan@@ t@@ (); assert@@ As@@ si@@ stan@@ t@@ Stack@@ Can@@ L@@ a@@ unch@@ And@@ Return@@ From@@ New@@ Task@@ (); dis@@ able@@ As@@ si@@ stan@@ t@@ (); }
public void test@@ Set@@ V@@ r@@ Thread@@ AP@@ I@@ Su@@ c@@ cess@@ () throw@@ s java.lang.@@ Throw@@ able { if (m@@ I@@ s@@ V@@ r@@ He@@ ad@@ set@@ ) { return@@ ; } set@@ Intent@@ (1@@ , 1, 0, 0); android.content.@@ Comp@@ onent@@ Name requ@@ es@@ ted@@ Comp@@ on@@ ent = new android.content.@@ Comp@@ onent@@ Name@@ (m@@ Context@@ , com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ v@@ r.@@ Mock@@ V@@ r@@ Listener@@ Service@@ .@@ class@@ ); Setting@@ s.@@ Sec@@ ure@@ .@@ put@@ String@@ (m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (), android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ EN@@ AB@@ LE@@ D_@@ V@@ R@@ _@@ L@@ IS@@ T@@ EN@@ E@@ RS@@ , requ@@ es@@ ted@@ Comp@@ on@@ ent.@@ f@@ lat@@ t@@ en@@ To@@ String@@ ()); m@@ Ac@@ tiv@@ it@@ y = get@@ Activity@@ (); assert@@ True@@ (m@@ Ac@@ tivity.@@ wait@@ For@@ F@@ rame@@ D@@ raw@@ n@@ ()); if (m@@ Activity@@ .get@@ Package@@ Manager@@ ().@@ has@@ System@@ F@@ e@@ ature@@ (@@ Package@@ Manager.@@ F@@ E@@ AT@@ UR@@ E_@@ V@@ R@@ _MOD@@ E_@@ H@@ I@@ G@@ H@@ _P@@ ER@@ F@@ OR@@ M@@ AN@@ CE@@ )) { int v@@ r@@ _@@ th@@ re@@ ad = 0; int po@@ lic@@ y = 0; m@@ Ac@@ tivity.@@ set@@ V@@ r@@ Mode@@ Enabled@@ (@@ true@@ , requ@@ es@@ ted@@ Comp@@ onent@@ ); v@@ r@@ _@@ th@@ re@@ ad = java.lang.@@ Pro@@ ces@@ s.@@ my@@ T@@ id@@ (); m@@ Activity@@ Manager = ((@@ android.@@ app.@@ Activity@@ Manager@@ ) (m@@ Contex@@ t.get@@ System@@ Service@@ (@@ Context.@@ AC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E@@ ))); m@@ Activity@@ Manager.@@ set@@ V@@ r@@ Thread@@ (@@ v@@ r@@ _@@ th@@ read@@ ); po@@ lic@@ y = (@@ (@@ int@@ ) (java.lang.@@ Pro@@ ces@@ s.get@@ Thread@@ S@@ ch@@ ed@@ ul@@ er(@@ v@@ r@@ _@@ th@@ read@@ ))); android.util.Log.@@ e@@ (android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ TAG, ("@@ S@@ ch@@ ed@@ ul@@ ing po@@ lic@@ y@@ : " + po@@ lic@@ y@@ )); assert@@ Equal@@ s@@ ((@@ (android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ S@@ CH@@ E@@ D_@@ FI@@ F@@ O@@ ) | (android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ S@@ CH@@ E@@ D_@@ RE@@ SE@@ T_@@ ON@@ _@@ F@@ OR@@ K@@ )), po@@ lic@@ y@@ ); } }
public void test@@ Set@@ V@@ r@@ Thread@@ AP@@ I@@ Fail@@ ure@@ () throw@@ s java.lang.@@ Throw@@ able { if (m@@ I@@ s@@ V@@ r@@ He@@ ad@@ set@@ ) { return@@ ; } set@@ Intent@@ (1@@ , 1, 0, 0); android.content.@@ Comp@@ onent@@ Name requ@@ es@@ ted@@ Comp@@ on@@ ent = new android.content.@@ Comp@@ onent@@ Name@@ (m@@ Context@@ , com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ v@@ r.@@ Mock@@ V@@ r@@ Listener@@ Service@@ .@@ class@@ ); Setting@@ s.@@ Sec@@ ure@@ .@@ put@@ String@@ (m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (), android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ EN@@ AB@@ LE@@ D_@@ V@@ R@@ _@@ L@@ IS@@ T@@ EN@@ E@@ RS@@ , requ@@ es@@ ted@@ Comp@@ on@@ ent.@@ f@@ lat@@ t@@ en@@ To@@ String@@ ()); m@@ Ac@@ tiv@@ it@@ y = get@@ Activity@@ (); assert@@ True@@ (m@@ Ac@@ tivity.@@ wait@@ For@@ F@@ rame@@ D@@ raw@@ n@@ ()); if (m@@ Activity@@ .get@@ Package@@ Manager@@ ().@@ has@@ System@@ F@@ e@@ ature@@ (@@ Package@@ Manager.@@ F@@ E@@ AT@@ UR@@ E_@@ V@@ R@@ _MOD@@ E_@@ H@@ I@@ G@@ H@@ _P@@ ER@@ F@@ OR@@ M@@ AN@@ CE@@ )) { int v@@ r@@ _@@ th@@ re@@ ad = 0; int po@@ lic@@ y = 0; m@@ Ac@@ tivity.@@ set@@ V@@ r@@ Mode@@ Enabled@@ (@@ false@@ , requ@@ es@@ ted@@ Comp@@ onent@@ ); v@@ r@@ _@@ th@@ re@@ ad = java.lang.@@ Pro@@ ces@@ s.@@ my@@ T@@ id@@ (); m@@ Activity@@ Manager = ((@@ android.@@ app.@@ Activity@@ Manager@@ ) (m@@ Contex@@ t.get@@ System@@ Service@@ (@@ Context.@@ AC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E@@ ))); m@@ Activity@@ Manager.@@ set@@ V@@ r@@ Thread@@ (@@ v@@ r@@ _@@ th@@ read@@ ); po@@ lic@@ y = (@@ (@@ int@@ ) (java.lang.@@ Pro@@ ces@@ s.get@@ Thread@@ S@@ ch@@ ed@@ ul@@ er(@@ v@@ r@@ _@@ th@@ read@@ ))); android.util.Log.@@ e@@ (android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ TAG, ("@@ S@@ ch@@ ed@@ ul@@ er po@@ lic@@ y@@ : " + po@@ lic@@ y@@ )); assert@@ Equal@@ s(@@ android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ S@@ CH@@ E@@ D_@@ O@@ TH@@ ER@@ , po@@ lic@@ y@@ ); } }
@java.lang.Override public void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (); m@@ Context = get@@ In@@ strument@@ ation@@ ().get@@ Target@@ Context@@ (); m@@ O@@ l@@ d@@ V@@ r@@ List@@ en@@ er = Setting@@ s.@@ Sec@@ ure@@ .get@@ String@@ (m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (), android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ EN@@ AB@@ LE@@ D_@@ V@@ R@@ _@@ L@@ IS@@ T@@ EN@@ E@@ RS@@ ); m@@ I@@ s@@ V@@ r@@ He@@ ad@@ set = ("@@ 1@@ ".@@ equals(@@ android.os.@@ System@@ Properties@@ .get@@ (android.@@ v@@ r.@@ cts.@@ V@@ r@@ Set@@ FI@@ F@@ O@@ Thread@@ Test.@@ V@@ R@@ _@@ STA@@ N@@ D@@ AL@@ ON@@ E_@@ P@@ RO@@ P@@ E@@ RT@@ Y@@ , "@@ 0@@ "@@ ))) ? true : false@@ ; }
@@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ (d@@ es@@ cri@@ pti@@ on = "@@ G@@ et net@@ wor@@ k st@@ at@@ s - R@@ x byte@@ s for U@@ ID@@ ") public long connec@@ tivity@@ Q@@ u@@ er@@ y@@ D@@ eta@@ il@@ s@@ For@@ U@@ id@@ R@@ x@@ Bytes@@ (java.lang.String sub@@ s@@ cri@@ b@@ er@@ Id, java.lang.@@ Lon@@ g start@@ Time@@ , java.lang.@@ Lon@@ g end@@ Time@@ , java.lang.Integ@@ er u@@ id, java.lang.Integ@@ er con@@ n@@ Typ@@ e) throw@@ s android.os.@@ Remote@@ Exception, java.lang.@@ Sec@@ ur@@ ity@@ Exception { long r@@ x@@ Byte@@ s = 0; android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s net@@ Stat@@ s = m@@ Net@@ Stat@@ s@@ Manager.@@ qu@@ er@@ y@@ D@@ eta@@ il@@ s@@ For@@ U@@ id@@ (@@ con@@ n@@ Type, sub@@ s@@ cri@@ b@@ er@@ Id, start@@ Time@@ , end@@ Time@@ , u@@ id@@ ); android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s.@@ Bu@@ ck@@ et bu@@ ck@@ et = new android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s.@@ Bu@@ ck@@ et@@ (); while ((@@ net@@ Stat@@ s.@@ has@@ Next@@ Bu@@ ck@@ et@@ ()) && (@@ net@@ Stat@@ s.get@@ Next@@ Bu@@ ck@@ et@@ (@@ bu@@ ck@@ et@@ ))) r@@ x@@ Byte@@ s +@@ = bu@@ ck@@ et@@ .get@@ R@@ x@@ Bytes@@ (); net@@ Stat@@ s.@@ close(); return r@@ x@@ Bytes@@ ; }
@@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ (d@@ es@@ cri@@ pti@@ on = "@@ G@@ et net@@ wor@@ k st@@ at@@ s for U@@ ID@@ ") public long connec@@ tivity@@ Q@@ u@@ er@@ y@@ D@@ eta@@ il@@ s@@ For@@ U@@ id@@ (java.lang.String sub@@ s@@ cri@@ b@@ er@@ Id, java.lang.@@ Lon@@ g start@@ Time@@ , java.lang.@@ Lon@@ g end@@ Time@@ , java.lang.Integ@@ er u@@ id, java.lang.Integ@@ er con@@ n@@ Typ@@ e) throw@@ s android.os.@@ Remote@@ Exception, java.lang.@@ Sec@@ ur@@ ity@@ Exception { android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s net@@ Stat@@ s = m@@ Net@@ Stat@@ s@@ Manager.@@ qu@@ er@@ y@@ D@@ eta@@ il@@ s@@ For@@ U@@ id@@ (@@ con@@ n@@ Type, sub@@ s@@ cri@@ b@@ er@@ Id, start@@ Time@@ , end@@ Time@@ , u@@ id@@ ); long to@@ t@@ al@@ Data = 0; android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s.@@ Bu@@ ck@@ et bu@@ ck@@ et = new android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s.@@ Bu@@ ck@@ et@@ (); while ((@@ net@@ Stat@@ s.@@ has@@ Next@@ Bu@@ ck@@ et@@ ()) && (@@ net@@ Stat@@ s.get@@ Next@@ Bu@@ ck@@ et@@ (@@ bu@@ ck@@ et@@ ))) to@@ t@@ al@@ Data +@@ = (@@ bu@@ ck@@ et@@ .get@@ T@@ x@@ Bytes@@ ()) + (@@ bu@@ ck@@ et@@ .get@@ R@@ x@@ Bytes@@ ()); net@@ Stat@@ s.@@ close(); return to@@ t@@ al@@ Data@@ ; }
@@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ (d@@ es@@ cri@@ pti@@ on = "@@ L@@ a@@ un@@ ch ac@@ tiv@@ it@@ y for result wit@@ h int@@ ent@@ ") public android.content.@@ Int@@ ent la@@ unch@@ For@@ Result@@ With@@ Intent@@ (@@ @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ int@@ ent@@ ") android.content.@@ Int@@ ent int@@ ent@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ ex@@ tr@@ as@@ ") @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Option@@ al org.@@ j@@ s@@ on@@ .@@ J@@ S@@ ON@@ Ob@@ ject ex@@ tr@@ as@@ ) throw@@ s org.@@ j@@ s@@ on@@ .@@ J@@ S@@ ON@@ Exception { if (@@ ex@@ tra@@ s != null@@ ) m@@ Android@@ F@@ ac@@ ad@@ e.@@ put@@ Ex@@ tr@@ as@@ From@@ J@@ s@@ on@@ Object@@ (@@ ex@@ tr@@ as@@ , int@@ ent@@ ); return m@@ Android@@ F@@ ac@@ ad@@ e.@@ start@@ Activity@@ For@@ Result@@ (@@ int@@ ent@@ ); }
private boolean ve@@ r@@ if@@ y@@ With@@ Do@@ main@@ Name@@ Pat@@ tern@@ (java.lang.String ho@@ st@@ name@@ , java.lang.String pat@@ tern@@ ) { libcore.@@ javax.net.ssl.@@ Default@@ Host@@ name@@ V@@ er@@ if@@ ier@@ Test.@@ St@@ u@@ b@@ SSL@@ S@@ es@@ sion s@@ es@@ sion = new libcore.@@ javax.net.ssl.@@ Default@@ Host@@ name@@ V@@ er@@ if@@ ier@@ Test.@@ St@@ u@@ b@@ SSL@@ Session@@ (); session@@ .@@ pe@@ er@@ Cer@@ t@@ if@@ ic@@ ate@@ s = new java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ []{ new libcore.@@ javax.net.ssl.@@ Default@@ Host@@ name@@ V@@ er@@ if@@ ier@@ Test.@@ St@@ u@@ b@@ X509@@ Cer@@ t@@ if@@ ic@@ ate@@ ((@@ ("@@ c@@ n@@ =@@ \"@@ " + pat@@ tern@@ ) + "@@ \"@@ ")) }; boolean result@@ W@@ h@@ en@@ Pat@@ tern@@ In@@ C@@ n = ve@@ r@@ if@@ i@@ er.@@ ve@@ r@@ if@@ y@@ (@@ ho@@ st@@ name@@ , session@@ ); session@@ .@@ pe@@ er@@ Cer@@ t@@ if@@ ic@@ ate@@ s = new java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ []{ new libcore.@@ javax.net.ssl.@@ Default@@ Host@@ name@@ V@@ er@@ if@@ ier@@ Test.@@ St@@ u@@ b@@ X509@@ Cer@@ t@@ if@@ ic@@ ate@@ ("@@ ou@@ =@@ test@@ ").@@ add@@ Sub@@ ject@@ Al@@ ter@@ native@@ Name@@ (@@ libcore.@@ javax.net.ssl.@@ Default@@ Host@@ name@@ V@@ er@@ if@@ ier@@ Test.@@ AL@@ T_@@ D@@ N@@ S@@ _N@@ AM@@ E, pat@@ tern@@ ) }; boolean result@@ W@@ h@@ en@@ Pat@@ tern@@ In@@ Sub@@ ject@@ Al@@ t@@ Name = ve@@ r@@ if@@ y@@ (@@ ho@@ st@@ name@@ , session@@ ); assert@@ False@@ ("@@ ve@@ r@@ if@@ y@@ s sho@@ ul@@ d ign@@ or@@ e C@@ N@@ .@@ ", result@@ W@@ h@@ en@@ Pat@@ tern@@ In@@ C@@ n@@ ); return result@@ W@@ h@@ en@@ Pat@@ tern@@ In@@ Sub@@ ject@@ Al@@ t@@ Name@@ ; }
@java.lang.Override void test@@ () { if ((@@ statu@@ s) == (@@ RE@@ AD@@ Y@@ )) { com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.@@ s@@ n@@ oo@@ z@@ e@@ (m@@ Context@@ ); statu@@ s = RE@@ TE@@ S@@ T@@ ; } else { com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.@@ pro@@ b@@ e@@ Listener@@ Statu@@ s@@ (m@@ Context@@ , new com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.@@ Statu@@ s@@ C@@ atch@@ er@@ () { @java.lang.Override public void ac@@ ce@@ p@@ t@@ (@@ int result@@ ) { if (@@ result == (android.@@ app.@@ Ac@@ tivity.@@ RE@@ S@@ UL@@ T_@@ O@@ K@@ )) { log@@ Fail@@ (); statu@@ s = FA@@ IL@@ ; } else { if ((@@ (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ()) == null@@ ) || (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ().@@ equal@@ s@@ (com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ No@@ t@@ if@@ ic@@ ation@@ Listener@@ V@@ er@@ if@@ ier@@ Ac@@ tivity.@@ V@@ R@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ ))) { statu@@ s = P@@ A@@ SS@@ ; } else { log@@ Fail@@ (); statu@@ s = RE@@ TE@@ S@@ T@@ ; de@@ lay@@ (); } } next@@ (); } }); } de@@ lay@@ (); } de@@ lay@@ (); }
@java.lang.Override void test@@ () { com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.@@ pro@@ b@@ e@@ Listener@@ Statu@@ s@@ (m@@ Context@@ , new com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.@@ Statu@@ s@@ C@@ atch@@ er@@ () { @java.lang.Override public void ac@@ ce@@ p@@ t@@ (@@ int result@@ ) { if (@@ result == (android.@@ app.@@ Ac@@ tivity.@@ RE@@ S@@ UL@@ T_@@ O@@ K@@ )) { log@@ Fail@@ (); statu@@ s = FA@@ IL@@ ; } else { if ((@@ (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ()) == null@@ ) || (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ().@@ equal@@ s@@ (com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ No@@ t@@ if@@ ic@@ ation@@ Listener@@ V@@ er@@ if@@ ier@@ Ac@@ tivity.@@ V@@ R@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ ))) { statu@@ s = P@@ A@@ SS@@ ; } else { statu@@ s = FA@@ IL@@ ; } } next@@ (); } }); de@@ lay@@ (); }
@java.lang.Override public void ac@@ ce@@ p@@ t@@ (@@ int result@@ ) { if (@@ result == (android.@@ app.@@ Ac@@ tivity.@@ RE@@ S@@ UL@@ T_@@ O@@ K@@ )) { log@@ Fail@@ (); statu@@ s = FA@@ IL@@ ; } else { if ((@@ (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ()) == null@@ ) || (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ().@@ equal@@ s@@ (com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ No@@ t@@ if@@ ic@@ ation@@ Listener@@ V@@ er@@ if@@ ier@@ Ac@@ tivity.@@ V@@ R@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ )) { statu@@ s = P@@ A@@ SS@@ ; } else { statu@@ s = FA@@ IL@@ ; } } next@@ (); }
@java.lang.Override public void ac@@ ce@@ p@@ t@@ (@@ int result@@ ) { if (@@ result == (android.@@ app.@@ Ac@@ tivity.@@ RE@@ S@@ UL@@ T_@@ O@@ K@@ )) { log@@ Fail@@ (); statu@@ s = FA@@ IL@@ ; } else { if ((@@ (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ()) == null@@ ) || (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ().@@ equal@@ s@@ (com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ No@@ t@@ if@@ ic@@ ation@@ Listener@@ V@@ er@@ if@@ ier@@ Ac@@ tivity.@@ V@@ R@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ )) { statu@@ s = P@@ A@@ SS@@ ; } else { log@@ Fail@@ (); statu@@ s = RE@@ TE@@ S@@ T@@ ; de@@ lay@@ (); } } next@@ (); }
@java.lang.Override protected boolean get@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ () { return ((m@@ Record@@ s@@ To@@ Load@@ ) == 0) && (m@@ Lock@@ ed@@ Record@@ s@@ Re@@ q@@ Re@@ as@@ on@@ ) == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s.@@ LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _P@@ IN@@ _@@ LO@@ C@@ KE@@ D@@ )); }
private void on@@ Lock@@ ed@@ All@@ Record@@ s@@ Load@@ ed@@ () { set@@ Sim@@ L@@ ang@@ u@@ age@@ From@@ E@@ F@@ (); if ((m@@ Lock@@ ed@@ Record@@ s@@ Re@@ q@@ Re@@ as@@ on@@ ) == (@@ LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _P@@ IN@@ _@@ LO@@ C@@ KE@@ D@@ )) { m@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , null@@ )); } else { m@@ Network@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , null@@ , null@@ )); } }
private void on@@ Lock@@ ed@@ (@@ int ms@@ g@@ ) { if (@@ D@@ B@@ G) log@@ ("@@ on@@ Lock@@ ed@@ : f@@ et@@ ch E@@ F@@ _@@ L@@ I@@ , E@@ F@@ _P@@ L an@@ d E@@ F@@ _@@ IC@@ C@@ I@@ D in lock@@ ed@@ "); m@@ Lock@@ ed@@ Record@@ s@@ Re@@ q@@ Re@@ as@@ on@@ ; = (m@@ s@@ g == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ SI@@ M@@ Record@@ s.@@ EV@@ ENT_@@ AP@@ P@@ _@@ LO@@ C@@ KE@@ D@@ )) ? LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _P@@ IN@@ _@@ LO@@ C@@ KE@@ D : LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ LO@@ C@@ KE@@ D@@ ; load@@ E@@ f@@ Li@@ And@@ E@@ f@@ P@@ l@@ (); m@@ F@@ h@@ .@@ load@@ E@@ F@@ Trans@@ parent@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ E@@ F@@ _@@ IC@@ C@@ ID@@ , ob@@ t@@ ain@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ SI@@ M@@ Record@@ s.@@ EV@@ ENT_@@ GE@@ T_@@ IC@@ C@@ ID@@ _@@ D@@ ON@@ E@@ )); (m@@ Record@@ s@@ To@@ Load@@ )@@ ++@@ ; }
@java.lang.Override protected boolean get@@ Network@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ () { return ((m@@ Record@@ s@@ To@@ Load@@ ) == 0) && ((m@@ Lock@@ ed@@ Record@@ s@@ Re@@ q@@ Re@@ as@@ on@@ ) != (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s.@@ LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ LO@@ C@@ KE@@ D@@ )); }
private void on@@ Lock@@ ed@@ (@@ int ms@@ g@@ ) { if (@@ D@@ B@@ G) log@@ ("@@ on@@ Lock@@ ed@@ : f@@ et@@ ch E@@ F@@ _@@ IC@@ C@@ I@@ D in lock@@ ed st@@ ate m@@ Lock@@ ed@@ Record@@ s@@ Re@@ q@@ Re@@ as@@ on@@ =@@ (m@@ s@@ g == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ R@@ u@@ im@@ Record@@ s.@@ EV@@ ENT_@@ AP@@ P@@ _@@ LO@@ C@@ KE@@ D@@ )) ? LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _P@@ IN@@ _@@ LO@@ C@@ KE@@ D : LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ LO@@ C@@ KE@@ D@@ ; m@@ F@@ h@@ .@@ load@@ E@@ F@@ Trans@@ parent@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ E@@ F@@ _@@ IC@@ C@@ ID@@ , ob@@ t@@ ain@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ R@@ u@@ im@@ Record@@ s.@@ EV@@ ENT_@@ GE@@ T_@@ IC@@ C@@ ID@@ _@@ D@@ ON@@ E@@ )); (m@@ Record@@ s@@ To@@ Load@@ )@@ ++@@ ; }
private void on@@ Lock@@ ed@@ All@@ Record@@ s@@ Load@@ ed@@ () { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ si@@ m@@ U@@ ic@@ c@@ Record@@ s.@@ D@@ B@@ G) log@@ ("@@ on@@ Lock@@ ed@@ "); lock@@ ed@@ ; re@@ cor@@ d lo@@ ad comp@@ let@@ e if ((m@@ Lock@@ ed@@ Record@@ s@@ Re@@ q@@ Re@@ as@@ on@@ ) == (@@ LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _P@@ IN@@ _@@ LO@@ C@@ KE@@ D@@ )) { m@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , null@@ , null@@ )); } else { m@@ Network@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , null@@ )); } }
private void on@@ Lock@@ ed@@ All@@ Record@@ s@@ Load@@ ed@@ () { if ((m@@ Lock@@ ed@@ Record@@ s@@ Re@@ q@@ Re@@ as@@ on@@ ) == (@@ LO@@ C@@ KE@@ D_@@ RE@@ C@@ OR@@ D@@ S@@ _RE@@ Q@@ _RE@@ A@@ S@@ ON@@ _P@@ IN@@ _@@ LO@@ C@@ KE@@ D@@ )) { m@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , null@@ )); } else { m@@ Network@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , null@@ )); } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public void set@@ E@@ merg@@ enc@@ y@@ Call@@ (@@ boolean flag@@ ) { m@@ I@@ s@@ E@@ merg@@ enc@@ y@@ Cal@@ l = flag@@ ; }
@java.lang.Override public void set@@ up@@ Data@@ Call@@ (@@ int rad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ , android.@@ telephony.@@ data@@ .@@ Data@@ Pro@@ fi@@ le data@@ Pro@@ file@@ , boolean is@@ R@@ o@@ am@@ ing@@ , boolean al@@ low@@ R@@ o@@ am@@ ing@@ , android.os.@@ Mess@@ age result@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ test.@@ Sim@@ ul@@ ated@@ Command@@ s@@ V@@ er@@ if@@ i@@ er.get@@ Instance@@ ().@@ set@@ up@@ Data@@ Call@@ (@@ rad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ , data@@ Pro@@ file@@ , is@@ R@@ o@@ am@@ ing@@ , al@@ low@@ R@@ o@@ am@@ ing@@ , result@@ ); if ((m@@ D@@ c@@ Response@@ ) == null@@ ) { try { m@@ D@@ c@@ Respon@@ se = new android.@@ telephony.@@ data@@ .@@ Data@@ Call@@ Response@@ (@@ 0, (-1@@ ), 1, 2, "@@ IP@@ ", "@@ r@@ m@@ net@@ _@@ data@@ 7@@ ", java.util.Arrays.@@ as@@ List@@ (@@ new android.net.@@ Lin@@ k@@ Addres@@ s(@@ android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Address@@ ("@@ 1@@ 2.@@ 3@@ 4@@ .@@ 5@@ 6@@ .@@ 7@@ 8@@ "@@ ))); } catch (android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s("@@ 9@@ 8@@ .@@ 7@@ 6@@ .@@ 5@@ 4@@ .@@ 32@@ "@@ )), java.util.Arrays.@@ as@@ List@@ (android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s("@@ 1@@ 1.@@ 2@@ 2.@@ 3@@ 3@@ .@@ 4@@ "@@ )), null@@ , 1@@ 4@@ 4@@ 0); } catch (java.lang.Exception e) { } } if (m@@ D@@ c@@ Su@@ c@@ ces@@ s) { result@@ Su@@ c@@ ces@@ s(@@ result@@ , m@@ D@@ c@@ Response@@ ); } else { result@@ Fail@@ (@@ result@@ , m@@ D@@ c@@ Response@@ , new java.lang.@@ RuntimeException@@ ("@@ D@@ c@@ Response@@ : dat@@ a cal@@ l fa@@ ile@@ d@@ !@@ "); } }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Set@@ Lin@@ k@@ Properties@@ In@@ valid@@ Addres@@ s() throw@@ s java.lang.Exception { android.@@ telephony.@@ data@@ .@@ Data@@ Call@@ Respon@@ se respon@@ se = new android.@@ telephony.@@ data@@ .@@ Data@@ Call@@ Response@@ (@@ 0, (-1@@ ), 1, 2, "@@ IP@@ ", com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ data@@ connection@@ .@@ D@@ c@@ Tr@@ ack@@ er@@ Test.@@ FA@@ K@@ E_@@ I@@ F@@ N@@ AM@@ E, java.util.Arrays.@@ as@@ List@@ (@@ new android@@ .@@ net.@@ Lin@@ k@@ Addres@@ s(@@ android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Address@@ ("@@ 2@@ 24@@ .@@ 2@@ 24@@ .@@ 2@@ 24@@ .@@ 2@@ 24@@ .@@ 2@@ 24@@ "@@ ))); }
public void not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ State@@ Changed@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e s@@ ender@@ , boolean state@@ );
public void not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ Changed@@ For@@ Phone@@ Id@@ (@@ int phon@@ e@@ Id, int sub@@ Id, boolean c@@ di@@ ) { if (!(@@ check@@ No@@ t@@ if@@ y@@ Permission@@ ("@@ not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ Changed@@ ()@@ "@@ ))) { return@@ ; } if (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ V@@ D@@ B@@ G) { com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ log@@ ((@@ (("@@ not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ Changed@@ For@@ Sub@@ s@@ cri@@ b@@ er@@ Phone@@ ID@@ : sub@@ Id@@ =@@ " + phon@@ e@@ Id@@ ) + " c@@ di@@ =@@ ") + c@@ di@@ )); } synchronized@@ (m@@ Record@@ s) { if (@@ valid@@ ate@@ Phone@@ Id@@ (@@ phon@@ e@@ Id@@ )) { m@@ Message@@ W@@ ait@@ ing@@ [@@ phon@@ e@@ Id@@ ] = c@@ di@@ ; for (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ Re@@ cor@@ d r : m@@ Record@@ s) { if ((@@ r.@@ match@@ Phone@@ State@@ Listener@@ Event@@ (@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _C@@ E@@ L@@ L@@ L@@ UL@@ AR@@ _@@ DA@@ TA@@ _@@ IN@@ D@@ IC@@ AT@@ OR@@ )) && (@@ id@@ Match@@ (@@ r.@@ sub@@ Id, sub@@ Id, sub@@ Id, phon@@ e@@ Id@@ ))) { try { r.@@ call@@ back@@ .@@ on@@ C@@ ell@@ ul@@ ar@@ Data@@ In@@ di@@ cat@@ or@@ Changed@@ (c@@ di@@ ); } catch (android.os.@@ Remote@@ Exception ex@@ ) { m@@ Remo@@ ve@@ List.@@ add(@@ r.@@ b@@ in@@ der@@ ); } } } handle@@ Remo@@ ve@@ List@@ Lock@@ ed@@ (); } }
@java.lang.Override public void not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ State@@ Changed@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e s@@ ender@@ , boolean state@@ ) { try { m@@ Reg@@ is@@ try@@ .@@ not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ Changed@@ For@@ Phone@@ Id@@ (s@@ end@@ er.get@@ Phone@@ Id@@ (), send@@ er.get@@ Sub@@ Id@@ (), state@@ ); } catch (android.os.@@ Remote@@ Exception ex@@ ) { } }
private void on@@ Set@@ User@@ Data@@ Enabled@@ (@@ boolean en@@ abled@@ ) { synchronized@@ (m@@ Data@@ Enabled@@ Setting@@ s) { if ((m@@ Data@@ Enabled@@ Setting@@ s.@@ is@@ User@@ Data@@ Enabled@@ ()) != en@@ abled@@ ) { m@@ Data@@ Enabled@@ Setting@@ s.@@ set@@ User@@ Data@@ Enabled@@ (@@ en@@ abled@@ ); if ((@@ android.@@ telephony.@@ Telephony@@ Manager.@@ get@@ Default@@ ().get@@ Sim@@ Count@@ ()) == 1@@ ) { Setting@@ s.@@ G@@ lo@@ b@@ al.@@ put@@ Int@@ (m@@ Res@@ ol@@ ver@@ , Setting@@ s.@@ G@@ lo@@ b@@ al.@@ M@@ O@@ B@@ IL@@ E_@@ DA@@ TA@@ , (@@ en@@ able@@ d ? 1 : 0@@ )); } else { int phon@@ e@@ Sub@@ Id = m@@ Ph@@ on@@ e.get@@ Sub@@ Id@@ (); Setting@@ s.@@ G@@ lo@@ b@@ al.@@ put@@ Int@@ (m@@ Res@@ ol@@ ver@@ , ((@@ Setting@@ s.@@ G@@ lo@@ b@@ al.@@ M@@ O@@ B@@ IL@@ E_@@ DA@@ TA@@ ) + phon@@ e@@ Sub@@ Id@@ ), (@@ en@@ able@@ d ? 1 : 0@@ )); } if ((@@ !@@ (get@@ Data@@ R@@ o@@ am@@ ing@@ Enabled@@ ())) && (m@@ Ph@@ on@@ e.get@@ Service@@ State@@ ().get@@ Data@@ R@@ o@@ am@@ ing@@ ())) { if (@@ en@@ abled@@ ) { not@@ if@@ y@@ O@@ ff@@ Ap@@ n@@ s@@ Of@@ A@@ va@@ il@@ abili@@ ty@@ (@@ Ph@@ on@@ e.@@ RE@@ A@@ S@@ ON@@ _@@ RO@@ AM@@ ING@@ _@@ ON@@ ); } else { not@@ if@@ y@@ O@@ ff@@ Ap@@ n@@ s@@ Of@@ A@@ va@@ il@@ abili@@ ty@@ (@@ Ph@@ on@@ e.@@ RE@@ A@@ S@@ ON@@ _@@ DA@@ TA@@ _@@ D@@ IS@@ AB@@ LE@@ D@@ ); } } m@@ Ph@@ on@@ e.@@ not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ State@@ Changed@@ (@@ en@@ abled@@ ); if (@@ en@@ abled@@ ) { ree@@ valu@@ ate@@ Data@@ Connection@@ s(); on@@ Tr@@ y@@ Set@@ up@@ Data@@ (@@ Ph@@ on@@ e.@@ RE@@ A@@ S@@ ON@@ _@@ DA@@ TA@@ _@@ EN@@ AB@@ LE@@ D@@ ); } else { on@@ C@@ le@@ an@@ Up@@ All@@ Connection@@ s(@@ Ph@@ on@@ e.@@ RE@@ A@@ S@@ ON@@ _@@ DA@@ TA@@ _S@@ P@@ EC@@ I@@ F@@ IC@@ _@@ D@@ IS@@ AB@@ LE@@ D@@ ); } } }
public void not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ State@@ Changed@@ (@@ boolean state@@ ) { m@@ No@@ t@@ if@@ i@@ er.@@ not@@ if@@ y@@ C@@ ell@@ ul@@ ar@@ Data@@ State@@ Changed@@ (@@ this@@ , state@@ ); }
public void on@@ C@@ ell@@ ul@@ ar@@ Data@@ In@@ di@@ cat@@ or@@ Changed@@ (@@ boolean en@@ abled@@ ) { send@@ (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _C@@ E@@ L@@ L@@ L@@ UL@@ AR@@ _@@ DA@@ TA@@ _@@ IN@@ D@@ IC@@ AT@@ OR@@ , 0, en@@ abled@@ ); }
public void on@@ C@@ ell@@ ul@@ ar@@ Data@@ In@@ di@@ cat@@ or@@ Changed@@ (@@ boolean en@@ abled@@ ) { }
@java.lang.Override public void remove@@ Network@@ (@@ int net@@ Id@@ ) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ C@@ ON@@ N@@ EC@@ TI@@ V@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ AL@@ , com.android.server.@@ Network@@ Manage@@ ment@@ Service.@@ TAG@@ ); try { m@@ Net@@ d@@ Ser@@ vice = network@@ D@@ est@@ ro@@ y@@ (@@ net@@ Id@@ ); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { android.util.Log.@@ w@@ (android.@@ ser@@ ver@@ .@@ Network@@ Manage@@ ment@@ Service.@@ TAG, (("@@ remove@@ Network@@ (@@ " + net@@ Id@@ ) + ", e); throw e@@ ; } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ w@@ (com.android.server.@@ Network@@ Manage@@ ment@@ Service.@@ TAG, (("@@ remove@@ Network@@ (@@ " + net@@ Id@@ ) + ", e); throw e@@ .@@ r@@ e@@ throw@@ As@@ Runtime@@ Exception@@ (); } }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { final java.lang.String ac@@ tion = int@@ ent.get@@ Action@@ (); final java.lang.String ic@@ c@@ State = int@@ ent.get@@ String@@ Extra@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ KE@@ Y_@@ IC@@ C@@ _@@ STA@@ TE@@ ); if (@@ Telephony@@ Intent@@ s.@@ AC@@ TION@@ _@@ SI@@ M@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ .@@ equals(@@ action@@ )) { if (@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ A@@ DE@@ D@@ .@@ equals(@@ ic@@ c@@ State@@ )) { send@@ Empty@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Action@@ A@@ g@@ ent.@@ C@@ AR@@ R@@ I@@ ER_@@ AC@@ TION@@ _RE@@ SE@@ T@@ ); java.lang.String mo@@ b@@ ile@@ Data = Setting@@ s.@@ G@@ lo@@ b@@ al.@@ M@@ O@@ B@@ IL@@ E_@@ DA@@ TA@@ ; if ((@@ android.@@ telephony.@@ Telephony@@ Manager.@@ get@@ Default@@ ().get@@ Sim@@ Count@@ ()) != 1@@ ) { mo@@ b@@ ile@@ Data = mo@@ b@@ ile@@ Data + (m@@ Ph@@ on@@ e.get@@ Sub@@ Id@@ ()); } m@@ Setting@@ s@@ Ob@@ server.@@ ob@@ ser@@ ve@@ (@@ Setting@@ s.@@ G@@ lo@@ b@@ al@@ .get@@ U@@ ri@@ For@@ (m@@ ob@@ ile@@ Data@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Action@@ A@@ g@@ ent.@@ EV@@ EN@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ DA@@ TA@@ _S@@ E@@ T@@ T@@ T@@ ING@@ S@@ _C@@ H@@ AN@@ GE@@ D@@ ); m@@ Setting@@ s@@ Ob@@ server.@@ ob@@ ser@@ ve@@ (@@ Setting@@ s.@@ G@@ lo@@ b@@ al@@ .get@@ U@@ ri@@ For@@ (@@ Setting@@ s.@@ G@@ lo@@ b@@ al.@@ A@@ I@@ R@@ P@@ L@@ AN@@ E@@ _MOD@@ E_@@ ON@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Action@@ A@@ g@@ ent.@@ EV@@ ENT_@@ AP@@ M@@ _S@@ E@@ T@@ T@@ ING@@ S@@ _C@@ H@@ AN@@ GE@@ D@@ ); m@@ Setting@@ s@@ Ob@@ server.@@ ob@@ ser@@ ve@@ (@@ Telephon@@ y.@@ C@@ ar@@ ri@@ er@@ s.@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Action@@ A@@ g@@ ent.@@ EV@@ ENT_@@ AP@@ N@@ _S@@ E@@ T@@ T@@ T@@ ING@@ S@@ _C@@ H@@ AN@@ GE@@ D@@ ); } else if (@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ AB@@ S@@ EN@@ T@@ .@@ equals(@@ ic@@ c@@ State@@ )) { send@@ Empty@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Action@@ A@@ g@@ ent.@@ C@@ AR@@ R@@ I@@ ER_@@ AC@@ TION@@ _RE@@ SE@@ T@@ ); m@@ Setting@@ s@@ Ob@@ server.@@ un@@ ob@@ ser@@ ve@@ (); } }
@org.junit.Test public void test@@ M@@ ac@@ Add@@ r@@ Typ@@ es@@ () { android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase@@ [] t@@ est@@ case@@ s = new android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase@@ []{ android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ ), android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ , 0@@ ), android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ , 1, 2, 3@@ , 4@@ , 5@@ ), android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ , 1, 2, 3@@ , 4@@ , 5, 6@@ , 7@@ ), android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ IC@@ A@@ S@@ T@@ , 16@@ 0, 1@@ 7@@ 6@@ , 1@@ 9@@ 2, 2@@ 0@@ 8@@ , 2@@ 24@@ 0@@ ), android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ B@@ RO@@ AD@@ C@@ A@@ S@@ T@@ , 25@@ 5, 25@@ 5, 25@@ 5, 25@@ 5, 25@@ 5, 25@@ 5@@ ), android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E@@ _M@@ UL@@ T@@ IC@@ A@@ S@@ T@@ , 1, 2, 3@@ , 4@@ , 5, 6@@ ), android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E@@ _M@@ UL@@ T@@ IC@@ A@@ S@@ T@@ , 1@@ 1, 2@@ 2, 3@@ 3@@ , 4@@ 4@@ , 5@@ 5, 6@@ 6@@ 6@@ 6@@ ), android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ ase.@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E@@ _M@@ UL@@ T@@ IC@@ A@@ S@@ T@@ , 3@@ 3@@ 3@@ , 1@@ 7@@ 0, 1@@ 8@@ 7@@ , 2@@ 0@@ 4@@ , 2@@ 2@@ 1@@ )@@ .@@ o@@ f@@ (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ S@@ P@@ EC@@ I@@ FI@@ E@@ D@@ , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0@@ 0 }; for (android.net.@@ M@@ ac@@ Address@@ Test.@@ Add@@ r@@ Type@@ Test@@ C@@ as@@ e t : t@@ est@@ case@@ s) { int go@@ t = android.net.@@ M@@ ac@@ Addres@@ s.@@ m@@ ac@@ Address@@ Type@@ (@@ t.@@ add@@ r@@ ); java.lang.String ms@@ g = java.lang.String@@ .@@ for@@ mat@@ ("@@ Faile@@ d to b@@ e %@@ s@@ ", to b@@ e %@@ s@@ ", java.util.Arrays.@@ toString@@ (@@ t.@@ add@@ r@@ ), t.@@ expected@@ Type, g@@ ot@@ ); assert@@ Equal@@ s@@ (m@@ s@@ g@@ , t.@@ expected@@ Type, g@@ ot@@ ); if (@@ go@@ t != (@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ )) { assert@@ Equal@@ s(@@ g@@ ot@@ , android.net.@@ M@@ ac@@ Addres@@ s.@@ f@@ rom@@ Bytes@@ (@@ t.@@ add@@ r@@ )@@ .@@ get@@ Address@@ Type@@ ()); } }
@@@ android.net.@@ M@@ ac@@ Addres@@ s.@@ M@@ ac@@ Address@@ Type public int get@@ Address@@ Type@@ () { if (@@ equals(@@ android.net.@@ M@@ ac@@ Addres@@ s.@@ AL@@ L@@ _@@ Z@@ ER@@ O@@ S_@@ AD@@ D@@ RE@@ SS@@ )) { return android.net.@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ S@@ P@@ EC@@ I@@ FI@@ E@@ D@@ ; } if (@@ equals(@@ android.net.@@ M@@ ac@@ Addres@@ s.@@ B@@ RO@@ AD@@ C@@ A@@ ST_@@ AD@@ D@@ RE@@ SS@@ )) { return android.net.@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ B@@ RO@@ AD@@ C@@ A@@ S@@ T@@ ; } if (is@@ Multi@@ cast@@ Address@@ ()) { return android.net.@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E@@ _M@@ UL@@ T@@ IC@@ A@@ S@@ T@@ ; } return android.net.@@ M@@ ac@@ Addres@@ s.@@ TYP@@ E_@@ UN@@ IC@@ A@@ S@@ T@@ ; }
void exp@@ ect@@ A@@ va@@ il@@ able@@ Callback@@ s@@ (com.android.server.@@ Connectivity@@ Service@@ Test.@@ Mock@@ Network@@ A@@ g@@ ent ag@@ ent@@ , boolean exp@@ ect@@ Su@@ s@@ pend@@ ed@@ , int time@@ out@@ M@@ s) { exp@@ ect@@ A@@ va@@ il@@ able@@ Callback@@ s(@@ ag@@ ent@@ , exp@@ ect@@ Su@@ s@@ pend@@ ed@@ , false@@ , time@@ out@@ M@@ s); }
void exp@@ ect@@ A@@ va@@ il@@ able@@ Callback@@ s@@ (com.android.server.@@ Connectivity@@ Service@@ Test.@@ Mock@@ Network@@ A@@ g@@ ent ag@@ ent@@ , boolean exp@@ ect@@ Su@@ s@@ p@@ en@@ de@@ d@@ , boolean requ@@ i@@ re@@ Un@@ valid@@ ate@@ d@@ , int time@@ out@@ M@@ s) { exp@@ ect@@ Callback@@ (com.android.server.@@ Connectivity@@ Service@@ Test.@@ Callback@@ State.@@ AV@@ A@@ IL@@ AB@@ LE@@ , ag@@ ent@@ , time@@ out@@ M@@ s); if (@@ exp@@ ect@@ Su@@ s@@ pend@@ ed@@ ) { exp@@ ect@@ Callback@@ (com.android.server.@@ Connectivity@@ Service@@ Test.@@ Callback@@ State.@@ S@@ US@@ P@@ END@@ E@@ D@@ , ag@@ ent@@ , time@@ out@@ M@@ s); } if (@@ requ@@ i@@ re@@ Un@@ valid@@ ated@@ ) { exp@@ ect@@ Cap@@ abili@@ ties@@ With@@ out@@ (com.android.server.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _V@@ AL@@ ID@@ A@@ TE@@ D@@ , ag@@ ent@@ ); } else { exp@@ ect@@ Callback@@ (com.android.server.@@ Connectivity@@ Service@@ Test.@@ Callback@@ State.@@ N@@ E@@ T@@ W@@ OR@@ K@@ _C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S@@ , ag@@ ent@@ , time@@ out@@ M@@ s); } exp@@ ect@@ Callback@@ (com.android.server.@@ Connectivity@@ Service@@ Test.@@ Callback@@ State.@@ L@@ IN@@ K@@ _P@@ RO@@ P@@ E@@ RT@@ I@@ E@@ S@@ , ag@@ ent@@ , time@@ out@@ M@@ s); }
private boolean ar@@ e@@ All@@ Record@@ s@@ Load@@ ed@@ () { for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ard@@ Appli@@ c@@ ation ap@@ p : m@@ U@@ ic@@ c@@ Application@@ s) { if (@@ ap@@ p != null@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s i@@ r = app@@ .get@@ I@@ cc@@ Record@@ s(); if ((@@ i@@ r == null@@ ) || (!(@@ ir.@@ is@@ Load@@ ed@@ ()))) { return false@@ ; } } return (m@@ U@@ ic@@ c@@ Application@@ s@@ [0@@ ]@@ ) != null@@ ; }
private void register@@ U@@ ic@@ c@@ C@@ ard@@ Event@@ s() { for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ard@@ Appli@@ c@@ ation ap@@ p : m@@ U@@ ic@@ c@@ Application@@ s) { if (@@ ap@@ p != null@@ ) { ap@@ p.@@ register@@ For@@ Read@@ y@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ EV@@ ENT_@@ AP@@ P@@ _RE@@ AD@@ Y@@ , null@@ ); ap@@ p@@ .@@ register@@ For@@ Network@@ Lock@@ ed@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ EV@@ ENT_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ LO@@ C@@ KE@@ D@@ , null@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s i@@ r = app@@ .get@@ I@@ cc@@ Record@@ s(); if (@@ i@@ r@@ r != null@@ ) { i@@ r@@ .@@ register@@ For@@ Record@@ s@@ Load@@ ed@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ EV@@ ENT_@@ RE@@ C@@ OR@@ D@@ S_@@ LO@@ A@@ DE@@ D@@ , null@@ ); i@@ r@@ .@@ register@@ For@@ Lock@@ ed@@ Record@@ s@@ Load@@ ed@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ EV@@ ENT_@@ IC@@ C@@ _@@ LO@@ C@@ KE@@ D@@ , null@@ ); i@@ r@@ .@@ register@@ For@@ Record@@ s@@ Event@@ s@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ EV@@ ENT_@@ IC@@ C@@ _RE@@ C@@ OR@@ D_@@ EV@@ EN@@ T@@ S@@ , null@@ ); } } }
private boolean ar@@ e@@ All@@ Application@@ s@@ Read@@ y@@ () { return m@@ I@@ s@@ Read@@ y@@ ; }
private void un@@ register@@ U@@ ic@@ c@@ C@@ ard@@ Event@@ s() { if ((m@@ U@@ ic@@ c@@ C@@ ard@@ ) != null@@ ) m@@ U@@ ic@@ c@@ C@@ ard@@ .@@ un@@ register@@ For@@ C@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ e@@ R@@ ul@@ es@@ Load@@ ed@@ (@@ this@@ ); for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ard@@ Appli@@ c@@ ation ap@@ p : m@@ U@@ ic@@ c@@ Application@@ s) { if (@@ ap@@ p != null@@ ) { ap@@ p@@ .@@ un@@ register@@ For@@ Read@@ y@@ (@@ this@@ ); ap@@ p@@ .@@ un@@ register@@ For@@ Network@@ Lock@@ ed@@ (@@ this@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s i@@ r = app@@ .get@@ I@@ cc@@ Record@@ s(); if (@@ i@@ r@@ r != null@@ ) { i@@ r@@ .@@ un@@ register@@ For@@ Record@@ s@@ Load@@ ed@@ (@@ this@@ ); m@@ U@@ ic@@ c@@ C@@ ard@@ Manager.@@ un@@ register@@ For@@ Lock@@ ed@@ (@@ this@@ ); } } } }
@java.lang.Override public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l out, int flag@@ s) { out.@@ write@@ String@@ (pro@@ file@@ File@@ ); if ((@@ pro@@ file@@ F@@ d@@ ) != null@@ ) { out.@@ write@@ Int@@ (1@@ ); pro@@ file@@ F@@ d.@@ write@@ To@@ Par@@ cel@@ (@@ out, flag@@ s); } else { out.@@ write@@ Int@@ (@@ 0); } out.@@ write@@ Int@@ (s@@ amp@@ l@@ ing@@ Inter@@ val@@ ); out.@@ write@@ Int@@ ((@@ a@@ ut@@ o@@ St@@ op@@ Pro@@ file@@ r ? 1 : 0@@ )); out.@@ write@@ Int@@ ((@@ str@@ eam@@ ing@@ Out@@ put ? 1 : 0@@ )); out.@@ write@@ String(@@ ag@@ ent@@ ); out.@@ write@@ Boolean@@ (b@@ ind@@ Time@@ A@@ g@@ ent@@ At@@ t@@ ach@@ ); }
@java.lang.Override void on@@ Start@@ () { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ TAG, ("@@ on@@ Start@@ () " + (m@@ Service@@ Name@@ ))); com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ N@@ s@@ d@@ Service@@ List@@ en@@ er service@@ List@@ en@@ er = new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ N@@ s@@ d@@ Service@@ Listener@@ () { @java.lang.Override public void on@@ Start@@ Dis@@ co@@ ver@@ y@@ Faile@@ d@@ (java.lang.String s, int i@@ ) { } }; android.net.@@ n@@ s@@ d.@@ N@@ s@@ d@@ Manager n@@ s@@ d@@ Manager = m@@ N@@ s@@ d@@ Res@@ ol@@ ve@@ Q@@ ue@@ u@@ e.get@@ N@@ s@@ d@@ Manager@@ (); n@@ s@@ d@@ Manager@@ .@@ dis@@ co@@ ver@@ Ser@@ vices@@ (@@ m@@ Service@@ Name, N@@ s@@ d@@ Manager.@@ P@@ RO@@ TO@@ C@@ O@@ L@@ _@@ D@@ N@@ S@@ _S@@ D@@ , service@@ List@@ en@@ er@@ ); m@@ To@@ St@@ o@@ p@@ y.@@ add@@ (s@@ c@@ b@@ ip@@ s.@@ size@@ ()); }
public com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able@@ start@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ y.@@ List@@ en@@ er list@@ ener@@ ) { m@@ Listener@@ s.@@ add(@@ list@@ ener@@ ); if (!(m@@ P@@ r@@ int@@ er@@ s.@@ isEmpty@@ ())) { m@@ Handler.@@ po@@ st@@ ((@@ ) -@@ > { if (!(m@@ Listener@@ s.@@ contain@@ s(@@ list@@ ener@@ ))) return@@ ; new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Array@@ List<@@ >@@ (m@@ P@@ r@@ int@@ er@@ s.@@ valu@@ es@@ ().@@ valu@@ es@@ ().@@ to@@ Each@@ (@@ list@@ ener@@ :@@ on@@ P@@ r@@ int@@ er@@ F@@ ound@@ ); m@@ Handler.@@ po@@ st@@ ((@@ ) -@@ > { m@@ Listener@@ s.@@ remove@@ (@@ list@@ ener@@ ); if (m@@ Listener@@ s.@@ isEmpty@@ ()) { st@@ op@@ (); } return () -@@ > { m@@ Listener@@ s.@@ remove@@ (@@ list@@ ener@@ ); if (m@@ Listener@@ s.@@ isEmpty@@ ()) { st@@ op@@ (); } }; }
public com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able de@@ lay@@ (@@ int de@@ lay@@ , java.lang.@@ Run@@ n@@ able to@@ Run@@ ) { m@@ M@@ ain@@ Handler.@@ po@@ st@@ D@@ el@@ ay@@ ed@@ (@@ to@@ Run@@ , de@@ lay@@ ); return () -@@ > m@@ M@@ ain@@ Handler.@@ remove@@ Callback@@ s(@@ to@@ Run@@ ); }
@java.lang.Override public void on@@ Connection@@ Comp@@ let@@ e@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { if (p@@ r@@ int@@ er != null@@ ) { m@@ P@@ r@@ int@@ Service@@ .get@@ M@@ ain@@ Handler@@ ().@@ po@@ st@@ ((@@ ) -@@ > { m@@ Valid@@ at@@ ing.@@ st@@ op@@ (); m@@ P@@ r@@ int@@ Service@@ .get@@ P2p@@ Dis@@ co@@ ver@@ y@@ ().@@ add@@ Valid@@ P@@ r@@ int@@ er@@ (p@@ r@@ int@@ er@@ ); m@@ F@@ r@@ ag@@ m@@ ent.get@@ Activity@@ ().@@ fin@@ is@@ h@@ (); }); dis@@ mis@@ s(); } else { fail@@ (); } }
@java.lang.Override public void on@@ Res@@ ol@@ ve@@ Faile@@ d@@ (@@ final android.net.@@ n@@ s@@ d.@@ N@@ s@@ d@@ Service@@ Info in@@ fo@@ , final int error@@ Code@@ ) { m@@ To@@ St@@ o@@ p.@@ remove@@ (@@ this@@ ); m@@ Res@@ ol@@ v@@ e = null@@ ; }
android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info create@@ P@@ r@@ int@@ er@@ Info@@ (@@ boolean k@@ no@@ wn@@ G@@ oo@@ d@@ ) { if ((m@@ Cap@@ abili@@ ties@@ ) == null@@ ) { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ P2p@@ (m@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ )) { android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info.@@ Builder bu@@ ilder = new android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info.@@ Builder@@ (m@@ P@@ r@@ int@@ er@@ Id, m@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er.@@ name@@ , android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info.@@ STAT@@ US@@ _@@ ID@@ LE@@ ).set@@ I@@ con@@ Resource@@ Id@@ (@@ R.@@ d@@ raw@@ ab@@ le.@@ ic@@ _@@ p@@ r@@ int@@ er@@ ).set@@ Des@@ cription@@ (m@@ P@@ r@@ int@@ Service@@ .get@@ Des@@ cription@@ (m@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ )); return builder.@@ build@@ (); } else if (!@@ k@@ no@@ wn@@ G@@ oo@@ d@@ ) { return null@@ ; } } else if (!(m@@ Cap@@ abili@@ ti@@ es.@@ is@@ Sup@@ ported@@ )) { return null@@ ; } com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er = m@@ P@@ r@@ int@@ Service@@ .get@@ Dis@@ co@@ ver@@ y@@ ().get@@ P@@ r@@ int@@ er@@ (m@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er.get@@ U@@ ri@@ ()); if (p@@ r@@ int@@ er == null@@ ) return null@@ ; boolean id@@ le = (m@@ F@@ ound@@ ) && ((m@@ Cap@@ abili@@ ties@@ ) != null@@ ) != null@@ )) ? android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info.@@ Builder bu@@ ilder = new android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info.@@ Builder@@ (m@@ P@@ r@@ int@@ er@@ .@@ name@@ , (@@ id@@ le ? android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info.@@ STAT@@ US@@ _@@ ID@@ L@@ E : android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info.@@ STAT@@ US@@ _@@ UN@@ AV@@ A@@ IL@@ AB@@ LE@@ )@@ ).set@@ I@@ con@@ Resource@@ Id@@ (@@ R.@@ d@@ raw@@ ab@@ le.@@ ic@@ _@@ p@@ r@@ int@@ er@@ ).set@@ Des@@ cription@@ (m@@ P@@ r@@ int@@ Service@@ .get@@ Des@@ cription@@ (m@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ )); if ((m@@ Cap@@ abili@@ ties@@ ) != null@@ ) { android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ties@@ Info.@@ Builder c@@ ap@@ abili@@ ties@@ Builder = new android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ties@@ (m@@ P@@ r@@ int@@ er@@ Id@@ ); m@@ Cap@@ abili@@ ti@@ es.@@ build@@ Cap@@ abili@@ ties@@ (m@@ P@@ r@@ int@@ er@@ )); if ((m@@ Cap@@ abili@@ ties@@ ) != null@@ ) { builder.@@ set@@ Cap@@ abili@@ ties@@ (c@@ ap@@ abili@@ ties@@ Builder.@@ build@@ ()); } return builder.@@ build@@ (); }
private com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er fi@@ rst@@ (android.net.@@ Ur@@ i p@@ r@@ int@@ er@@ U@@ ri@@ ) { for (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ y dis@@ co@@ ver@@ y : get@@ Ch@@ ild@@ r@@ en@@ ()) { com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ y@@ En@@ d@@ Milli@@ s = dis@@ co@@ ver@@ y@@ .get@@ P@@ r@@ int@@ er@@ (p@@ r@@ int@@ er@@ U@@ ri@@ ); if (@@ fo@@ un@@ d != null@@ ) return fo@@ und@@ ; } return null@@ ; }
public com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able re@@ cei@@ ve@@ B@@ roadcast@@ s(@@ android.content.@@ B@@ roadcast@@ Recei@@ ve@@ r re@@ cei@@ ver@@ , java.lang.String.@@ .@@ . action@@ s) { return new com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able@@ Recei@@ ver@@ (@@ this@@ , re@@ cei@@ ver@@ , action@@ s); }
private void st@@ op@@ And@@ C@@ le@@ ar@@ All@@ () { for (com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able st@@ ar@@ ted : m@@ St@@ ar@@ ted@@ ) { st@@ ar@@ ted@@ .@@ st@@ op@@ (); } m@@ St@@ ar@@ ted@@ .@@ clear@@ (); all@@ P@@ r@@ int@@ er@@ s@@ Lo@@ st@@ (); }
private void fin@@ is@@ h@@ (@@ boolean su@@ c@@ ces@@ s, java.lang.String error@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ TAG, ((@@ ("@@ send@@ ing su@@ c@@ cess@@ =@@ " + su@@ c@@ ces@@ s) + " error@@ =@@ ") + error@@ )); if ((m@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) m@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); if ((m@@ Dis@@ co@@ ver@@ y@@ Time@@ out@@ ) != null@@ ) m@@ Dis@@ co@@ ver@@ y@@ Time@@ out.@@ st@@ op@@ (); if ((m@@ Connection@@ ) != null@@ ) m@@ Connection@@ .@@ st@@ op@@ (); m@@ P@@ r@@ int@@ Service.@@ un@@ lock@@ W@@ if@@ i@@ (); m@@ B@@ ack@@ end@@ .@@ close@@ Doc@@ ument@@ (); if (s@@ u@@ c@@ ces@@ s) { m@@ P@@ r@@ int@@ J@@ o@@ b.@@ start@@ (); m@@ P@@ r@@ int@@ J@@ o@@ b.@@ comp@@ let@@ e@@ (); } else if ((m@@ State@@ ) == (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ C@@ AN@@ CE@@ L@@ )) { m@@ P@@ r@@ int@@ J@@ o@@ b.@@ can@@ cel@@ (); } else { m@@ P@@ r@@ int@@ J@@ o@@ b.@@ fail@@ (@@ error@@ ); } m@@ State = com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ D@@ ON@@ E@@ ; m@@ Comp@@ let@@ e@@ Con@@ s@@ um@@ er.@@ ac@@ ce@@ p@@ t@@ (@@ this@@ ); }
void start@@ (java.util.@@ f@@ un@@ c@@ tion@@ .@@ Con@@ s@@ um@@ er@@ <@@ com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ ob@@ > call@@ back@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ TAG, ("@@ Start@@ ing " + (m@@ P@@ r@@ int@@ J@@ ob@@ ))); if ((m@@ State@@ ) != (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ IN@@ I@@ T@@ )) { android.util.Log.@@ w@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ TAG, ("@@ st@@ ar@@ t st@@ ate " + (m@@ State@@ ))); return@@ ; } m@@ P@@ r@@ int@@ J@@ o@@ b.@@ start@@ (); m@@ P@@ r@@ int@@ Service.@@ lock@@ W@@ if@@ i@@ (); m@@ State = com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ D@@ IS@@ C@@ O@@ V@@ ER@@ Y@@ ; m@@ Comp@@ let@@ e@@ Con@@ s@@ um@@ er = call@@ back@@ ; m@@ Dis@@ co@@ ver@@ y = m@@ P@@ r@@ int@@ Service@@ .get@@ Dis@@ co@@ ver@@ y@@ ().@@ start@@ (@@ this@@ ); m@@ Dis@@ co@@ ver@@ y@@ Time@@ out = m@@ P@@ r@@ int@@ Service.@@ de@@ lay@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ D@@ IS@@ C@@ O@@ V@@ ER@@ Y_@@ TI@@ ME@@ O@@ UT@@ , () -@@ > { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ TAG, "@@ start@@ ing time@@ out if ((m@@ State@@ ) == (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ D@@ IS@@ C@@ O@@ V@@ ER@@ Y@@ )) { fin@@ is@@ h@@ (@@ false@@ , m@@ P@@ r@@ int@@ Service@@ .get@@ String(@@ R.@@ str@@ ing.@@ p@@ r@@ int@@ er@@ _@@ o@@ ff@@ line@@ )); } }); }
public void remove@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ (android.net.@@ Ur@@ i p@@ r@@ int@@ er@@ Path@@ ) { get@@ Ch@@ ild@@ r@@ en@@ ().@@ str@@ eam@@ ().@@ fil@@ ter@@ (@@ ( ch@@ ild@@ ) -@@ > ch@@ il@@ d != (@@ this@@ ))@@ .@@ for@@ Each@@ (@@ ( ch@@ ild@@ ) -@@ > ch@@ ild@@ .@@ remove@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ (p@@ r@@ int@@ er@@ Path@@ )); }
@java.lang.Override java.util.Collection@@ <@@ com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ y@@ > get@@ Ch@@ ild@@ r@@ en@@ () { return m@@ Dis@@ co@@ ver@@ i@@ es.@@ str@@ eam@@ ().@@ f@@ lat@@ Map@@ (@@ ( ch@@ ild@@ ) -@@ > ch@@ ild@@ .get@@ Ch@@ ild@@ r@@ en@@ ().@@ str@@ eam@@ ()).@@ co@@ lle@@ ct@@ (java.util.@@ str@@ eam@@ .@@ Co@@ lle@@ ctor@@ s.@@ to@@ List@@ ()); }
public java.lang.String get@@ Des@@ cription@@ (@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { if ((@@ com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ P2p@@ (p@@ r@@ int@@ er@@ )) || (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ On@@ Connec@@ ted@@ Interface@@ (@@ this@@ , p@@ r@@ int@@ er@@ ))) { return get@@ String(@@ R.@@ str@@ ing.@@ w@@ if@@ i@@ _@@ di@@ re@@ ct@@ ); } java.lang.String ho@@ s@@ t = p@@ r@@ int@@ er.@@ path@@ .get@@ Host@@ ().@@ re@@ pla@@ ce@@ All@@ ("@@ :@@ [0@@ -@@ 9@@ ]@@ +@@ ", "@@ "); if (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (p@@ r@@ int@@ er.@@ loc@@ ation@@ ))) { return get@@ String(@@ R.@@ str@@ ing.@@ p@@ r@@ int@@ er@@ _@@ des@@ cription@@ , ho@@ st@@ , p@@ r@@ int@@ er.@@ loc@@ ation@@ ); } else { return ho@@ st@@ ; } }
@java.lang.Override void on@@ St@@ op@@ () { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ TAG, ("@@ on@@ St@@ op@@ () " + (m@@ Service@@ Name@@ ))); m@@ To@@ St@@ o@@ p@@ .@@ clear@@ (); }
@java.lang.Override void on@@ Start@@ () { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ TAG, "@@ on@@ Start@@ "); m@@ Cap@@ abili@@ ties@@ Cach@@ e = get@@ P@@ r@@ int@@ Service@@ ().get@@ Cap@@ abili@@ ties@@ Cach@@ e@@ (); m@@ W@@ if@@ i@@ Mon@@ it@@ or = new com.android.@@ b@@ ip@@ s.@@ util.@@ W@@ if@@ i@@ Monitor@@ (get@@ P@@ r@@ int@@ Service@@ (), ("@@ Connec@@ ted@@ ) -@@ > { if (is@@ Connec@@ ted@@ ) { for (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er : get@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s) { m@@ Cap@@ abili@@ ties@@ C@@ ache.@@ request@@ (p@@ r@@ int@@ er, false@@ , ("@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s -@@ > { if (c@@ ap@@ abili@@ ti@@ es != null@@ ) { p@@ r@@ int@@ er@@ F@@ ound@@ (p@@ r@@ int@@ er@@ ); } } } else { all@@ P@@ r@@ int@@ er@@ s@@ Lo@@ st@@ (); } }); }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { java.lang.String ac@@ tion = int@@ ent.get@@ Action@@ (); if (@@ W@@ if@@ i@@ P2p@@ Manager.@@ WI@@ FI@@ _P@@ 2@@ P@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D_@@ AC@@ TION@@ .@@ equals(@@ action@@ )) { int st@@ ate = int@@ ent.get@@ Int@@ Extra@@ (@@ W@@ if@@ i@@ P2p@@ Manager.@@ EX@@ TR@@ A@@ _@@ WI@@ FI@@ _@@ STA@@ TE@@ , (-1@@ )); java.lang.@@ Boole@@ an en@@ able@@ State = st@@ ate == (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ Manager.@@ WI@@ FI@@ _P@@ 2@@ P@@ _@@ STATE_@@ EN@@ AB@@ LE@@ D@@ ); if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Dis@@ co@@ ver@@ y@@ Pro@@ ce@@ d@@ ure@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Dis@@ co@@ ver@@ y@@ Pro@@ ce@@ d@@ ure@@ .@@ TAG, ("@@ WI@@ FI@@ _P@@ 2@@ P@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D_@@ AC@@ TION@@ : en@@ abled@@ =@@ " + en@@ able@@ State@@ )); if (@@ en@@ able@@ State@@ ) { m@@ P2p@@ Manager.@@ st@@ op@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ (m@@ Channel@@ , null@@ ); m@@ P2p@@ Manager.@@ dis@@ co@@ ver@@ P@@ e@@ er@@ s@@ (m@@ Channel@@ , null@@ ); } } else if (@@ W@@ if@@ i@@ P2p@@ Manager.@@ WI@@ FI@@ _P@@ 2@@ P@@ _P@@ E@@ RS@@ _C@@ H@@ AN@@ GE@@ D_@@ AC@@ TION@@ .@@ equals(@@ action@@ )) { android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ Device@@ Lis@@ t li@@ s@@ t = int@@ ent.get@@ Par@@ cel@@ able@@ Extra@@ (@@ W@@ if@@ i@@ P2p@@ Manager.@@ EX@@ TR@@ A@@ _P@@ 2@@ P@@ _@@ DE@@ V@@ IC@@ E_@@ L@@ IS@@ T@@ ); java.util.Collection@@ <@@ android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ Device@@ > new@@ P@@ e@@ er@@ s = li@@ s@@ t.get@@ Device@@ List@@ (); update@@ P@@ e@@ er@@ s@@ (@@ new@@ P@@ e@@ er@@ s); if (@@ new@@ P@@ e@@ er@@ s.@@ isEmpty@@ ()) { m@@ P2p@@ Manager.@@ st@@ op@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ (m@@ Channel@@ , null@@ ); m@@ P2p@@ Manager.@@ dis@@ co@@ ver@@ P@@ e@@ er@@ s@@ (m@@ Channel@@ , null@@ ); } }
@java.lang.Override void on@@ St@@ op@@ () { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ TAG, "@@ on@@ St@@ op@@ ()@@ "); if ((m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) { m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y = null@@ ; all@@ P@@ r@@ int@@ er@@ s@@ Lo@@ st@@ (); } }
public void add@@ Valid@@ P@@ r@@ int@@ er@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { if (@@ add@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ (p@@ r@@ int@@ er@@ )) { p@@ r@@ int@@ er@@ F@@ ound@@ (p@@ r@@ int@@ er@@ ); if (is@@ St@@ ar@@ ted@@ ()) start@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y(); } }
private static java.net.@@ Network@@ Inter@@ face to@@ Network@@ Interface@@ (java.lang.String name@@ ) { if (@@ name == null@@ ) return null@@ ; try { return java.net.@@ Network@@ Interface@@ .get@@ By@@ Name@@ (@@ name@@ ); } catch (@@ java.net.@@ Socket@@ Exception e) { return null@@ ; } }
private static java.net.Inet@@ 4@@ Address to@@ Inet@@ 4@@ Addres@@ s(@@ android.net.@@ Ur@@ i path@@ ) { if (!@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ IP@@ V@@ 4@@ _P@@ AT@@ TER@@ N@@ .@@ match@@ er@@ (p@@ ath@@ .get@@ Host@@ ()).@@ find@@ ())) return null@@ ; try { return ((@@ java.net.Inet@@ 4@@ Addres@@ s) (@@ java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (p@@ ath@@ .get@@ Host@@ ()))); } catch (@@ java.net.@@ Un@@ k@@ no@@ wn@@ Host@@ Exception ign@@ or@@ ed@@ ) { } return null@@ ; }
static boolean is@@ On@@ Interface@@ (@@ java.net.@@ Network@@ Inter@@ face if@@ ace@@ , java.net.Inet@@ 4@@ Address addres@@ s) { long add@@ ress@@ Lon@@ g = com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ to@@ Long@@ (@@ addres@@ s); for (@@ java.net.@@ Interface@@ Address if@@ ace@@ Address : if@@ ace@@ .get@@ Interface@@ Address@@ es@@ ()) { if (!(@@ (@@ if@@ ace@@ Addres@@ s.get@@ Address@@ ()) instanceof java.net.Inet@@ 4@@ Address@@ )) continue@@ ; java.net.Inet@@ 4@@ Address network@@ Address = ((@@ java.net.Inet@@ 4@@ Addres@@ s) (@@ if@@ ace@@ Addres@@ s.get@@ Address@@ ())); java.util.@@ Bit@@ Se@@ t b@@ it@@ Se@@ t = new java.util.@@ Bit@@ Set@@ (@@ 32@@ ); b@@ it@@ Set@@ .set@@ ((@@ 3@@ 2 - (@@ if@@ ace@@ Addres@@ s.get@@ Network@@ Pre@@ fix@@ Length@@ ()@@ )), 32@@ ); long net@@ M@@ as@@ k = b@@ it@@ Set@@ .@@ to@@ Long@@ Array@@ ()@@ [0@@ ]; if ((@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ to@@ Long@@ (@@ network@@ Address@@ )) & net@@ M@@ ask@@ ) == (@@ add@@ ress@@ Lon@@ g & net@@ M@@ ask@@ )) { return true@@ ; } } return false@@ ; }
@java.lang.Override public void st@@ op@@ () { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Dis@@ co@@ ver@@ y@@ Pro@@ ce@@ d@@ ure@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Dis@@ co@@ ver@@ y@@ Pro@@ ce@@ d@@ ure@@ .@@ TAG, "@@ st@@ op@@ ()@@ "); m@@ B@@ road@@ cas@@ ts.@@ st@@ op@@ (); m@@ P2p@@ Manager.@@ st@@ op@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ (m@@ Channel@@ , null@@ ); }
public java.util.Collection@@ <@@ com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ > get@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s() { return get@@ Ch@@ ild@@ r@@ en@@ ().@@ str@@ eam@@ ().@@ fil@@ ter@@ (@@ ( ch@@ ild@@ ) -@@ > ch@@ il@@ d != (@@ this@@ )).@@ f@@ lat@@ Map@@ (@@ ( ch@@ ild@@ ) -@@ > ch@@ ild@@ .get@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ ().@@ str@@ eam@@ ()).@@ co@@ lle@@ ct@@ (java.util.@@ str@@ eam@@ .@@ Co@@ lle@@ ctor@@ s.@@ to@@ List@@ ()); }
private W@@ if@@ i@@ P2p@@ De@@ vice get@@ Device@@ (java.util.@@ Collection@@ <@@ W@@ if@@ i@@ P2p@@ Device@@ > pe@@ er@@ s, java.lang.String addres@@ s) { for (@@ W@@ if@@ i@@ P2p@@ De@@ vice fo@@ un@@ d : pe@@ er@@ s) { if (@@ fo@@ und@@ .@@ device@@ Addres@@ s.@@ equals(@@ add@@ ress@@ )) return fo@@ und@@ ; } return null@@ ; }
private void update@@ P@@ e@@ er@@ s(@@ java.util.Collection@@ <@@ android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ Device@@ > new@@ P@@ e@@ er@@ s) { java.util.List<@@ android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ Device@@ > old@@ P@@ e@@ er@@ s = new java.util.Array@@ List@@ (m@@ P@@ e@@ er@@ s); m@@ P@@ e@@ er@@ s.@@ clear@@ (); for (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er : new@@ P@@ e@@ er@@ s) { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Dis@@ co@@ ver@@ y@@ Pro@@ ce@@ d@@ ure@@ .@@ P@@ R@@ IN@@ TER@@ _P@@ AT@@ TER@@ N@@ .@@ match@@ er@@ (p@@ e@@ er.@@ p@@ ri@@ m@@ ary@@ Device@@ Type@@ ).@@ find@@ ()) { m@@ P@@ e@@ er@@ s.@@ add@@ (p@@ e@@ er@@ ); } } java.util.@@ Set@@ <java.lang.String@@ > fo@@ und@@ Addres@@ se@@ s = new java.util.@@ Hash@@ Set@@ <@@ >(); for (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er : m@@ P@@ e@@ er@@ s) { fo@@ und@@ Address@@ es.@@ add@@ (p@@ e@@ er.@@ device@@ Addres@@ s); android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice ol@@ d = get@@ Device@@ (@@ old@@ P@@ e@@ er@@ s, pe@@ er.@@ device@@ Addres@@ s); if ((@@ ol@@ d == null@@ ) || (!(@@ ol@@ d.@@ equals(@@ pe@@ er@@ )@@ ))) { m@@ Listener@@ s@@ .@@ for@@ Each@@ (@@ ( list@@ ener@@ ) -@@ > list@@ en@@ er.@@ on@@ P@@ e@@ er@@ F@@ ound@@ (p@@ e@@ er@@ )); } } for (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice old@@ P@@ e@@ er : old@@ P@@ e@@ er@@ s) { if (!(@@ fo@@ und@@ Address@@ es.@@ contain@@ s(@@ old@@ P@@ e@@ er.@@ device@@ Address@@ ))) { m@@ Listener@@ s@@ .@@ for@@ Each@@ (@@ ( list@@ ener@@ ) -@@ > list@@ en@@ er.@@ on@@ P@@ e@@ er@@ Lo@@ st@@ (@@ old@@ P@@ e@@ er@@ )); } }
@java.lang.Override public void on@@ Res@@ um@@ e@@ () { super@@ .@@ on@@ Res@@ um@@ e@@ (); if (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ TAG, "@@ on@@ Res@@ um@@ e@@ "); get@@ Activity@@ ().@@ set@@ T@@ it@@ le@@ (@@ R.@@ str@@ ing.@@ w@@ if@@ i@@ _@@ di@@ re@@ ct@@ _@@ p@@ r@@ int@@ er@@ s); get@@ Context@@ ().@@ b@@ ind@@ Service@@ (@@ new android.content.@@ Intent@@ (get@@ Context@@ (), com.android.@@ b@@ ip@@ s.@@ Bu@@ il@@ t@@ In@@ P@@ r@@ int@@ Service@@ .@@ class@@ ), this@@ , Context.@@ B@@ IN@@ D_@@ A@@ UT@@ O@@ _C@@ RE@@ A@@ TE@@ ); }
void handle@@ Cap@@ abili@@ ties@@ (android.net.@@ Ur@@ i p@@ r@@ int@@ er@@ Path@@ , com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ties@@ ) { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ TAG, ((@@ ("@@ handle@@ Cap@@ abili@@ ties@@ : " + p@@ r@@ int@@ er@@ Path@@ ) + ", c@@ ap@@ =@@ ") + c@@ ap@@ abili@@ ties@@ )); if (c@@ ap@@ abili@@ ti@@ es == null@@ ) { if (m@@ Request@@ s.@@ isEmpty@@ ()) { m@@ F@@ in@@ al@@ Callback@@ .@@ on@@ Not@@ F@@ ound@@ (); } return@@ ; } m@@ Request@@ s@@ .@@ for@@ Each@@ (m@@ Cap@@ abili@@ ties@@ Cach@@ e@@ :@@ can@@ cel@@ ); m@@ Request@@ s.@@ clear@@ (); android.net.@@ Ur@@ i u@@ u@@ id = (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (c@@ ap@@ abili@@ ti@@ es.@@ u@@ id@@ )) ? null : android.net.@@ U@@ ri@@ .@@ parse@@ (c@@ ap@@ abili@@ ti@@ es.@@ u@@ id@@ ); com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er(@@ u@@ id, name@@ , p@@ r@@ int@@ er@@ Path@@ , c@@ ap@@ abili@@ ti@@ es.@@ loc@@ ation@@ ); if (c@@ ap@@ abili@@ ti@@ es.@@ is@@ Sup@@ ported@@ ) { if (@@ add@@ S@@ av@@ ed@@ P@@ r@@ int@@ er(@@ res@@ ol@@ v@@ ed@@ P@@ r@@ int@@ er@@ )) { p@@ r@@ int@@ er@@ F@@ ound@@ (@@ res@@ ol@@ v@@ ed@@ P@@ r@@ int@@ er@@ ); } } m@@ F@@ in@@ al@@ Callback@@ .@@ on@@ F@@ ound@@ (@@ res@@ ol@@ v@@ ed@@ P@@ r@@ int@@ er@@ , c@@ ap@@ abili@@ ti@@ es.@@ is@@ Sup@@ ported@@ ); }
@java.lang.Override public void on@@ P@@ e@@ er@@ F@@ ound@@ (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er@@ ) { if (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ TAG, ("@@ on@@ P@@ e@@ er@@ F@@ ound@@ : " + (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Monitor@@ .@@ toString@@ (p@@ e@@ er@@ )))); if ((m@@ P@@ r@@ int@@ Service@@ ) == null@@ ) return@@ ; Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er = com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ to@@ P@@ r@@ int@@ er@@ (p@@ e@@ er@@ ); for (@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ ri@@ or : m@@ P@@ r@@ int@@ Service@@ .get@@ P2p@@ Dis@@ co@@ ver@@ y@@ ().get@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s()) { if (p@@ ri@@ or.@@ path@@ .@@ equals(@@ p@@ r@@ int@@ er.@@ path@@ )) return@@ ; } com.android.@@ b@@ ip@@ s.@@ ui.@@ P@@ r@@ int@@ er@@ Pre@@ feren@@ ce pre@@ f = get@@ P@@ r@@ int@@ er@@ Pre@@ ference@@ (p@@ r@@ int@@ er.get@@ U@@ ri@@ ()); if (p@@ re@@ f != null@@ ) { pre@@ f.@@ update@@ P@@ r@@ int@@ er@@ (p@@ r@@ int@@ er@@ ); } else { pre@@ f = new com.android.@@ b@@ ip@@ s.@@ ui.@@ P@@ r@@ int@@ er@@ Pre@@ ference@@ (get@@ Context@@ (), m@@ P@@ r@@ int@@ Service@@ , p@@ r@@ int@@ er, true@@ ); pre@@ f@@ .set@@ On@@ Pre@@ ference@@ C@@ li@@ ck@@ Listener@@ (@@ ( pre@@ ference@@ ) -@@ > { if (com.android.@@ b@@ ip@@ s.@@ ui.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ TAG, ("@@ ad@@ d " + (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ to@@ P@@ r@@ int@@ er@@ (p@@ e@@ er@@ )))); new <@@ com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ P2p@@ P@@ r@@ int@@ er@@ Di@@ alo@@ g@@ (@@ this@@ , pe@@ er@@ ).@@ sho@@ w@@ (); return true@@ ; }
@java.lang.Override public void on@@ Service@@ Connec@@ ted@@ (android.@@ content.@@ Comp@@ onent@@ Name comp@@ onent@@ Name, android.os.@@ I@@ B@@ in@@ der i@@ B@@ in@@ der@@ ) { if (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ TAG, "@@ on@@ Service@@ Connec@@ ted@@ "); m@@ P@@ r@@ int@@ Ser@@ vice = com.android.@@ b@@ ip@@ s.@@ Bu@@ il@@ t@@ In@@ P@@ r@@ int@@ Service@@ .get@@ Instance@@ (); if ((m@@ P@@ r@@ int@@ Service@@ ) == null@@ ) return@@ ; if ((@@ get@@ Context@@ ().@@ check@@ S@@ el@@ f@@ Permission@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ )) != (android.@@ content.@@ p@@ m.@@ Package@@ Manager.@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ _@@ G@@ R@@ AN@@ TE@@ D@@ )) { get@@ Activity@@ ().@@ request@@ Permission@@ s@@ (@@ new java.lang.String@@ []{ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ IO@@ N }@@ , com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ RE@@ Q@@ UE@@ ST_@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ ); } else { start@@ P2p@@ Dis@@ co@@ ver@@ y(); } }
private void start@@ P2p@@ Dis@@ co@@ ver@@ y@@ () { if ((m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ ) == null@@ ) { m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y = m@@ P@@ r@@ int@@ Service@@ .get@@ P2p@@ Monitor@@ ().@@ dis@@ co@@ ver@@ (@@ new com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ P2p@@ Listener@@ ()); }
@java.lang.Override public void on@@ P@@ e@@ er@@ Lo@@ st@@ (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er@@ ) { if (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ TAG, ("@@ on@@ P@@ e@@ er@@ Lo@@ st@@ : " + (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Monitor@@ .@@ toString@@ (p@@ e@@ er@@ )))); if ((m@@ P@@ r@@ int@@ Service@@ ) == null@@ ) return@@ ; com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er = com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ to@@ P@@ r@@ int@@ er@@ (p@@ e@@ er@@ ); com.android.@@ b@@ ip@@ s.@@ ui.@@ P@@ r@@ int@@ er@@ Pre@@ feren@@ ce pre@@ f = get@@ P@@ r@@ int@@ er@@ Pre@@ ference@@ (p@@ r@@ int@@ er.@@ path@@ ); if (p@@ re@@ f != null@@ ) { m@@ A@@ va@@ il@@ able@@ C@@ ate@@ gor@@ y.@@ remove@@ Pre@@ ference@@ (p@@ ref@@ ); } }
@java.lang.Override public void on@@ P@@ au@@ se@@ () { super@@ .@@ on@@ P@@ au@@ se@@ (); if (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P2p@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ F@@ ind@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ TAG, "@@ on@@ P@@ au@@ se@@ "); if ((m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) { m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y = null@@ ; } get@@ Context@@ ().@@ un@@ b@@ ind@@ Service@@ (@@ this@@ ); m@@ P@@ r@@ int@@ Ser@@ vice = null@@ ; }
public synchronized void un@@ lock@@ () { if (!(m@@ Lock@@ ed@@ )) throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ not lock@@ ed@@ "); m@@ Lock@@ ed = false@@ ; not@@ if@@ y@@ All@@ (); }
void all@@ P@@ r@@ int@@ er@@ s@@ Lo@@ st@@ () { check@@ State@@ ((@@ (m@@ P@@ r@@ int@@ er@@ s@@ .@@ for@@ E@@ a@@ ch@@ ()) & (@@ this@@ :@@ p@@ r@@ int@@ er@@ Lo@@ s@@ t@@ ); }
public com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able@@ able@@ able@@ res@@ ol@@ ve@@ (android.net.@@ n@@ s@@ d.@@ N@@ s@@ d@@ Service@@ Info service@@ Info@@ , android.net.@@ n@@ s@@ d.@@ N@@ s@@ d@@ Manager.@@ Res@@ ol@@ ve@@ List@@ en@@ er list@@ ener@@ ) { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ N@@ s@@ d@@ Res@@ ol@@ ve@@ Q@@ ue@@ u@@ e.@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ N@@ s@@ d@@ Res@@ ol@@ ve@@ Q@@ ue@@ u@@ e.@@ TAG, ((@@ ("@@ res@@ ol@@ v@@ e of " + (@@ service@@ Info@@ .get@@ Service@@ Name@@ ())) + " to q@@ ue@@ u@@ e size@@ =@@ ") + (m@@ Res@@ ol@@ ve@@ Request@@ s.@@ size@@ ()))); } com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ N@@ s@@ d@@ Res@@ ol@@ ve@@ Q@@ ue@@ u@@ e.@@ N@@ s@@ d@@ Res@@ ol@@ ve@@ Requ@@ est requ@@ est = new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ N@@ s@@ d@@ Res@@ ol@@ ve@@ Q@@ ue@@ u@@ e.@@ N@@ s@@ d@@ Res@@ ol@@ ve@@ Request@@ (m@@ N@@ s@@ d@@ Manager@@ , service@@ Info@@ , list@@ ener@@ ); m@@ Res@@ ol@@ ve@@ Request@@ s.@@ add@@ L@@ ast@@ (@@ requ@@ est@@ ); if ((m@@ Res@@ ol@@ ve@@ Request@@ s.@@ size@@ ()) == 1@@ ) { res@@ ol@@ ve@@ Next@@ Request@@ (); } return () -@@ > { if ((m@@ Res@@ ol@@ ve@@ Request@@ s.@@ contain@@ s(@@ request@@ )) && ((m@@ Res@@ ol@@ ve@@ Request@@ s.get@@ (0@@ )) != request@@ )) { m@@ Res@@ ol@@ ve@@ Request@@ s.@@ remove@@ (@@ request@@ ); } }; }
@java.lang.Override public void st@@ op@@ () { if ((m@@ State@@ ) != null@@ ) { m@@ B@@ roadcast@@ s@@ List@@ en@@ er = null@@ ; m@@ List@@ en@@ er = null@@ ; }
void add@@ Listener@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ e@@ er@@ List@@ en@@ er list@@ ener@@ ) { m@@ Listener@@ s.@@ add(@@ list@@ ener@@ ); if (!(m@@ P@@ e@@ er@@ s.@@ isEmpty@@ ())) { new android.os.@@ Handler@@ (android.os.@@ L@@ oo@@ p@@ er.get@@ M@@ ain@@ L@@ oo@@ per@@ ()).@@ po@@ st@@ ((@@ ) -@@ > { if (m@@ Listener@@ s.@@ contain@@ s(@@ list@@ ener@@ )) { m@@ P@@ e@@ er@@ s@@ .@@ for@@ Each@@ (@@ list@@ ener@@ :@@ on@@ P@@ e@@ er@@ F@@ ound@@ ); } }); }
@java.lang.Override public void on@@ Service@@ F@@ ound@@ (@@ final android.net.@@ n@@ s@@ d.@@ N@@ s@@ d@@ Service@@ Info in@@ fo@@ ) { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ TAG, (("@@ on@@ Service@@ F@@ ound@@ : " + (m@@ Service@@ Name@@ )) + ", name@@ =@@ ") + (in@@ fo@@ .get@@ Service@@ Name@@ ()))); get@@ Handler@@ ().@@ po@@ st@@ ((@@ ) -@@ > com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y@@ .@@ m@@ To@@ St@@ o@@ p@@ .@@ class@@ (@@ new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Res@@ ol@@ ve@@ r@@ if@@ y@@ (@@ new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Res@@ ol@@ ve@@ r@@ if@@ y@@ (@@ new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Res@@ ol@@ ve@@ r@@ if@@ y@@ (@@ null@@ ))); }
@java.lang.Override void on@@ St@@ op@@ () { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ TAG, "@@ on@@ St@@ op@@ "); m@@ W@@ if@@ i@@ Monitor@@ .@@ st@@ op@@ (); all@@ P@@ r@@ int@@ er@@ s@@ Lo@@ st@@ (); }
@java.lang.Override public void on@@ Service@@ Res@@ ol@@ v@@ ed@@ (@@ final android.net.@@ n@@ s@@ d.@@ N@@ s@@ d@@ Service@@ Info in@@ fo@@ ) { m@@ To@@ St@@ o@@ p.@@ remove@@ (@@ this@@ ); m@@ Res@@ ol@@ v@@ e = null@@ ; if (!(@@ is@@ St@@ ar@@ ted@@ ())) return@@ ; com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er = com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ to@@ Network@@ P@@ r@@ int@@ er@@ (in@@ fo@@ ); if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ TAG, ((@@ ("@@ on@@ Service@@ Res@@ ol@@ v@@ ed@@ : " + (in@@ fo@@ .get@@ Service@@ Name@@ ())) + " res@@ ol@@ ve@@ d to ") + p@@ r@@ int@@ er@@ )); if (p@@ r@@ int@@ er == null@@ ) return@@ ; p@@ r@@ int@@ er@@ F@@ ound@@ (p@@ r@@ int@@ er@@ ); }
@java.lang.Override void on@@ Start@@ () { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Multi@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Multi@@ Dis@@ co@@ ver@@ y.@@ TAG, "@@ on@@ Start@@ ()@@ "); for (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ y dis@@ co@@ ver@@ y : m@@ Dis@@ co@@ ver@@ ies@@ ) { m@@ St@@ ar@@ ted@@ .@@ add@@ (m@@ Ch@@ ild@@ Listener@@ )); } }
private void load@@ () { if (!(m@@ Cach@@ e@@ File@@ .@@ exist@@ s@@ ())) return@@ ; try (android.@@ util.@@ J@@ s@@ on@@ Read@@ er read@@ er = new android.util.@@ J@@ s@@ on@@ Read@@ er@@ (@@ new java.io.File@@ Read@@ er@@ (m@@ Cach@@ e@@ File@@ ))) { read@@ er.@@ b@@ e@@ gin@@ Object@@ (); while (@@ read@@ er.@@ has@@ Next@@ ()) { switch (@@ read@@ er.@@ next@@ Name@@ ()) { case com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ Info.@@ N@@ AM@@ E_@@ K@@ NO@@ W@@ N@@ _@@ G@@ O@@ O@@ D : m@@ K@@ no@@ wn@@ G@@ oo@@ d.@@ add@@ All@@ (@@ load@@ P@@ r@@ int@@ er@@ Id@@ s(@@ read@@ er@@ )); break@@ ; case com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ Info.@@ N@@ AM@@ E_@@ P@@ R@@ IO@@ R@@ I@@ T@@ Y : m@@ Pri@@ or@@ ity.@@ add@@ All@@ (@@ load@@ P@@ r@@ int@@ er@@ Id@@ s(@@ read@@ er@@ )); break@@ ; default : read@@ er.@@ s@@ k@@ ip@@ Value@@ (); break@@ ; } } read@@ er.@@ end@@ Object@@ (); } catch (java.io.IOException e) { android.util.Log.@@ w@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ Info.@@ TAG, ("@@ Faile@@ d to re@@ ad in@@ f@@ o f@@ ro@@ m " + (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ Info.@@ C@@ AC@@ H@@ E_@@ F@@ IL@@ E@@ )), e); } }
@java.lang.Override public void on@@ St@@ op@@ P@@ r@@ int@@ er@@ Dis@@ co@@ ver@@ y@@ () { if (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, "@@ on@@ St@@ op@@ P@@ r@@ int@@ er@@ Dis@@ co@@ ver@@ y@@ ()@@ "); m@@ Dis@@ co@@ ve@@ r@@ .@@ st@@ op@@ (); android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ Manager p@@ r@@ int@@ Manager = m@@ P@@ r@@ int@@ Service@@ .get@@ System@@ Service@@ (android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ Manager@@ .@@ class@@ ); p@@ r@@ int@@ Manager.@@ remove@@ P@@ r@@ int@@ Ser@@ vices@@ Chang@@ e@@ Listener@@ (@@ this@@ ); p@@ r@@ int@@ Manager.@@ remove@@ P@@ r@@ int@@ Service@@ Re@@ comm@@ end@@ ation@@ s@@ Chang@@ e@@ Listener@@ (@@ this@@ ); if ((m@@ Ex@@ pi@@ re@@ P@@ r@@ int@@ er@@ s) != null@@ ) { m@@ Ex@@ pi@@ re@@ P@@ r@@ int@@ er@@ s.@@ st@@ o@@ p@@ (); m@@ Ex@@ pi@@ re@@ P@@ r@@ int@@ er@@ s = null@@ ; } }
@java.lang.Override public void on@@ Cap@@ abili@@ ti@@ es@@ (@com.android.annotations.NonNull com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ti@@ es ) { if ((m@@ S@@ es@@ sion@@ .@@ is@@ D@@ est@@ ro@@ y@@ ed@@ ()) || (!(m@@ S@@ es@@ sion@@ .@@ is@@ K@@ no@@ w@@ n@@ (m@@ P@@ r@@ int@@ er@@ Id@@ )@@ ))) return@@ ; if (c@@ ap@@ abili@@ ti@@ es == null@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er.@@ TA@@ G@@ , ("@@ c@@ ap@@ abili@@ ti@@ es s@@ o remo@@ v@@ ing p@@ r@@ int@@ er " + (@@ this@@ .get@@ Session@@ ().get@@ P@@ r@@ int@@ er@@ s(@@ java.util.Collection@@ s.@@ sing@@ let@@ on@@ List@@ (m@@ P@@ r@@ int@@ er@@ Id@@ )@@ ))) { m@@ Cap@@ abili@@ ti@@ es = c@@ ap@@ abili@@ ties@@ ; m@@ Session@@ .@@ handle@@ P@@ r@@ int@@ er@@ (@@ this@@ ); } }
private void start@@ Tr@@ ack@@ ing@@ () { m@@ Tr@@ ack@@ ing = true@@ ; if ((m@@ Tr@@ ack@@ ing@@ Connection@@ ) != null@@ ) return@@ ; if ((@@ com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ P2p@@ (m@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ )) || (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ On@@ Connec@@ ted@@ Interface@@ (m@@ P@@ r@@ int@@ Service@@ , m@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ ))) { com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Connection@@ List@@ en@@ er list@@ en@@ er = new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Connection@@ Listener@@ () { @java.lang.Override public void on@@ Connection@@ Comp@@ let@@ e@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er.@@ TAG, ("@@ connec@@ tion comp@@ let@@ e " + p@@ r@@ int@@ er@@ )); if (p@@ r@@ int@@ er == null@@ ) { m@@ Tr@@ ack@@ ing@@ Connec@@ tion = null@@ ; } } @java.lang.Override public void on@@ Connection@@ D@@ el@@ ay@@ ed@@ (@@ boolean de@@ lay@@ ed@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er.@@ TAG, ("@@ connec@@ tion de@@ lay@@ ed@@ =@@ " + de@@ lay@@ ed@@ )); if (@@ de@@ lay@@ ed@@ ) { android.@@ widget@@ .@@ To@@ ast.@@ m@@ ake@@ Text@@ (m@@ P@@ r@@ int@@ Service@@ , R.@@ str@@ ing.@@ connect@@ _@@ h@@ int@@ _@@ text@@ , To@@ ast.@@ L@@ EN@@ G@@ TH@@ _@@ L@@ ON@@ G@@ ).@@ sho@@ w@@ (); } } }; m@@ Tr@@ ack@@ ing@@ Connec@@ tion = com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ connect@@ P@@ r@@ int@@ er@@ (m@@ P@@ r@@ int@@ Service@@ , m@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er, list@@ ener@@ ); }
public void st@@ op@@ All@@ () { if ((m@@ Connection@@ ) != null@@ ) { m@@ Connection@@ .@@ st@@ op@@ (); m@@ Connec@@ tion = null@@ ; m@@ Connec@@ ted@@ Inter@@ face = null@@ ; } if ((m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) { m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y = null@@ ; } }
void handle@@ P@@ r@@ int@@ er@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er local@@ P@@ r@@ int@@ er@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, ("@@ handle@@ P@@ r@@ int@@ er@@ : re@@ cor@@ d " + local@@ P@@ r@@ int@@ er@@ )); boolean k@@ no@@ wn@@ G@@ oo@@ d = m@@ Info.@@ is@@ K@@ no@@ wn@@ G@@ oo@@ d@@ (@@ local@@ P@@ r@@ int@@ er.get@@ P@@ r@@ int@@ er@@ Id@@ ()); android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info in@@ f@@ o = local@@ P@@ r@@ int@@ er.@@ create@@ P@@ r@@ int@@ er@@ Info@@ (@@ k@@ no@@ wn@@ G@@ oo@@ d@@ ); if (in@@ f@@ o == null@@ ) return@@ ; if ((@@ (in@@ fo@@ .get@@ Statu@@ s()) == (android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info.@@ STAT@@ US@@ _@@ ID@@ LE@@ )) && ((@@ local@@ P@@ r@@ int@@ er.get@@ U@@ u@@ id@@ ()) != null@@ )) { m@@ Info.@@ set@@ K@@ no@@ wn@@ G@@ oo@@ d@@ (@@ local@@ P@@ r@@ int@@ er.get@@ P@@ r@@ int@@ er@@ Id@@ ()); } for (android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Info k@@ no@@ wn@@ Info : get@@ P@@ r@@ int@@ er@@ s()) { if ((@@ k@@ no@@ wn@@ Info@@ .get@@ Id@@ ().@@ equals(@@ in@@ fo@@ .get@@ Id@@ ())) && ((@@ in@@ fo@@ .get@@ Cap@@ abili@@ ties@@ ()) == null@@ )) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, ((@@ (("@@ handle@@ P@@ r@@ int@@ er@@ : up@@ d@@ ate wit@@ h n@@ o c@@ ap@@ s " + local@@ P@@ r@@ int@@ er@@ )); return@@ ; } } if (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, ((@@ (("@@ handle@@ P@@ r@@ int@@ er@@ ) + " re@@ port@@ ing " local@@ P@@ r@@ int@@ er@@ ) + " c@@ ap@@ s@@ =@@ ") + ((@@ in@@ fo@@ .get@@ Cap@@ abili@@ ties@@ ()) != null@@ )) + " statu@@ s@@ =@@ ") + (in@@ fo@@ .get@@ Statu@@ s@@ um@@ m@@ ary@@ = ") + (in@@ fo@@ .get@@ Des@@ cription@@ ()))); } if (!(@@ is@@ Handle@@ d@@ By@@ O@@ th@@ er@@ Service@@ (@@ local@@ P@@ r@@ int@@ er@@ ))) { add@@ P@@ r@@ int@@ er@@ s(@@ java.util.Collection@@ s.@@ sing@@ let@@ on@@ List@@ (in@@ fo@@ )); } }
private void mon@@ itor@@ Ex@@ pi@@ re@@ d@@ P@@ r@@ int@@ er@@ s() { if ((@@ (m@@ Ex@@ pi@@ re@@ P@@ r@@ int@@ er@@ s) == null@@ ) && (!(m@@ P@@ r@@ int@@ er@@ s.@@ isEmpty@@ ()))) { m@@ Ex@@ pi@@ re@@ P@@ r@@ int@@ er@@ s = m@@ P@@ r@@ int@@ Service.@@ de@@ lay@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ P@@ R@@ IN@@ T@@ ER_@@ EX@@ P@@ I@@ R@@ AT@@ ION@@ _M@@ IL@@ L@@ IS@@ , () -@@ > { m@@ Ex@@ pi@@ re@@ P@@ r@@ int@@ er@@ s = null@@ ; boolean all@@ F@@ o@@ un@@ d = true@@ ; List<@@ android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Id@@ > id@@ s@@ To@@ Remo@@ v@@ e = new com.android.@@ b@@ i@@ ps@@ .@@ Array@@ List<@@ >(); for (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er local@@ P@@ r@@ int@@ er : m@@ P@@ r@@ int@@ er@@ s.@@ valu@@ es@@ ()) { if (@@ local@@ P@@ r@@ int@@ er.@@ is@@ Ex@@ pi@@ re@@ d@@ ()) { if (com.android.@@ b@@ i@@ ps@@ .@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TA@@ G@@ , ("@@ N@@ o (@@ local@@ P@@ r@@ int@@ er@@ )); id@@ s@@ To@@ Remo@@ v@@ e.@@ add(@@ local@@ P@@ r@@ int@@ er.get@@ P@@ r@@ int@@ er@@ Id@@ ()); } if (!(@@ local@@ P@@ r@@ int@@ er.@@ is@@ F@@ ound@@ ())) all@@ F@@ o@@ un@@ d = false@@ ; } id@@ s@@ To@@ Remo@@ ve@@ .@@ for@@ Each@@ (m@@ P@@ r@@ int@@ er@@ s@@ :@@ remove@@ ); remove@@ P@@ r@@ int@@ er@@ s(@@ id@@ s@@ To@@ Remo@@ ve@@ ); if (!@@ all@@ F@@ ound@@ ) { mon@@ itor@@ Ex@@ pi@@ re@@ d@@ P@@ r@@ int@@ er@@ s(); } }); }
@java.lang.Override public void on@@ Start@@ P@@ r@@ int@@ er@@ State@@ Tr@@ ack@@ ing@@ (@@ final android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Id p@@ r@@ int@@ er@@ Id@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, ("@@ on@@ Start@@ P@@ r@@ int@@ er@@ Id@@ : " + p@@ r@@ int@@ er@@ Id@@ )); com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er local@@ P@@ r@@ int@@ er = m@@ P@@ r@@ int@@ er@@ s.get@@ (p@@ r@@ int@@ er@@ Id@@ ); m@@ Tr@@ ack@@ ing@@ Id@@ s.@@ add@@ (p@@ r@@ int@@ er@@ Id@@ ); if ((@@ local@@ P@@ r@@ int@@ er == null@@ ) || (!(@@ local@@ P@@ r@@ int@@ er.@@ is@@ F@@ ound@@ ()))) return@@ ; local@@ P@@ r@@ int@@ er.@@ is@@ F@@ ound@@ ()))) return@@ ; } if ((@@ local@@ P@@ r@@ int@@ er == null@@ ) || (!(@@ local@@ P@@ r@@ int@@ er.@@ is@@ F@@ ound@@ ()))) return@@ ; local@@ P@@ r@@ int@@ er.@@ is@@ tr@@ ac@@ k@@ (); }
@java.lang.Override public void on@@ P@@ r@@ int@@ er@@ Lo@@ st@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er lo@@ st@@ P@@ r@@ int@@ er@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, ("@@ on@@ P@@ r@@ int@@ er@@ : " + lo@@ st@@ P@@ r@@ int@@ er@@ )); m@@ P@@ r@@ int@@ Service@@ .get@@ Cap@@ abili@@ ties@@ Cach@@ e@@ ().@@ remove@@ (@@ lo@@ st@@ P@@ r@@ int@@ er.@@ path@@ ); android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Id p@@ r@@ int@@ er@@ Id = lo@@ st@@ P@@ r@@ int@@ er.get@@ Id@@ (m@@ P@@ r@@ int@@ Service@@ ); com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er local@@ P@@ r@@ int@@ er = m@@ P@@ r@@ int@@ er@@ s.get@@ (p@@ r@@ int@@ er@@ Id@@ ); if (@@ local@@ P@@ r@@ int@@ er == null@@ ) return@@ ; local@@ P@@ r@@ int@@ er.@@ not@@ F@@ ound@@ (); handle@@ P@@ r@@ int@@ er(@@ local@@ P@@ r@@ int@@ er@@ ); mon@@ itor@@ Ex@@ pi@@ re@@ d@@ P@@ r@@ int@@ er@@ s(); }
@java.lang.Override public void st@@ op@@ () { if ((m@@ Recei@@ ver@@ ) != null@@ ) { m@@ Recei@@ ve@@ r = null@@ ; m@@ Context.@@ un@@ register@@ Recei@@ ver@@ (@@ this@@ ); } }
@java.lang.Override public void on@@ Start@@ P@@ r@@ int@@ er@@ Dis@@ co@@ ver@@ y@@ (@@ java.util.List<@@ android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Id@@ > p@@ ri@@ or@@ ity@@ List@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, ("@@ on@@ Start@@ P@@ r@@ int@@ er@@ Dis@@ co@@ ver@@ y@@ : " + p@@ ri@@ or@@ ity@@ List@@ )); m@@ P@@ r@@ int@@ er@@ s.@@ valu@@ es@@ ()@@ .@@ for@@ Each@@ (@@ Local@@ P@@ r@@ int@@ er@@ :@@ not@@ F@@ ound@@ ); mon@@ itor@@ Ex@@ pi@@ re@@ d@@ P@@ r@@ int@@ er@@ s(); m@@ Dis@@ co@@ ve@@ r = m@@ P@@ r@@ int@@ Service@@ .get@@ Dis@@ co@@ ver@@ y@@ ().@@ start@@ (@@ this@@ ); m@@ P@@ r@@ int@@ Manager.@@ add@@ P@@ r@@ int@@ Ser@@ vices@@ Chang@@ e@@ Listener@@ (@@ this@@ , null@@ ); on@@ P@@ r@@ int@@ Ser@@ vices@@ Changed@@ (); m@@ P@@ r@@ int@@ Manager.@@ add@@ P@@ r@@ int@@ Service@@ Re@@ comm@@ end@@ ation@@ s@@ Chang@@ e@@ Listener@@ (@@ this@@ , null@@ ); on@@ P@@ r@@ int@@ Service@@ Re@@ comm@@ end@@ ation@@ s@@ Changed@@ (); }
@java.lang.Override public void on@@ Connection@@ D@@ el@@ ay@@ ed@@ (@@ boolean de@@ lay@@ ed@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ TAG, ("@@ on@@ Connection@@ D@@ el@@ ay@@ ed " + de@@ lay@@ ed@@ )); if ((m@@ State@@ ) != (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ D@@ IS@@ C@@ O@@ V@@ ER@@ Y@@ )) return@@ ; if (@@ de@@ lay@@ ed@@ ) { m@@ P@@ r@@ int@@ J@@ o@@ b.@@ b@@ lock@@ (m@@ P@@ r@@ int@@ Service@@ .get@@ String(@@ R.@@ str@@ ing.@@ connect@@ _@@ h@@ int@@ _@@ text@@ )); } else { m@@ P@@ r@@ int@@ J@@ o@@ b.@@ start@@ (); } }
public void can@@ cel@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ On@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es on@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ties@@ ) { java.util.List<@@ android.net.@@ U@@ ri@@ > to@@ D@@ ro@@ p = new java.util.ArrayList<@@ >(); for (java.util.@@ Map@@ .@@ E@@ n@@ try@@ <@@ android.net.@@ U@@ ri@@ , com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ Request@@ > e@@ n@@ try : m@@ Request@@ s.@@ e@@ n@@ try@@ Set@@ ()) { com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ Requ@@ est requ@@ est = e@@ n@@ try@@ .get@@ Value@@ (); requ@@ est.@@ m@@ Callback@@ s.@@ remove@@ (@@ on@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ties@@ ); if (@@ requ@@ est.@@ m@@ Callback@@ s.@@ isEmpty@@ ()) { to@@ D@@ ro@@ p.@@ add(@@ e@@ n@@ try@@ .get@@ Key@@ ()); request@@ .@@ st@@ o@@ p@@ (); } } to@@ D@@ ro@@ p@@ .@@ for@@ Each@@ (m@@ Request@@ s@@ :@@ :@@ remove@@ ); }
@java.lang.Override protected com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es do@@ In@@ B@@ ack@@ g@@ round@@ (java.lang.@@ V@@ o@@ id@@ .@@ .@@ . dum@@ my@@ ) { long st@@ ar@@ t = java.lang.System.@@ current@@ Time@@ Milli@@ s(); com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es p@@ r@@ int@@ er@@ Cap@@ s = new com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ties@@ (); try { p@@ r@@ int@@ er@@ Cap@@ s.@@ in@@ et@@ Address = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (m@@ U@@ ri@@ .get@@ Host@@ ()); } catch (@@ java.net.@@ Un@@ k@@ no@@ wn@@ Host@@ Exception e) { return null@@ ; } boolean on@@ lin@@ e = is@@ Device@@ On@@ line@@ (m@@ U@@ ri@@ ); if (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Get@@ Cap@@ abili@@ ties@@ Task@@ .@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Get@@ Cap@@ abili@@ ties@@ Task@@ .@@ TAG, ((@@ (("@@ set@@ : ur@@ i@@ =@@ " + (m@@ U@@ ri@@ )) + " on@@ line@@ =@@ ") + on@@ lin@@ e) + " ("@@ ) + (@@ ( ") + start@@ )) + "@@ ms@@ )@@ ")); } if ((@@ !@@ on@@ lin@@ e) || (is@@ Can@@ ce@@ lle@@ d@@ ())) return null@@ ; try { com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Get@@ Cap@@ abili@@ ties@@ Task@@ .@@ s@@ Loc@@ k@@ .@@ lock@@ (m@@ Pri@@ or@@ it@@ y ? 1 : 0@@ )); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { return null@@ ; } int statu@@ s = -1@@ ; st@@ ar@@ t = java.lang.System.@@ current@@ Time@@ Milli@@ s(); try { if (is@@ Can@@ ce@@ lle@@ d@@ ()) return null@@ ; statu@@ s = m@@ B@@ ack@@ end@@ .@@ native@@ Get@@ Cap@@ abili@@ ties@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ B@@ ack@@ end@@ .get@@ I@@ p@@ (m@@ U@@ ri@@ .get@@ Host@@ ()@@ ), m@@ U@@ ri@@ .get@@ P@@ ort@@ (), m@@ U@@ ri@@ .get@@ Path@@ (), m@@ U@@ ri@@ .get@@ Path@@ (), m@@ U@@ ri@@ .get@@ S@@ ch@@ e@@ me@@ (), m@@ Time@@ out, p@@ r@@ int@@ er@@ Cap@@ s); } final@@ l@@ y { com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Get@@ Cap@@ abili@@ ties@@ Task@@ .@@ un@@ lock@@ (); } if (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Get@@ Cap@@ abili@@ ties@@ Task@@ .@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Get@@ Cap@@ abili@@ ties@@ Task@@ .@@ TAG, ((@@ (("@@ S@@ ch@@ e@@ me@@ =@@ " + (m@@ U@@ ri@@ )) + " statu@@ s@@ =@@ ") + statu@@ s) + " ("@@ ) + ((@@ java.lang.System.@@ current@@ Time@@ Milli@@ s()) - start@@ )) + "@@ ms@@ )@@ ")); } return statu@@ s == (com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ B@@ ack@@ end@@ Constants.@@ STAT@@ US@@ _@@ O@@ K@@ ) ? p@@ r@@ int@@ er@@ Cap@@ s : null@@ ; }
public void request@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y@@ y@@ y@@ s.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er, boolean h@@ igh@@ Pri@@ or@@ ity@@ , com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ On@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es on@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ties@@ ) { if (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ TAG, ((@@ ("@@ request@@ : p@@ r@@ int@@ er@@ =@@ " + p@@ r@@ int@@ er@@ ) + " h@@ igh@@ =@@ ") + h@@ igh@@ Pri@@ or@@ ity@@ )); com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ti@@ es = get@@ (p@@ r@@ int@@ er@@ ); if ((@@ c@@ ap@@ abili@@ ti@@ es != null@@ ) && ((@@ c@@ ap@@ abili@@ ties@@ .@@ native@@ Data@@ ) != null@@ )) { on@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es.@@ on@@ Cap@@ abili@@ ties@@ (c@@ ap@@ abili@@ ties@@ ); return@@ ; } if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ On@@ Connec@@ ted@@ Interface@@ (m@@ Service@@ , p@@ r@@ int@@ er@@ )) { if (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ TAG, ("@@ Faile@@ d to P@@ 2@@ P e@@ vi@@ c@@ t list@@ : " + p@@ r@@ int@@ er@@ )); m@@ To@@ E@@ vi@@ ct@@ P@@ 2@@ p.@@ add@@ (p@@ r@@ int@@ er.@@ path@@ ); } else { if (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ TAG, ("@@ Faile@@ d to W@@ LA@@ N e@@ vi@@ c@@ t list@@ : " + p@@ r@@ int@@ er@@ )); m@@ To@@ E@@ vi@@ ct.@@ add@@ (p@@ r@@ int@@ er.@@ path@@ ); } com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ Requ@@ est requ@@ est@@ est@@ est@@ k = m@@ Request@@ s.@@ com@@ pu@@ te@@ I@@ f@@ Ab@@ s@@ ent@@ (p@@ r@@ int@@ er.@@ pat@@ h@@ , ("@@ request@@ : ur@@ i@@ ) -@@ > new com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Request@@ (p@@ r@@ int@@ er, (@@ h@@ igh@@ Pri@@ or@@ it@@ y ? com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ S@@ EC@@ ON@@ D_@@ P@@ A@@ SS@@ _@@ TI@@ ME@@ O@@ U@@ T : com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ FI@@ RS@@ T_@@ P@@ A@@ SS@@ _@@ TI@@ ME@@ O@@ UT@@ ))); if (@@ h@@ igh@@ Pri@@ or@@ ity@@ ) requ@@ est.@@ m@@ H@@ igh@@ Pri@@ or@@ it@@ y@@ it@@ y@@ ; requ@@ est.@@ m@@ Callback@@ s.@@ add@@ (@@ on@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es@@ ); start@@ Next@@ Request@@ (); }
@java.lang.Override public void on@@ Connection@@ Comp@@ let@@ e@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { if ((m@@ State@@ ) != (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ D@@ IS@@ C@@ O@@ V@@ ER@@ Y@@ )) return@@ ; if (@@ p@@ r@@ int@@ er == null@@ ) { fin@@ is@@ h@@ (@@ false@@ , m@@ P@@ r@@ int@@ Service@@ .get@@ String(@@ R.@@ string@@ .@@ fa@@ ile@@ d@@ _@@ p@@ r@@ int@@ er@@ _@@ connec@@ tion@@ )); } else if ((m@@ P@@ r@@ int@@ J@@ o@@ b@@ .@@ is@@ Block@@ ed@@ ()) { m@@ P@@ r@@ int@@ J@@ o@@ b@@ Manager.@@ start@@ (); } }
void st@@ op@@ ();
@java.lang.Override public void close@@ () { if (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ TAG, "@@ st@@ op@@ ()@@ "); m@@ St@@ op@@ p@@ ed@@ ed@@ ed@@ ; m@@ W@@ if@@ i@@ Monitor@@ .@@ st@@ op@@ (); m@@ P2p@@ Monitor@@ .@@ st@@ op@@ (); }
@java.lang.Override public void st@@ o@@ p@@ () { if ((m@@ Res@@ ol@@ ve@@ ) != null@@ ) { m@@ Res@@ ol@@ v@@ e = m@@ Res@@ ol@@ v@@ ed@@ ; } }
@java.lang.Override void on@@ Start@@ () { if ((m@@ Start@@ D@@ el@@ ay@@ ) == 0) { m@@ Dis@@ co@@ ver@@ y = m@@ Ch@@ ild@@ .@@ start@@ (m@@ Ch@@ ild@@ Listener@@ ); } else { m@@ D@@ el@@ ay@@ ed@@ St@@ ar@@ t = get@@ P@@ r@@ int@@ Service@@ ().@@ de@@ lay@@ (m@@ Start@@ D@@ el@@ ay@@ , () -@@ > { if (!(@@ is@@ St@@ ar@@ ted@@ ())) return@@ ; m@@ Dis@@ co@@ ver@@ y = m@@ Ch@@ ild@@ .@@ start@@ (m@@ Ch@@ ild@@ Listener@@ ); }); } }
@java.lang.Override public void st@@ op@@ () { if ((m@@ Q@@ u@@ er@@ y@@ ) != null@@ ) { m@@ Q@@ u@@ er@@ y.@@ can@@ cel@@ (@@ true@@ ); m@@ Q@@ u@@ er@@ y = null@@ ; } }
private void start@@ Next@@ Request@@ () { final com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ Requ@@ est requ@@ est = get@@ Next@@ Request@@ (); if (@@ requ@@ est == null@@ ) return@@ ; requ@@ est.@@ m@@ Q@@ u@@ er@@ y = m@@ B@@ ack@@ end@@ .get@@ Cap@@ abili@@ ties@@ (@@ requ@@ est.@@ m@@ P@@ r@@ int@@ er.@@ path@@ , requ@@ est.@@ m@@ Time@@ out, requ@@ est.@@ m@@ H@@ igh@@ Pri@@ or@@ ity@@ , ("@@ N@@ o c@@ ap@@ abili@@ ties@@ )@@ "); { com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er = requ@@ est.@@ m@@ P@@ r@@ int@@ er@@ ; if (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ TAG, ((@@ ("@@ start@@ Next@@ Request@@ () for " + p@@ r@@ int@@ er@@ ) + " c@@ ap@@ =@@ ") + c@@ ap@@ abili@@ ties@@ )); if ((m@@ St@@ op@@ p@@ ed@@ ) return@@ ; m@@ Request@@ s.@@ remove@@ (p@@ r@@ int@@ er@@ .@@ path@@ ); android.net.@@ Ur@@ i c@@ ap@@ U@@ u@@ id = null@@ ; if (c@@ ap@@ abili@@ ti@@ es != null@@ ) { if (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (c@@ ap@@ abili@@ ti@@ es.@@ u@@ id@@ ))) { c@@ ap@@ U@@ u@@ id = android.net.@@ U@@ ri@@ .@@ parse@@ (c@@ ap@@ abili@@ ti@@ es.@@ u@@ id@@ ); } if ((@@ p@@ r@@ int@@ er.@@ u@@ id != null@@ ) && (!@@ (p@@ r@@ int@@ er.@@ u@@ id@@ .@@ equals(@@ c@@ ap@@ U@@ u@@ id@@ )@@ ))) { android.util.Log.@@ w@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ TAG, (("@@ U@@ ne@@ x@@ pec@@ ted mis@@ mat@@ ch for " + p@@ r@@ int@@ er@@ ) + " re@@ ject@@ ing c@@ ap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ti@@ es = null@@ ; } } if (c@@ ap@@ abili@@ ti@@ es == null@@ ) { if (@@ requ@@ est.@@ m@@ Time@@ out == (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ FI@@ RS@@ T_@@ P@@ A@@ SS@@ _@@ TI@@ ME@@ O@@ UT@@ )) { requ@@ est.@@ m@@ Time@@ out = com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ S@@ EC@@ ON@@ D_@@ P@@ A@@ SS@@ _@@ TI@@ ME@@ O@@ UT@@ ; requ@@ est.@@ m@@ Q@@ u@@ er@@ y = null@@ ; m@@ Request@@ s.@@ put@@ (p@@ r@@ int@@ er.@@ path@@ , request@@ ); start@@ Next@@ Request@@ (); return@@ ; } else { remove@@ (p@@ r@@ int@@ er@@ .@@ get@@ U@@ ri@@ ()); } } else { put@@ (p@@ r@@ int@@ er@@ .@@ path@@ , c@@ ap@@ abili@@ ties@@ ); } com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es result = c@@ ap@@ abili@@ ties@@ ; requ@@ est.@@ m@@ Callback@@ s@@ .@@ for@@ Each@@ (@@ ( call@@ back@@ ) -@@ > call@@ back@@ .@@ on@@ Cap@@ abili@@ ties@@ ); start@@ Next@@ Request@@ (); }); }
private void start@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ () { if ((m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) return@@ ; if (get@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ ().@@ isEmpty@@ ()) return@@ ; m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y = get@@ P@@ r@@ int@@ Service@@ ().get@@ P2p@@ Monitor@@ ().@@ dis@@ co@@ ver@@ (@@ this@@ ); }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { android.net.@@ Network@@ Info in@@ f@@ o = int@@ ent.get@@ Par@@ cel@@ able@@ Extra@@ (@@ W@@ if@@ i@@ P2p@@ Manager.@@ EX@@ TR@@ A@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ IN@@ F@@ O@@ ); if (!@@ (in@@ f@@ o.@@ is@@ Connec@@ ted@@ ())) { if (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ip@@ p.@@ Cap@@ abili@@ ties@@ C@@ ache.@@ TAG, ("@@ E@@ vi@@ ct@@ ing P@@ 2@@ P " + (m@@ To@@ E@@ vi@@ ct@@ P2p@@ ))); m@@ To@@ E@@ vi@@ ct@@ P2p@@ .@@ for@@ Each@@ (@@ this@@ :@@ remove@@ ); m@@ To@@ E@@ vi@@ ct@@ P@@ 2@@ p.@@ clear@@ (); } }
private void handle@@ Cap@@ abili@@ ties@@ (com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ties@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ TAG, ((@@ ("@@ Cap@@ abili@@ ti@@ es for " + (m@@ Path@@ )) + " ar@@ e ") + c@@ ap@@ abili@@ ties@@ )); if ((m@@ State@@ ) != (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S@@ )) return@@ ; if (c@@ ap@@ abili@@ ti@@ es == null@@ ) { fin@@ is@@ h@@ (@@ false@@ , m@@ P@@ r@@ int@@ Service@@ .get@@ String(@@ R.@@ str@@ ing.@@ p@@ r@@ int@@ er@@ _@@ o@@ ff@@ line@@ )); } else { if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ TAG, ("@@ Start@@ ing back@@ en@@ d p@@ r@@ int of " + (m@@ P@@ r@@ int@@ J@@ ob@@ ))); if ((m@@ Dis@@ co@@ ver@@ y@@ Time@@ out@@ ) != null@@ ) m@@ Dis@@ co@@ ver@@ y@@ Time@@ out.@@ st@@ op@@ (); m@@ State = com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ DE@@ L@@ I@@ V@@ ER@@ ING@@ ; m@@ P@@ r@@ int@@ J@@ o@@ b.@@ start@@ (); m@@ B@@ ack@@ end@@ .@@ p@@ r@@ int@@ (m@@ Path@@ , m@@ P@@ r@@ int@@ J@@ ob@@ , c@@ ap@@ abili@@ ties@@ , this@@ :@@ handle@@ J@@ ob@@ Statu@@ s); } }
@java.lang.Override public void on@@ P@@ r@@ int@@ er@@ F@@ ound@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ ) { if (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, ("@@ on@@ P@@ r@@ int@@ er@@ F@@ ound@@ : " + dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ )); if (is@@ D@@ est@@ ro@@ y@@ ed@@ ()) { android.util.Log.@@ w@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ Dis@@ co@@ ver@@ y@@ Session@@ .@@ TAG, "@@ S@@ end@@ ing ign@@ or@@ ing return@@ ; } android.@@ p@@ r@@ int@@ .@@ P@@ r@@ int@@ er@@ Id p@@ r@@ int@@ er@@ Id = dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er.get@@ Id@@ (m@@ P@@ r@@ int@@ Service@@ ); com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er local@@ P@@ r@@ int@@ er = m@@ P@@ r@@ int@@ er@@ s.get@@ Local@@ P@@ r@@ int@@ er@@ (); if (p@@ r@@ int@@ er@@ Id@@ ) -@@ > null@@ ) { com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ er@@ (m@@ P@@ r@@ int@@ Service@@ , this@@ , dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ )); local@@ P@@ r@@ int@@ er.@@ fo@@ und@@ (d@@ is@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ ); if ((m@@ Tr@@ ack@@ ing@@ Id@@ s.@@ contain@@ s(@@ p@@ r@@ int@@ er@@ Id@@ )) local@@ P@@ r@@ int@@ er@@ Id@@ )) local@@ P@@ r@@ int@@ er@@ ; } else { local@@ P@@ r@@ int@@ er = null@@ ; } }
void st@@ op@@ Tr@@ ack@@ ing@@ () { if ((m@@ Tr@@ ack@@ ing@@ Connection@@ ) != null@@ ) { m@@ Tr@@ ack@@ ing@@ Connection@@ .@@ st@@ op@@ (); m@@ Tr@@ ack@@ ing@@ Connec@@ tion = null@@ ; } m@@ Tr@@ ack@@ ing = false@@ ; }
@java.lang.Override public void st@@ op@@ () { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Connection@@ Pro@@ ce@@ d@@ ure@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Connection@@ Pro@@ ce@@ d@@ ure@@ .@@ TAG, ("@@ st@@ op@@ () for " + (m@@ P@@ e@@ er.@@ device@@ Address@@ ))); m@@ Listener@@ s.@@ clear@@ (); m@@ Connection@@ Monitor@@ .@@ st@@ op@@ (); if ((m@@ D@@ et@@ ect@@ D@@ el@@ ay@@ ed@@ ) != null@@ ) m@@ D@@ et@@ ect@@ D@@ el@@ ay@@ ed.@@ st@@ op@@ (); if ((m@@ Channel@@ ) != null@@ ) { m@@ P2p@@ Manager.@@ can@@ cel@@ Con@@ nect@@ (m@@ Channel@@ , null@@ ); m@@ P2p@@ Manager.@@ remove@@ Group@@ (m@@ Channel@@ , null@@ ); m@@ Channe@@ l = null@@ ; } }
@@@ android.@@ annotation.@@ Sup@@ p@@ ress@@ L@@ int@@ ("@@ Inf@@ l@@ ate@@ Param@@ s@@ ") @java.lang.Override protected void on@@ Create@@ (android.os.@@ Bund@@ le s@@ av@@ ed@@ Instance@@ State@@ ) { set@@ View@@ (get@@ Layout@@ Inf@@ lat@@ er@@ ().@@ in@@ f@@ l@@ ate@@ (@@ R.@@ layout.@@ man@@ ual@@ _@@ p@@ r@@ int@@ er@@ _@@ add@@ , null@@ )); set@@ T@@ it@@ le@@ (get@@ Context@@ ().get@@ String(@@ R.@@ str@@ ing.@@ connect@@ ing@@ _@@ to@@ , m@@ P@@ e@@ er.@@ device@@ Name@@ )); set@@ B@@ utton@@ (@@ Al@@ er@@ t@@ Di@@ alo@@ g.@@ B@@ UT@@ T@@ ON@@ _N@@ E@@ G@@ AT@@ I@@ V@@ E, get@@ Context@@ ().get@@ String@@ (android.@@ R.@@ str@@ ing.@@ can@@ cel@@ ), ((@@ com.android.@@ b@@ ip@@ s.@@ ui.@@ On@@ C@@ li@@ ck@@ Listener@@ ) (@@ null@@ ))); super@@ .@@ on@@ Create@@ (s@@ av@@ ed@@ Instance@@ State@@ ); find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ l@@ ab@@ el@@ Host@@ name@@ ).set@@ Vi@@ si@@ b@@ ili@@ ty@@ (@@ View@@ .@@ G@@ ON@@ E); find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ ho@@ st@@ name@@ ).set@@ Vi@@ si@@ b@@ ili@@ ty@@ (@@ View@@ .@@ G@@ ON@@ E); find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ pro@@ g@@ ress@@ ).set@@ Vi@@ si@@ b@@ ili@@ ty@@ (@@ View@@ .@@ V@@ I@@ SI@@ B@@ L@@ E); set@@ On@@ Dis@@ mis@@ s@@ Listener@@ (("@@ set@@ On@@ Dis@@ mis@@ s@@ Listener@@ : d@@ ) -@@ > m@@ Valid@@ at@@ ing.@@ st@@ op@@ ()); m@@ Valid@@ at@@ ing = com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ connect@@ P@@ r@@ int@@ er@@ (m@@ P@@ r@@ int@@ Service@@ , m@@ P@@ e@@ er, this@@ ); }
public static com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able connect@@ P@@ r@@ int@@ er@@ (com.android.@@ b@@ ip@@ s.@@ Bu@@ il@@ t@@ In@@ P@@ r@@ int@@ Ser@@ vice service@@ , android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er, com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Connection@@ List@@ en@@ er list@@ ener@@ ) { return new com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ (@@ service@@ , pe@@ er, list@@ ener@@ ); }
@java.lang.Override public void on@@ P@@ r@@ int@@ er@@ F@@ ound@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TAG, (("@@ on@@ P@@ r@@ int@@ er@@ F@@ ound@@ (@@ " + p@@ r@@ int@@ er@@ ) + "@@ )@@ ")); if ((m@@ Listener@@ ) == null@@ ) return@@ ; java.net.Inet@@ 4@@ Address p@@ r@@ int@@ er@@ Address@@ ; try { p@@ r@@ int@@ er@@ Address = ((@@ java.net.Inet@@ 4@@ Addres@@ s) (@@ java.net.Inet@@ 4@@ Addres@@ s.get@@ By@@ Name@@ (p@@ r@@ int@@ er.@@ path@@ .get@@ Host@@ ()))); } catch (@@ java.net.@@ Un@@ k@@ no@@ wn@@ Host@@ Exception e) { return@@ ; } if ((@@ (m@@ Interface@@ ) != null@@ ) && (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ On@@ Interface@@ (m@@ Interface@@ , p@@ r@@ int@@ er@@ Address@@ ))) { m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y@@ Time@@ out.@@ st@@ op@@ (); m@@ Service@@ .get@@ Cap@@ abili@@ ties@@ Cach@@ e@@ ().@@ request@@ (p@@ r@@ int@@ er, true@@ , ( c@@ ap@@ abili@@ ties@@ ) -@@ > on@@ Cap@@ abili@@ ties@@ (p@@ r@@ int@@ er, c@@ ap@@ abili@@ ties@@ )); } }
public static com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able connect@@ P@@ r@@ int@@ er@@ (com.android.@@ b@@ ip@@ s.@@ Bu@@ il@@ t@@ In@@ P@@ r@@ int@@ Ser@@ vice service@@ , com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er, com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Connection@@ List@@ en@@ er list@@ ener@@ ) { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TAG, (("@@ connect@@ P@@ r@@ int@@ er(@@ " + dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ ) + "@@ )@@ ")); if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ On@@ Connec@@ ted@@ Interface@@ (@@ service@@ , dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ )) { android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er = service@@ .get@@ P2p@@ Monitor@@ ().get@@ Connection@@ ().get@@ P@@ e@@ er@@ (); return new com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ (@@ service@@ , pe@@ er, list@@ ener@@ ); } return new com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able@@ () { final java.lang.String m@@ Address = dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er.@@ path@@ .get@@ Host@@ ().@@ re@@ pla@@ ce@@ All@@ ("@@ -@@ ", "@@ :@@ "); com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able m@@ Con@@ nect@@ O@@ p = null@@ ; com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able m@@ Dis@@ co@@ ver@@ O@@ p = service@@ .get@@ P2p@@ Monitor@@ ().@@ dis@@ co@@ ver@@ (@@ new com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ e@@ er@@ Listener@@ () { @java.lang.Override public void on@@ P@@ e@@ er@@ F@@ ound@@ (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er@@ ) { if (p@@ e@@ er.@@ device@@ Addres@@ s.@@ equal@@ s@@ (m@@ Address@@ )) { m@@ Dis@@ co@@ ver@@ O@@ p.@@ st@@ op@@ (); m@@ Con@@ nect@@ O@@ p = new com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ (@@ service@@ , pe@@ er, list@@ ener@@ ); } } @java.lang.Override public void on@@ P@@ e@@ er@@ Lo@@ st@@ (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er@@ ) { } }); @java.lang.Override public void st@@ op@@ () { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TAG, ("@@ St@@ op@@ p@@ ing connec@@ tion to " + dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ )); if ((m@@ Con@@ nect@@ Op@@ ) != null@@ ) m@@ Con@@ nect@@ O@@ p.@@ st@@ op@@ (); m@@ Dis@@ co@@ ver@@ O@@ p.@@ st@@ op@@ (); } }; }
@java.lang.Override public void on@@ Connection@@ Open@@ (java.lang.String network@@ Interface@@ , android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ Info in@@ fo@@ ) { if ((m@@ Listener@@ ) == null@@ ) return@@ ; try { m@@ Inter@@ face = java.net.@@ Network@@ Interface@@ .get@@ By@@ Name@@ (@@ network@@ Interface@@ ); } catch (@@ java.net.@@ Socket@@ Exception ign@@ or@@ ed@@ ) { } if ((m@@ Interface@@ ) == null@@ ) { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TAG, ("@@ Faile@@ d to g@@ et int@@ er@@ face f@@ ro@@ m " + network@@ Interface@@ )); m@@ List@@ en@@ er.@@ on@@ Connection@@ Comp@@ let@@ e@@ (@@ null@@ ); st@@ op@@ (); return@@ ; } if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TAG, ("@@ Connec@@ ted on net@@ wor@@ k int@@ er@@ face " + (m@@ Interface@@ ))); m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y@@ Time@@ out = m@@ Service.@@ de@@ lay@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TI@@ ME@@ O@@ U@@ T_@@ D@@ IS@@ C@@ O@@ V@@ ER@@ Y@@ , () -@@ > { m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); if ((m@@ Listener@@ ) != null@@ ) m@@ List@@ en@@ er.@@ on@@ Connection@@ Comp@@ let@@ e@@ (@@ null@@ ); st@@ op@@ (); }); m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y = m@@ Service@@ .get@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y@@ ().@@ start@@ (@@ this@@ ); }
@java.lang.Override public void on@@ Connection@@ D@@ el@@ ay@@ ed@@ (@@ boolean de@@ lay@@ ed@@ ) { if ((m@@ Listener@@ ) == null@@ ) return@@ ; m@@ List@@ en@@ er.@@ on@@ Connection@@ D@@ el@@ ay@@ ed@@ (@@ de@@ lay@@ ed@@ ); }
@java.lang.Override public void st@@ op@@ () { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TAG, "@@ st@@ op@@ ()@@ "); if ((m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); if ((m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y@@ Time@@ out@@ ) != null@@ ) m@@ M@@ d@@ n@@ s@@ Dis@@ co@@ ver@@ y@@ Time@@ out.@@ st@@ op@@ (); if ((m@@ Connection@@ ) != null@@ ) m@@ Connection@@ .@@ st@@ op@@ (); m@@ List@@ en@@ er = null@@ ; }
@java.lang.Override public void on@@ Connection@@ Clo@@ sed@@ () { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TAG, ("@@ clo@@ sed@@ /@@ fa@@ ile@@ d connec@@ tion to " + (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Monitor@@ .@@ toString@@ (m@@ P@@ e@@ er@@ )))); if ((m@@ Listener@@ ) != null@@ ) { m@@ List@@ en@@ er.@@ on@@ Connection@@ Comp@@ let@@ e@@ (@@ null@@ ); } st@@ op@@ (); }
private void on@@ Cap@@ abili@@ ties@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er, com.android.@@ b@@ ip@@ s.@@ j@@ n@@ i.@@ Local@@ P@@ r@@ int@@ er@@ Cap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ties@@ ) { if ((m@@ Listener@@ ) == null@@ ) return@@ ; if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ TAG, ((@@ ("@@ P@@ r@@ int@@ er " + p@@ r@@ int@@ er@@ ) + " c@@ ap@@ s@@ =@@ ") + c@@ ap@@ abili@@ ties@@ )); if (c@@ ap@@ abili@@ ti@@ es == null@@ ) { m@@ List@@ en@@ er.@@ on@@ Connection@@ Comp@@ let@@ e@@ (@@ null@@ ); st@@ op@@ (); } else { com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ 2p@@ P@@ r@@ int@@ er = new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ (p@@ r@@ int@@ er.@@ u@@ id, p@@ r@@ int@@ er.@@ name@@ , com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ to@@ Path@@ (m@@ P@@ e@@ er@@ ), p@@ r@@ int@@ er.@@ loc@@ ation@@ ); m@@ List@@ en@@ er.@@ on@@ Connection@@ Comp@@ let@@ e@@ (p@@ 2p@@ P@@ r@@ int@@ er@@ ); } }
private void update@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s() { int s@@ av@@ ed@@ Coun@@ t = m@@ P@@ r@@ int@@ Service@@ .get@@ Dis@@ co@@ ver@@ y@@ ().get@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ ().@@ size@@ (); if (s@@ av@@ ed@@ Coun@@ t == 0) { if ((@@ get@@ Pre@@ ference@@ S@@ creen@@ ().@@ find@@ Pre@@ ference@@ (m@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ C@@ ate@@ gor@@ y@@ .get@@ Key@@ ())) != null@@ ) { get@@ Pre@@ ference@@ S@@ creen@@ ().@@ remove@@ Pre@@ ference@@ (m@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ C@@ ate@@ gor@@ y@@ ); } } else { if ((@@ get@@ Pre@@ ference@@ S@@ creen@@ ().@@ find@@ Pre@@ ference@@ (m@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ C@@ ate@@ gor@@ y@@ .get@@ Key@@ ())) == null@@ ) { get@@ Pre@@ ference@@ S@@ creen@@ ().@@ add@@ Pre@@ ference@@ (m@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ C@@ ate@@ gor@@ y@@ ); } mS@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ C@@ ate@@ gor@@ y.@@ remove@@ All@@ (); m@@ P@@ r@@ int@@ Service@@ .get@@ Dis@@ co@@ ver@@ y@@ ().get@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ ()@@ .@@ for@@ Each@@ (@@ ( p@@ r@@ int@@ er@@ ) -@@ > { if (com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ TAG, ("@@ Add@@ ing s@@ a@@ ve@@ d p@@ r@@ int@@ er " + p@@ r@@ int@@ er@@ )); com.android.@@ b@@ ip@@ s.@@ ui.@@ P@@ r@@ int@@ er@@ Pre@@ feren@@ ce pre@@ f = new com.android.@@ b@@ ip@@ s.@@ ui.@@ P@@ r@@ int@@ er@@ Pre@@ ference@@ (get@@ Context@@ (), m@@ P@@ r@@ int@@ Service@@ , p@@ r@@ int@@ er, false@@ ); pre@@ f@@ .set@@ Or@@ der@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ OR@@ D@@ ER@@ _S@@ AV@@ E@@ D@@ ); pre@@ f@@ .set@@ On@@ Pre@@ ference@@ C@@ li@@ ck@@ Listener@@ (@@ ( pre@@ ference@@ ) -@@ > { sho@@ w@@ Remo@@ val@@ Di@@ alo@@ g@@ (p@@ r@@ int@@ er@@ ); return true@@ ; } }); }
@java.lang.Override public void on@@ Res@@ um@@ e@@ () { super@@ .@@ on@@ Res@@ um@@ e@@ (); get@@ Activity@@ ().@@ set@@ T@@ it@@ le@@ (@@ R.@@ str@@ ing.@@ ti@@ t@@ le@@ _@@ ac@@ tivity@@ _@@ add@@ _@@ p@@ r@@ int@@ er@@ ); if (com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ TAG, "@@ on@@ Res@@ um@@ e@@ "); get@@ Context@@ ().@@ b@@ ind@@ Service@@ (@@ new android.content.@@ Intent@@ (get@@ Context@@ (), com.android.@@ b@@ ip@@ s.@@ Bu@@ il@@ t@@ In@@ P@@ r@@ int@@ Service@@ .@@ class@@ ), this@@ , Context.@@ B@@ IN@@ D_@@ A@@ UT@@ O@@ _C@@ RE@@ A@@ TE@@ ); }
private void sho@@ w@@ Remo@@ val@@ Di@@ alo@@ g@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { new android.@@ app.@@ Al@@ er@@ t@@ Di@@ alo@@ g.@@ Build@@ er(@@ get@@ Context@@ ()@@ ).set@@ T@@ it@@ le@@ (p@@ r@@ int@@ er.@@ name@@ ).set@@ Message@@ (m@@ P@@ r@@ int@@ Service@@ .get@@ Des@@ cription@@ (p@@ r@@ int@@ er@@ )@@ ).set@@ Po@@ si@@ tive@@ B@@ utton@@ (android.@@ R.@@ str@@ ing.@@ can@@ cel@@ , null@@ ).set@@ N@@ e@@ u@@ tr@@ al@@ B@@ utton@@ (@@ R.@@ string@@ .@@ for@@ get@@ , ("@@ dis@@ co@@ ver@@ y di@@ alo@@ g@@ , wh@@ i@@ ch@@ ) -@@ > { m@@ P@@ r@@ int@@ Service@@ .get@@ Dis@@ co@@ ver@@ y@@ ().@@ remove@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ (p@@ r@@ int@@ er.@@ path@@ ); update@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s(); }
@java.lang.Override public void on@@ P@@ au@@ se@@ () { super@@ .@@ on@@ P@@ au@@ se@@ (); if (com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ P@@ r@@ int@@ er@@ s@@ F@@ r@@ ag@@ m@@ ent.@@ TAG, "@@ on@@ P@@ au@@ se@@ "); get@@ Context@@ ().@@ un@@ b@@ ind@@ Service@@ (@@ this@@ ); }
@java.lang.Override public void remove@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ (android.net.@@ Ur@@ i p@@ r@@ int@@ er@@ Path@@ ) { mS@@ av@@ ed@@ P@@ r@@ int@@ er@@ s.@@ str@@ eam@@ ().@@ fil@@ ter@@ (("@@ p@@ r@@ int@@ er@@ : p@@ r@@ int@@ er@@ ) -@@ > p@@ r@@ int@@ er.@@ path@@ .@@ equals(@@ p@@ r@@ int@@ er@@ Path@@ )).@@ find@@ Fi@@ rst@@ ()@@ .@@ if@@ P@@ res@@ ent@@ (@@ ( p@@ r@@ int@@ er@@ ) -@@ > { mS@@ av@@ ed@@ P@@ r@@ int@@ er@@ s.@@ remove@@ (p@@ r@@ int@@ er@@ ); s@@ a@@ ve@@ (); }); }
@java.lang.Override public void on@@ P@@ e@@ er@@ F@@ ound@@ (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ De@@ vice pe@@ er@@ ) { com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er = com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ to@@ P@@ r@@ int@@ er@@ (p@@ e@@ er@@ ); if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ P2p@@ Dis@@ co@@ ver@@ y.@@ TAG, ("@@ on@@ P@@ e@@ er@@ F@@ o@@ un@@ d " + p@@ r@@ int@@ er@@ )); get@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ s@@ ()@@ .@@ for@@ Each@@ (@@ ( s@@ av@@ ed@@ ) -@@ > { if (s@@ av@@ ed.@@ path@@ .@@ equals(@@ p@@ r@@ int@@ er.@@ path@@ )) { p@@ r@@ int@@ er.@@ path@@ )) { p@@ r@@ int@@ er@@ F@@ ound@@ (s@@ av@@ ed@@ ); } }); }
@java.lang.Override public void on@@ P@@ r@@ int@@ er@@ F@@ ound@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { if ((m@@ State@@ ) != (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ STATE_@@ D@@ IS@@ C@@ O@@ V@@ ER@@ Y@@ )) return@@ ; if (!(@@ p@@ r@@ int@@ er.get@@ Id@@ (m@@ P@@ r@@ int@@ Service@@ ).@@ equal@@ s@@ (m@@ P@@ r@@ int@@ J@@ ob@@ .get@@ Info@@ ().get@@ P@@ r@@ int@@ er@@ Id@@ ()))) return@@ ; if (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ o@@ b.@@ TAG, ((@@ ("@@ Dis@@ co@@ ver@@ y " + (p@@ r@@ int@@ er.@@ name@@ )) + " state@@ =@@ ") + (m@@ State@@ ))); if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ P2p@@ (p@@ r@@ int@@ er@@ ))@@ { m@@ Connec@@ tion = com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ connect@@ P@@ r@@ int@@ er@@ (m@@ P@@ r@@ int@@ er, this@@ ); return@@ ; } if ((@@ com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Utils.@@ is@@ On@@ Connec@@ ted@@ Interface@@ (m@@ P@@ r@@ int@@ Service@@ , p@@ r@@ int@@ er@@ )) && ((m@@ Connection@@ ) == null@@ )) { m@@ Connec@@ tion = com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ r@@ int@@ er@@ Connection@@ .@@ connect@@ P@@ r@@ int@@ er@@ (m@@ P@@ r@@ int@@ Service@@ , p@@ r@@ int@@ er, this@@ ); } if ((m@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) m@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); m@@ State = com.android.@@ b@@ ip@@ s.@@ Local@@ P@@ r@@ int@@ J@@ ob@@ .@@ STATE_@@ C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S@@ ; m@@ Path = p@@ r@@ int@@ er.@@ path@@ ; m@@ P@@ r@@ int@@ Service@@ .get@@ Cap@@ abili@@ ties@@ Cach@@ e@@ ().@@ request@@ (p@@ r@@ int@@ er, true@@ , this@@ :@@ handle@@ Cap@@ abili@@ ties@@ ); }
private java.util.List<@@ com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ > load@@ () { java.util.List<@@ com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er@@ > p@@ r@@ int@@ er@@ s = new java.util.ArrayList<@@ >(); if (!(m@@ Cach@@ e@@ File@@ .@@ exist@@ s@@ ())) return p@@ r@@ int@@ er@@ s; try (android.@@ util.@@ J@@ s@@ on@@ Read@@ er read@@ er = new android.util.@@ J@@ s@@ on@@ Read@@ er@@ (@@ new java.io.@@ Buffer@@ ed@@ Read@@ er@@ (@@ new java.io.File@@ Read@@ er@@ (m@@ Cach@@ e@@ File@@ )@@ ))) { read@@ er.@@ b@@ e@@ gin@@ Object@@ (); while (@@ read@@ er.@@ has@@ Next@@ ()) { java.lang.String item@@ Name = read@@ er.@@ next@@ Name@@ (); if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ S@@ av@@ ed@@ Dis@@ co@@ ver@@ y.@@ P@@ R@@ IN@@ T@@ ER_@@ L@@ I@@ ST_@@ N@@ AM@@ E@@ S@@ .@@ contain@@ s(@@ item@@ Name@@ )) { read@@ er.@@ b@@ e@@ gin@@ Array@@ (); while (@@ read@@ er.@@ has@@ Next@@ ()) { p@@ r@@ int@@ er@@ s.@@ add@@ (@@ new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er(@@ read@@ er@@ )); } read@@ er.@@ end@@ Array@@ (); } } read@@ er.@@ end@@ Object@@ (); } catch (java.lang.@@ Illegal@@ State@@ Exception | java.io.IOException ign@@ or@@ ed@@ ) { android.util.Log.@@ w@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ S@@ av@@ ed@@ Dis@@ co@@ ver@@ y.@@ TAG, ("@@ Er@@ ror while load@@ ing f@@ ro@@ m " + (m@@ Cach@@ e@@ File@@ )), ign@@ or@@ ed@@ ); } if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ S@@ av@@ ed@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ S@@ av@@ ed@@ Dis@@ co@@ ver@@ y.@@ TAG, ((@@ ("@@ Load@@ ed size@@ =@@ " + (p@@ r@@ int@@ er@@ s.@@ size@@ ())) + " f@@ ro@@ m ") + (m@@ Cach@@ e@@ File@@ ))); return p@@ r@@ int@@ er@@ s; }
@java.lang.Override void on@@ St@@ op@@ () { if ((m@@ D@@ el@@ ay@@ ed@@ Start@@ ) != null@@ ) m@@ D@@ el@@ ay@@ ed@@ St@@ ar@@ t.@@ st@@ op@@ (); if ((m@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) m@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); m@@ P@@ end@@ ing.@@ clear@@ (); }
public com.android.@@ b@@ ip@@ s.@@ util.@@ St@@ op@@ p@@ able dis@@ co@@ ver@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ P@@ e@@ er@@ List@@ en@@ er list@@ ener@@ ) { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Monitor@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Monitor@@ .@@ TAG, "@@ dis@@ co@@ ver@@ ()@@ "); if ((m@@ P2p@@ Manager@@ ) == null@@ ) { return com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Monitor@@ .@@ S@@ TO@@ P@@ P@@ E@@ D@@ ; } if ((m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ ) == null@@ ) { m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y = new com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Dis@@ co@@ ver@@ y@@ Pro@@ ce@@ d@@ ure@@ (m@@ Service@@ , m@@ P2p@@ Manager@@ , list@@ ener@@ ); } else { m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y.@@ add@@ Listener@@ (@@ list@@ ener@@ ); } return () -@@ > { if (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Monitor@@ .@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ p@@ 2@@ p.@@ P2p@@ Monitor@@ .@@ TAG, "@@ dis@@ co@@ ver.@@ st@@ op@@ ()@@ "); if ((m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ ) != null@@ ) { m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y.@@ remove@@ Listener@@ (@@ list@@ ener@@ ); if (m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y@@ .get@@ Listener@@ s@@ ().@@ isEmpty@@ ()) { m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y.@@ st@@ op@@ (); m@@ P@@ e@@ er@@ Dis@@ co@@ ver@@ y = null@@ ; } } }; }
private boolean is@@ Connec@@ ted@@ To@@ P@@ e@@ er@@ (android.net.@@ w@@ if@@ i.@@ p@@ 2@@ p.@@ W@@ if@@ i@@ P2p@@ G@@ ro@@ u@@ p g@@ roup@@ ) { W@@ if@@ i@@ P2p@@ De@@ vice o@@ w@@ ne@@ r = g@@ roup@@ .get@@ O@@ w@@ ner@@ (); if ((@@ o@@ w@@ ne@@ r != null@@ ) && (@@ o@@ wn@@ er.@@ device@@ Addres@@ s.@@ equal@@ s@@ (m@@ P@@ e@@ er.@@ device@@ Address@@ ))) return true@@ ; for (@@ W@@ if@@ i@@ P2p@@ De@@ vice c@@ li@@ ent : g@@ roup@@ .get@@ Client@@ List@@ ()) { if (c@@ li@@ ent.@@ device@@ Addres@@ s.@@ equal@@ s@@ (m@@ P@@ e@@ er.@@ device@@ Address@@ )) return true@@ ; } return false@@ ; }
private com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er find@@ (android.net.@@ Ur@@ i p@@ r@@ int@@ er@@ U@@ ri@@ ) { return mS@@ av@@ ed@@ P@@ r@@ int@@ er@@ s.@@ str@@ eam@@ ().@@ fil@@ ter@@ (("@@ U@@ ri@@ : p@@ r@@ int@@ er
boolean add@@ S@@ av@@ ed@@ P@@ r@@ int@@ er@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er p@@ r@@ int@@ er@@ ) { android.net.@@ Ur@@ i p@@ r@@ int@@ er@@ Ur@@ i = p@@ r@@ int@@ er.get@@ U@@ ri@@ (); com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Dis@@ co@@ ver@@ ed@@ P@@ r@@ int@@ er ol@@ d = find@@ (p@@ r@@ int@@ er@@ U@@ ri@@ ); if (@@ ol@@ d != null@@ ) { if (p@@ r@@ int@@ er.@@ equals(@@ old@@ )) return false@@ ; mS@@ av@@ ed@@ P@@ r@@ int@@ er@@ s.@@ remove@@ (@@ old@@ ); } mS@@ av@@ ed@@ P@@ r@@ int@@ er@@ s.@@ add(@@ 0, p@@ r@@ int@@ er@@ ); s@@ a@@ ve@@ (); return true@@ ; }
private void app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (android.os.@@ Par@@ cel@@ File@@ Descriptor p@@ f@@ d@@ , int di@@ re@@ c@@ tion@@ , android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m tr@@ an@@ s@@ for@@ m@@ ) { try { m@@ Service.@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (p@@ f@@ d@@ , di@@ re@@ c@@ tion@@ , tr@@ an@@ s@@ for@@ m@@ .get@@ Resource@@ Id@@ ()); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
private void check@@ I@@ p@@ Sec@@ Config@@ (android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g config@@ ) { com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); switch (@@ config.@@ get@@ En@@ c@@ ap@@ Type@@ ()) { case android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ EN@@ C@@ AP@@ _N@@ ON@@ E : break@@ ; case android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ EN@@ C@@ AP@@ _@@ E@@ S@@ P@@ IN@@ U@@ D@@ P : case android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ EN@@ C@@ AP@@ _@@ E@@ S@@ P@@ IN@@ U@@ D@@ P@@ _N@@ ON@@ _@@ I@@ K@@ E : user@@ Record@@ .@@ m@@ En@@ c@@ ap@@ Socket@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ config.@@ get@@ En@@ c@@ ap@@ Socket@@ Resource@@ Id@@ ()); int por@@ t = config.@@ get@@ En@@ c@@ ap@@ Remote@@ P@@ ort@@ (); if ((@@ por@@ t <@@ = 0) || (@@ por@@ t > 6@@ 5@@ 3@@ 5@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ In@@ va@@ li@@ d remo@@ t@@ e U@@ D@@ P port@@ : " + port@@ )); } break@@ ; default : throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ In@@ va@@ li@@ d En@@ c@@ a@@ p Type@@ : " + (@@ config.@@ get@@ En@@ c@@ ap@@ Type@@ ()))); } android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = config.@@ get@@ En@@ c@@ r@@ y@@ ption@@ (); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = config.@@ get@@ Au@@ th@@ enti@@ cation@@ (); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ enti@@ cat@@ ed@@ En@@ c@@ r@@ y@@ pti@@ on = config.@@ get@@ Au@@ th@@ enti@@ cat@@ ed@@ En@@ c@@ r@@ y@@ ption@@ (); if (((@@ au@@ th@@ enti@@ cat@@ ed@@ En@@ c@@ r@@ y@@ pti@@ on == null@@ ) && (c@@ ryp@@ t == null@@ )) && (@@ a@@ ut@@ h == null@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ In@@ va@@ li@@ d En@@ c@@ r@@ y@@ pti@@ on or Au@@ th@@ enti@@ c@@ ation al@@ gorithm@@ s s@@ pe@@ c@@ if@@ i@@ ed } else if ((@@ au@@ th@@ enti@@ cat@@ ed@@ En@@ c@@ r@@ y@@ pti@@ on != null@@ ) && ((@@ a@@ ut@@ h != null@@ ) || (c@@ ryp@@ t != null@@ ))) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ In@@ va@@ li@@ d En@@ c@@ r@@ y@@ pti@@ on is m@@ ut@@ u@@ ally ex@@ c@@ lu@@ si@@ v@@ e wit@@ h oth@@ er " + " Au@@ th@@ enti@@ c@@ r@@ y@@ pti@@ on al@@ gorithm@@ s }@@ ")); com.android.server.@@ I@@ p@@ Sec@@ Service@@ .@@ S@@ pi@@ Re@@ cor@@ d s@@ pi@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ config.@@ get@@ S@@ pi@@ Resource@@ Id@@ ()); if ((@@ android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ config.@@ get@@ D@@ est@@ in@@ ation@@ Address@@ ())) { config.@@ set@@ D@@ est@@ in@@ ation@@ Addres@@ s(@@ s.get@@ D@@ est@@ in@@ ation@@ Address@@ ()); } if (!(@@ config.@@ get@@ D@@ est@@ in@@ ation@@ Address@@ ().@@ equals(@@ s.get@@ D@@ est@@ in@@ ation@@ Address@@ ())) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ In@@ va@@ li@@ d remo@@ t@@ e add@@ ress@@ es@@ . remo@@ t@@ e add@@ ress@@ es@@ . I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ "); } switch (@@ config.@@ get@@ Mode@@ ()) { case android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ M@@ OD@@ E_@@ TR@@ AN@@ S@@ P@@ OR@@ T : case android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ M@@ OD@@ E_@@ N@@ E@@ L : break@@ ; default : break@@ ; } }
private static android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m build@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ (android.@@ content.@@ Context m@@ Context@@ , android.net.@@ I@@ p@@ Sec@@ Manager.@@ Sec@@ ur@@ ity@@ Parameter@@ In@@ dex s, android.net.@@ I@@ p@@ Sec@@ Manager.@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ S@@ ock@@ et enc@@ ap@@ Socket@@ , java.net.Inet@@ Address remo@@ te@@ Add@@ r@@ ) throw@@ s java.lang.Exception { java.lang.String local@@ Add@@ r = (@@ remo@@ te@@ Add@@ r instanceof java.net.Inet@@ 4@@ Addres@@ s) ? android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K : android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ; return new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ Builder@@ (m@@ Context@@ ).set@@ S@@ pi@@ (s@@ p@@ i@@ ).set@@ En@@ c@@ r@@ y@@ ption@@ (@@ new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ))@@ ).set@@ Au@@ th@@ enti@@ cation@@ (@@ new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ , ((@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ , ((@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ .@@ length) * 4@@ ))@@ ).set@@ I@@ p@@ v@@ 4@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ (@@ enc@@ ap@@ Socket@@ , enc@@ ap@@ Socket@@ .get@@ P@@ ort@@ ()).@@ build@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (@@ local@@ Add@@ r@@ )); }
public void test@@ Create@@ Tr@@ an@@ s@@ for@@ m@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address local@@ Add@@ r = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); android.net.@@ I@@ p@@ Sec@@ Manager.@@ Sec@@ ur@@ ity@@ Parameter@@ In@@ dex dex = m@@ IS@@ M@@ .@@ al@@ loc@@ ate@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (@@ local@@ Add@@ r@@ ); android.@@ net@@ .@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ U@@ se@@ r tr@@ an@@ s@@ for@@ m = new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ Builder@@ (m@@ Context@@ ).set@@ S@@ pi@@ (s@@ pi@@ ).set@@ En@@ c@@ r@@ y@@ ption@@ (@@ new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ )@@ ).set@@ Au@@ th@@ enti@@ cation@@ (@@ new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ , ((@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ .@@ length) * 8@@ ))@@ ).@@ build@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ local@@ Add@@ r@@ ); java.net.@@ Dat@@ ag@@ ram@@ S@@ ock@@ et local@@ S@@ ock@@ et = new java.net.@@ Dat@@ ag@@ ram@@ Socket@@ (@@ 0); int local@@ P@@ or@@ t = local@@ Socket@@ .get@@ Local@@ P@@ ort@@ (); local@@ Socket@@ .set@@ S@@ o@@ Time@@ out@@ (@@ 5@@ 00@@ ); android.os.@@ Par@@ cel@@ File@@ Descriptor p@@ in = android.os.@@ Par@@ cel@@ File@@ Des@@ cript@@ or.@@ f@@ rom@@ Dat@@ ag@@ ram@@ Socket@@ (@@ local@@ Socket@@ ); java.io.FileDescriptor u@@ d@@ p@@ S@@ ock@@ et = p@@ in@@ .get@@ File@@ Des@@ criptor@@ (); m@@ IS@@ M@@ .@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ u@@ d@@ p@@ Socket@@ , I@@ p@@ Sec@@ Manager.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ , tr@@ an@@ s@@ for@@ m@@ ); m@@ IS@@ M@@ .@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ u@@ d@@ p@@ Socket@@ , I@@ p@@ Sec@@ Manager@@ .@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ , tr@@ an@@ s@@ for@@ m@@ ); byte@@ [] dat@@ a = new java.lang.String@@ ("@@ Test t@@ est dat@@ a e@@ ver@@ !@@ "@@ )@@ .get@@ Bytes@@ ("@@ UT@@ F@@ -@@ 8@@ "); byte@@ [] in = new byte@@ [@@ data@@ .@@ length@@ ]; android.system.@@ O@@ s.@@ send@@ to@@ (@@ u@@ d@@ p@@ Socket@@ , data@@ , 0, data@@ .@@ length@@ , 0, local@@ Add@@ r@@ , local@@ P@@ ort@@ ); android.system.@@ O@@ s.@@ read@@ (@@ u@@ d@@ p@@ Socket@@ , in@@ , 0, in@@ .@@ length); assert@@ True@@ ("@@ S@@ ho@@ ul@@ d dat@@ a d@@ id not match@@ .@@ ", java.util.Arrays.@@ equals(@@ data@@ , in@@ )); m@@ IS@@ M@@ .@@ remove@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ s@@ for@@ m@@ s@@ (@@ u@@ d@@ p@@ Socket@@ , tr@@ an@@ s@@ for@@ m@@ ); android.system.@@ O@@ s.@@ close@@ (@@ u@@ d@@ p@@ Socket@@ ); tr@@ an@@ s@@ for@@ m.@@ close(); }
@org.junit.Test public void test@@ Create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ A@@ e@@ ad@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g ip@@ Sec@@ Con@@ fi@@ g = new android.net.@@ I@@ p@@ Sec@@ Config@@ (); add@@ Default@@ S@@ p@@ is@@ And@@ Remote@@ Add@@ r@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); ip@@ Sec@@ Config.@@ set@@ Au@@ th@@ enti@@ cat@@ ed@@ En@@ c@@ r@@ y@@ ption@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ E@@ A@@ D_@@ AL@@ G@@ O@@ ); ip@@ Sec@@ Config.@@ set@@ Au@@ th@@ enti@@ cat@@ ed@@ En@@ c@@ r@@ y@@ ption@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ E@@ A@@ D_@@ AL@@ G@@ O@@ ); android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Respon@@ se create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ ip@@ Sec@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); assert@@ Equal@@ s(@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ O@@ K@@ , create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ statu@@ s); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), an@@ y@@ Int@@ (), an@@ y@@ String@@ (), an@@ y@@ Long@@ (), an@@ y@@ Long@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test@@ .@@ TEST_@@ S@@ P@@ I@@ ), e@@ q@@ ("@@ "), e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ (0@@ ), e@@ q@@ ("@@ "), e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ (0@@ ), e@@ q@@ (@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ ), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ E@@ A@@ D_@@ KE@@ Y@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); }
public void check@@ Tr@@ an@@ s@@ for@@ m@@ (@@ int pro@@ to@@ col@@ , java.lang.String local@@ Addres@@ s, android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t@@ , android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ , boolean do@@ U@@ d@@ p@@ En@@ c@@ ap@@ , int send@@ Count@@ , boolean u@@ se@@ Java@@ Socket@@ s) throw@@ s java.lang.Exception { android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er.@@ init@@ Stat@@ s@@ Check@@ er@@ (); java.net.Inet@@ Address loc@@ al = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (@@ local@@ Addres@@ s); try (android.net.@@ I@@ p@@ Sec@@ Manager.@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ S@@ ock@@ et enc@@ ap@@ S@@ ock@@ et = m@@ IS@@ M@@ .@@ open@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ Socket@@ ()@@ ;@@ android.net.@@ I@@ p@@ Sec@@ Manager.@@ Sec@@ ur@@ ity@@ Parameter@@ In@@ dex = m@@ IS@@ M@@ .@@ al@@ loc@@ ate@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (@@ local@@ )) { android.@@ net@@ .@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ .@@ for@@ m@@ Builder tr@@ an@@ s@@ for@@ m@@ Builder = new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ Builder@@ (m@@ Context@@ ).set@@ S@@ pi@@ (s@@ pi@@ ).set@@ En@@ c@@ r@@ y@@ ption@@ (c@@ ryp@@ t@@ ).set@@ Au@@ th@@ enti@@ cation@@ (@@ au@@ th@@ ); if (@@ do@@ U@@ d@@ p@@ En@@ c@@ ap@@ ) { tr@@ an@@ s@@ for@@ m@@ Builder = tr@@ an@@ s@@ for@@ m@@ Builder.@@ set@@ I@@ p@@ v@@ 4@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ (@@ enc@@ ap@@ Socket@@ , enc@@ ap@@ Socket@@ .get@@ P@@ ort@@ ()); } int ip@@ H@@ d@@ r@@ Le@@ n = (@@ loc@@ al@@ loc@@ al@@ ) instanceof java.net.Inet@@ 6@@ Addres@@ s) ? android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ 6@@ _@@ H@@ D@@ R@@ LE@@ N : android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ 4@@ _@@ H@@ D@@ R@@ L@@ EN@@ ; int trans@@ port@@ H@@ d@@ r@@ Le@@ n = 0; int u@@ d@@ p@@ En@@ c@@ ap@@ Le@@ n = (@@ do@@ U@@ d@@ p@@ En@@ c@@ ap@@ ) ? android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ U@@ D@@ P@@ _@@ H@@ D@@ R@@ LE@@ N : 0; try (android.@@ net@@ .@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m = tr@@ an@@ s@@ for@@ m@@ Builder.@@ build@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (@@ local@@ Address@@ ))) { if (pro@@ to@@ co@@ l == (@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ )) { trans@@ port@@ H@@ d@@ r@@ Le@@ n = android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ T@@ C@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ _@@ WI@@ TH@@ _@@ O@@ P@@ TION@@ S@@ ; check@@ T@@ c@@ p@@ (@@ tr@@ an@@ s@@ for@@ m@@ , local@@ , local@@ , send@@ Count@@ , u@@ se@@ Java@@ Socket@@ s); } else if (pro@@ to@@ co@@ l == (@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ )) { trans@@ port@@ H@@ d@@ r@@ Le@@ n = android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ U@@ D@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ ; check@@ Un@@ connec@@ ted@@ U@@ d@@ p@@ (@@ tr@@ an@@ s@@ for@@ m@@ , local@@ , local@@ , send@@ Count@@ , local@@ Addres@@ s); } else { pro@@ to@@ col@@ , "@@ In@@ va@@ l trans@@ port@@ H@@ d@@ p@@ Sec@@ ur@@ ity@@ "); } } } } }
public android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ Builder set@@ En@@ c@@ r@@ y@@ ption@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m al@@ go@@ ) { m@@ Config.@@ set@@ En@@ c@@ r@@ y@@ ption@@ (@@ al@@ go@@ ); return this@@ ; }
public android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m build@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ java.net.Inet@@ Address source@@ Address@@ ) throw@@ s I@@ p@@ Sec@@ Manager.@@ Resource@@ Un@@ ava@@ il@@ able@@ Exception, I@@ p@@ Sec@@ Manager.@@ S@@ pi@@ Un@@ ava@@ il@@ able@@ Exception, java.io.IOException { m@@ Config.@@ set@@ Mode@@ (android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ M@@ OD@@ E_@@ TR@@ AN@@ S@@ P@@ O@@ RT@@ ); m@@ Config@@ .set@@ Source@@ Address@@ (@@ source@@ Address@@ .get@@ Host@@ Address@@ ()); return new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ (m@@ Context@@ , m@@ Config@@ ).@@ ac@@ tiv@@ ate@@ (); }
public android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ Builder set@@ Au@@ th@@ enti@@ cation@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m al@@ go@@ ) { m@@ Config.@@ set@@ Au@@ th@@ enti@@ cation@@ (@@ al@@ go@@ ); return this@@ ; }
public com.android.@@ im@@ s@@ .@@ int@@ er@@ n@@ al.@@ I@@ Im@@ s@@ Reg@@ is@@ tr@@ ation get@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ (@@ int s@@ lo@@ t@@ Id, int f@@ e@@ ature@@ ) throw@@ s android.os.@@ Remote@@ Exception { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ Im@@ s@@ Service@@ Control@@ ler@@ (s@@ lo@@ t@@ Id, f@@ e@@ ature@@ ); if (@@ cont@@ ro@@ lle@@ r != null@@ ) { return cont@@ ro@@ l@@ l@@ er.get@@ Reg@@ is@@ tr@@ ation@@ (s@@ lo@@ t@@ Id@@ ); } return null@@ ; }
@@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test @org.junit.Test public void test@@ Reg@@ is@@ tr@@ ation@@ Callback@@ S@@ end@@ Current@@ State@@ () throw@@ s android.os.@@ Remote@@ Exception { android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Call@@ b@@ ac@@ k m@@ Callback@@ 2 = s@@ p@@ y@@ (@@ new android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Callback@@ ()); m@@ Reg@@ is@@ tr@@ ation.@@ on@@ Reg@@ ister@@ ed@@ (@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ RE@@ G@@ IS@@ TR@@ AT@@ ION@@ _@@ TE@@ CH@@ _@@ L@@ TE@@ ); m@@ Reg@@ B@@ ind@@ er.@@ add@@ Reg@@ is@@ tr@@ ation@@ Callback@@ (m@@ Callback@@ 2@@ ); ve@@ r@@ if@@ y@@ (m@@ Callback@@ 2@@ ).@@ on@@ Reg@@ ister@@ ed@@ (@@ e@@ q@@ (@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ RE@@ G@@ IS@@ TR@@ AT@@ ION@@ _@@ TE@@ CH@@ _@@ L@@ TE@@ )); }
public void add@@ Reg@@ is@@ tr@@ ation@@ Callback@@ (android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Call@@ b@@ ac@@ k c@@ b@@ ) throw@@ s com.android.@@ im@@ s.@@ Im@@ s@@ Exception { if (c@@ b == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ list@@ en@@ er can@@ 't b@@ e null@@ "); } synchronized@@ (m@@ Has@@ Reg@@ ister@@ ed@@ Lock) { if (!(m@@ Has@@ Reg@@ ister@@ ed@@ For@@ Prox@@ y@@ )) { try { check@@ And@@ Throw@@ Exception@@ I@@ f@@ Service@@ Un@@ ava@@ il@@ able@@ (); m@@ Im@@ s@@ Service@@ Prox@@ y@@ .get@@ Reg@@ is@@ tr@@ ation@@ ().@@ add@@ Reg@@ is@@ tr@@ ation@@ Callback@@ (m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ .get@@ B@@ in@@ der@@ ()); com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ ("@@ Reg@@ is@@ tr@@ ation@@ Call@@ b@@ ac@@ k register@@ ed.@@ "); m@@ Has@@ Reg@@ ister@@ ed@@ For@@ Prox@@ y = true@@ ; } catch (android.os.@@ Remote@@ Exception e) { throw new com.android.@@ im@@ s.@@ Im@@ s@@ Exception@@ ("@@ add@@ Reg@@ is@@ tr@@ ation@@ Listener@@ ()@@ ", e@@ , Im@@ s@@ Re@@ as@@ on@@ Info.@@ C@@ OD@@ E_@@ LO@@ C@@ AL@@ _@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E_@@ D@@ O@@ W@@ N@@ ); } } synchronized@@ (m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s) { com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ (("@@ Loc@@ al reg@@ is@@ tr@@ ation call@@ b@@ ac@@ k add@@ ed@@ : " + c@@ b@@ )); m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s.@@ add@@ (c@@ b@@ ); } }
@@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test @org.junit.Test public void test@@ Reg@@ is@@ tr@@ ation@@ Callback@@ S@@ end@@ Current@@ State@@ Dis@@ connec@@ ted@@ () throw@@ s android.os.@@ Remote@@ Exception { android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Call@@ b@@ ac@@ k m@@ Callback@@ 2 = s@@ p@@ y@@ (@@ new android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Callback@@ ()); com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info in@@ f@@ o = new com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info.@@ C@@ OD@@ E_@@ LO@@ C@@ AL@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ _@@ L@@ T@@ E_@@ C@@ O@@ V@@ ER@@ A@@ G@@ E, 0); m@@ Reg@@ is@@ tr@@ ation.@@ on@@ D@@ er@@ eg@@ ister@@ ed@@ (in@@ fo@@ ); m@@ Reg@@ B@@ ind@@ er.@@ add@@ Reg@@ is@@ tr@@ ation@@ Callback@@ (m@@ Callback@@ 2@@ ); ve@@ r@@ if@@ y@@ (m@@ Callback@@ ).@@ on@@ D@@ er@@ eg@@ ister@@ ed@@ (@@ e@@ q@@ (in@@ fo@@ )); ve@@ r@@ if@@ y@@ (m@@ Callback@@ 2@@ ).@@ on@@ D@@ er@@ eg@@ ister@@ ed@@ (@@ e@@ q@@ (in@@ fo@@ )); }
@@@ android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ T@@ ec@@ h private int get@@ Connection@@ Type@@ () { synchronized@@ (m@@ Lock) { return m@@ Connection@@ Type@@ ; } }
private void update@@ New@@ Callback@@ With@@ State@@ (@@ int state@@ ) throw@@ s android.os.@@ Remote@@ Exception { int state@@ ; com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info dis@@ connect@@ Info@@ ; synchronized@@ (m@@ Lock) { st@@ ate = m@@ Reg@@ is@@ tr@@ ation@@ State@@ ; dis@@ connect@@ Info = m@@ L@@ ast@@ Dis@@ connect@@ C@@ au@@ se@@ ; } switch (@@ state@@ ) { case android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ RE@@ G@@ IS@@ TR@@ AT@@ ION@@ _@@ STATE_@@ NO@@ T_@@ RE@@ G@@ IS@@ TER@@ E@@ D : { c.@@ on@@ D@@ er@@ eg@@ ister@@ ed@@ (d@@ is@@ connect@@ Info@@ ); break@@ ; } case android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ RE@@ G@@ IS@@ TR@@ AT@@ ION@@ _@@ STATE_@@ RE@@ G@@ IS@@ TER@@ IN@@ G : { c.@@ on@@ Reg@@ ister@@ ing@@ (get@@ Connection@@ Type@@ ()); break@@ ; } case android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ RE@@ G@@ IS@@ TR@@ AT@@ ION@@ _@@ STATE_@@ RE@@ G@@ IS@@ TER@@ E@@ D : { c.@@ on@@ Reg@@ ister@@ ed@@ (get@@ Connection@@ Type@@ ()); break@@ ; } } }
public final void on@@ Reg@@ ister@@ ing@@ (@@ @@@ android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ T@@ ec@@ h int im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ) { on@@ Im@@ s@@ Pro@@ g@@ res@@ sing@@ (@@ im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ); }
@java.lang.Override public void on@@ T@@ ec@@ h@@ no@@ log@@ y@@ Chang@@ e@@ Faile@@ d@@ (@@ int im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ , com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info im@@ s@@ Re@@ as@@ on@@ Info@@ ) { this@@ .@@ on@@ T@@ ec@@ h@@ no@@ log@@ y@@ Chang@@ e@@ Faile@@ d@@ (@@ im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ , im@@ s@@ Re@@ as@@ on@@ Info@@ ); }
public final void on@@ Reg@@ ister@@ ed@@ (@@ @@@ android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ T@@ ec@@ h int im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ) { on@@ Im@@ s@@ Connec@@ ted@@ (@@ im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ); }
private void create@@ Im@@ s@@ Service@@ () { if (!(m@@ Config@@ D@@ yn@@ am@@ ic@@ B@@ ind@@ )) { android.@@ telephony.@@ R@@ log.@@ i@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ TAG, "@@ Cre@@ at@@ ing Service@@ Manager@@ "); m@@ Im@@ s@@ Service@@ Prox@@ y = com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y@@ Comp@@ at@@ .@@ cre@@ ate@@ (m@@ Phone@@ Id, m@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ ); } else { android.@@ telephony.@@ R@@ log.@@ i@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ TAG, "@@ Cre@@ at@@ ing Im@@ s@@ Res@@ ol@@ ve@@ r m@@ Im@@ s@@ Service@@ Prox@@ y = com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y.@@ cre@@ ate@@ (m@@ Context@@ , m@@ Phone@@ Id@@ ); } synchronized@@ (m@@ Has@@ Reg@@ ister@@ ed@@ Lock) { m@@ Has@@ Reg@@ ister@@ ed@@ For@@ Prox@@ y = false@@ ; } }
public void remove@@ Reg@@ is@@ tr@@ ation@@ Listener@@ (java.lang.String name@@ ) throw@@ s com.android.@@ im@@ s.@@ Im@@ s@@ Exception { if (@@ c@@ b@@ p == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ Im@@ s@@ "); } synchronized@@ (m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s) { com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ (("@@ Reg@@ is@@ tr@@ ation reg@@ is@@ tr@@ ation call@@ b@@ ac@@ k remo@@ v@@ ed@@ : " + c@@ b@@ )); m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s.@@ remove@@ (c@@ b@@ ); } }
@java.lang.Override public void on@@ Reg@@ ister@@ ing@@ (@@ int im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ) { if (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ D@@ B@@ G) { com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ ("@@ Reg@@ is@@ tr@@ ation@@ Callback@@ "); } synchronized@@ (m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s) { m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s.@@ for@@ Each@@ (@@ ( l@@ ) -@@ > l@@ .@@ on@@ Reg@@ ister@@ ing@@ (@@ im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ )); } }
public final void on@@ D@@ er@@ eg@@ ister@@ ed@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info in@@ fo@@ ) { on@@ Im@@ s@@ Dis@@ connec@@ ted@@ (in@@ fo@@ ); }
@java.lang.Override public void im@@ s@@ F@@ e@@ ature@@ Cre@@ ated@@ (@@ int s@@ lo@@ t@@ Id, int f@@ e@@ ature@@ ) throw@@ s android.os.@@ Remote@@ Exception { synchronized@@ (m@@ Lock) { if ((@@ (!(m@@ I@@ s@@ A@@ va@@ il@@ able@@ )) && ((m@@ S@@ lo@@ t@@ Id@@ ) == s@@ lo@@ t@@ Id@@ )) && (f@@ e@@ at@@ ur@@ e == (m@@ Sup@@ ported@@ F@@ e@@ ature@@ ))) { android.util.Log.@@ i@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y.@@ LO@@ G_@@ TAG, ((@@ ("@@ Im@@ s@@ F@@ e@@ ature@@ Cre@@ ated@@ : " + s@@ lo@@ t@@ Id@@ ) + " for f@@ e@@ ature@@ : ") + f@@ e@@ ature@@ )); m@@ I@@ s@@ A@@ va@@ il@@ able = true@@ ; } } }
@java.lang.Override public void im@@ s@@ Statu@@ s@@ Changed@@ (@@ int s@@ lo@@ t@@ Id, int f@@ e@@ ature@@ , int statu@@ s) throw@@ s android.os.@@ Remote@@ Exception { synchronized@@ (m@@ Lock) { android.util.Log.@@ i@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y@@ .@@ LO@@ G_@@ TAG, ((((@@ ("@@ im@@ s@@ lo@@ t@@ : " + s@@ lo@@ t@@ Id@@ ) + ", f@@ e@@ ature@@ : ") + f@@ e@@ ature@@ ) + ", statu@@ s@@ : ") + statu@@ s@@ )); if ((@@ (m@@ S@@ lo@@ t@@ Id@@ ) == s@@ lo@@ t@@ Id@@ ) && (f@@ e@@ at@@ ur@@ e == (m@@ Sup@@ ported@@ F@@ e@@ ature@@ ))) { m@@ F@@ e@@ ature@@ Statu@@ s@@ Cach@@ ed = statu@@ s; if ((m@@ Statu@@ s@@ Callback@@ ) != null@@ ) { m@@ Statu@@ s@@ Callback@@ .@@ not@@ if@@ y@@ Statu@@ s@@ Changed@@ (); } } }
public static com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y create@@ (android.@@ content.@@ Context context@@ , int s@@ lo@@ t@@ Id@@ ) { com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y service@@ Prox@@ y = new com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y@@ (@@ context@@ , s@@ lo@@ t@@ Id, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ M@@ TE@@ L); com.android.@@ im@@ s@@ .@@ int@@ er@@ n@@ al.@@ I@@ Im@@ s@@ M@@ T@@ el@@ F@@ e@@ at@@ ur@@ e b = com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y@@ .get@@ Telephony@@ Manager@@ (@@ context@@ )@@ .get@@ Im@@ s@@ M@@ M@@ T@@ el@@ F@@ e@@ ature@@ And@@ List@@ en@@ (s@@ lo@@ t@@ Id, service@@ Prox@@ y@@ .get@@ Listener@@ ()); if (@@ b != null@@ ) { service@@ Prox@@ y.@@ set@@ B@@ in@@ der@@ (@@ b.@@ as@@ B@@ in@@ der@@ ()); service@@ Prox@@ y@@ .get@@ F@@ e@@ ature@@ Statu@@ s(); } else { android.@@ telephony.@@ R@@ log.@@ w@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y.@@ LO@@ G_@@ TAG, ("@@ get@@ Service@@ Prox@@ y@@ : b is null@@ !@@ Ph@@ on@@ e Id@@ : " + s@@ lo@@ t@@ Id@@ )); } return service@@ Prox@@ y@@ ; }
@java.lang.Override public void im@@ s@@ F@@ e@@ ature@@ Remo@@ v@@ ed@@ (@@ int s@@ lo@@ t@@ Id, int f@@ e@@ ature@@ ) throw@@ s android.os.@@ Remote@@ Exception { synchronized@@ (m@@ Lock) { if ((@@ (m@@ I@@ s@@ A@@ va@@ il@@ able@@ ) && ((m@@ S@@ lo@@ t@@ Id@@ ) == s@@ lo@@ t@@ Id@@ )) && (f@@ e@@ at@@ ur@@ e == (m@@ Sup@@ ported@@ F@@ e@@ ature@@ ))) { android.util.Log.@@ i@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y.@@ LO@@ G_@@ TAG, ((@@ ("@@ Re@@ v@@ ing dis@@ able@@ d on s@@ lo@@ t@@ Id@@ : " + s@@ lo@@ t@@ Id@@ ) + ", for f@@ e@@ ature@@ : ") + f@@ e@@ ature@@ )); m@@ I@@ s@@ A@@ va@@ il@@ able = false@@ ; } }
public void add@@ Reg@@ is@@ tr@@ ation@@ Listener@@ (@@ int service@@ Class@@ , com.android.@@ im@@ s.@@ Im@@ s@@ Connection@@ State@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ im@@ s.@@ Im@@ s@@ Exception { add@@ Reg@@ is@@ tr@@ ation@@ Call@@ b@@ ac@@ k (@@ list@@ ener@@ ); }
public int get@@ F@@ e@@ ature@@ Statu@@ s() { synchronized@@ (m@@ Lock) { if ((@@ is@@ B@@ in@@ der@@ A@@ li@@ ve@@ ()) && ((m@@ F@@ e@@ ature@@ Statu@@ s@@ Cach@@ ed@@ ) != null@@ )) { android.util.Log.@@ i@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y@@ .@@ LO@@ G_@@ TAG, ("@@ get@@ F@@ e@@ ature@@ Statu@@ s@@ Cach@@ ed@@ : - return@@ ing c@@ ach@@ ed@@ : " + (m@@ F@@ e@@ ature@@ Statu@@ s@@ Cach@@ ed@@ ))); return m@@ F@@ e@@ ature@@ Statu@@ s@@ Cach@@ ed@@ ; } java.lang.Integ@@ er statu@@ s = r@@ et@@ ri@@ e@@ ve@@ F@@ e@@ ature@@ Statu@@ s(); synchronized@@ (m@@ Lock) { if (@@ statu@@ s == null@@ ) { return android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ STATE_@@ NO@@ T_@@ AV@@ A@@ IL@@ AB@@ LE@@ ; } m@@ F@@ e@@ ature@@ Statu@@ s@@ Cach@@ ed = statu@@ s; } android.util.Log.@@ i@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y.@@ LO@@ G_@@ TAG, ("@@ get@@ F@@ e@@ ature@@ Statu@@ s@@ : - return@@ ing " + statu@@ s@@ )); return statu@@ s; }
public int open@@ (@@ int service@@ Class@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent in@@ com@@ ing@@ Call@@ P@@ end@@ ing@@ Intent@@ , com.android.@@ im@@ s.@@ Im@@ s@@ Connection@@ State@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ im@@ s.@@ Im@@ s@@ Exception { check@@ And@@ Throw@@ Exception@@ I@@ f@@ Service@@ Un@@ ava@@ il@@ able@@ (); if (in@@ com@@ ing@@ Call@@ P@@ end@@ ing@@ Int@@ ent == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ Im@@ s@@ "); } if (@@ list@@ en@@ er == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ Im@@ s@@ Ser@@ vice c@@ an b@@ e null@@ "); } int result = 0; try { result = m@@ Im@@ s@@ Service@@ Prox@@ y.@@ start@@ Session@@ (in@@ com@@ ing@@ Call@@ P@@ end@@ ing@@ Intent@@ , new com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Listener@@ B@@ ase@@ ()); add@@ Reg@@ is@@ tr@@ ation@@ Call@@ b@@ ac@@ k@@ (@@ list@@ ener@@ ); com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ ("@@ N@@ o S@@ es@@ sion st@@ ar@@ ted an@@ d reg@@ is@@ tr@@ ation list@@ en@@ er add@@ ed@@ .@@ "); } catch (android.os.@@ Remote@@ Exception e) { throw new com.android.@@ im@@ s.@@ Im@@ s@@ Exception@@ ("@@ open@@ ()@@ ", e@@ , Im@@ s@@ Re@@ as@@ on@@ Info.@@ C@@ OD@@ E_@@ LO@@ C@@ AL@@ _@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E_@@ D@@ O@@ W@@ N@@ ); } if (@@ result <@@ = 0) { throw new com.android.@@ im@@ s.@@ Im@@ s@@ Exception@@ ("@@ open@@ ()@@ ", (@@ result * (-1@@ ))); } return result@@ ; }
public com.android.@@ im@@ s@@ .@@ int@@ er@@ n@@ al.@@ I@@ Im@@ s@@ Reg@@ is@@ tr@@ ation get@@ Reg@@ is@@ tr@@ ation@@ () { return com.android.@@ im@@ s.@@ Im@@ s@@ Service@@ Prox@@ y@@ .get@@ Telephony@@ Manager@@ (m@@ Context@@ )@@ .get@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ (m@@ S@@ lo@@ t@@ Id, Im@@ s@@ F@@ e@@ ature@@ .@@ M@@ M@@ TE@@ L); }
@java.lang.Override public void on@@ Reg@@ ister@@ ed@@ (@@ int im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ) { if (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ D@@ B@@ G) { com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ ("@@ Reg@@ is@@ tr@@ ation@@ Callback@@ "); } synchronized@@ (m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s) { m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s.@@ for@@ Each@@ (@@ ( l@@ ) -@@ > l@@ .@@ on@@ Reg@@ ister@@ ed@@ (@@ im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ )); } }
public final void on@@ T@@ ec@@ h@@ no@@ log@@ y@@ Chang@@ e@@ Faile@@ d@@ (@@ @@@ android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ T@@ ec@@ h int im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ , com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info in@@ fo@@ ) { on@@ Reg@@ is@@ tr@@ ation@@ Chang@@ e@@ Faile@@ d@@ (@@ im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ , in@@ fo@@ ); }
@java.lang.Override public void on@@ T@@ ec@@ h@@ no@@ log@@ y@@ Chang@@ e@@ Faile@@ d@@ (@@ int target@@ R@@ ad@@ io@@ T@@ ec@@ h@@ , com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info im@@ s@@ Re@@ as@@ on@@ Info@@ ) { if (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ D@@ B@@ G) com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ ((@@ (("@@ on@@ T@@ ec@@ h@@ no@@ log@@ y@@ Chang@@ e@@ Faile@@ d to b@@ e " + target@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ) + " im@@ s@@ Re@@ as@@ on@@ Info@@ =@@ ") + im@@ s@@ Re@@ as@@ on@@ Info@@ )); synchronized@@ (m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s) { m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s.@@ for@@ Each@@ (@@ ( l@@ ) -@@ > l@@ .@@ on@@ T@@ ec@@ h@@ no@@ log@@ y@@ Chang@@ e@@ Faile@@ d@@ (@@ target@@ R@@ ad@@ io@@ T@@ ec@@ h@@ , im@@ s@@ Re@@ as@@ on@@ Info@@ )); } }
@java.lang.Override public void on@@ D@@ er@@ eg@@ ister@@ ed@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info im@@ s@@ Re@@ as@@ on@@ Info@@ ) { if (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ D@@ B@@ G) { com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ ("@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s@@ "); } synchronized@@ (m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s) { m@@ Reg@@ is@@ tr@@ ation@@ Callback@@ s.@@ for@@ Each@@ (@@ ( l@@ ) -@@ > l@@ .@@ on@@ D@@ er@@ eg@@ ister@@ ed@@ (@@ im@@ s@@ Re@@ as@@ on@@ Info@@ )); } }
public void add@@ Reg@@ is@@ tr@@ ation@@ Listener@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Connection@@ State@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ im@@ s.@@ Im@@ s@@ Exception { add@@ Reg@@ is@@ tr@@ ation@@ Call@@ b@@ ac@@ k = list@@ ener@@ ; }
@java.lang.Override public void on@@ Reg@@ ister@@ ed@@ (@@ int im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ) { this@@ .@@ on@@ Reg@@ ister@@ ed@@ (@@ im@@ s@@ R@@ ad@@ io@@ T@@ ec@@ h@@ ); }
private java.lang.String get@@ I@@ cc@@ State@@ Intent@@ String(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ State state@@ ) { switch (@@ state@@ ) { case AB@@ S@@ EN@@ T : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ AB@@ S@@ EN@@ T@@ ; case P@@ IN@@ _RE@@ Q@@ U@@ I@@ RE@@ D : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ C@@ KE@@ D@@ ; case P@@ U@@ K@@ _RE@@ Q@@ U@@ I@@ RE@@ D : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ C@@ KE@@ D@@ ; case N@@ E@@ T@@ W@@ OR@@ K@@ _@@ LO@@ C@@ KE@@ D : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ C@@ KE@@ D@@ ; case RE@@ AD@@ Y : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _RE@@ AD@@ Y@@ ; case NO@@ T_@@ RE@@ AD@@ Y : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _N@@ O@@ T_@@ RE@@ AD@@ Y@@ ; case P@@ ER@@ M@@ _@@ D@@ IS@@ AB@@ LE@@ D : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ C@@ KE@@ D@@ ; case C@@ AR@@ D_@@ IO@@ _@@ ER@@ RO@@ R : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _C@@ AR@@ D_@@ RE@@ S@@ TR@@ IC@@ TE@@ D : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _C@@ AR@@ D_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ; case LO@@ A@@ DE@@ D : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ A@@ DE@@ D@@ ; default : return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ UN@@ K@@ NO@@ W@@ N@@ ; } }
@java.lang.Override public boolean on@@ Con@@ nect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , android.@@ bluetooth.@@ Bluetooth@@ S@@ ock@@ et s@@ ocket@@ ) { if (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Service.@@ D@@ ) { android.util.Log.d@@ (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Service.@@ TAG, ((@@ ("@@ on@@ Con@@ nect@@ : on@@ Connec@@ t Bluetooth@@ S@@ ock@@ et : " + s@@ ocket@@ ) + :@@ de@@ vice : ") + device@@ )); } com.android.@@ bluetooth.@@ Bluetooth@@ Ob@@ ex@@ Trans@@ por@@ t trans@@ por@@ t = new com.android.@@ bluetooth.@@ Bluetooth@@ Ob@@ ex@@ Trans@@ port@@ (s@@ ocket@@ ); android.os.@@ Mess@@ age ms@@ g = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Service.@@ M@@ S@@ G_@@ IN@@ C@@ O@@ M@@ ING@@ _@@ B@@ TO@@ P@@ _C@@ ON@@ N@@ EC@@ TION@@ ); ms@@ g.@@ ob@@ j = trans@@ port@@ ; ms@@ g.@@ send@@ To@@ Target@@ (); m@@ Ac@@ ce@@ p@@ t@@ New@@ Connec@@ t = false@@ ; return true@@ ; }
@java.lang.Override public void on@@ Clo@@ se@@ () { if (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Ob@@ ex@@ Server@@ Session@@ .@@ D@@ ) { android.util.Log.d@@ (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Ob@@ ex@@ Server@@ Session@@ .@@ TAG, "@@ on@@ Clo@@ se@@ "); } re@@ le@@ ase@@ W@@ ake@@ Lock@@ s(); if ((m@@ Server@@ Socket@@ ) != null@@ ) { if (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Ob@@ ex@@ Server@@ Session@@ .@@ D@@ ) { android.util.Log.d@@ (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Ob@@ ex@@ Server@@ Session@@ .@@ TAG, "@@ pre@@ par@@ e@@ For@@ New@@ Con@@ nect@@ "); } ((@@ com.android.@@ bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Service@@ ) (m@@ Context@@ )).@@ m@@ Ac@@ ce@@ p@@ t@@ New@@ Connec@@ t = true@@ ; } com.android.@@ bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Uti@@ li@@ t@@ y.@@ can@@ cel@@ No@@ t@@ if@@ ic@@ ation@@ (m@@ Context@@ ); if ((m@@ Callback@@ ) != null@@ ) { android.os.@@ Mess@@ age ms@@ g = android.os.@@ Mess@@ age.@@ ob@@ t@@ ain@@ (m@@ Callback@@ ); ms@@ g.@@ wh@@ at = Bluetooth@@ Op@@ p@@ Ob@@ ex@@ Session@@ .@@ M@@ S@@ G@@ _S@@ E@@ SS@@ ION@@ _C@@ O@@ M@@ P@@ LE@@ TE@@ ; ms@@ g.@@ ob@@ j = m@@ Info@@ ; ms@@ g.@@ send@@ To@@ Target@@ (); } }
public synchronized void start@@ Socket@@ Listener@@ s() { if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ M@@ as@@ Instance@@ .@@ D@@ ) { android.util.Log.d@@ (m@@ T@@ ag@@ , "@@ st@@ ar@@ t do@@ wn@@ "); } if ((m@@ Server@@ Session@@ ) != null@@ ) { if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ M@@ as@@ Instance@@ .@@ D@@ ) { android.util.Log.d@@ (m@@ T@@ ag@@ , exist@@ s - sh@@ utt@@ ing i@@ t do@@ wn@@ .@@ .@@ .@@ "); } m@@ Server@@ Session@@ .@@ close(); m@@ Server@@ S@@ es@@ sion = null@@ ; } if ((m@@ Ob@@ ser@@ ver@@ ) != null@@ ) { if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ M@@ as@@ Instance@@ .@@ D@@ ) { android.util.Log.d@@ (m@@ T@@ ag@@ , exist@@ s - sh@@ utt@@ ing i@@ t do@@ wn@@ .@@ .@@ .@@ "); } m@@ Ob@@ server.@@ de@@ init@@ (); m@@ Ob@@ ser@@ ve@@ r = null@@ ; } close@@ Connection@@ Socket@@ (); if ((m@@ Server@@ Socket@@ s) != null@@ ) { m@@ Ac@@ ce@@ p@@ t@@ New@@ Connec@@ t = true@@ ; } else { m@@ Server@@ Socket@@ s = com.android.@@ bluetooth.@@ Ob@@ ex@@ Server@@ Socket@@ s.@@ create@@ (@@ this@@ ); m@@ Ac@@ ce@@ p@@ t@@ New@@ Connec@@ t = true@@ ; if ((m@@ Server@@ Socket@@ s) == null@@ ) { android.util.Log.@@ e@@ (m@@ T@@ ag@@ , "@@ Faile@@ d to st@@ ar@@ t the list@@ ener@@ s@@ "); return@@ ; } remove@@ S@@ d@@ p@@ Record@@ (); mS@@ d@@ p@@ Hand@@ le = create@@ M@@ as@@ S@@ d@@ p@@ Record@@ (m@@ Server@@ Socket@@ s.get@@ R@@ f@@ comm@@ Channel@@ (), m@@ Server@@ Socket@@ s.get@@ L@@ 2@@ c@@ ap@@ P@@ s@@ m@@ ()); if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ M@@ as@@ Instance@@ .@@ V@@ ) { android.util.Log.d@@ (m@@ T@@ ag@@ , ((((@@ ("@@ S@@ D@@ P re@@ cor@@ d for MA@@ S instance@@ : " + (m@@ M@@ as@@ Instance@@ Id@@ )) + " Ob@@ ject re@@ ference@@ : ") + (@@ this@@ )) + " handle@@ : ") + (m@@ S@@ d@@ p@@ Handle@@ ))); } update@@ D@@ b@@ Id@@ ent@@ if@@ ier@@ (); } }
private synchronized boolean on@@ Con@@ nect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , android.@@ bluetooth.@@ Bluetooth@@ S@@ ock@@ et con@@ Socket@@ ) { if (com.android.bluetooth.@@ Ob@@ ex@@ Server@@ Socket@@ s.@@ D@@ ) { android.util.Log.d@@ (m@@ T@@ ag@@ , ("@@ on@@ Con@@ nect@@ () s@@ ocket@@ : " + con@@ Socket@@ )); } if (m@@ Con@@ Handler.@@ on@@ Con@@ nect@@ (@@ device@@ , con@@ Socket@@ )) { return true@@ ; } return false@@ ; }
private void create@@ Server@@ Session@@ (@@ javax.@@ ob@@ ex@@ .@@ Ob@@ ex@@ Trans@@ por@@ t trans@@ port@@ ) { m@@ Server@@ S@@ es@@ sion = new com.android.@@ bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Ob@@ ex@@ Server@@ Session@@ (@@ this@@ , trans@@ port@@ , m@@ Server@@ Socket@@ )@@ ; m@@ Ac@@ ce@@ p@@ t@@ New@@ Connec@@ t = true@@ ; m@@ Server@@ Session@@ .@@ pre@@ Start@@ (); if (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Service.@@ D@@ ) { android.util.Log.d@@ (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Service.@@ TAG, ((@@ ("@@ S@@ es@@ sion " + (m@@ Server@@ Session@@ .@@ toString@@ ())) + " for in@@ com@@ ing connec@@ tion ") + (@@ trans@@ port.@@ toString@@ ()))); } }
@java.lang.Override public synchronized boolean on@@ Con@@ nect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , android.@@ bluetooth.@@ Bluetooth@@ S@@ ock@@ et s@@ ocket@@ ) { boolean is@@ Val@@ id = m@@ Map@@ Service.@@ on@@ Con@@ nect@@ (@@ device@@ , this@@ ); if (is@@ Valid@@ ) { m@@ Remote@@ De@@ vice = device@@ ; m@@ Con@@ n@@ S@@ ock@@ et = s@@ ocket@@ ; m@@ Ac@@ ce@@ p@@ t@@ New@@ Connec@@ t = false@@ ; } return is@@ Valid@@ ; }
@java.lang.Override public void get@@ R@@ at@@ (java.lang.String call@@ ing@@ Package@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ R@@ at@@ Call@@ b@@ ac@@ k call@@ back@@ ) { check@@ Call@@ ing@@ Package@@ (c@@ all@@ ing@@ Package@@ ); }
private void on@@ In@@ B@@ and@@ R@@ ing@@ (@@ int in@@ B@@ and@@ , byte@@ [] addres@@ s) { com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ Stack@@ Ev@@ ent ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ Stack@@ Event@@ (@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ IN@@ _@@ B@@ AN@@ D_@@ R@@ ING@@ T@@ ON@@ E); ev@@ ent.@@ value@@ In@@ t = in@@ B@@ and@@ ; ev@@ ent.@@ de@@ vice = get@@ Device@@ (@@ addres@@ s); if (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ Native@@ Interface@@ .@@ D@@ B@@ G) { android.util.@@ Log@@ .@@ d@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ Native@@ Interface@@ .@@ TAG, ((@@ ("@@ on@@ In@@ B@@ and@@ R@@ ing@@ : addres@@ s) + " event@@ )); } com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Ser@@ vice ser@@ vice = com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service@@ .get@@ He@@ ad@@ set@@ Client@@ Service@@ (); if (@@ ser@@ vice != null@@ ) { service@@ .@@ message@@ From@@ Native@@ (@@ event@@ ); } else { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ Native@@ Interface@@ .@@ TAG, ("@@ on@@ In@@ B@@ and@@ R@@ ing@@ : I@@ gn@@ or@@ ing mess@@ age b@@ ec@@ au@@ se ser@@ vice not ava@@ il@@ able@@ : " + event@@ )); } }
public void set@@ D@@ n@@ s@@ Configuration@@ For@@ Network@@ (@@ int net@@ Id, java.util.Collection@@ <@@ java.net.Inet@@ Address@@ > ser@@ ver@@ s, java.lang.String do@@ main@@ s, boolean is@@ Default@@ Network@@ ) { update@@ Parameter@@ s@@ Setting@@ s(); update@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Setting@@ s(); final boolean u@@ se@@ T@@ l@@ s = com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ sho@@ ul@@ d@@ U@@ se@@ T@@ l@@ s@@ (m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Mode@@ ); final com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ Res@@ ol@@ v@@ ed@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Host@@ name res@@ ol@@ v@@ ed@@ Name = (@@ u@@ se@@ T@@ l@@ s) ? m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Map@@ .get@@ (@@ net@@ Id@@ ) : null@@ ; final java.lang.String[] ser@@ ver@@ Str@@ s = android.net.@@ Network@@ Utils.@@ m@@ ake@@ String@@ s(@@ res@@ ol@@ v@@ ed@@ Name != null ? java.util.Arrays.@@ as@@ List@@ (@@ res@@ ol@@ v@@ ed@@ Nam@@ e.@@ i@@ ps@@ ) : ser@@ ver@@ ; final java.lang.String[] main@@ Str@@ s = (@@ do@@ main@@ s == null@@ ) ? new java.lang.String@@ [0@@ ] : do@@ main@@ s.@@ s@@ pli@@ t@@ ("@@ M@@ P@@ B@@ E@@ D@@ "); final int@@ [] param@@ s = new int@@ []{ mS@@ amp@@ le@@ Valid@@ ity@@ , m@@ Su@@ c@@ cess@@ Th@@ res@@ ho@@ l@@ d@@ , m@@ Min@@ S@@ amp@@ l@@ es@@ , m@@ Ma@@ x@@ S@@ amp@@ le@@ s }; final java.lang.String t@@ l@@ s@@ Host@@ name = (@@ res@@ ol@@ v@@ ed@@ Name != null@@ ) ? res@@ ol@@ v@@ ed@@ Nam@@ e.@@ ho@@ st@@ name : "@@ "; try { m@@ N@@ M@@ S@@ .set@@ D@@ n@@ s@@ Configuration@@ For@@ Network@@ (@@ net@@ Id, ser@@ ver@@ Str@@ s, do@@ main@@ Str@@ s, param@@ s, u@@ se@@ T@@ l@@ s@@ Host@@ name@@ ); } catch (java.lang.Exception e) { android.util.@@ S@@ log.@@ e@@ (com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager@@ .@@ TAG, ("@@ set@@ D@@ n@@ s@@ Configuration@@ For@@ Network@@ : " + e@@ )); return@@ ; } if (is@@ Default@@ Network@@ ) set@@ Default@@ D@@ n@@ s@@ System@@ Properties@@ (@@ ser@@ ver@@ s); f@@ lu@@ sh@@ V@@ m@@ D@@ n@@ s@@ Cach@@ e@@ (); }
public static java.lang.String get@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Str@@ i@@ ct@@ Mode@@ Host@@ name@@ (android.@@ content.@@ Content@@ Res@@ ol@@ ve@@ r c@@ r@@ ) { final java.lang.String mo@@ de = com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ get@@ String@@ Setting@@ (c@@ r@@ , android.@@ provider.@@ Setting@@ s.@@ G@@ lo@@ b@@ al.@@ P@@ R@@ I@@ V@@ AT@@ E_@@ D@@ N@@ S@@ _MOD@@ E); if ((@@ android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (m@@ o@@ de@@ )) || (!(m@@ o@@ d@@ e.@@ start@@ sWith@@ (android.net.@@ Connectivity@@ Manager.@@ P@@ R@@ I@@ V@@ AT@@ E_@@ D@@ N@@ S@@ _MOD@@ E_@@ P@@ RO@@ V@@ ID@@ ER_@@ H@@ O@@ S@@ T@@ N@@ AM@@ E@@ )@@ ))) { return null@@ ; } return com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ get@@ String@@ Setting@@ (c@@ r@@ , android.@@ provider.@@ Setting@@ s.@@ G@@ lo@@ b@@ al.@@ P@@ R@@ I@@ V@@ AT@@ E_@@ D@@ N@@ S@@ _S@@ P@@ EC@@ I@@ FI@@ ER@@ ); }
public void update@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ android.net.@@ Net@@ wor@@ k network@@ , com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ Res@@ ol@@ v@@ ed@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Host@@ name res@@ ol@@ v@@ ed@@ Name@@ ) { android.util.@@ S@@ log.@@ w@@ (com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ TAG, ((@@ (("@@ update@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ " + network@@ ) + ", ") + res@@ ol@@ v@@ ed@@ Name@@ ) + "@@ )@@ ")); m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Map@@ .@@ put@@ (@@ network@@ .@@ net@@ Id, res@@ ol@@ v@@ ed@@ Name); }
public static com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ Res@@ ol@@ v@@ ed@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Host@@ name try@@ Block@@ ing@@ Res@@ ol@@ ve@@ Of@@ (android.net.@@ Net@@ wor@@ k network@@ , java.lang.String name@@ ) { final android.system.@@ Str@@ u@@ ct@@ Add@@ r@@ in@@ f@@ o h@@ int@@ s = new android.system.@@ Str@@ u@@ ct@@ Add@@ r@@ in@@ fo@@ (); h@@ int@@ s.@@ a@@ i@@ _@@ flag@@ s = 0; h@@ int@@ s.@@ a@@ i@@ _@@ f@@ am@@ il@@ y = android.system.@@ O@@ s@@ Constants.@@ A@@ F@@ _@@ UN@@ S@@ P@@ EC@@ ; h@@ int@@ s.@@ a@@ i@@ _@@ s@@ ock@@ type = android.system.@@ O@@ s@@ Constants.@@ S@@ O@@ C@@ K@@ _@@ D@@ G@@ R@@ AM@@ ; try { final java.net.Inet@@ Address@@ [] ip@@ s = Lib@@ core.@@ os.@@ android@@ _@@ get@@ add@@ r@@ in@@ fo@@ (@@ name@@ , h@@ int@@ s, network@@ .@@ net@@ Id@@ ); if ((@@ ip@@ s != null@@ ) && ((@@ ip@@ s.@@ length) > 0@@ )) { return new com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ Res@@ ol@@ v@@ ed@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Host@@ name@@ (@@ name@@ , i@@ ps@@ ); } } catch (android.@@ system.@@ G@@ a@@ i@@ Exception ign@@ or@@ ed@@ ) { } return null@@ ; }
private java.lang.String get@@ String@@ Setting@@ (java.lang.String wh@@ i@@ ch@@ ) { return m@@ File@@ Content@@ Res@@ ol@@ ver@@ , wh@@ i@@ ch@@ ); }
private void m@@ ay@@ b@@ e@@ Res@@ ol@@ ve@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Host@@ name@@ () { final java.lang.String ho@@ st@@ name = com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ get@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Str@@ i@@ ct@@ Mode@@ Host@@ name@@ (m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ ()); if (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ ho@@ st@@ name@@ )) { m@@ P@@ riv@@ ate@@ D@@ n@@ s = null@@ ; return@@ ; } m@@ P@@ riv@@ ate@@ D@@ n@@ s = com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager@@ .@@ try@@ Block@@ ing@@ Res@@ ol@@ ve@@ Of@@ (m@@ Network@@ , ho@@ st@@ name@@ ); }
@java.lang.Override public void ent@@ er@@ () { m@@ ay@@ b@@ e@@ Log@@ E@@ valu@@ ation@@ Result@@ (@@ network@@ Event@@ Type@@ (@@ valid@@ ation@@ St@@ age@@ (), com.android.server.@@ connec@@ tivity.@@ Network@@ Monitor@@ .@@ E@@ valu@@ ation@@ Result.@@ V@@ AL@@ ID@@ A@@ TE@@ D@@ )); m@@ Connectivity@@ Service@@ Handler.@@ send@@ Message@@ (@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ connec@@ tivity.@@ Network@@ Monitor@@ .@@ EV@@ ENT_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ TE@@ S@@ TE@@ D@@ , com.android.server.@@ connec@@ tivity.@@ Network@@ Monitor@@ .@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ TEST_@@ RE@@ S@@ UL@@ T_@@ V@@ AL@@ ID@@ , m@@ Net@@ Id, m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ )); (m@@ Valid@@ ation@@ s@@ )@@ ++@@ ; }
private void update@@ Access@@ P@@ o@@ int@@ s@@ D@@ el@@ ay@@ ed@@ () { if ((((@@ get@@ Activity@@ ()) != null@@ ) && (!(m@@ I@@ s@@ Res@@ tr@@ ic@@ ted@@ ))) && (m@@ W@@ if@@ i@@ Manager.@@ is@@ W@@ if@@ i@@ Enabled@@ ())) { get@@ View@@ ().@@ remove@@ Callback@@ s@@ (m@@ Up@@ date@@ Access@@ P@@ o@@ int@@ s@@ Run@@ n@@ able@@ ); set@@ Pro@@ g@@ ress@@ B@@ ar@@ Vi@@ si@@ ble@@ (@@ true@@ ); get@@ View@@ ().@@ po@@ st@@ D@@ el@@ ay@@ ed@@ (m@@ Up@@ date@@ Access@@ P@@ o@@ int@@ s@@ Run@@ n@@ able@@ , 3@@ 00@@ ); } }
public java.lang.String des@@ cri@@ b@@ e@@ Fi@@ rst@@ Non@@ Request@@ able@@ Cap@@ abili@@ ty@@ () { if (@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _V@@ AL@@ ID@@ A@@ TE@@ D@@ )) return "@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _V@@ AL@@ ID@@ A@@ TE@@ D@@ "; if (@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _C@@ AP@@ TI@@ V@@ E_@@ P@@ OR@@ TA@@ L@@ )) return "@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _C@@ AP@@ TI@@ V@@ E_@@ P@@ OR@@ TA@@ L@@ "; if (@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D@@ )) return "@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D@@ "; if (@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ UN@@ C@@ ON@@ GE@@ S@@ TE@@ D@@ )) return "@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ UN@@ C@@ ON@@ GE@@ S@@ TE@@ D@@ "; if ((@@ (m@@ Network@@ Cap@@ abili@@ ties@@ ) & (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ ON@@ _RE@@ Q@@ UE@@ STA@@ B@@ L@@ E_@@ C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S@@ )) != 0) { return n@@ on@@ -@@ request@@ able c@@ ap@@ abili@@ ti@@ es + (java.lang.@@ Lon@@ g.@@ to@@ H@@ ex@@ String@@ (m@@ Network@@ Cap@@ abili@@ ties@@ )); } if ((@@ (m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ) != 0) || ((m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ) != 0@@ )) return b@@ and@@ wid@@ th if (@@ has@@ Sign@@ al@@ Str@@ ength@@ ()) return "@@ sign@@ al@@ Str@@ ength@@ "; return null@@ ; }
private static void check@@ Reg@@ ister@@ Native@@ Allocation@@ () throw@@ s java.lang.Exception { long max@@ M@@ e@@ m = java.lang.@@ Run@@ tim@@ e.get@@ Runtime@@ ().@@ max@@ M@@ em@@ or@@ y(); int siz@@ e = (@@ (@@ int@@ ) (m@@ a@@ x@@ M@@ e@@ m / 32@@ )); int al@@ loc@@ ation@@ _@@ coun@@ t = 25@@ 6@@ ; java.lang.@@ re@@ f.@@ Reference@@ Q@@ ue@@ <@@ java.lang.Ob@@ ject@@ > q@@ ue@@ u@@ e = new java.lang.@@ re@@ f.@@ Reference@@ Q@@ ue@@ ue@@ <@@ java.lang.Ob@@ ject@@ >(); java.lang.@@ re@@ f.@@ Ph@@ an@@ to@@ m@@ Re@@ feren@@ ce re@@ f = new java.lang.@@ re@@ f.@@ Ph@@ an@@ to@@ m@@ Reference@@ (@@ new java.lang.Ob@@ ject@@ (), q@@ ue@@ ue@@ ); long to@@ t@@ al = 0; for (@@ int i = 0; (!(@@ re@@ f.@@ is@@ En@@ q@@ ue@@ u@@ ed@@ ())) && (@@ i < al@@ loc@@ ation@@ _@@ count@@ ); ++@@ i@@ ) { Main.@@ run@@ tim@@ e.@@ register@@ Native@@ Allocation@@ (@@ siz@@ e); to@@ t@@ al +@@ = size@@ ; } if ((@@ q@@ ue@@ u@@ e.@@ remove@@ (1@@ 00@@ 0@@ )) == null@@ ) { throw new java.lang.@@ RuntimeException@@ ("@@ G@@ C fa@@ ile@@ d to run@@ "); } while (@@ to@@ t@@ al > 0) { Main.@@ run@@ tim@@ e.@@ register@@ Native@@ F@@ re@@ e(@@ siz@@ e); to@@ t@@ al -@@ = size@@ ; } }
public static void main@@ (@@ java.lang.String[] arg@@ s) throw@@ s java.lang.Exception { for (@@ int i = 0; i < 4@@ ; ++@@ i@@ ) { M@@ ain@@ .@@ check@@ Reg@@ ister@@ Native@@ Alloc@@ ation@@ (); } synchronized@@ (@@ Main.@@ de@@ ad@@ lock@@ Lock) { Main.@@ al@@ loc@@ ate@@ De@@ ad@@ lock@@ ing@@ F@@ in@@ aliz@@ er@@ (); while (!(@@ Main.@@ is@@ Reg@@ ister@@ Native@@ ())) { M@@ ain@@ .@@ check@@ Reg@@ ister@@ Native@@ Alloc@@ ation@@ (); } M@@ ain@@ .@@ check@@ Reg@@ ister@@ Native@@ Alloc@@ ation@@ (); } java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ Reg@@ ister@@ Native@@ Alloc@@ ation@@ "); }
private static void clear@@ Dex@@ Dir@@ (@@ java.io.File dex@@ Dir@@ ) { java.io.File@@ [] file@@ s = dex@@ Dir@@ .@@ list@@ Files@@ (@@ new java.io.File@@ Filter@@ () { @java.lang.Override public boolean ac@@ ce@@ p@@ t@@ (@@ java.io.File path@@ name@@ ) { return !@@ (p@@ ath@@ nam@@ e.get@@ Name@@ ().@@ equals(@@ android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ LO@@ C@@ K@@ _@@ F@@ IL@@ EN@@ AM@@ E@@ )); } }@@ ); if (file@@ s == null@@ ) { android.util.Log.@@ w@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, (("@@ Faile@@ d to li@@ s@@ t sec@@ ond@@ ar@@ y dex di@@ r cont@@ ent (@@ dex@@ Dir@@ .get@@ Path@@ ())) + ").@@ ")); return@@ ; } for (@@ java.io.File old@@ File : fil@@ es) { android.util.Log.@@ i@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, ((@@ ("@@ Faile@@ d to delet@@ e ol@@ d fi@@ le " + (@@ old@@ File@@ .get@@ Path@@ ())) + " of siz@@ e ") + (@@ old@@ File@@ .@@ length@@ ()))); if (!(@@ old@@ File@@ .@@ delet@@ e@@ ())) { android.util.Log.@@ w@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, ("@@ Faile@@ d to delet@@ e ol@@ d fi@@ le " + (@@ old@@ File@@ .get@@ Path@@ ()))); } else { android.util.Log.@@ i@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, ("@@ Un@@ able to ol@@ d fi@@ le " + (@@ old@@ File@@ .get@@ Path@@ ()))); } } }
java.util.List<@@ ? extends java.io.File@@ > load@@ (android.@@ content.@@ Context context@@ , java.lang.String pre@@ f@@ s@@ Key@@ Pre@@ fix@@ , boolean for@@ ce@@ Re@@ load@@ ) throw@@ s java.lang.@@ IO@@ Exception { android.util.Log.@@ i@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, ((((@@ (("@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ load@@ (@@ " + source@@ Ap@@ k@@ .get@@ Path@@ ())) + " for@@ ce@@ Re@@ load@@ ) + " +@@ ") pre@@ f@@ s@@ Key@@ Pre@@ fix@@ ) + "@@ )@@ ")); java.util.List<@@ android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ Ex@@ tr@@ ac@@ ted@@ Dex@@ > fil@@ es@@ ; if ((@@ !@@ for@@ ce@@ Re@@ load@@ ) && (!@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .is@@ Mo@@ d@@ if@@ i@@ ed@@ (@@ context@@ , source@@ Apk@@ , source@@ Apk@@ , pre@@ f@@ s@@ Key@@ Pre@@ fix@@ )@@ ))) { try { file@@ s = load@@ Ex@@ ist@@ ing@@ Ex@@ tr@@ action@@ s(@@ context@@ , pre@@ f@@ s@@ Key@@ Pre@@ fix@@ ); } catch (java.io.IOException io@@ e) { android.util.Log.@@ w@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, ("@@ Faile@@ d to re@@ lo@@ ad exist@@ ing ex@@ tr@@ ac@@ ted sec@@ ond@@ ar@@ y dex fil@@ es@@ , " + f@@ all@@ ing b@@ ac@@ k to f@@ res@@ h ex@@ tr@@ ac@@ tion io@@ e); file@@ s = android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ p@@ er@@ for@@ m@@ Ex@@ tr@@ action@@ s@@ (m@@ Ex@@ tr@@ action@@ s); android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ put@@ Stor@@ ed@@ Apk@@ Info@@ (@@ con@@ tex@@ t@@ , pre@@ f@@ s@@ Key@@ Pre@@ fi@@ x@@ , android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .get@@ Time@@ St@@ amp@@ (s@@ ource@@ Apk@@ ), source@@ C@@ rc@@ , fil@@ es@@ ); } } else { if (@@ for@@ ce@@ Re@@ lo@@ ad ) { android.util.@@ Log@@ .@@ i@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, "@@ Un@@ able ex@@ tr@@ ac@@ tion m@@ us@@ t b@@ e p@@ er@@ for@@ m@@ ed@@ . "); } else { android.util.Log.@@ i@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, "@@ Un@@ able th@@ at ex@@ tr@@ ac@@ tion m@@ us@@ t b@@ e p@@ er@@ for@@ m@@ ed@@ . "); } file@@ s = android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ p@@ er@@ for@@ m@@ Ex@@ tr@@ action@@ s(@@ source@@ Apk@@ , dex@@ Dir@@ ); android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ put@@ Stor@@ ed@@ Apk@@ Info@@ (@@ context@@ , pre@@ f@@ s@@ Key@@ Pre@@ fix@@ , android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .get@@ Time@@ St@@ amp@@ (s@@ ource@@ Apk@@ ), source@@ C@@ rc@@ , fil@@ es@@ ); } android.util.Log.@@ i@@ (android.@@ support.@@ m@@ ult@@ id@@ ex@@ .@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, (("@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ TAG, (("@@ Multi@@ Dex@@ Extra@@ ctor@@ .@@ : fo@@ un@@ d " + (@@ fil@@ es.@@ size@@ ())) + " sec@@ ond@@ ar@@ y dex file@@ s return fil@@ es@@ ; }
@@@ android.@@ annotation.@@ Requ@@ i@@ res@@ Permission@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ ) public android.@@ bluetooth.@@ Bluetooth@@ S@@ ock@@ et create@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ Socket@@ (@@ int trans@@ port@@ , int ps@@ m@@ ) throw@@ s java.io.IOException { if (!(@@ is@@ Bluetooth@@ Enabled@@ ())) { android.util.Log.@@ e@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ TAG, "@@ create@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ Socket@@ : B@@ luetoo@@ th is not en@@ abled@@ "); throw new java.io.IO@@ Exception@@ (); } if (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ D@@ B@@ G) android.util.Log.d@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ TAG, ((@@ ("@@ create@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ Socket@@ : trans@@ port@@ =@@ " + trans@@ port@@ ) + ", ps@@ m@@ =@@ ") + ps@@ m@@ )); return null@@ ; }
@@@ android.@@ annotation.@@ Requ@@ i@@ res@@ Permission@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ ) public android.@@ bluetooth.@@ Bluetooth@@ Server@@ S@@ ock@@ et list@@ en@@ U@@ sing@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ (@@ int trans@@ port@@ ) throw@@ s java.io.IOException { if (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ D@@ B@@ G) android.util.Log.d@@ (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ TAG, (("@@ list@@ en@@ U@@ sing@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ ()@@ : trans@@ port@@ =@@ " + trans@@ port@@ ) + ", n@@ o u@@ id@@ ")); return null@@ ; }
@@@ android.@@ annotation.@@ Requ@@ i@@ res@@ Permission@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ ) public android.@@ bluetooth.@@ Bluetooth@@ Server@@ S@@ ock@@ et list@@ en@@ U@@ sing@@ In@@ sec@@ ure@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ (@@ int trans@@ port@@ ) throw@@ s java.io.IOException { if (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ D@@ B@@ G) { android.util.Log.d@@ (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ TAG, (("@@ list@@ en@@ U@@ sing@@ In@@ sec@@ ure@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ ()@@ : trans@@ port@@ =@@ " + trans@@ port@@ ) + ", n@@ o u@@ id@@ ")); } return null@@ ; }
@@@ android.@@ annotation.@@ Requ@@ i@@ res@@ Permission@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ ) public android.@@ bluetooth.@@ Bluetooth@@ S@@ ock@@ et create@@ In@@ sec@@ ure@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ Socket@@ (@@ int trans@@ port@@ , int ps@@ m@@ ) throw@@ s java.io.IOException { if (!(@@ is@@ Bluetooth@@ Enabled@@ ())) { android.util.Log.@@ e@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ TAG, "@@ create@@ In@@ sec@@ ure@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ Socket@@ : B@@ luetoo@@ th is not en@@ abled@@ "); throw new java.io.IO@@ Exception@@ (); } if (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ D@@ B@@ G) { android.util.Log.d@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ TAG, ((@@ ("@@ create@@ In@@ sec@@ ure@@ L@@ 2@@ c@@ ap@@ Co@@ c@@ Socket@@ : trans@@ port@@ =@@ " + trans@@ port@@ ) + ", ps@@ m@@ =@@ ") + ps@@ m@@ )); } return null@@ ; }
@@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ (d@@ es@@ cri@@ pti@@ on = "@@ Retur@@ n a th@@ re@@ ad in@@ iti@@ ate an L@@ 2@@ C@@ A@@ P Co@@ C connec@@ tion o@@ ve@@ r Bluetooth@@ .@@ ") public void bluetooth@@ Socket@@ Con@@ n@@ B@@ e@@ gin@@ Con@@ nect@@ Thread@@ P@@ s@@ m@@ (@@ @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ add@@ ress@@ ", des@@ cri@@ pti@@ on = ma@@ c addres@@ s of the de@@ vice to connec@@ t to@@ .@@ ") java.lang.String addres@@ s, @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ is@@ B@@ le@@ ", des@@ cri@@ pti@@ on = trans@@ por@@ t B@@ LE@@ ? @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Default@@ ("@@ 0@@ ") java.lang.@@ Boole@@ an is@@ B@@ le@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ ps@@ m@@ Value@@ ") @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Default@@ (@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ bluetooth.@@ Bluetooth@@ Socket@@ Con@@ n@@ F@@ ac@@ ad@@ e.@@ DE@@ FA@@ UL@@ T_@@ P@@ S@@ M@@ ) java.lang.Integ@@ er ps@@ m@@ Value@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ sec@@ ure@@ d@@ Con@@ n@@ ") @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Default@@ ("@@ 0@@ ") java.lang.@@ Boole@@ an sec@@ ure@@ d@@ Con@@ n@@ ) throw@@ s java.io.IOException { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice m@@ Device@@ ; m@@ De@@ vice = m@@ Bluetooth@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ (@@ addres@@ s); com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ Log.@@ d@@ ((@@ (((@@ " Co@@ c connect@@ ing to " + addres@@ s) + " is@@ B@@ le@@ =@@ ") + is@@ B@@ le@@ ) + " ps@@ m@@ Value@@ ) + " sec@@ ure@@ d@@ Con@@ n@@ =@@ ") + sec@@ ure@@ d@@ Con@@ n@@ )); com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ bluetooth.@@ Bluetooth@@ Socket@@ Con@@ n@@ F@@ ac@@ ad@@ e.@@ Con@@ nect@@ Th@@ re@@ ad connect@@ Th@@ re@@ ad = new com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ bluetooth.@@ Bluetooth@@ Socket@@ Con@@ n@@ F@@ ac@@ ad@@ e.@@ Con@@ nect@@ Thread@@ (m@@ Device@@ , ps@@ m@@ Value@@ , is@@ B@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ P@@ ort@@ ") @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ Log.@@ e@@ ("@@ Faile@@ d to lo@@ ad de@@ vice to lo@@ ad de@@ vice to to to to to ") + is@@ B@@ le@@ cod@@ e.@@ bluetooth.@@ Bluetooth@@ Socket@@ Con@@ n@@ F@@ ac@@ ad@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ bluetooth.@@ Bluetooth@@ Socket@@ Con@@ n@@ F@@ ac@@ ad@@ e.@@ android@@ _@@ script@@ ing.@@ Log.@@ e@@ gin@@ Con@@ n@@ F@@ ac@@ ad@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ add@@ ress@@ ", des@@ cri@@ pti@@ on = "@@ G@@ o@@ ve@@ r r r r r r r r r r r r r r r r r r r r r
@@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ (d@@ es@@ cri@@ pti@@ on = "@@ Retur@@ n a th@@ re@@ ad to ac@@ ce@@ p@@ t an Co@@ c connec@@ tion o@@ ve@@ r Bluetooth@@ .@@ ") public void bluetooth@@ Socket@@ Con@@ n@@ B@@ e@@ gin@@ Ac@@ ce@@ p@@ t@@ Thread@@ P@@ s@@ m@@ (@@ @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ ps@@ m@@ Value@@ ") @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Default@@ (@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ bluetooth.@@ Bluetooth@@ Socket@@ Con@@ n@@ F@@ ac@@ ad@@ e.@@ DE@@ FA@@ UL@@ T_@@ P@@ S@@ M@@ ) java.lang.Integ@@ er ps@@ m@@ Value@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ time@@ out@@ ", des@@ cri@@ pti@@ on = "@@ to w@@ a@@ i@@ t for a new connection@@ , is w@@ a@@ i@@ t for e@@ ve@@ r @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Default@@ ("@@ 0@@ ") java.lang.Integ@@ er time@@ out, @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ is@@ B@@ le@@ ", des@@ cri@@ pti@@ on = trans@@ por@@ t B@@ LE@@ ? @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Default@@ ("@@ 0@@ ") java.lang.@@ Boole@@ an is@@ B@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ sec@@ ure@@ d@@ Con@@ n@@ ", des@@ cri@@ pti@@ on = sec@@ ure@@ d connection@@ ? @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Default@@ ("@@ 0@@ ") java.lang.@@ Boole@@ an sec@@ ure@@ d@@ Con@@ n@@ ) throw@@ s java.io.IOException { com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ Log.@@ d@@ (("@@ G@@ o@@ t P@@ S@@ M value@@ =@@ " + ps@@ m@@ Value@@ )); com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ android@@ _@@ script@@ ing.@@ fa@@ c@@ ad@@ e.@@ bluetooth.@@ Bluetooth@@ Socket@@ Con@@ n@@ F@@ ac@@ ad@@ e.@@ Ac@@ ce@@ p@@ t@@ Thread@@ (@@ ps@@ m@@ Value@@ .@@ int@@ Value@@ (), time@@ out@@ .@@ int@@ Value@@ (), is@@ B@@ le@@ , sec@@ ure@@ d@@ Con@@ n@@ ); ac@@ ce@@ p@@ t@@ Thread@@ .@@ start@@ (); m@@ Ac@@ ce@@ p@@ t@@ Th@@ re@@ ad = ac@@ ce@@ p@@ t@@ Thread@@ ; }
public java.lang.@@ Run@@ n@@ able register@@ Native@@ Allocation@@ (@@ java.lang.Object re@@ fer@@ ent@@ , libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ Alloc@@ at@@ or al@@ loc@@ ator@@ ) { if (re@@ fer@@ ent == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ N@@ o is null@@ "); } libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ register@@ Native@@ Allocation@@ (@@ this@@ .@@ siz@@ e); libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ C@@ le@@ an@@ er@@ Th@@ un@@ k th@@ un@@ k = new libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ C@@ le@@ an@@ er@@ Th@@ un@@ k@@ (); s@@ un@@ .@@ mis@@ c.@@ C@@ le@@ an@@ er cle@@ an@@ er = s@@ un@@ .@@ mis@@ c.@@ C@@ le@@ an@@ er.@@ create@@ (re@@ fer@@ ent@@ , th@@ un@@ k@@ ); libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ C@@ le@@ an@@ er@@ Run@@ ne@@ r result = new libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ C@@ le@@ an@@ er@@ Runner@@ (c@@ le@@ an@@ er@@ ); long native@@ P@@ t@@ r = al@@ loc@@ ator.@@ al@@ loc@@ ate@@ (); if (@@ native@@ P@@ t@@ r == 0) { cle@@ an@@ er.@@ cle@@ an@@ (); return null@@ ; } th@@ un@@ k@@ .set@@ Native@@ P@@ tr@@ (@@ native@@ P@@ tr@@ ); return result@@ ; }
public java.lang.@@ Run@@ n@@ able register@@ Native@@ Allocation@@ (@@ java.lang.Object re@@ fer@@ ent@@ , long native@@ P@@ tr@@ ) { if (re@@ fer@@ ent == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ native@@ P@@ t@@ r == 0) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ N@@ o is null@@ "); } try { libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ register@@ Native@@ Allocation@@ (@@ this@@ .@@ siz@@ e); } catch (@@ java.lang.O@@ ut@@ Of@@ M@@ em@@ or@@ y@@ Er@@ ror oo@@ m@@ e) { libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ app@@ ly@@ F@@ ree@@ F@@ un@@ c@@ tion@@ (f@@ ree@@ F@@ un@@ c@@ tion@@ , native@@ P@@ tr@@ ); throw oo@@ me@@ ; } libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ C@@ le@@ an@@ er@@ Th@@ un@@ k th@@ un@@ k = new libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ C@@ le@@ an@@ er@@ Th@@ un@@ k@@ (); s@@ un@@ .@@ mis@@ c.@@ C@@ le@@ an@@ er cle@@ an@@ er = s@@ un@@ .@@ mis@@ c.@@ C@@ le@@ an@@ er.@@ create@@ (re@@ fer@@ ent@@ , th@@ un@@ k@@ ); libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ C@@ le@@ an@@ er@@ Run@@ ne@@ r result = new libcore.@@ util.@@ Native@@ Allocation@@ Reg@@ is@@ try@@ .@@ C@@ le@@ an@@ er@@ Runner@@ (c@@ le@@ an@@ er@@ ); th@@ un@@ k@@ .set@@ Native@@ P@@ tr@@ (@@ native@@ P@@ t@@ r@@ ); return result@@ ; }
public static void main@@ (@@ java.lang.String[] arg@@ s) { Main.@@ test@@ Sim@@ ple@@ U@@ se@@ (); Main.@@ test@@ T@@ w@@ o@@ U@@ s@@ es@@ (); Main.@@ test@@ Field@@ Stor@@ es@@ (@@ M@@ ain@@ .@@ do@@ Throw@@ ); Main.@@ test@@ Field@@ Store@@ C@@ y@@ cle@@ (); Main.@@ test@@ Array@@ Stor@@ es@@ (); Main.@@ test@@ On@@ ly@@ Store@@ U@@ s@@ es@@ (); Main.@@ test@@ No@@ U@@ se@@ (); Main.@@ test@@ Ph@@ i@@ Input@@ (); Main.@@ test@@ V@@ ol@@ ati@@ le@@ Store@@ (); M@@ ain@@ .@@ do@@ Th@@ ro@@ w = true@@ ; try { Main.@@ test@@ Instance@@ S@@ ide@@ E@@ ff@@ ect@@ s(); } catch (java.lang.@@ Er@@ ror e) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (@@ e.get@@ Message@@ ()); } try { Main.@@ test@@ St@@ ati@@ c@@ S@@ ide@@ E@@ ff@@ ect@@ s(); } catch (java.lang.@@ Er@@ ror e) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (@@ e.get@@ Message@@ ()); } try { M@@ ain@@ .@@ do@@ $@@ no@@ in@@ line@@ $@@ test@@ Store@@ Stor@@ e.@@ (@@ M@@ ain@@ .@@ do@@ Th@@ ro@@ w@@ , true@@ ); } catch (java.lang.@@ Er@@ ror e) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (@@ e.get@@ Message@@ ()); } }
public static void $@@ no@@ in@@ line@@ $@@ test@@ Store@@ Stor@@ e(@@ boolean do@@ Th@@ ro@@ w@@ , boolean f@@ la@@ g@@ ) { Ma@@ in m = new M@@ ain@@ (); m@@ .@@ int@@ Fi@@ el@@ d = 4@@ 2@@ ; m@@ .@@ int@@ Field@@ 2@@ ; = 4@@ 3@@ ; if (@@ do@@ Throw@@ ) { throw new java.lang.@@ Error@@ (m@@ .@@ $@@ opt@@ $@@ no@@ in@@ line@@ $@@ toString@@ ()); } }
void set@@ Au@@ dio@@ Statu@@ s@@ (@@ boolean m@@ ute@@ , int vo@@ l@@ um@@ e) { if ((@@ !@@ (is@@ T@@ v@@ Device@@ Enabled@@ ())) || (!(@@ t@@ v@@ ().@@ is@@ System@@ Au@@ dio@@ Ac@@ tiv@@ ated@@ ()))) { return@@ ; } android.@@ media.@@ Au@@ dio@@ Manager au@@ dio@@ Manager = get@@ Au@@ dio@@ Manager@@ (); boolean m@@ u@@ ted = au@@ dio@@ Manager.@@ is@@ Stream@@ M@@ ute@@ (@@ Au@@ dio@@ Manager.@@ S@@ T@@ RE@@ AM@@ _M@@ U@@ SI@@ C@@ ); if (m@@ ute@@ ) { if (!@@ m@@ u@@ ted@@ ) { au@@ dio@@ Manager.@@ set@@ Stream@@ M@@ ute@@ (@@ Au@@ dio@@ Manager.@@ S@@ T@@ RE@@ AM@@ _M@@ U@@ SI@@ C@@ , true@@ ); } } else { if (m@@ u@@ ted@@ ) { au@@ dio@@ Manager.@@ set@@ Stream@@ M@@ ute@@ (@@ Au@@ dio@@ Manager.@@ S@@ T@@ RE@@ AM@@ _M@@ U@@ SI@@ C@@ , false@@ ); } int f@@ la@@ g = android.@@ media.@@ Au@@ dio@@ Manager.@@ F@@ LA@@ G_@@ H@@ D@@ M@@ I@@ _S@@ Y@@ S@@ TE@@ M@@ _@@ A@@ U@@ D@@ IO@@ _V@@ O@@ L@@ U@@ ME@@ ; if (@@ ( <@@ = vo@@ l@@ um@@ e) && (@@ vo@@ l@@ um@@ e <@@ = 1@@ 00@@ )) { android.util.@@ S@@ log.@@ i@@ (com.android.server.@@ h@@ d@@ m@@ i@@ Control@@ Service.@@ TAG, ("@@ set@@ Au@@ dio@@ Statu@@ s@@ : " + vo@@ l@@ um@@ e@@ )); f@@ la@@ g |@@ = android.@@ media.@@ Au@@ dio@@ Manager.@@ F@@ LA@@ G@@ _S@@ H@@ O@@ W@@ _@@ U@@ I@@ ; } au@@ dio@@ Manager.@@ set@@ Stream@@ V@@ ol@@ um@@ e(@@ Au@@ dio@@ Manager.@@ S@@ T@@ RE@@ AM@@ _M@@ U@@ SI@@ C@@ , vo@@ l@@ um@@ e@@ , flag@@ ); } }
private void handle@@ Set@@ O@@ s@@ d@@ Name@@ (com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ C@@ ec@@ Mess@@ age c@@ m@@ d@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pre@@ con@@ di@@ tion@@ s.@@ check@@ State@@ ((@@ (m@@ Process@@ ed@@ Device@@ Count@@ ) < (m@@ De@@ vices@@ .@@ size@@ ()))); com.android.server.@@ h@@ d@@ m@@ i.@@ Device@@ Dis@@ co@@ ver@@ y@@ Action@@ .@@ Device@@ Info curr@@ ent = m@@ De@@ vices@@ .get@@ (m@@ Process@@ ed@@ Device@@ Count@@ ); if ((@@ current.@@ m@@ Log@@ ic@@ al@@ Addres@@ s) != (c@@ m@@ d@@ .get@@ Source@@ ())) { android.util.@@ S@@ log.@@ w@@ (com.android.server.@@ h@@ d@@ m@@ i.@@ Device@@ Dis@@ co@@ ver@@ y@@ Action@@ .@@ TAG, ((@@ ("@@ S@@ c@@ an add@@ ress@@ [@@ expected@@ : " + (@@ current.@@ m@@ Log@@ ic@@ al@@ Address@@ )) + " act@@ ual@@ : ") + (c@@ m@@ d@@ .get@@ Source@@ ()))); return@@ ; } java.lang.String dis@@ play@@ Name = null@@ ; try { dis@@ play@@ Name = new java.lang.String@@ (c@@ m@@ d@@ .get@@ Param@@ s@@ (), "@@ US@@ -@@ A@@ S@@ C@@ I@@ I@@ "); } catch (@@ java.io.@@ Un@@ sup@@ ported@@ En@@ cod@@ ing@@ Exception e) { android.util.@@ S@@ log.@@ w@@ (com.android.server.@@ h@@ d@@ m@@ i.@@ Device@@ Dis@@ co@@ ver@@ y@@ Action@@ .@@ TAG, ("@@ Faile@@ d to de@@ cod@@ e dis@@ pla@@ y name@@ : " + (c@@ m@@ d.@@ toString@@ ()))); dis@@ play@@ Name = com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Utils.@@ get@@ Default@@ Device@@ Name@@ (@@ current.@@ m@@ Log@@ ic@@ al@@ Addres@@ s); } if ((@@ c@@ m@@ d@@ .get@@ Op@@ code@@ ()) == (@@ Constants.@@ ME@@ SS@@ A@@ G@@ E_@@ F@@ E@@ AT@@ UR@@ E_@@ AB@@ O@@ RT@@ )) { dis@@ play@@ Name = com.android.server.@@ h@@ d@@ m@@ i@@ Utils.@@ get@@ Default@@ Device@@ Name@@ (@@ current.@@ m@@ Log@@ ic@@ al@@ Addres@@ s); } current.@@ m@@ Display@@ Name = dis@@ play@@ Name@@ ; in@@ cre@@ ase@@ Process@@ ed@@ Device@@ Count@@ (); check@@ And@@ Pro@@ ce@@ ed@@ St@@ age@@ (); }
@@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ (d@@ es@@ cri@@ pti@@ on = "@@ Retur@@ n s@@ lo@@ t wit@@ h in@@ va@@ li@@ d @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ s@@ lo@@ t@@ Index@@ ") java.lang.@@ Integ@@ er s@@ lo@@ t@@ Index@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ s@@ lo@@ t@@ Index@@ ") java.lang.@@ Integ@@ er er = s@@ lo@@ t@@ Index@@ ; if (s@@ lo@@ t@@ In@@ dex == null@@ ) { return null@@ ; } for (@@ int i = 0; i < (s@@ lo@@ t@@ Index@@ )) { s@@ lo@@ t@@ Index@@ ++@@ i@@ ) { s@@ lo@@ t@@ Index@@ ++@@ ; } } return java.lang.Integ@@ er.@@ toString@@ (s@@ lo@@ t@@ Index@@ ); }
public android.net.@@ Network@@ Stat@@ s add@@ Valu@@ es@@ (android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ ) { if ((@@ siz@@ e) >@@ = (c@@ ap@@ ac@@ ity@@ )) { final int new@@ L@@ eng@@ th = ((@@ java.lang.@@ Math.@@ max@@ (@@ size@@ , 10@@ )) * 3@@ ) / 2@@ ; if@@ ac@@ e = java.util.Arrays.@@ copy@@ Of@@ (@@ if@@ ace@@ , new@@ Length@@ ); u@@ id = java.util.Arrays.@@ copy@@ Of@@ (@@ u@@ id, new@@ Length@@ ); set = java.util.Arrays.@@ copy@@ Of@@ (@@ set@@ , new@@ Length@@ ); t@@ a@@ g = java.util.Arrays.@@ copy@@ Of@@ (@@ t@@ ag@@ , new@@ Length@@ ); default@@ Net@@ wor@@ k = java.util.Arrays.@@ copy@@ Of@@ (@@ default@@ Network@@ , new@@ Length@@ ); m@@ eter@@ ed = java.util.Arrays.@@ copy@@ Of@@ (m@@ eter@@ ed@@ , new@@ Length@@ ); ro@@ am@@ ing = java.util.Arrays.@@ copy@@ Of@@ (@@ ro@@ am@@ ing@@ , new@@ Length@@ ); r@@ x@@ Byte@@ s = java.util.Arrays.@@ copy@@ Of@@ (@@ r@@ x@@ Bytes@@ , new@@ Length@@ ); r@@ x@@ Pack@@ et@@ s = java.util.Arrays.@@ copy@@ Of@@ (@@ r@@ x@@ Pack@@ et@@ s, new@@ Length@@ ); t@@ x@@ Byte@@ s = java.util.Arrays.@@ copy@@ Of@@ (@@ t@@ x@@ Bytes@@ , new@@ Length@@ ); t@@ x@@ Pack@@ et@@ s = java.util.Arrays.@@ copy@@ Of@@ (@@ t@@ x@@ Pack@@ et@@ s, new@@ Length@@ ); o@@ per@@ ation@@ s = java.util.Arrays.@@ copy@@ Of@@ (@@ o@@ per@@ ation@@ s, new@@ Length@@ ); c@@ ap@@ ac@@ it@@ y = new@@ Length@@ ; } if@@ ace@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ if@@ ace@@ ; u@@ id@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ u@@ id@@ ; set@@ [@@ size@@ ] = e@@ n@@ try@@ .set@@ ; t@@ ag@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ t@@ ag@@ ; default@@ Network@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ default@@ Network@@ ; m@@ eter@@ ed@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ m@@ eter@@ ed@@ ; ro@@ am@@ ing@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ ro@@ am@@ ing@@ ; r@@ x@@ Bytes@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ r@@ x@@ Bytes@@ ; r@@ x@@ Pack@@ et@@ s@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s; t@@ x@@ Bytes@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ t@@ x@@ Bytes@@ ; t@@ x@@ Pack@@ et@@ s@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s; o@@ per@@ ation@@ s@@ [@@ size@@ ] = e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s; (@@ size@@ )@@ ++@@ ; return this@@ ; }
@@@ java.lang.@@ De@@ pre@@ cate@@ d public android.net.@@ Network@@ Stat@@ s com@@ b@@ ine@@ Valu@@ es@@ (java.lang.String if@@ ace@@ , int u@@ id, int t@@ ag@@ , long r@@ x@@ Bytes@@ , long r@@ x@@ Pack@@ et@@ s, long t@@ x@@ Bytes@@ , long t@@ x@@ Pack@@ et@@ s, long o@@ per@@ ation@@ s) { return com@@ b@@ ine@@ Valu@@ es@@ (@@ if@@ ace@@ , u@@ id, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , t@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , r@@ x@@ Bytes@@ , r@@ x@@ Pack@@ et@@ s, t@@ x@@ Bytes@@ , t@@ x@@ Pack@@ et@@ s, o@@ per@@ ation@@ s); }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public android.net.@@ Network@@ Stat@@ s add@@ Iface@@ Valu@@ es@@ (java.lang.String if@@ ace@@ , long r@@ x@@ Bytes@@ , long r@@ x@@ Pack@@ et@@ s, long t@@ x@@ Bytes@@ , long t@@ x@@ Pack@@ et@@ s) { return add@@ Valu@@ es@@ (@@ if@@ ace@@ , android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , r@@ x@@ Bytes@@ , r@@ x@@ Pack@@ et@@ s, t@@ x@@ Bytes@@ , t@@ x@@ Pack@@ et@@ s, 0@@ L); }
public android.net.@@ Network@@ Stat@@ s g@@ roup@@ ed@@ By@@ U@@ id@@ () { final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ , 1@@ 0); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); e@@ n@@ try@@ .@@ if@@ ac@@ e = android.net.@@ Network@@ Stat@@ s.@@ I@@ F@@ AC@@ E_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ set = android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ ; e@@ n@@ try@@ .@@ default@@ Net@@ wor@@ k = android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ m@@ eter@@ ed = android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ ro@@ am@@ ing = android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _@@ AL@@ L@@ ; for (@@ int i = 0; i < (@@ siz@@ e); i++) { if ((@@ t@@ ag@@ [i@@ ]@@ ) != (android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ )) continue@@ ; e@@ n@@ try@@ .@@ u@@ id = u@@ id@@ [i@@ ]; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = r@@ x@@ Bytes@@ [i@@ ]; e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = r@@ x@@ Pack@@ et@@ s@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = t@@ x@@ Bytes@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = t@@ x@@ Pack@@ et@@ s@@ [i@@ ]; e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s = o@@ per@@ ation@@ s@@ [i@@ ]; st@@ at@@ s.@@ com@@ b@@ ine@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); } return st@@ at@@ s; }
@java.lang.Override public int has@@ h@@ Code@@ () { return java.util.@@ Object@@ s.@@ has@@ h@@ (@@ u@@ id, set@@ , t@@ ag@@ , default@@ Network@@ , m@@ eter@@ ed@@ , ro@@ am@@ ing@@ , if@@ ace@@ ); }
public android.net.@@ Network@@ Stat@@ s com@@ b@@ ine@@ Valu@@ es@@ (android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ ) { final int i = find@@ Index@@ (@@ e@@ n@@ try@@ .@@ if@@ ace@@ , e@@ n@@ try@@ .@@ u@@ id, e@@ n@@ try@@ .set@@ , e@@ n@@ try@@ .@@ t@@ a@@ g@@ , e@@ n@@ try@@ .@@ default@@ Net@@ wor@@ k@@ , e@@ n@@ try@@ .@@ m@@ eter@@ ed@@ , e@@ n@@ try@@ .@@ ro@@ am@@ ing@@ ); if (@@ i == (-1@@ )) { add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); } else { r@@ x@@ Bytes@@ [i@@ ] +@@ = e@@ n@@ try@@ .@@ r@@ x@@ Bytes@@ ; r@@ x@@ Pack@@ et@@ s@@ [i@@ ] +@@ = e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s; t@@ x@@ Bytes@@ [i@@ ] +@@ = e@@ n@@ try@@ .@@ t@@ x@@ Bytes@@ ; t@@ x@@ Pack@@ et@@ s@@ [i@@ ] +@@ = e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s; o@@ per@@ ation@@ s@@ [i@@ ] +@@ = e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s; } return this@@ ; }
private void d@@ ed@@ u@@ ct@@ Tr@@ a@@ f@@ fi@@ c@@ From@@ V@@ p@@ n@@ App@@ (@@ int t@@ un@@ U@@ id, java.lang.String un@@ der@@ ly@@ ing@@ Iface@@ , android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try mo@@ v@@ ed@@ ) { mo@@ v@@ ed.@@ u@@ id = t@@ un@@ U@@ id@@ ; mo@@ v@@ ed.@@ set = android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ D@@ B@@ G@@ _V@@ P@@ N@@ _@@ O@@ UT@@ ; mo@@ v@@ ed.@@ t@@ a@@ g = android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ ; mo@@ v@@ ed@@ .@@ if@@ ac@@ e = un@@ der@@ ly@@ ing@@ Iface@@ ; mo@@ v@@ ed@@ .@@ default@@ Net@@ wor@@ k = android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ ; mo@@ v@@ ed@@ .@@ m@@ eter@@ ed = android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ AL@@ L@@ ; mo@@ v@@ ed.@@ ro@@ am@@ ing = android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _@@ AL@@ L@@ ; com@@ b@@ ine@@ Valu@@ es@@ (m@@ o@@ v@@ ed@@ ); int id@@ x@@ V@@ p@@ n@@ B@@ ack@@ g@@ ro@@ un@@ d = find@@ Index@@ (@@ un@@ der@@ ly@@ ing@@ Iface@@ , t@@ un@@ U@@ id, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ Y@@ E@@ S@@ , android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ ); if (@@ id@@ x@@ V@@ p@@ n@@ B@@ ack@@ g@@ ro@@ un@@ d != (-1@@ )) { android.net.@@ Network@@ Stat@@ s.@@ t@@ un@@ Sub@@ tr@@ act@@ (@@ id@@ x@@ V@@ p@@ n@@ B@@ ack@@ g@@ round@@ , this@@ , mo@@ v@@ ed@@ ); } int id@@ x@@ V@@ p@@ n@@ For@@ eg@@ ro@@ un@@ d = find@@ Index@@ (@@ un@@ der@@ ly@@ ing@@ Iface@@ , t@@ un@@ U@@ id, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ Y@@ E@@ S@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ ); if (@@ id@@ x@@ V@@ p@@ n@@ For@@ eg@@ ro@@ un@@ d != (-1@@ )) { android.net.@@ Network@@ Stat@@ s.@@ t@@ un@@ Sub@@ tr@@ act@@ (@@ id@@ x@@ V@@ p@@ n@@ For@@ eg@@ round@@ , this@@ , mo@@ v@@ ed@@ ); } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public int find@@ Index@@ H@@ int@@ ed@@ (java.lang.String if@@ ace@@ , int u@@ id, int set@@ , int t@@ ag@@ , int default@@ Network@@ , int m@@ eter@@ ed@@ , int ro@@ am@@ ing@@ , int h@@ int@@ Index@@ ) { for (@@ int o@@ ff@@ set = 0; o@@ ff@@ set < (@@ siz@@ e); offset@@ ++) { final int h@@ al@@ f@@ O@@ ff@@ set = o@@ ff@@ set / 2@@ ; final int i@@ ; if ((@@ o@@ ff@@ set % 2@@ ) == 0) { i = (@@ h@@ int@@ In@@ dex + h@@ al@@ f@@ Offset@@ ) % (@@ siz@@ e); } else { i = ((((@@ siz@@ e) + h@@ int@@ Index@@ ) - h@@ al@@ f@@ Offset@@ ) - 1@@ ) % (@@ siz@@ e); } if ((@@ (((@@ (((@@ 0 == (@@ this@@ .@@ u@@ id@@ [i@@ ]@@ )) && (@@ set == (@@ this@@ .set@@ [i@@ ]@@ ))) && (@@ t@@ a@@ g == (@@ this@@ .@@ t@@ a@@ g@@ [i@@ ]@@ ))) && (@@ default@@ Net@@ wor@@ k == (@@ this@@ .@@ default@@ Net@@ wor@@ k@@ [i@@ ]@@ ))) && (m@@ eter@@ ed == (@@ this@@ .@@ m@@ eter@@ ed@@ [i@@ ]@@ ))) && (@@ ro@@ am@@ ing == (@@ this@@ .@@ ro@@ am@@ ing@@ [i@@ ]@@ ))) && (java.util.@@ Object@@ s.@@ equal@@ s@@ (@@ if@@ ace@@ , this@@ .@@ if@@ ace@@ [i@@ ]@@ ))) { return i@@ ; } } return -1@@ ; }
public void s@@ pli@@ ce@@ Oper@@ ation@@ s@@ From@@ (android.net.@@ Network@@ Stat@@ s st@@ at@@ s) { for (@@ int i = 0; i < (@@ siz@@ e); i++) { final int j = st@@ at@@ s.@@ find@@ Index@@ (@@ if@@ ace@@ [i@@ ]@@ , u@@ id@@ [i@@ ]@@ , set@@ [i@@ ]@@ , t@@ ag@@ [i@@ ]@@ , default@@ Network@@ [i@@ ]@@ , m@@ eter@@ ed@@ [i@@ ]@@ , ro@@ am@@ ing@@ [i@@ ]@@ ); if (@@ j == (-1@@ )) { o@@ per@@ ation@@ s@@ [i@@ ] = 0; } else { o@@ per@@ ation@@ s@@ [i@@ ] = st@@ at@@ s.@@ o@@ per@@ ation@@ s@@ [@@ j@@ ]; } } }
public android.net.@@ Network@@ Stat@@ s g@@ roup@@ ed@@ By@@ Iface@@ () { final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ , 1@@ 0); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); e@@ n@@ try@@ .@@ u@@ id = android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ set = android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ ; e@@ n@@ try@@ .@@ default@@ Net@@ wor@@ k = android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ m@@ eter@@ ed = android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ ro@@ am@@ ing = android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s = 0@@ L@@ ; for (@@ int i = 0; i < (@@ siz@@ e); i++) { if ((@@ t@@ ag@@ [i@@ ]@@ ) != (android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ )) continue@@ ; e@@ n@@ try@@ .@@ if@@ ac@@ e = if@@ ace@@ [i@@ ]; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = r@@ x@@ Bytes@@ [i@@ ]; e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = r@@ x@@ Pack@@ et@@ s@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = t@@ x@@ Bytes@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = t@@ x@@ Pack@@ et@@ s@@ [i@@ ]; st@@ at@@ s.@@ com@@ b@@ ine@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); } return st@@ at@@ s; }
public void dum@@ p@@ (java.lang.String pre@@ fix@@ , java.io.@@ P@@ r@@ int@@ Wri@@ ter p@@ w@@ ) { p@@ w@@ .@@ p@@ r@@ int@@ (p@@ re@@ fix@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ Re@@ al@@ time@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ ); for (@@ int i = 0; i < (@@ siz@@ e); i++) { p@@ w@@ .@@ p@@ r@@ int@@ (p@@ re@@ fix@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad [@@ p@@ w@@ .@@ p@@ r@@ int@@ (i@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ ]@@ "); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad if@@ ace@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ (@@ if@@ ace@@ [i@@ ]@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad u@@ id@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ (@@ u@@ id@@ [i@@ ]@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad set@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ (android.net.@@ Network@@ Stat@@ s.@@ set@@ To@@ String(@@ set@@ [i@@ ]@@ )); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad t@@ ag@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ (android.net.@@ Network@@ Stat@@ s.@@ t@@ ag@@ To@@ String(@@ t@@ ag@@ [i@@ ]@@ )); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad default@@ Network@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ (android.net.@@ Network@@ Stat@@ s@@ .@@ default@@ Network@@ To@@ String@@ (@@ default@@ Network@@ [i@@ ]@@ )); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad m@@ eter@@ ed@@ =@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ (android.net.@@ Network@@ Stat@@ s.@@ m@@ eter@@ ed@@ To@@ String@@ (m@@ eter@@ ed@@ [i@@ ]@@ )); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad ro@@ am@@ ing@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ (android.net.@@ Network@@ Stat@@ s.@@ ro@@ am@@ ing@@ To@@ String(@@ ro@@ am@@ ing@@ [i@@ ]@@ )); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ B@@ ad r@@ x@@ Bytes@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ (@@ r@@ x@@ Bytes@@ [i@@ ]@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ ("@@ W@@ or@@ k@@ e@@ n r@@ x@@ Pack@@ et@@ s@@ [i@@ ]@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ ("@@ W@@ or@@ k@@ er t@@ x@@ Bytes@@ =@@ p@@ w@@ .@@ p@@ r@@ int@@ ln@@ "); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (@@ t@@ x@@ Pack@@ et@@ s@@ [i@@ ]@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ ("@@ W@@ or@@ k@@ e@@ "); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (@@ o@@ per@@ ation@@ s@@ [i@@ ]@@ ); } }
private android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try get@@ To@@ t@@ al@@ (android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try re@@ c@@ y@@ cle@@ , java.util.@@ Hash@@ Set@@ <java.lang.String@@ > li@@ m@@ it@@ Iface@@ , int li@@ m@@ it@@ U@@ id, boolean in@@ c@@ lu@@ de@@ T@@ ag@@ s) { final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = (re@@ c@@ y@@ c@@ le != null@@ ) ? re@@ c@@ y@@ c@@ le : new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); e@@ n@@ try@@ .@@ if@@ ac@@ e = android.net.@@ Network@@ Stat@@ s.@@ I@@ F@@ AC@@ E_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ u@@ id = li@@ m@@ it@@ U@@ id@@ ; e@@ n@@ try@@ .@@ set = android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ ; e@@ n@@ try@@ .@@ default@@ Net@@ wor@@ k = android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ m@@ eter@@ ed = android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ ro@@ am@@ ing = android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = 0; e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = 0; e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = 0; e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = 0; e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s = 0; for (@@ int i = 0; i < (@@ siz@@ e); i++) { final boolean match@@ es@@ U@@ id = (@@ li@@ m@@ it@@ U@@ id == (android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ )) || (@@ li@@ m@@ it@@ U@@ id == (@@ u@@ id@@ [i@@ ]@@ )); final boolean match@@ es@@ I@@ face = (@@ li@@ m@@ it@@ I@@ face == null@@ ) || (@@ li@@ m@@ it@@ Iface@@ .@@ contain@@ s@@ (@@ if@@ ace@@ [i@@ ]@@ )); if (m@@ atch@@ es@@ U@@ id && match@@ es@@ Iface@@ ) { if (((@@ t@@ ag@@ [i@@ ]@@ ) != (android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ )) && (!@@ in@@ c@@ lu@@ de@@ T@@ ag@@ s@@ )) continue@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s +@@ = r@@ x@@ Bytes@@ [i@@ ]; e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s +@@ = r@@ x@@ Pack@@ et@@ s@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s +@@ = t@@ x@@ Bytes@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s +@@ = t@@ x@@ Pack@@ et@@ s@@ [i@@ ]; e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s +@@ = o@@ per@@ ation@@ s@@ [i@@ ]; } } return e@@ n@@ try@@ ; }
@java.lang.Override public java.lang.String toString@@ () { final java.lang.String@@ Builder bu@@ ilder = new java.lang.String@@ Builder@@ (); builder.@@ append(@@ "@@ if@@ ace@@ =@@ ").@@ append@@ (@@ if@@ ace@@ ); builder.@@ append@@ ("@@ -@@ u@@ id
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public android.net.@@ Network@@ Stat@@ s add@@ Valu@@ es@@ (java.lang.String if@@ ace@@ , int u@@ id, int set@@ , int t@@ a@@ g@@ , int default@@ Net@@ wor@@ k@@ , int m@@ eter@@ ed@@ , int ro@@ am@@ ing@@ , long r@@ x@@ Bytes@@ , long r@@ x@@ Pack@@ et@@ s, long t@@ x@@ Bytes@@ , long t@@ x@@ Pack@@ et@@ s, long o@@ per@@ ation@@ s) { return add@@ Valu@@ es@@ (@@ new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (@@ if@@ ace@@ , u@@ id, set@@ , t@@ ag@@ , default@@ Network@@ , m@@ eter@@ ed@@ , ro@@ am@@ ing@@ , r@@ x@@ Bytes@@ , r@@ x@@ Pack@@ et@@ s, t@@ x@@ Bytes@@ , t@@ x@@ Pack@@ et@@ s, o@@ per@@ ation@@ s@@ )); }
public android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try get@@ Valu@@ es@@ (@@ int i@@ , android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try re@@ c@@ y@@ cle@@ ) { final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = (re@@ c@@ y@@ c@@ le != null@@ ) ? re@@ c@@ y@@ c@@ le : new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); e@@ n@@ try@@ .@@ if@@ ac@@ e = if@@ ace@@ [i@@ ]; e@@ n@@ try@@ .@@ u@@ id = u@@ id@@ [i@@ ]; e@@ n@@ try@@ .@@ set = set@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ a@@ g = t@@ ag@@ [i@@ ]; e@@ n@@ try@@ .@@ default@@ Net@@ wor@@ k = default@@ Network@@ [i@@ ]; e@@ n@@ try@@ .@@ m@@ eter@@ ed = m@@ eter@@ ed@@ [i@@ ]; e@@ n@@ try@@ .@@ ro@@ am@@ ing = ro@@ am@@ ing@@ [i@@ ]; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = r@@ x@@ Bytes@@ [i@@ ]; e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = r@@ x@@ Pack@@ et@@ s@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = t@@ x@@ Bytes@@ [i@@ ]; e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = t@@ x@@ Pack@@ et@@ s@@ [i@@ ]; e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s = o@@ per@@ ation@@ s@@ [i@@ ]; return e@@ n@@ try@@ ; }
public android.net.@@ Network@@ Stat@@ s com@@ b@@ ine@@ Valu@@ es@@ (java.lang.String if@@ ace@@ , int u@@ id, int set@@ , int t@@ a@@ g@@ , int default@@ Net@@ wor@@ k@@ , long r@@ x@@ Bytes@@ , long r@@ x@@ Pack@@ et@@ s, long t@@ x@@ Bytes@@ , long t@@ x@@ Pack@@ et@@ s, long o@@ per@@ ation@@ s) { return com@@ b@@ ine@@ Valu@@ es@@ (@@ new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (@@ if@@ ace@@ , u@@ id, set@@ , t@@ ag@@ , default@@ Network@@ , r@@ x@@ Bytes@@ , r@@ x@@ Pack@@ et@@ s, t@@ x@@ Bytes@@ , t@@ x@@ Pack@@ et@@ s, o@@ per@@ ation@@ s@@ )); }
private void m@@ ake@@ Default@@ (@@ Network@@ A@@ g@@ ent@@ Info new@@ Network@@ ) { if (com.android.server.@@ Connectivity@@ Service.@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ Un@@ able to new default network@@ : " + new@@ Network@@ )); set@@ up@@ Data@@ Activity@@ Tr@@ ack@@ ing@@ (@@ new@@ Network@@ ); try { m@@ Net@@ d@@ .set@@ Default@@ Net@@ Id@@ (@@ new@@ Network@@ .@@ network@@ .@@ net@@ Id@@ ); } catch (java.lang.Exception e) { com.android.server.@@ Connectivity@@ Service.@@ log@@ e@@ (("@@ Er@@ ror set@@ t@@ ing default net@@ wor@@ k : " + e@@ )); } android.net.@@ Lin@@ k@@ Proper@@ ti@@ es l@@ p = new@@ Network@@ .@@ lin@@ k@@ Properties@@ ; not@@ if@@ y@@ Default@@ Network@@ For@@ Network@@ Stat@@ s(@@ l@@ p@@ ); not@@ if@@ y@@ Loc@@ k@@ do@@ wn@@ V@@ p@@ n@@ (@@ new@@ Network@@ ); handle@@ App@@ ly@@ Default@@ Prox@@ y@@ (@@ l@@ p@@ .get@@ H@@ ttp@@ Prox@@ y@@ ()); update@@ T@@ c@@ p@@ Buffer@@ Siz@@ es@@ (@@ new@@ Network@@ ); m@@ D@@ n@@ s@@ Manager.@@ set@@ Default@@ D@@ n@@ s@@ System@@ Properties@@ (@@ new@@ Network@@ .@@ lin@@ k@@ Properties@@ .get@@ D@@ n@@ s@@ Server@@ s()); }
@java.lang.Override public boolean equals(@@ java.lang.Object o@@ ) { if (@@ o instanceof android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ) { final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e = ((@@ android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ) (@@ o@@ )); return ((((@@ ((((@@ ((@@ ("@@ config@@ =@@ " + (@@ u@@ id@@ ) == (@@ e.@@ u@@ id@@ )) && ((@@ set@@ ) == (@@ e.@@ set@@ ))) && ((@@ t@@ ag@@ ) == (@@ e.@@ t@@ a@@ g@@ ))) && (@@ default@@ Network@@ ) == (@@ e@@ .@@ default@@ Net@@ wor@@ k@@ ))) && ((m@@ eter@@ ed@@ ) == (@@ e.@@ m@@ eter@@ ed@@ ))) && ((@@ ro@@ am@@ ing@@ ) == (@@ e.@@ ro@@ am@@ ing@@ ))) && ((@@ r@@ x@@ Bytes@@ ) == (@@ e.@@ r@@ x@@ Bytes@@ ))) && ((@@ r@@ x@@ Pack@@ et@@ s) == (@@ e.@@ r@@ x@@ Pack@@ et@@ s@@ ))) && ((@@ t@@ x@@ Bytes@@ ) == (@@ e.@@ t@@ x@@ Bytes@@ ))) && ((@@ t@@ x@@ Pack@@ et@@ s) == (@@ e.@@ t@@ x@@ Pack@@ et@@ s@@ ))) && ((@@ o@@ per@@ ation@@ s) == (@@ e.@@ o@@ per@@ ation@@ s@@ ))) && (@@ if@@ ace@@ .@@ equals(@@ e@@ .@@ if@@ ace@@ )); } return false@@ ; }
public int find@@ Index@@ (java.lang.String if@@ ace@@ , int u@@ id, int set@@ , int t@@ ag@@ , int default@@ Network@@ , int m@@ eter@@ ed@@ , int ro@@ am@@ ing@@ ) { for (@@ int i = 0; i < (@@ siz@@ e); i++) { if ((@@ (((@@ (((@@ u@@ id == (@@ this@@ .@@ u@@ id@@ [i@@ ]@@ )) && (@@ set == (@@ this@@ .set@@ [i@@ ]@@ ))) && (@@ t@@ a@@ g == (@@ this@@ .@@ t@@ a@@ g@@ [i@@ ]@@ ))) && (@@ default@@ Net@@ wor@@ k == (@@ this@@ .@@ default@@ Net@@ wor@@ k@@ [i@@ ]@@ ))) && (m@@ eter@@ ed == (@@ this@@ .@@ m@@ eter@@ ed@@ [i@@ ]@@ ))) && (@@ ro@@ am@@ ing == (@@ this@@ .@@ ro@@ am@@ ing@@ [i@@ ]@@ ))) && (java.util.@@ Object@@ s.@@ equal@@ s@@ (@@ if@@ ace@@ , this@@ .@@ if@@ ace@@ [i@@ ]@@ ))) { return i@@ ; } } return -1@@ ; }
public static void no@@ te@@ Stack@@ ed@@ Iface@@ (java.lang.String st@@ ack@@ ed@@ Iface@@ , java.lang.String b@@ ase@@ Iface@@ ) { synchronized@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Factory@@ .@@ s@@ Connectivity@@ Service@@ Lock) { if (b@@ ase@@ I@@ face != null@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Fa@@ ctory.@@ s@@ Stack@@ ed@@ I@@ fa@@ ces@@ .@@ put@@ (@@ st@@ ack@@ ed@@ Iface@@ , b@@ ase@@ Iface@@ ); } else { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Fa@@ ctory.@@ s@@ Stack@@ ed@@ I@@ fa@@ ces@@ .@@ remove@@ (@@ st@@ ack@@ ed@@ Iface@@ ); } } }
@java.lang.Override public int com@@ par@@ e@@ To@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey an@@ oth@@ er@@ ) { int re@@ s = 0; if (((@@ id@@ ent@@ ) != null@@ ) && ((@@ an@@ oth@@ er.@@ id@@ ent@@ ) != null@@ )) { re@@ s = id@@ ent.@@ com@@ par@@ e@@ To@@ (@@ an@@ oth@@ er.@@ id@@ ent@@ ); } if (re@@ s == 0) { re@@ s = java.lang.Integ@@ er.@@ com@@ par@@ e(@@ u@@ id, an@@ oth@@ er.@@ u@@ id@@ ); } if (re@@ s == 0) { re@@ s = java.lang.Integ@@ er.@@ com@@ par@@ e(@@ set@@ , an@@ oth@@ er.@@ set@@ ); } if (re@@ s == 0) { re@@ s = java.lang.Integ@@ er.@@ com@@ par@@ e(@@ t@@ ag@@ , an@@ oth@@ er.@@ t@@ ag@@ ); } if (re@@ s == 0) { re@@ s = java.lang.Integ@@ er.@@ com@@ par@@ e@@ (@@ default@@ Network@@ , an@@ oth@@ er@@ .@@ default@@ Network@@ ); } return res@@ ; }
private long get@@ To@@ t@@ al@@ Bytes@@ For@@ Network@@ U@@ id@@ (android.net.@@ Network@@ Temp@@ l@@ ate te@@ mp@@ l@@ ate@@ , int u@@ id@@ ) { try { android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y h@@ ist@@ or@@ y = m@@ Collection@@ .get@@ H@@ ist@@ or@@ y@@ (@@ te@@ mp@@ l@@ ate@@ , null@@ , u@@ id, Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ , Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ FI@@ E@@ L@@ D_@@ AL@@ L@@ , java.lang.@@ Lon@@ g.@@ M@@ IN@@ _V@@ AL@@ U@@ E, java.lang.@@ Lon@@ g.@@ MA@@ X@@ _V@@ AL@@ U@@ E, m@@ Access@@ Level@@ , m@@ Call@@ ing@@ U@@ id@@ ); return h@@ ist@@ or@@ y@@ .get@@ To@@ t@@ al@@ Bytes@@ (); } catch (java.lang.@@ Sec@@ ur@@ ity@@ Exception e) { if (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Ob@@ ser@@ ver@@ s.@@ LO@@ G@@ V@@ ) { android.util.@@ S@@ log.@@ w@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Ob@@ ser@@ ver@@ s.@@ TAG, ((@@ ("@@ get@@ To@@ t@@ al@@ Bytes@@ For@@ Network@@ U@@ id@@ : " + (m@@ Call@@ ing@@ U@@ id@@ )) + " ma@@ y h@@ av@@ e lo@@ s@@ t ac@@ ces@@ s to u@@ id " + u@@ id@@ )); } return 0; }
@@@ java.lang.@@ De@@ pre@@ cate@@ d public void re@@ cord@@ Data@@ (@@ long start@@ , long end@@ , long r@@ x@@ Bytes@@ , long t@@ x@@ Bytes@@ ) { re@@ cord@@ Data@@ (@@ start@@ , end@@ , new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (android.net.@@ Network@@ Stat@@ s.@@ I@@ F@@ AC@@ E_@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , r@@ x@@ Bytes@@ , 0@@ L@@ , t@@ x@@ Bytes@@ , 0@@ L@@ )); }
@@@ java.lang.@@ De@@ pre@@ cate@@ d public void g@@ ener@@ ate@@ R@@ an@@ do@@ m@@ (@@ long start@@ , long end@@ , long r@@ x@@ Bytes@@ , long r@@ x@@ Pack@@ et@@ s, long t@@ x@@ Bytes@@ , long t@@ x@@ Pack@@ et@@ s, long o@@ per@@ ation@@ s, java.util.@@ R@@ an@@ do@@ m r@@ ) { en@@ su@@ re@@ Bu@@ ck@@ et@@ s(@@ start@@ , end@@ ); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (android.net.@@ Network@@ Stat@@ s.@@ I@@ F@@ AC@@ E_@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L); while ((@@ (((@@ r@@ x@@ Byte@@ s > 10@@ 24@@ ) || (@@ r@@ x@@ Pack@@ et@@ s > 12@@ 8@@ )) || (@@ t@@ x@@ Byte@@ s > 10@@ 24@@ )) || (@@ t@@ x@@ Pack@@ et@@ s > 12@@ 8@@ )) || (@@ o@@ per@@ ation@@ s > 32@@ )) { final long c@@ ur@@ St@@ ar@@ t = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ r@@ an@@ do@@ m@@ Long@@ (@@ r@@ , start@@ , end@@ ); final long c@@ ur@@ En@@ d = c@@ ur@@ St@@ ar@@ t + (android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ r@@ an@@ do@@ m@@ Long@@ (@@ r@@ , 0, ((@@ en@@ d - c@@ ur@@ Start@@ ) / 2@@ ))); e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ r@@ an@@ do@@ m@@ Long@@ (@@ r@@ , 0, r@@ x@@ Bytes@@ ); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ r@@ an@@ do@@ m@@ Long@@ (@@ r@@ , 0, r@@ x@@ Pack@@ et@@ s); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ r@@ an@@ do@@ m@@ Long@@ (@@ r@@ , 0, t@@ x@@ Bytes@@ ); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ r@@ an@@ do@@ m@@ Long@@ (@@ r@@ , 0, t@@ x@@ Pack@@ et@@ s); e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ r@@ an@@ do@@ m@@ Long@@ (@@ r@@ , 0, o@@ per@@ ation@@ s); r@@ x@@ Byte@@ s -@@ = e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s -@@ = e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s; t@@ x@@ Byte@@ s -@@ = e@@ n@@ try@@ .@@ t@@ x@@ Bytes@@ ; t@@ x@@ Byte@@ s -@@ = e@@ n@@ try@@ .@@ t@@ x@@ Bytes@@ ; t@@ x@@ Pack@@ et@@ s -@@ = e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s; t@@ x@@ Pack@@ et@@ s -@@ = e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s; o@@ per@@ ation@@ s -@@ = e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s; re@@ cord@@ Data@@ (c@@ ur@@ Start@@ , c@@ ur@@ En@@ d@@ , e@@ n@@ try@@ ); } }
public void re@@ cord@@ H@@ ist@@ or@@ y@@ (android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y input@@ , long start@@ , long end@@ ) { final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (android.net.@@ Network@@ Stat@@ s.@@ I@@ F@@ AC@@ E_@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L); for (@@ int i = 0; i < (in@@ pu@@ t.@@ bu@@ ck@@ et@@ Count@@ ); i++) { final long bu@@ ck@@ et@@ St@@ ar@@ t = in@@ pu@@ t.@@ bu@@ ck@@ et@@ Start@@ [i@@ ]; final long bu@@ ck@@ et@@ En@@ d = bu@@ ck@@ et@@ St@@ ar@@ t + (in@@ pu@@ t.@@ bu@@ ck@@ et@@ D@@ ur@@ ation@@ ); if ((@@ bu@@ ck@@ et@@ St@@ ar@@ t < start@@ ) || (@@ bu@@ ck@@ et@@ En@@ d > end@@ )) continue@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ .get@@ Long@@ (in@@ pu@@ t.@@ r@@ x@@ Bytes@@ , i@@ , 0@@ L); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ .get@@ Long@@ (in@@ pu@@ t.@@ r@@ x@@ Pack@@ et@@ s, i@@ , 0@@ L); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ .get@@ Long@@ (in@@ pu@@ t.@@ t@@ x@@ Bytes@@ , i@@ , 0@@ L); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ .get@@ Long@@ (in@@ pu@@ t.@@ t@@ x@@ Pack@@ et@@ s, i@@ , 0@@ L); e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s = android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ .get@@ Long@@ (in@@ pu@@ t.@@ o@@ per@@ ation@@ s, i@@ , 0@@ L); re@@ cord@@ Data@@ (@@ bu@@ ck@@ et@@ Start@@ , bu@@ ck@@ et@@ En@@ d@@ , e@@ n@@ try@@ ); } }
private android.net.@@ Network@@ Stat@@ s int@@ er@@ n@@ al@@ Get@@ S@@ um@@ m@@ ary@@ For@@ Network@@ (android.net.@@ Network@@ Temp@@ l@@ ate te@@ mp@@ l@@ ate@@ , int flag@@ s, long start@@ , long end@@ , @com.android.@@ server.@@ net.@@ Network@@ Stat@@ s@@ Ac@@ ces@@ s.@@ Leve@@ l int ac@@ cess@@ Level@@ , int call@@ ing@@ U@@ id@@ ) { final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y h@@ ist@@ or@@ y = int@@ er@@ n@@ al@@ Get@@ H@@ ist@@ or@@ y@@ For@@ Network@@ (@@ te@@ mp@@ l@@ ate@@ , flag@@ s, android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ FI@@ E@@ L@@ D_@@ AL@@ L@@ , ac@@ cess@@ Level@@ , call@@ ing@@ U@@ id@@ ); final long no@@ w = java.lang.System.@@ current@@ Time@@ Milli@@ s(); final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ E@@ n@@ try e@@ n@@ try = h@@ ist@@ or@@ y@@ .get@@ Valu@@ es@@ (@@ start@@ , end@@ , no@@ w@@ , null@@ ); final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s@@ ((@@ en@@ d - start@@ ), 1); st@@ at@@ s.@@ add@@ Valu@@ es@@ (@@ new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (android.net.@@ Network@@ Stat@@ s.@@ I@@ F@@ AC@@ E_@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s@@ .@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _@@ AL@@ L@@ , e@@ n@@ try@@ .@@ r@@ x@@ Bytes@@ , e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s, e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s@@ )); return st@@ at@@ s; }
@java.lang.Override public android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y get@@ H@@ ist@@ or@@ y@@ For@@ U@@ id@@ (android.net.@@ Network@@ Temp@@ l@@ ate te@@ mp@@ l@@ ate@@ , int u@@ id, int set@@ , int t@@ ag@@ , int field@@ s) { if (@@ t@@ a@@ g == (android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ )) { return get@@ U@@ id@@ Comp@@ let@@ e@@ ().get@@ H@@ ist@@ or@@ y@@ (@@ te@@ mp@@ l@@ ate@@ , null@@ , u@@ id, set@@ , t@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , field@@ s, java.lang.@@ Lon@@ g.@@ M@@ IN@@ _V@@ AL@@ U@@ E, java.lang.@@ Lon@@ g.@@ MA@@ X@@ _V@@ AL@@ U@@ E, m@@ Access@@ Level@@ , m@@ Call@@ ing@@ U@@ id@@ ); } else { return get@@ U@@ id@@ T@@ ag@@ Comp@@ let@@ e@@ ().get@@ H@@ ist@@ or@@ y@@ (@@ te@@ mp@@ l@@ ate@@ , null@@ , u@@ id, set@@ , t@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , field@@ s, java.lang.@@ Lon@@ g.@@ M@@ IN@@ _V@@ AL@@ U@@ E, java.lang.@@ Lon@@ g.@@ MA@@ X@@ _V@@ AL@@ U@@ E, m@@ Access@@ Level@@ , m@@ Call@@ ing@@ U@@ id@@ ); } }
@java.lang.Override public android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y get@@ H@@ ist@@ or@@ y@@ Inter@@ val@@ For@@ U@@ id@@ (android.net.@@ Network@@ Temp@@ l@@ ate te@@ mp@@ l@@ ate@@ , int u@@ id, int set@@ , int t@@ ag@@ , int field@@ s, long start@@ , long end@@ ) { if (@@ t@@ a@@ g == (android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ )) { return get@@ U@@ id@@ Comp@@ let@@ e@@ ().get@@ H@@ ist@@ or@@ y@@ (@@ te@@ mp@@ l@@ ate@@ , null@@ , u@@ id, set@@ , t@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , field@@ s, start@@ , end@@ , m@@ Access@@ Level@@ , m@@ Call@@ ing@@ U@@ id@@ ); } else if (@@ u@@ id == (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ())) { return get@@ U@@ id@@ T@@ ag@@ Comp@@ let@@ e@@ ().get@@ H@@ ist@@ or@@ y@@ (@@ te@@ mp@@ l@@ ate@@ , null@@ , u@@ id, set@@ , t@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , field@@ s, start@@ , end@@ , m@@ Access@@ Level@@ , m@@ Call@@ ing@@ U@@ id@@ ); } else { throw new java.lang.@@ Sec@@ ur@@ ity@@ Exception@@ ((@@ ("@@ In@@ va@@ li@@ d package " + (m@@ Call@@ ing@@ Package@@ )) + " can@@ not ac@@ ces@@ s t@@ a@@ g in@@ for@@ m@@ ation f@@ ro@@ m a d@@ if@@ fer@@ ent u@@ id "); } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public android.net.@@ Network@@ Stat@@ s add@@ Valu@@ es@@ (java.lang.String if@@ ace@@ , int u@@ id, int set@@ , int t@@ a@@ g@@ , int default@@ Net@@ wor@@ k@@ , long r@@ x@@ Bytes@@ , long r@@ x@@ Pack@@ et@@ s, long t@@ x@@ Bytes@@ , long t@@ x@@ Pack@@ et@@ s, long o@@ per@@ ation@@ s) { return add@@ Valu@@ es@@ (@@ new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (@@ if@@ ace@@ , u@@ id, set@@ , t@@ ag@@ , default@@ Network@@ , r@@ x@@ Bytes@@ , r@@ x@@ Pack@@ et@@ s, t@@ x@@ Bytes@@ , t@@ x@@ Pack@@ et@@ s, o@@ per@@ ation@@ s@@ )); }
private android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y int@@ er@@ n@@ al@@ Get@@ H@@ ist@@ or@@ y@@ For@@ Network@@ (android.net.@@ Network@@ Temp@@ l@@ ate te@@ mp@@ l@@ ate@@ , int flag@@ s, int field@@ s, server.@@ net.@@ Network@@ Stat@@ s@@ Ac@@ ces@@ s.@@ Leve@@ l int ac@@ cess@@ Level@@ , int call@@ ing@@ U@@ id@@ ) { final android.@@ telephony.@@ Sub@@ s@@ cription@@ P@@ l@@ an au@@ g@@ ment@@ P@@ l@@ an = res@@ ol@@ ve@@ Sub@@ s@@ cription@@ P@@ lan@@ (@@ te@@ mp@@ l@@ ate@@ , flag@@ s); synchronized@@ (m@@ Stat@@ s@@ Lock) { return m@@ X@@ t@@ Stat@@ s@@ Cach@@ ed@@ .get@@ H@@ ist@@ or@@ y@@ (@@ te@@ mp@@ l@@ ate@@ , au@@ g@@ ment@@ P@@ lan@@ , android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ , android.net.@@ Network@@ Stat@@ s@@ .@@ TAG@@ _N@@ ON@@ E, field@@ s, java.lang.@@ Lon@@ g.@@ M@@ IN@@ _V@@ AL@@ U@@ E, java.lang.@@ Lon@@ g.@@ MA@@ X@@ _V@@ AL@@ U@@ E, ac@@ cess@@ Level@@ , call@@ ing@@ U@@ id@@ ); } }
public void write@@ To@@ Pro@@ to@@ (android.@@ util.@@ pro@@ to.@@ Pro@@ to@@ Output@@ Stream pro@@ to@@ , long t@@ ag@@ ) { final long st@@ ar@@ t = pro@@ to.@@ start@@ (@@ t@@ ag@@ ); pro@@ to.@@ write@@ (@@ Network@@ Id@@ enti@@ ty@@ Pro@@ to.@@ TYP@@ E, m@@ Type@@ ); if ((m@@ Sub@@ s@@ cri@@ b@@ er@@ Id@@ ) != null@@ ) { pro@@ to.@@ write@@ (@@ Network@@ Id@@ enti@@ ty@@ Pro@@ to.@@ S@@ U@@ B@@ S@@ C@@ R@@ I@@ B@@ ER_@@ ID@@ , android.net.@@ Network@@ Id@@ enti@@ t@@ y.@@ sc@@ r@@ u@@ b@@ Sub@@ s@@ cri@@ b@@ er@@ Id@@ (m@@ Sub@@ s@@ cri@@ b@@ er@@ Id@@ )); } pro@@ to.@@ write@@ (@@ Network@@ Id@@ enti@@ ty@@ Pro@@ to.@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ ID@@ , m@@ Network@@ Id@@ ); pro@@ to.@@ write@@ (@@ Network@@ Id@@ enti@@ ty@@ Pro@@ to.@@ RO@@ AM@@ ING@@ , m@@ R@@ o@@ am@@ ing@@ ); pro@@ to.@@ write@@ (@@ Network@@ Id@@ enti@@ ty@@ Pro@@ to.@@ ME@@ TER@@ E@@ D@@ , m@@ M@@ eter@@ ed@@ ); pro@@ to@@ .@@ write@@ (@@ Network@@ Id@@ enti@@ ty@@ Pro@@ to.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ , m@@ Default@@ Network@@ ); pro@@ to@@ .@@ end@@ (@@ start@@ ); }
@java.lang.Override public void increment@@ Oper@@ ation@@ Count@@ (@@ int u@@ id, int t@@ ag@@ , int o@@ per@@ ation@@ Count@@ ) { if ((@@ android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()) != u@@ id@@ ) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ U@@ P@@ D@@ AT@@ E_@@ DE@@ V@@ IC@@ E_@@ STAT@@ S@@ , com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Service.@@ TAG@@ ); } if (@@ o@@ per@@ ation@@ Coun@@ t < 0) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ In@@ va@@ li@@ d coun@@ t c@@ an on@@ l@@ y b@@ e in@@ cre@@ m@@ en@@ ted@@ "); } if (@@ t@@ a@@ g == (android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ In@@ va@@ li@@ d coun@@ t m@@ us@@ t h@@ av@@ e s@@ pe@@ c@@ if@@ i@@ c t@@ a@@ g "); } synchronized@@ (m@@ Stat@@ s@@ Lock) { final int set = m@@ Ac@@ tive@@ U@@ id@@ Coun@@ ter@@ Set@@ .get@@ (@@ u@@ id, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ ); m@@ U@@ id@@ Oper@@ ations.@@ com@@ b@@ ine@@ Valu@@ es@@ (m@@ Ac@@ tive@@ Iface@@ , u@@ id, set@@ , t@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ Y@@ E@@ S@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , o@@ per@@ ation@@ Count@@ ); m@@ U@@ id@@ Oper@@ ations.@@ com@@ b@@ ine@@ Valu@@ es@@ (m@@ Ac@@ tive@@ Iface@@ , u@@ id, set@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ Y@@ E@@ S@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , o@@ per@@ ation@@ Count@@ ); } }
@java.lang.Override public boolean equals(@@ java.lang.Object ob@@ j@@ ) { if (@@ ob@@ j instanceof com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ ) { final com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey = ((@@ com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ ) (@@ ob@@ j@@ )); return (((@@ k@@ e@@ y.@@ u@@ id@@ ) == (@@ k@@ e@@ y.@@ u@@ id@@ )) && ((@@ set@@ ) == (@@ k@@ e@@ y.@@ set@@ ))) && ((@@ t@@ ag@@ ) == (@@ k@@ e@@ y.@@ t@@ ag@@ ))) && ((@@ (@@ default@@ Network@@ ) == (@@ key@@ .@@ default@@ Network@@ ))) && java.util.@@ Object@@ s.@@ equals(@@ id@@ ent@@ , k@@ e@@ y.@@ id@@ ent@@ )); } return false@@ ; }
@java.lang.Override public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l d@@ est@@ , int flag@@ s) { d@@ est.@@ write@@ Long@@ (@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ ); d@@ est.@@ write@@ Int@@ (@@ siz@@ e); d@@ est.@@ write@@ Int@@ (c@@ ap@@ ac@@ ity@@ ); d@@ est.@@ write@@ String@@ Array@@ (@@ if@@ ace@@ ); d@@ est.@@ write@@ Int@@ Array@@ (@@ u@@ id@@ ); d@@ est.@@ write@@ Int@@ Array@@ (@@ set@@ ); d@@ est.@@ write@@ Int@@ Array@@ (@@ t@@ ag@@ ); d@@ est.@@ write@@ Int@@ Array@@ (@@ default@@ Network@@ ); d@@ est.@@ write@@ Int@@ Array@@ (@@ m@@ eter@@ ed@@ ); d@@ est.@@ write@@ Int@@ Array@@ (@@ ro@@ am@@ ing@@ ); d@@ est.@@ write@@ Long@@ Array@@ (@@ r@@ x@@ Bytes@@ ); d@@ est.@@ write@@ Long@@ Array@@ (@@ r@@ x@@ Pack@@ et@@ s); d@@ est.@@ write@@ Long@@ Array@@ (@@ t@@ x@@ Bytes@@ ); d@@ est.@@ write@@ Long@@ Array@@ (@@ t@@ x@@ Pack@@ et@@ s); d@@ est.@@ write@@ Long@@ Array@@ (@@ o@@ per@@ ation@@ s); }
public void dum@@ p@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ In@@ d@@ ent@@ ing@@ P@@ r@@ int@@ Wri@@ ter p@@ w@@ ) { for (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey : get@@ S@@ or@@ ted@@ Key@@ s()) { p@@ w@@ .@@ p@@ r@@ int@@ ("@@ id@@ ent@@ =@@ "); p@@ w@@ .@@ p@@ r@@ int@@ (@@ k@@ e@@ y.@@ id@@ ent.@@ toString@@ ()); p@@ w@@ .@@ p@@ r@@ int@@ ("@@ W@@ or@@ k@@ e@@ y.@@ u@@ id@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@
public void re@@ cord@@ Data@@ (com.android.server.@@ net.@@ Network@@ Id@@ enti@@ ty@@ Se@@ t id@@ ent@@ , int u@@ id, int set@@ , int t@@ a@@ g@@ , int default@@ Net@@ wor@@ k@@ , long start@@ , long end@@ , android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ ) { final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y h@@ ist@@ or@@ y = find@@ Or@@ Create@@ H@@ ist@@ or@@ y@@ (@@ id@@ ent@@ , u@@ id, set@@ , t@@ a@@ g@@ , default@@ Net@@ wor@@ k@@ ); h@@ ist@@ or@@ y.@@ re@@ cord@@ Data@@ (@@ start@@ , end@@ , e@@ n@@ try@@ ); no@@ te@@ Record@@ ed@@ H@@ ist@@ or@@ y@@ (@@ h@@ ist@@ or@@ y@@ .get@@ Start@@ (), h@@ ist@@ or@@ y@@ .get@@ En@@ d@@ (), ((@@ e@@ n@@ try@@ .@@ r@@ x@@ Bytes@@ ) + (@@ e@@ n@@ try@@ .@@ t@@ x@@ Bytes@@ ))); }
@@@ java.lang.@@ De@@ pre@@ cate@@ d public void read@@ Le@@ g@@ ac@@ y@@ Network@@ (@@ java.io.File file@@ ) throw@@ s java.io.IOException { final android.util.@@ A@@ to@@ m@@ ic@@ File input@@ File = new android.util.@@ A@@ to@@ m@@ ic@@ File@@ (file@@ ); java.io.@@ Data@@ Input@@ Stream in = null@@ ; try { in = new java.io.@@ Data@@ InputStream@@ (@@ new java.io.@@ Buffer@@ ed@@ InputStream@@ (input@@ File@@ .@@ open@@ Read@@ ())); final int m@@ ag@@ i@@ c = in@@ .@@ read@@ Int@@ (); if (m@@ ag@@ i@@ c != (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ F@@ IL@@ E@@ _M@@ A@@ G@@ IC@@ )) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ (("@@ In@@ va@@ li@@ d m@@ ag@@ ic@@ : " + m@@ ag@@ ic@@ )); } final int ver@@ sion = in@@ .@@ read@@ Int@@ (); switch (@@ version@@ ) { case com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ V@@ E@@ RS@@ ION@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ IN@@ I@@ T : { final int siz@@ e = in@@ .@@ read@@ Int@@ (); for (@@ int i = 0; i < size@@ ; i++) { final com.android.server.@@ net.@@ Network@@ Id@@ enti@@ ty@@ Se@@ t id@@ ent = new com.android.server.@@ net.@@ Network@@ Id@@ enti@@ ty@@ Set@@ (in@@ ); final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y h@@ ist@@ or@@ y = new android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ (in@@ ); final com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey = new com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ (@@ id@@ ent@@ , U@@ ID@@ _@@ AL@@ L@@ , SE@@ T_@@ AL@@ L@@ , TAG@@ _N@@ ON@@ E@@ , DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ ); re@@ cord@@ H@@ ist@@ or@@ y@@ (@@ key@@ , h@@ ist@@ or@@ y@@ ); } break@@ ; } default : { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ (("@@ In@@ va@@ li@@ d version@@ : " + version@@ )); } } catch (@@ java.io.File@@ Not@@ F@@ ound@@ Exception e) { } final@@ l@@ y { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (in@@ ); } }
private android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y find@@ Or@@ Create@@ H@@ ist@@ or@@ y@@ (com.android.server.@@ net.@@ Network@@ Id@@ enti@@ ty@@ Se@@ t id@@ ent@@ , int u@@ id, int set@@ , int t@@ a@@ g@@ , int default@@ Net@@ wor@@ k@@ ) { final com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey = new com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ (@@ id@@ ent@@ , u@@ id, set@@ , t@@ a@@ g@@ ); final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y exist@@ ing = m@@ Stat@@ s.get@@ (@@ key@@ ); android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y update@@ d = null@@ ; if (@@ exist@@ ing == null@@ ) { update@@ d = new android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ (m@@ Bu@@ ck@@ et@@ D@@ ur@@ ation@@ , 1@@ 0); } else if ((@@ exist@@ ing.@@ get@@ Bu@@ ck@@ et@@ D@@ ur@@ ation@@ ()) != (m@@ Bu@@ ck@@ et@@ D@@ ur@@ ation@@ )) { update@@ d = new android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ (@@ exist@@ ing@@ , m@@ Bu@@ ck@@ et@@ D@@ ur@@ ation@@ ); } if (@@ update@@ d != null@@ ) { m@@ Stat@@ s.@@ put@@ (@@ key@@ , up@@ dat@@ ed@@ ); return up@@ dat@@ ed@@ ; } else { return exist@@ ing@@ ; } }
private void dum@@ p@@ Check@@ in@@ (@@ java.io.@@ P@@ r@@ int@@ Wri@@ ter p@@ w@@ , long start@@ , long end@@ , android.net.@@ Network@@ Temp@@ l@@ ate g@@ roup@@ Temp@@ l@@ ate@@ , java.lang.String g@@ roup@@ Pre@@ fix@@ ) { final android.util.@@ Array@@ Map@@ <@@ com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ , android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ > g@@ roup@@ ed = new android.util.@@ Array@@ Map@@ (); for (@@ int i = 0; i < (m@@ Stat@@ s.@@ size@@ ()); i++) { final com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey = m@@ Stat@@ s.@@ key@@ At@@ (i@@ ); final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y valu@@ e = m@@ Stat@@ s.@@ value@@ At@@ (i@@ ); if (!@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ te@@ mp@@ l@@ ate@@ Match@@ es@@ (@@ g@@ roup@@ Temp@@ l@@ ate@@ , k@@ e@@ y.@@ id@@ ent@@ ))) continue@@ ; if ((@@ k@@ e@@ y.@@ set@@ ) >@@ = (android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ B@@ U@@ G_@@ START@@ )) continue@@ ; final com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey g@@ roup@@ K@@ ey = new com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ (@@ null@@ , k@@ e@@ y.@@ u@@ id, k@@ e@@ y.@@ set@@ , k@@ e@@ y.@@ t@@ a@@ g@@ roup@@ , key@@ ); android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y g@@ roup@@ H@@ ist@@ or@@ y = g@@ roup@@ ed@@ .get@@ (@@ g@@ roup@@ Key@@ ); if (@@ g@@ roup@@ H@@ ist@@ or@@ y == null@@ ) { g@@ roup@@ H@@ ist@@ or@@ y = new android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ (@@ valu@@ e.get@@ Bu@@ ck@@ et@@ D@@ ur@@ ation@@ ()); g@@ roup@@ ed.@@ put@@ (@@ g@@ roup@@ Key@@ , g@@ roup@@ H@@ ist@@ or@@ y@@ ); } g@@ roup@@ H@@ ist@@ or@@ y.@@ re@@ cord@@ H@@ ist@@ or@@ y@@ (@@ value@@ , start@@ , end@@ ); } for (@@ int i = 0; i < (@@ g@@ roup@@ ed.@@ size@@ ()); i++) { final com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey = g@@ roup@@ ed.@@ key@@ At@@ (i@@ ); final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y valu@@ e = g@@ roup@@ ed.@@ value@@ At@@ (i@@ ); if ((@@ valu@@ e.@@ size@@ ()) == 0) continue@@ ; p@@ w@@ .@@ p@@ r@@ int@@ ("@@ c@@ ,@@ "); p@@ w@@ .@@ p@@ r@@ int@@ (@@ g@@ roup@@ Pre@@ fix@@ ); p@@ w@@ .@@ p@@ r@@ int@@ (@@ '@@ ,@@ '@@ ); p@@ w@@ .@@ p@@ r@@ int@@ (@@ k@@ e@@ y.@@ u@@ id@@ ); p@@ w@@ .@@ p@@ r@@ int@@ (@@ '@@ ,@@ '@@ ); p@@ w@@ .@@ p@@ r@@ int@@ (android.net.@@ Network@@ Stat@@ s.@@ set@@ To@@ Check@@ in@@ String(@@ k@@ e@@ y.@@ set@@ )); p@@ w@@ .@@ p@@ r@@ int@@ (@@ '@@ ,@@ '@@ ); p@@ w@@ .@@ p@@ r@@ int@@ (@@ '@@ ); p@@ w@@ .@@ p@@ r@@ int@@ (@@ k@@ e@@ y.@@ t@@ ag@@ ); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (); valu@@ e.@@ dum@@ p@@ Check@@ in@@ (p@@ w@@ ); } }
public void write@@ (@@ java.io.@@ Data@@ Output@@ Stream out@@ ) throw@@ s java.io.IOException { final java.util.@@ Hash@@ Map@@ <@@ com.android.server.@@ net.@@ Network@@ Id@@ enti@@ ty@@ Set@@ , java.util.ArrayList<@@ com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ >@@ > key@@ s@@ By@@ Id@@ ent = com.google.@@ android.@@ collect.@@ Map@@ s@@ .@@ new@@ Hash@@ Map@@ (); for (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey : m@@ Stat@@ s.@@ key@@ Set@@ ()) { java.util.ArrayList<@@ com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ > key@@ s = key@@ s@@ By@@ Id@@ ent.get@@ (@@ k@@ e@@ y.@@ id@@ ent@@ ); if (@@ key@@ s == null@@ ) { key@@ s = com.google.@@ android.@@ collect.@@ List@@ s@@ .@@ new@@ Array@@ List@@ (); key@@ s@@ By@@ Id@@ ent.@@ put@@ (@@ k@@ e@@ y.@@ id@@ ent@@ , key@@ s); } key@@ s.@@ add(@@ key@@ ); } out.@@ write@@ Int@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ F@@ IL@@ E@@ _M@@ A@@ G@@ IC@@ ); out.@@ write@@ Int@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ new@@ Array@@ List@@ (); key@@ s@@ By@@ Id@@ ent.@@ put@@ (@@ k@@ e@@ y.@@ id@@ ent@@ , key@@ s); } key@@ s.@@ add(@@ key@@ ); } out.@@ write@@ Int@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ F@@ IL@@ E@@ _M@@ A@@ G@@ IC@@ ); out.@@ write@@ Int@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ new@@ E@@ RS@@ ION@@ _@@ WI@@ TH@@ _@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ ); out.@@ write@@ Int@@ (@@ key@@ s@@ By@@ Id@@ ent.@@ size@@ ()); for (com.android.server.@@ net.@@ Network@@ Id@@ enti@@ ty@@ Se@@ t id@@ ent : key@@ s@@ By@@ Id@@ ent.@@ key@@ Set@@ ()) { final java.util.ArrayList<@@ com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ > key@@ s = key@@ s@@ By@@ Id@@ ent.get@@ (@@ id@@ ent@@ ); id@@ ent.@@ write@@ To@@ Stream@@ (@@ out); out.@@ write@@ Int@@ (@@ key@@ s.@@ size@@ ()); for (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey : key@@ s) { final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y h@@ ist@@ or@@ y = m@@ Stat@@ s.get@@ (@@ key@@ ); out.@@ write@@ Int@@ (@@ k@@ e@@ y.@@ u@@ id@@ ); out.@@ write@@ Int@@ (@@ k@@ e@@ y.@@ set@@ ); out.@@ write@@ Int@@ (@@ k@@ e@@ y.@@ t@@ ag@@ ); out.@@ write@@ Int@@ (@@ key@@ .@@ default@@ Network@@ ); h@@ ist@@ or@@ y.@@ write@@ To@@ Stream@@ (@@ out); } } out.@@ f@@ lu@@ sh@@ (); }
public void remove@@ U@@ id@@ s@@ (@@ int@@ [] u@@ id@@ s) { final java.util.ArrayList<@@ com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ > k@@ no@@ wn@@ Key@@ s = com.google.@@ android.@@ collect.@@ List@@ s@@ .@@ new@@ Array@@ List@@ (); k@@ no@@ wn@@ Key@@ s.@@ add@@ All@@ (m@@ Stat@@ s.@@ key@@ Set@@ ()); for (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey : k@@ no@@ wn@@ Key@@ s) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Array@@ Utils.@@ contain@@ s(@@ u@@ id@@ s, k@@ e@@ y.@@ u@@ id@@ )) { if ((@@ k@@ e@@ y.@@ t@@ ag@@ ) == (@@ TAG@@ _N@@ ON@@ E@@ )) { final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y u@@ id@@ H@@ ist@@ or@@ y = m@@ Stat@@ s.get@@ (@@ key@@ ); final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y remo@@ v@@ ed@@ H@@ ist@@ or@@ y = find@@ Or@@ Create@@ H@@ ist@@ or@@ y@@ (@@ k@@ e@@ y.@@ id@@ ent@@ , com.android.server.@@ net.@@ U@@ ID@@ _RE@@ M@@ O@@ V@@ E@@ D@@ , com.android.server.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , com.android.server.@@ net.@@ TAG@@ _N@@ ON@@ E@@ , com.android.server.@@ net.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L@@ ); remo@@ v@@ ed@@ H@@ ist@@ or@@ y.@@ re@@ cord@@ En@@ ti@@ re@@ H@@ ist@@ or@@ y@@ (@@ u@@ id@@ H@@ ist@@ or@@ y@@ ); } m@@ Stat@@ s.@@ remove@@ (@@ key@@ ); m@@ Dir@@ t@@ y = true@@ ; } } }
public android.net.@@ Network@@ Stat@@ s get@@ S@@ um@@ m@@ ary@@ (android.net.@@ Network@@ Temp@@ l@@ ate te@@ mp@@ l@@ ate@@ , long start@@ , long end@@ , @com.android.@@ server.@@ net.@@ Network@@ Stat@@ s@@ Ac@@ ces@@ s.@@ Leve@@ l int ac@@ cess@@ Level@@ , int call@@ er@@ U@@ id@@ ) { final long no@@ w = java.lang.System.@@ current@@ Time@@ Milli@@ s(); final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s@@ ((@@ en@@ d - start@@ ), 24@@ ); if (@@ st@@ ar@@ t == end@@ ) return st@@ at@@ s; final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ E@@ n@@ try h@@ ist@@ or@@ y@@ E@@ n@@ try = null@@ ; for (@@ int i = 0; i < (m@@ Stat@@ s.@@ size@@ ()); i++) { final com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey = m@@ Stat@@ s.@@ key@@ At@@ (i@@ ); if ((@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ te@@ mp@@ l@@ ate@@ Match@@ es@@ (@@ te@@ mp@@ l@@ ate@@ , k@@ e@@ y.@@ id@@ ent@@ )) && (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Ac@@ ces@@ s.@@ is@@ Ac@@ ces@@ si@@ ble@@ To@@ User@@ (@@ k@@ e@@ y.@@ u@@ id, call@@ er@@ U@@ id, ac@@ cess@@ Level@@ ))) && ((@@ k@@ e@@ y.@@ set@@ ) < (android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ B@@ U@@ G_@@ START@@ ))) { final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y valu@@ e = m@@ Stat@@ s.@@ value@@ At@@ (i@@ ); h@@ ist@@ or@@ y@@ E@@ n@@ try = valu@@ e.get@@ Valu@@ es@@ (@@ start@@ , end@@ , h@@ ist@@ or@@ y@@ E@@ n@@ try@@ ); e@@ n@@ try@@ .@@ if@@ ac@@ e = I@@ F@@ AC@@ E_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ u@@ id = k@@ e@@ y.@@ u@@ id@@ ; e@@ n@@ try@@ .@@ set = k@@ e@@ y.@@ set@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = k@@ e@@ y.@@ t@@ ag@@ ; e@@ n@@ try@@ .@@ default@@ Net@@ wor@@ k = key@@ .@@ default@@ Network@@ ; e@@ n@@ try@@ .@@ m@@ eter@@ ed = (@@ k@@ e@@ y.@@ id@@ ent.@@ is@@ An@@ y@@ M@@ em@@ b@@ er@@ M@@ eter@@ ed@@ ()) ? ME@@ TER@@ E@@ D_@@ NO@@ ; e@@ n@@ try@@ .@@ ro@@ am@@ ing = (@@ k@@ e@@ y.@@ id@@ ent.@@ is@@ An@@ y@@ M@@ em@@ b@@ er@@ R@@ o@@ am@@ ing@@ ()) ? RO@@ AM@@ ING@@ _@@ Y@@ E@@ S : RO@@ AM@@ ING@@ _N@@ O@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = h@@ ist@@ or@@ y@@ E@@ n@@ try@@ .@@ r@@ x@@ Bytes@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = h@@ ist@@ or@@ y@@ E@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = h@@ ist@@ or@@ y@@ E@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s; e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = h@@ ist@@ or@@ y@@ E@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = h@@ ist@@ or@@ y@@ E@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = h@@ ist@@ or@@ y@@ E@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s; e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s; e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s = h@@ ist@@ or@@ y@@ E@@ n@@ try@@ .@@ o@@ per@@ ation@@ s; if (!(@@ e@@ n@@ try@@ .@@ isEmpty@@ ())) { st@@ at@@ s.@@ com@@ b@@ ine@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); } } } return st@@ at@@ s; }
public void read@@ (@@ java.io.@@ Data@@ Input@@ Stream in@@ ) throw@@ s java.io.IOException { final int m@@ ag@@ i@@ c = in@@ .@@ read@@ Int@@ (); if (m@@ ag@@ i@@ c != (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ F@@ IL@@ E@@ _M@@ A@@ G@@ IC@@ )) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ (("@@ read@@ y m@@ ag@@ ic@@ : " + m@@ ag@@ ic@@ )); } final int ver@@ sion = in@@ .@@ read@@ Int@@ (); switch (@@ version@@ ) { case com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ V@@ E@@ RS@@ ION@@ _@@ UN@@ I@@ FI@@ E@@ D_@@ IN@@ I@@ T@@ : case com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ V@@ E@@ RS@@ ION@@ _@@ WI@@ TH@@ _@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ : { final int id@@ ent@@ Siz@@ e = in@@ .@@ read@@ Int@@ (); for (@@ int i = 0; i < id@@ ent@@ Size@@ ; i++) { final com.android.server.@@ net.@@ Network@@ Id@@ enti@@ ty@@ Se@@ t id@@ ent = new com.android.server.@@ net.@@ Network@@ Id@@ enti@@ ty@@ Set@@ (in@@ ); final int siz@@ e = in@@ .@@ read@@ Int@@ (); for (@@ int j = 0; j < size@@ ; j@@ ++) { final int u@@ id = in@@ .@@ read@@ Int@@ (); final int set = in@@ .@@ read@@ Int@@ (); final int t@@ a@@ g = in@@ .@@ read@@ Int@@ (); final int default@@ Net@@ wor@@ k = (@@ ver@@ sion >@@ = (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ V@@ E@@ RS@@ ION@@ _@@ WI@@ TH@@ _@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ )) ? in@@ .@@ read@@ Int@@ () : DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ Y@@ E@@ S@@ ; final com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ K@@ ey k@@ ey = new com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Collection@@ .@@ Key@@ (@@ id@@ ent@@ , u@@ id, set@@ , t@@ a@@ g@@ , default@@ Net@@ wor@@ k@@ ); final android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y h@@ ist@@ or@@ y = new android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ (in@@ ); re@@ cord@@ H@@ ist@@ or@@ y@@ (@@ key@@ , h@@ ist@@ or@@ y@@ ); } } break@@ ; } default : { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ (("@@ read@@ ing version@@ : " + version@@ )); } }
protected void exec@@ ute@@ Device@@ Test@@ Class@@ No@@ Res@@ tri@@ ct@@ B@@ ack@@ g@@ round@@ (java.lang.String class@@ Name@@ ) throw@@ s java.lang.Exception { boolean or@@ ig@@ in@@ al@@ Res@@ tr@@ ic@@ tion = en@@ su@@ re@@ Res@@ tri@@ ct@@ B@@ ack@@ g@@ round@@ Po@@ lic@@ y@@ O@@ ff@@ (); exec@@ ute@@ Device@@ Test@@ Class@@ (@@ class@@ Name); r@@ est@@ ore@@ Res@@ tri@@ ct@@ B@@ ack@@ g@@ round@@ Po@@ lic@@ y@@ To@@ (@@ or@@ ig@@ in@@ al@@ Res@@ tr@@ ic@@ tion@@ ); }
public void in@@ iti@@ aliz@@ e@@ (@@ int g@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ , int g@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ , int c@@ d@@ ma@@ D@@ b@@ m@@ , int c@@ d@@ ma@@ E@@ c@@ io@@ , int e@@ v@@ do@@ D@@ b@@ m@@ , int e@@ v@@ do@@ E@@ c@@ io@@ , int e@@ v@@ do@@ S@@ n@@ r@@ , boolean g@@ s@@ m@@ ) { in@@ iti@@ aliz@@ e(@@ g@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ , g@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ , c@@ d@@ ma@@ D@@ b@@ m@@ , c@@ d@@ ma@@ E@@ c@@ io@@ , e@@ v@@ do@@ D@@ b@@ m@@ , e@@ v@@ do@@ E@@ c@@ io@@ , e@@ v@@ do@@ S@@ n@@ r@@ , 99@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , 0, g@@ s@@ m@@ , false@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ DE@@ FA@@ UL@@ T_@@ L@@ T@@ E_@@ RS@@ R@@ P@@ _@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ ); }
public void in@@ iti@@ aliz@@ e@@ (@@ int g@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ , int g@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ , int c@@ d@@ ma@@ D@@ b@@ m@@ , int c@@ d@@ ma@@ E@@ c@@ io@@ , int e@@ v@@ do@@ D@@ b@@ m@@ , int e@@ v@@ do@@ E@@ c@@ io@@ , int e@@ v@@ do@@ S@@ n@@ r@@ , int l@@ te@@ Sign@@ al@@ Str@@ ength@@ , int l@@ te@@ Rs@@ r@@ p@@ , int l@@ te@@ Rs@@ r@@ q@@ , int l@@ te@@ R@@ ss@@ n@@ r@@ , int l@@ te@@ C@@ q@@ i@@ , int l@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ , boolean g@@ s@@ m@@ , boolean u@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l@@ , int@@ [] l@@ te@@ Rs@@ r@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s@@ ) { m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ eng@@ th = g@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ; m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate = g@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ; mC@@ d@@ ma@@ D@@ b@@ m = c@@ d@@ ma@@ D@@ b@@ m@@ ; mC@@ d@@ ma@@ E@@ c@@ i@@ o = c@@ d@@ ma@@ E@@ c@@ io@@ ; m@@ E@@ v@@ do@@ D@@ b@@ m = e@@ v@@ do@@ D@@ b@@ m@@ ; m@@ E@@ v@@ do@@ E@@ c@@ i@@ o = e@@ v@@ do@@ E@@ c@@ io@@ ; m@@ E@@ v@@ do@@ S@@ n@@ r = e@@ v@@ do@@ S@@ n@@ r@@ ; m@@ L@@ te@@ Sign@@ al@@ Str@@ eng@@ th = l@@ te@@ Sign@@ al@@ Str@@ ength@@ ; m@@ L@@ te@@ Rs@@ r@@ p = l@@ te@@ Rs@@ r@@ p@@ ; m@@ L@@ te@@ Rs@@ r@@ q = l@@ te@@ Rs@@ r@@ q@@ ; m@@ L@@ te@@ R@@ ss@@ n@@ r = l@@ te@@ R@@ ss@@ n@@ r@@ ; m@@ L@@ te@@ C@@ q@@ i = l@@ te@@ C@@ q@@ i@@ ; m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ s@@ t = l@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ; m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p = android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ ; is@@ G@@ s@@ m = g@@ s@@ m@@ ; m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l = u@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ ; set@@ L@@ te@@ Rs@@ r@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s(@@ l@@ d@@ s); if (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ D@@ B@@ G) android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ log@@ (("@@ in@@ iti@@ aliz@@ e@@ : " + (@@ toString@@ ()))); }
@org.junit.Test public void test@@ En@@ able@@ Dis@@ able@@ Dis@@ able@@ Inter@@ le@@ av@@ ed@@ () throw@@ s java.util.@@ concurrent.@@ Time@@ out@@ Exception { for (java.lang.@@ Clas@@ s pro@@ fi@@ le : m@@ Pro@@ fil@@ es) { set@@ Pro@@ file@@ State@@ (pro@@ file@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ ); set@@ Pro@@ file@@ State@@ (pro@@ file@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ); } int wait@@ Tim@@ e = com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ ; for (java.lang.@@ Clas@@ s pro@@ fi@@ le : m@@ Pro@@ fil@@ es) { ve@@ r@@ if@@ y@@ (m@@ Mock@@ Adap@@ ter@@ Service@@ , time@@ out@@ (@@ wait@@ Time@@ )).@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ e@@ q@@ (pro@@ file@@ .getName@@ ()@@ ), e@@ q@@ (@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ )); wait@@ Tim@@ e = 0; } wait@@ Tim@@ e = com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ I@@ S@@ ; for (java.lang.@@ Clas@@ s pro@@ fi@@ le : m@@ Pro@@ fil@@ es) { ve@@ r@@ if@@ y@@ (m@@ Mock@@ Adap@@ ter@@ Service@@ , time@@ out@@ (@@ wait@@ Tim@@ e.@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ e@@ q@@ (pro@@ file@@ .getName@@ ()@@ ), e@@ q@@ (@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ )); wait@@ Tim@@ e = 0; } }
private void update@@ B@@ utton@@ State@@ () { java.lang.String ho@@ st@@ name = m@@ Host@@ name@@ View@@ .get@@ Text@@ ().@@ toString@@ (); java.util.@@ reg@@ ex@@ .@@ Match@@ er ur@@ i@@ Match@@ er = com.android.@@ b@@ ip@@ s.@@ ui.@@ Add@@ Man@@ ual@@ P@@ r@@ int@@ er@@ Di@@ alo@@ g@@ .@@ P@@ R@@ IN@@ T@@ ER_@@ UR@@ I@@ _P@@ AT@@ TER@@ N@@ .@@ match@@ er(@@ ho@@ st@@ name@@ ); m@@ Add@@ B@@ utton@@ .set@@ Enabled@@ (@@ ur@@ i@@ Match@@ er.@@ match@@ es@@ ()); }
public void add@@ Man@@ ual@@ P@@ r@@ int@@ er@@ (java.lang.String ur@@ i@@ Str@@ ing@@ , com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ P@@ r@@ int@@ er@@ Add@@ Call@@ b@@ ac@@ k call@@ back@@ ) { if (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ TAG, ("@@ add@@ Man@@ ual@@ P@@ r@@ int@@ er " + ur@@ i@@ String@@ )); android.net.@@ Ur@@ i p@@ r@@ int@@ er@@ Ur@@ i = android.net.@@ U@@ ri@@ .@@ parse@@ (("@@ ip@@ p@@ :@@ /@@ /@@ " + ur@@ i@@ String@@ )); int g@@ i@@ v@@ en@@ P@@ or@@ t = p@@ r@@ int@@ er@@ U@@ ri@@ .get@@ P@@ ort@@ (); java.lang.String g@@ i@@ v@@ en@@ Path = p@@ r@@ int@@ er@@ U@@ ri@@ .get@@ Path@@ (); java.lang.String ho@@ st@@ name@@ ; if (@@ ho@@ st@@ name@@ ) { android.net.@@ Ur@@ i ur@@ is = p@@ r@@ int@@ er@@ U@@ ri@@ .get@@ Host@@ (); java.util.@@ Set@@ <@@ android.net.@@ U@@ ri@@ > ur@@ is = new java.util.@@ Lin@@ k@@ ed@@ Hash@@ Set@@ <@@ >(); for (android.net.@@ Ur@@ i ur@@ i : com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ IP@@ P@@ _@@ UR@@ IS@@ ) { java.lang.String au@@ th@@ or@@ it@@ y = (@@ ho@@ st@@ name + "@@ :@@ ") + (@@ g@@ i@@ v@@ en@@ P@@ or@@ t == (-1@@ ) ? ur@@ i@@ .get@@ P@@ ort@@ () : g@@ i@@ v@@ en@@ P@@ ort@@ ); java.lang.String pat@@ h = (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ g@@ i@@ v@@ en@@ Path@@ )) ? ur@@ i@@ .get@@ Path@@ () : g@@ i@@ v@@ en@@ Path@@ ; ur@@ is.@@ add(@@ ur@@ i.@@ build@@ U@@ pon@@ ().@@ en@@ cod@@ ed@@ Au@@ th@@ or@@ ity@@ (@@ au@@ th@@ or@@ ity@@ ).@@ path@@ (p@@ ath@@ ).@@ build@@ ()); } new com.android.@@ b@@ ip@@ s.@@ dis@@ co@@ ver@@ y.@@ Man@@ ual@@ Dis@@ co@@ ver@@ y.@@ Cap@@ abili@@ ties@@ F@@ in@@ der@@ (@@ ur@@ is@@ , call@@ back@@ ); }
@java.lang.Override public java.lang.String toString@@ () { java.lang.String ic@@ c@@ Id@@ To@@ P@@ r@@ int = android.@@ telephony.@@ Sub@@ s@@ cription@@ Info.@@ g@@ i@@ ve@@ P@@ r@@ int@@ able@@ I@@ cc@@ id@@ (m@@ I@@ cc@@ Id@@ ); return ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ("@@ {@@ id@@ =@@ " + (m@@ Id@@ )) + ", ic@@ c@@ Id@@ =@@ ") + ic@@ c@@ Id@@ To@@ P@@ r@@ int@@ ) + " si@@ mS@@ lo@@ t@@ Index@@ =@@ ") + (m@@ Sim@@ S@@ lo@@ t@@ Index@@ )) + " dis@@ play@@ Name@@ =@@ ") + (m@@ Display@@ Name@@ )) + ", c@@ ar@@ ri@@ er@@ Name@@ =@@ ") + (m@@ C@@ ar@@ ri@@ er@@ Name@@ )) + ", name@@ Source@@ =@@ ") + (m@@ Name@@ Source@@ )) + ", i@@ con@@ T@@ int@@ =@@ ") + (m@@ I@@ con@@ T@@ int@@ )) + " data@@ R@@ o@@ am@@ ing@@ =@@ ") + (m@@ Data@@ R@@ o@@ am@@ ing@@ )) + ", i@@ con@@ Bit@@ m@@ ap@@ =@@ ") + (m@@ I@@ con@@ Bit@@ m@@ ap@@ )) + ", m@@ c@@ c ") + (m@@ M@@ n@@ c@@ )) + ", m@@ c@@ c ") + (m@@ M@@ n@@ c@@ )) + ", is@@ E@@ m@@ b@@ ed@@ de@@ d ") + (m@@ I@@ s@@ E@@ m@@ b@@ ed@@ d@@ ed@@ )) + " ac@@ cess@@ R@@ ule@@ s ") + (@@ java.util.Arrays.@@ toString@@ (m@@ Access@@ R@@ ul@@ )) + ", c@@ ard@@ Id@@ =@@ ") + (m@@ C@@ ard@@ Id@@ )) + "@@ }@@ "; }
public java.lang.String get@@ C@@ ard@@ Id@@ () { return (@@ this@@ .@@ mC@@ ard@@ Id@@ ) == null ? "@@ " : this@@ .@@ mC@@ ard@@ Id@@ ; }
public void update@@ (android.@@ content.@@ Context c@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ s@@ Inter@@ face c@@ i@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Statu@@ s ic@@ s) { synchronized@@ (m@@ Lock) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State old@@ State = mC@@ ard@@ State@@ ; mC@@ ard@@ State = ic@@ s.@@ mC@@ ard@@ State@@ ; m@@ Context = c@@ ; mC@@ i = c@@ i@@ ; m@@ I@@ cc@@ id@@ ; mC@@ ard@@ Id@@ ; mC@@ ard@@ Id@@ s = ic@@ s.@@ ic@@ c@@ id@@ ; if ((m@@ C@@ ard@@ State@@ ) != (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ AB@@ S@@ EN@@ T@@ )) { if ((m@@ U@@ ic@@ c@@ Pro@@ file@@ ) == null@@ ) { m@@ U@@ ic@@ c@@ Pro@@ fi@@ le = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file@@ (m@@ Context@@ , mC@@ i@@ , ic@@ s, m@@ Phone@@ Id, this@@ ); } else { m@@ U@@ ic@@ c@@ Pro@@ file.@@ update@@ (m@@ Context@@ , mC@@ i@@ , ic@@ s); } } else { throw new java.lang.@@ RuntimeException@@ ("@@ C@@ ard@@ State st@@ ate is ab@@ s@@ ent wh@@ e@@ n up@@ dat@@ ing@@ !@@ "); } } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing@@ (@@ vi@@ si@@ b@@ ili@@ t@@ y = Vi@@ si@@ ble@@ For@@ Test@@ ing.@@ Vi@@ si@@ b@@ ili@@ t@@ y.@@ P@@ AC@@ K@@ A@@ GE@@ ) public android.net.@@ Ur@@ i in@@ ser@@ t@@ Empty@@ Sub@@ Info@@ Record@@ (java.lang.String ic@@ c@@ Id, int s@@ lo@@ t@@ Index@@ ) { android.content.@@ Content@@ Res@@ ol@@ ve@@ r res@@ ol@@ ve@@ r = m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (); android.content.@@ Content@@ Value@@ s valu@@ e = new android.content.@@ Content@@ Valu@@ es@@ (); valu@@ e.@@ put@@ (@@ Sub@@ s@@ cription@@ Manager.@@ IC@@ C@@ _@@ ID@@ , ic@@ c@@ Id@@ ); int co@@ lo@@ r = get@@ Un@@ u@@ sed@@ Col@@ or@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ ()); valu@@ e.@@ put@@ (@@ Sub@@ s@@ cription@@ Manager.@@ C@@ O@@ LO@@ R@@ , col@@ or@@ ); valu@@ e.@@ put@@ (@@ Sub@@ s@@ cription@@ Manager.@@ SI@@ M@@ _S@@ LO@@ T_@@ IN@@ DE@@ X@@ , s@@ lo@@ t@@ Index@@ ); valu@@ e.@@ put@@ (@@ Sub@@ s@@ cription@@ Manager.@@ C@@ AR@@ R@@ I@@ ER@@ _N@@ AM@@ E, "@@ "); java.lang.String c@@ ard@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ U@@ ic@@ c@@ C@@ ard@@ For@@ Phone@@ (s@@ lo@@ t@@ Index@@ )@@ .get@@ C@@ ard@@ Id@@ (); if (c@@ ard@@ Id != null@@ ) { valu@@ e.@@ put@@ (@@ Sub@@ s@@ cription@@ Manager.@@ C@@ AR@@ D_@@ ID@@ , c@@ ard@@ Id@@ ); } else { valu@@ e.@@ put@@ (@@ Sub@@ s@@ cription@@ Manager.@@ C@@ AR@@ D_@@ ID@@ , ic@@ c@@ Id@@ ); } android.net.@@ Ur@@ i ur@@ i = res@@ ol@@ ver.@@ in@@ ser@@ t@@ (@@ Sub@@ s@@ cription@@ Manager.@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , value@@ ); ref@@ res@@ h@@ Cach@@ ed@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ List@@ (); return ur@@ i@@ ; }
private void handle@@ Sim@@ Lock@@ ed@@ (@@ int s@@ lo@@ t@@ Id, java.lang.String re@@ as@@ on@@ ) { if (((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ ) != null@@ ) && (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ equals(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ IC@@ C@@ ID@@ _S@@ TR@@ ING@@ _@@ F@@ OR@@ _N@@ O@@ _@@ SI@@ M@@ ))) { log@@ d@@ ((@@ ("@@ SI@@ M@@ " + (s@@ lo@@ t@@ Id + 1@@ )) + " ho@@ t p@@ lu@@ g in com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ] = null@@ ; } java.lang.String ic@@ c@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ]; if (@@ ic@@ c@@ Id == null@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s re@@ cord@@ s = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ Phone@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .get@@ I@@ cc@@ C@@ ard@@ ().get@@ I@@ cc@@ Record@@ s(); if ((@@ str@@ ip@@ I@@ cc@@ Id@@ Su@@ f@@ fix@@ (re@@ cord@@ s.get@@ F@@ ull@@ I@@ cc@@ Id@@ ())) == null@@ ) { log@@ d@@ ("@@ I@@ cc@@ I@@ D null return@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ] = str@@ ip@@ I@@ cc@@ Id@@ Su@@ f@@ fix@@ (re@@ cord@@ s.get@@ F@@ ull@@ I@@ cc@@ Id@@ ()); } else { log@@ d@@ ((@@ (("@@ Q@@ u@@ er@@ y@@ ing I@@ cc@@ Id it@@ s al@@ read@@ y set s@@ I@@ cc@@ id@@ [@@ " + s@@ lo@@ t@@ Id@@ ) + "@@ ]@@ =@@ ") + ic@@ c@@ Id@@ )); } if (is@@ All@@ I@@ cc@@ Id@@ Q@@ u@@ er@@ y@@ D@@ one@@ ()) { update@@ Sub@@ s@@ cription@@ Info@@ By@@ I@@ cc@@ Id@@ (); } update@@ C@@ ar@@ ri@@ er@@ Ser@@ vices@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ C@@ KE@@ D@@ ); b@@ roadcast@@ Sim@@ State@@ Changed@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ C@@ KE@@ D@@ , re@@ as@@ on@@ ); b@@ roadcast@@ Sim@@ C@@ ard@@ State@@ Changed@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _P@@ RE@@ S@@ EN@@ T@@ ); b@@ roadcast@@ Sim@@ Application@@ State@@ Changed@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ LO@@ C@@ KE@@ D@@ , re@@ as@@ on@@ ); }
private void handle@@ Sim@@ Ab@@ s@@ ent@@ (@@ int s@@ lo@@ t@@ Id@@ ) { if (((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ ) != null@@ ) && (!(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ equals(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ IC@@ C@@ ID@@ _S@@ TR@@ ING@@ _@@ F@@ OR@@ _N@@ O@@ _@@ SI@@ M@@ )@@ ))) { log@@ d@@ ((@@ ("@@ SI@@ M@@ " + (s@@ lo@@ t@@ Id + 1@@ )) + " ho@@ t p@@ lu@@ g out ")); } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ] = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ IC@@ C@@ ID@@ _S@@ TR@@ ING@@ _@@ F@@ OR@@ _N@@ O@@ _@@ SI@@ M@@ ; if (is@@ All@@ I@@ cc@@ Id@@ Q@@ u@@ er@@ y@@ D@@ one@@ ()) { update@@ Sub@@ s@@ cription@@ Info@@ By@@ I@@ cc@@ Id@@ (); } update@@ C@@ ar@@ ri@@ er@@ Ser@@ vices@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ AB@@ S@@ EN@@ T@@ ); b@@ roadcast@@ Sim@@ State@@ Changed@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ AB@@ S@@ EN@@ T@@ , null@@ ); b@@ roadcast@@ Sim@@ C@@ ard@@ State@@ Changed@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ AB@@ S@@ EN@@ T@@ ); b@@ roadcast@@ Sim@@ Application@@ State@@ Changed@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _N@@ O@@ T_@@ RE@@ AD@@ Y@@ , null@@ ); }
private void b@@ roadcast@@ Sim@@ Application@@ State@@ Changed@@ (@@ int phon@@ e@@ Id, java.lang.String state@@ , java.lang.String re@@ as@@ on@@ ) { if (!(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ s@@ Sim@@ Application@@ State@@ [@@ phon@@ e@@ Id@@ ]@@ .@@ equals(@@ state@@ ))) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ s@@ Sim@@ Application@@ State@@ [@@ phon@@ e@@ Id@@ ] = state@@ ; android.content.@@ Int@@ ent i = new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _@@ SI@@ M@@ _@@ AP@@ P@@ L@@ IC@@ AT@@ ION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); i.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ E@@ F@@ OR@@ E_@@ B@@ O@@ O@@ T@@ ); i.@@ put@@ Extra@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ KE@@ Y_@@ IC@@ C@@ _@@ STA@@ TE@@ , state@@ ); i.@@ put@@ Extra@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ KE@@ Y_@@ LO@@ C@@ KE@@ D_@@ RE@@ A@@ S@@ ON@@ , re@@ as@@ on@@ ); android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ put@@ Phone@@ Id@@ Extra@@ (i@@ , phon@@ e@@ Id@@ ); log@@ d@@ ((((@@ (("@@ B@@ roadcast@@ ing int@@ ent AC@@ TION@@ _@@ SI@@ M@@ _@@ AP@@ P@@ L@@ IC@@ AT@@ ION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D " + state@@ ) + " re@@ as@@ on ") + re@@ as@@ on@@ ) + " for phon@@ e@@ : ") + phon@@ e@@ Id@@ )); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Intent@@ B@@ roadcast@@ er.get@@ Instance@@ ().@@ b@@ roadcast@@ S@@ ti@@ ck@@ y@@ Intent@@ (i@@ , User@@ Hand@@ le.@@ US@@ ER_@@ AL@@ L); } }
private void b@@ roadcast@@ Sim@@ C@@ ard@@ State@@ Changed@@ (@@ int phon@@ e@@ Id, java.lang.String state@@ ) { if (!(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ s@@ Sim@@ C@@ ard@@ State@@ [@@ phon@@ e@@ Id@@ ]@@ .@@ equals(@@ state@@ ))) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ s@@ Sim@@ C@@ ard@@ State@@ [@@ phon@@ e@@ Id@@ ] = state@@ ; android.content.@@ Int@@ ent i = new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _@@ SI@@ M@@ _C@@ AR@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); i.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ E@@ F@@ OR@@ E_@@ B@@ O@@ O@@ O@@ T@@ ); i.@@ put@@ Extra@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ KE@@ Y_@@ IC@@ C@@ _@@ STA@@ TE@@ , state@@ ); android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ put@@ Phone@@ Id@@ And@@ Sub@@ Id@@ Extra@@ (i@@ , phon@@ e@@ Id@@ ); log@@ d@@ ((@@ (("@@ B@@ roadcast@@ ing int@@ ent AC@@ TION@@ _@@ SI@@ M@@ _C@@ AR@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D " + state@@ ) + " for phon@@ e@@ : ") + phon@@ e@@ Id@@ )); android.@@ app.@@ Activity@@ Manager.@@ b@@ roadcast@@ S@@ ti@@ ck@@ y@@ Intent@@ (i@@ , User@@ Hand@@ le.@@ US@@ ER_@@ AL@@ L); } }
private void handle@@ Sim@@ Error@@ (@@ int s@@ lo@@ t@@ Id@@ ) { if (((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ ) != null@@ ) && (!(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ equals(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ IC@@ C@@ ID@@ _S@@ TR@@ ING@@ _@@ F@@ OR@@ _N@@ O@@ _@@ SI@@ M@@ )@@ ))) { log@@ d@@ ((@@ ("@@ SI@@ M@@ " + (s@@ lo@@ t@@ Id + 1@@ )) + " Er@@ ror ")); } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ m@@ I@@ cc@@ Id@@ [@@ s@@ lo@@ t@@ Id@@ ] = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ Up@@ dat@@ er.@@ IC@@ C@@ ID@@ _S@@ TR@@ ING@@ _@@ F@@ OR@@ _N@@ O@@ _@@ SI@@ M@@ ; if (is@@ All@@ I@@ cc@@ Id@@ Q@@ u@@ er@@ y@@ D@@ one@@ ()) { update@@ Sub@@ s@@ cription@@ Info@@ By@@ I@@ cc@@ Id@@ (); } update@@ C@@ ar@@ ri@@ er@@ Ser@@ vices@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _C@@ AR@@ D_@@ IO@@ _@@ ER@@ RO@@ R@@ ); b@@ roadcast@@ Sim@@ State@@ Changed@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _C@@ AR@@ D_@@ IO@@ _@@ ER@@ RO@@ R@@ , I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _C@@ AR@@ D_@@ IO@@ _@@ ER@@ RO@@ R@@ ); b@@ roadcast@@ Sim@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _C@@ AR@@ D_@@ IO@@ _@@ ER@@ RO@@ R@@ ); b@@ roadcast@@ Sim@@ Application@@ State@@ Changed@@ (s@@ lo@@ t@@ Id, I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _N@@ O@@ T_@@ RE@@ AD@@ Y@@ , null@@ ); }
public long s@@ pli@@ ce@@ (java.io.FileDescriptor fd@@ In@@ , libcore.@@ util.@@ M@@ ut@@ able@@ Lon@@ g o@@ ff@@ In@@ , java.io.FileDescriptor fd@@ Out@@ , libcore.@@ util.@@ M@@ ut@@ able@@ Lon@@ g o@@ ff@@ Out@@ , long l@@ en@@ , int flag@@ s) throw@@ s android.system.Errno@@ Exception;
public static long s@@ pli@@ ce@@ (java.io.FileDescriptor fd@@ In@@ , android.system.@@ Int@@ 6@@ 4@@ Re@@ f o@@ ff@@ In@@ , java.io.FileDescriptor fd@@ Out@@ , android.system.@@ Int@@ 6@@ 4@@ Re@@ f o@@ ff@@ Out@@ , long l@@ en@@ , int flag@@ s) throw@@ s android.system.Errno@@ Exception { libcore.@@ util.@@ M@@ ut@@ able@@ Lon@@ g int@@ er@@ n@@ al@@ O@@ ff@@ I@@ n = (@@ o@@ ff@@ I@@ n == null@@ ) ? null : new libcore.@@ util.@@ M@@ ut@@ able@@ Long@@ (@@ o@@ ff@@ In@@ .@@ value@@ ); libcore.@@ util.@@ M@@ ut@@ able@@ Lon@@ g int@@ er@@ n@@ al@@ O@@ ff@@ O@@ u@@ t = (@@ o@@ ff@@ O@@ u@@ t == null@@ ) ? null : new libcore.@@ util.@@ M@@ ut@@ able@@ Long@@ (@@ o@@ ff@@ O@@ u@@ t.@@ value@@ ); try { return Lib@@ core.@@ os.@@ s@@ pli@@ ce@@ (@@ fd@@ In@@ , int@@ er@@ n@@ al@@ O@@ ff@@ In@@ , fd@@ Out@@ , int@@ er@@ n@@ al@@ O@@ ff@@ Out@@ , l@@ en@@ , flag@@ s); } final@@ l@@ y { if (@@ o@@ ff@@ I@@ n != null@@ ) { o@@ ff@@ In@@ .@@ valu@@ e = int@@ er@@ n@@ al@@ O@@ ff@@ In@@ .@@ value@@ ; } if (@@ o@@ ff@@ O@@ u@@ t != null@@ ) { o@@ ff@@ O@@ u@@ t.@@ valu@@ e = int@@ er@@ n@@ al@@ O@@ ff@@ O@@ u@@ t.@@ value@@ ; } }
public long s@@ pli@@ ce@@ (java.io.FileDescriptor fd@@ In@@ , libcore.@@ util.@@ M@@ ut@@ able@@ Lon@@ g o@@ ff@@ In@@ , java.io.FileDescriptor fd@@ Out@@ , libcore.@@ util.@@ M@@ ut@@ able@@ Lon@@ g o@@ ff@@ Out@@ , long l@@ en@@ , int flag@@ s) throw@@ s android.system.Errno@@ Exception { return os.@@ s@@ pli@@ ce@@ (@@ fd@@ In@@ , o@@ ff@@ In@@ , fd@@ Out@@ , o@@ ff@@ Out@@ , l@@ en@@ , flag@@ s); }
public native long s@@ pli@@ ce@@ (java.io.FileDescriptor fd@@ In@@ , libcore.@@ util.@@ M@@ ut@@ able@@ Lon@@ g o@@ ff@@ In@@ , java.io.FileDescriptor fd@@ Out@@ , libcore.@@ util.@@ M@@ ut@@ able@@ Lon@@ g o@@ ff@@ Out@@ , long l@@ en@@ , int flag@@ s) throw@@ s android.system.Errno@@ Exception;
@java.lang.Override public void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (); android.os.@@ Bund@@ le b@@ und@@ le = new android.os.@@ Bund@@ le@@ (); b@@ und@@ le.@@ put@@ Long@@ (@@ com.@@ android@@ .@@ do@@ c@@ ument@@ su@@ i.@@ St@@ u@@ b@@ Provid@@ er.@@ EX@@ TR@@ A@@ _@@ SIZ@@ E, 5@@ 00@@ L); m@@ Doc@@ s@@ Helper.@@ config@@ ure@@ (@@ null@@ , b@@ und@@ le@@ ); init@@ Test@@ Files@@ (); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Test@@ No@@ t@@ if@@ ic@@ ation@@ Service.@@ AC@@ TION@@ _@@ O@@ P@@ ER@@ AT@@ ION@@ _RE@@ S@@ UL@@ T@@ ); con@@ text.@@ register@@ Recei@@ ver@@ (m@@ Recei@@ ver@@ , fil@@ ter@@ ); con@@ text.@@ send@@ B@@ roadcast@@ (@@ new android.content.@@ Intent@@ (@@ com.@@ android@@ .@@ do@@ c@@ ument@@ su@@ i.@@ ser@@ vices@@ .@@ Test@@ No@@ t@@ if@@ ic@@ ation@@ Service.@@ AC@@ TION@@ _C@@ H@@ AN@@ G@@ E_@@ C@@ AN@@ CE@@ L@@ L@@ _MOD@@ E@@ )); m@@ Oper@@ ation@@ Exec@@ u@@ ted = false@@ ; m@@ Error@@ Re@@ as@@ on = respon@@ se f@@ ro@@ m No@@ t@@ if@@ ic@@ ation m@@ Count@@ Do@@ wn@@ L@@ at@@ ch = new java.util.@@ concurrent.@@ Count@@ Do@@ wn@@ L@@ atch@@ (1@@ ); }
private boolean scan@@ Comp@@ let@@ e@@ Statu@@ s() { return ((@@ (m@@ Network@@ Scan@@ Statu@@ s) == (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ EV@@ ENT_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ C@@ AN@@ _C@@ O@@ M@@ P@@ LE@@ TE@@ D@@ )) && ((m@@ Scan@@ Result@@ s) != null@@ )) || ((m@@ Network@@ Scan@@ Statu@@ s) == (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ EV@@ ENT_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ C@@ AN@@ _@@ ER@@ RO@@ R@@ )); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { if ((m@@ Listener@@ ) != null@@ ) { m@@ Telephony@@ Manager.@@ list@@ en@@ (m@@ Listener@@ , Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); } m@@ Test@@ Handler@@ Thread@@ .@@ qu@@ it@@ (); }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { m@@ Telephony@@ Manager = ((@@ android.@@ telephony.@@ Telephony@@ Manager@@ ) (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ get@@ Context@@ ().get@@ System@@ Service@@ (@@ Context.@@ TE@@ LE@@ P@@ H@@ ON@@ Y@@ _S@@ ER@@ V@@ IC@@ E@@ ))); android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ mC@@ m = ((@@ android.net.@@ Connectivity@@ Manager@@ ) (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ get@@ Context@@ ().get@@ System@@ Service@@ (@@ Context.@@ C@@ ON@@ N@@ EC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E@@ ))); m@@ Package@@ Manager = android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ get@@ Context@@ ().get@@ Package@@ Manager@@ (); m@@ Network@@ Scan@@ Statu@@ s = android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ EV@@ ENT_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ C@@ AN@@ _C@@ O@@ M@@ P@@ LE@@ TE@@ D@@ ; m@@ Test@@ Handler@@ Th@@ re@@ ad = new android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ Network@@ Scan@@ Handler@@ Thread@@ (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ TAG@@ ); m@@ Test@@ Handler@@ Thread@@ .@@ start@@ (); }
@org.junit.Test public void test@@ Request@@ Network@@ Scan@@ () throw@@ s java.lang.@@ Interrup@@ ted@@ Exception { if (!(m@@ Telephony@@ Manager.@@ has@@ C@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ es@@ ())) { android.util.Log.d@@ (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ TAG, "@@ S@@ k@@ ip@@ p@@ ing t@@ est th@@ at requ@@ i@@ re@@ s c@@ ar@@ ri@@ er p@@ ri@@ vi@@ le@@ g@@ es.@@ "); return@@ ; } int r@@ an@@ G@@ s@@ m = R@@ ad@@ io@@ Network@@ Constants.@@ R@@ ad@@ io@@ Access@@ Network@@ s.@@ G@@ ER@@ AN@@ ; int@@ [] g@@ s@@ m@@ B@@ and@@ s = new int@@ []{ R@@ ad@@ io@@ Network@@ Constants.@@ G@@ er@@ an@@ B@@ and@@ s.@@ B@@ AN@@ D_@@ T@@ 3@@ 8@@ 0, R@@ ad@@ io@@ Network@@ Constants.@@ G@@ er@@ an@@ B@@ and@@ s.@@ B@@ AN@@ D_@@ T@@ 4@@ 1@@ 0 }; int@@ [] g@@ s@@ m@@ Channel@@ s = new int@@ []{ 1, 2, 3@@ , 4 }; android.@@ telephony.@@ R@@ ad@@ io@@ Access@@ S@@ pe@@ c@@ if@@ i@@ er g@@ s@@ m = new android.@@ telephony.@@ R@@ ad@@ io@@ Access@@ S@@ pe@@ c@@ if@@ i@@ er(@@ r@@ an@@ G@@ s@@ m@@ , g@@ s@@ m@@ B@@ and@@ s, g@@ s@@ m@@ Channel@@ s); int r@@ an@@ L@@ t@@ e = R@@ ad@@ io@@ Network@@ Constants.@@ R@@ ad@@ io@@ Access@@ Network@@ s.@@ E@@ UT@@ R@@ AN@@ ; int@@ [] l@@ te@@ B@@ and@@ s = new int@@ []{ R@@ ad@@ io@@ Network@@ Constants.@@ E@@ u@@ tr@@ an@@ B@@ and@@ s.@@ B@@ AN@@ D_@@ 1@@ 0, R@@ ad@@ io@@ Network@@ Constants.@@ E@@ u@@ tr@@ an@@ B@@ and@@ s.@@ B@@ AN@@ D_@@ 1@@ 1 }; int@@ [] l@@ te@@ Channel@@ s = new int@@ []{ 5, 6@@ , 7@@ , 8 }; android.@@ telephony.@@ R@@ ad@@ io@@ Access@@ S@@ pe@@ c@@ if@@ i@@ er l@@ t@@ e = new android.@@ telephony.@@ R@@ ad@@ io@@ Access@@ S@@ pe@@ c@@ if@@ i@@ er(@@ r@@ an@@ L@@ te@@ , l@@ te@@ B@@ and@@ s, l@@ te@@ Channel@@ s); android.@@ telephony.@@ R@@ ad@@ io@@ Access@@ S@@ pe@@ c@@ if@@ ier@@ [] rad@@ io@@ Access@@ S@@ pe@@ c@@ if@@ i@@ er = new android.@@ telephony.@@ R@@ ad@@ io@@ Access@@ S@@ pe@@ c@@ if@@ ier@@ []{ g@@ s@@ m@@ , l@@ t@@ e }; m@@ Network@@ Scan@@ Requ@@ est = new android.@@ telephony.@@ Network@@ Scan@@ Request@@ (android.@@ telephony.@@ Network@@ Scan@@ Requ@@ est.@@ S@@ C@@ AN@@ _@@ TYP@@ E_@@ ON@@ E_@@ S@@ H@@ O@@ T@@ , rad@@ io@@ Access@@ S@@ pe@@ c@@ if@@ ier@@ , 5, 6@@ 0, true@@ , 1@@ 0, null@@ ); m@@ Network@@ Scan@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ Network@@ Scan@@ Callback@@ Imp@@ l@@ (); android.os.@@ Mess@@ age start@@ Network@@ S@@ c@@ an = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ EV@@ ENT_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ C@@ AN@@ _@@ START@@ ); start@@ Network@@ Scan@@ .@@ send@@ To@@ Target@@ (); java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ MA@@ X@@ _@@ IN@@ I@@ T_@@ W@@ A@@ I@@ T@@ _M@@ S@@ ); android.util.Log.d@@ (android.@@ telephony.@@ cts.@@ Telephony@@ Manager@@ Test.@@ TAG, ("@@ m@@ Network@@ Scan@@ Statu@@ s@@ : " + (m@@ Network@@ Scan@@ Statu@@ s@@ ))); assert@@ True@@ ("@@ Th@@ e sc@@ an statu@@ s is not Scan@@ Comp@@ let@@ ed or Scan@@ Error@@ ", scan@@ Comp@@ let@@ ed or Scan@@ Error@@ ", scan@@ Comp@@ let@@ e@@ Statu@@ s()); }
@org.junit.Test public void test@@ D@@ el@@ et@@ e@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g ip@@ Sec@@ Con@@ fi@@ g = new android.net.@@ I@@ p@@ Sec@@ Config@@ (); add@@ Default@@ S@@ p@@ is@@ And@@ Remote@@ Add@@ r@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); add@@ Au@@ th@@ And@@ C@@ ryp@@ t@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Respon@@ se create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service@@ .@@ create@@ Tr@@ an@@ s@@ for@@ m@@ (@@ ip@@ Sec@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); m@@ I@@ p@@ Sec@@ Service.@@ delet@@ e@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), an@@ y@@ String@@ (), an@@ y@@ String@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ )); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ I@@ p@@ Sec@@ Service.@@ m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.@@ system.@@ O@@ s.get@@ u@@ id@@ ()); assert@@ Equal@@ s(@@ 0, user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ m@@ Current@@ ); try { user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ); fail@@ ("@@ S@@ ho@@ ul@@ d Illegal@@ Argument@@ Exception on at@@ te@@ mp@@ t to ac@@ ces@@ s delet@@ ed@@ "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } }
@org.junit.@@ B@@ e@@ for@@ e@@ Clas@@ s public static void pre@@ par@@ e@@ A@@ g@@ ent@@ 3@@ () throw@@ s java.lang.Exception { android.@@ j@@ vm@@ ti@@ .@@ att@@ ach@@ ing.@@ cts.@@ At@@ t@@ ach@@ ing@@ Test.@@ s@@ A@@ g@@ ent@@ File@@ 3 = android.@@ j@@ vm@@ ti@@ .@@ att@@ ach@@ ing.@@ cts.@@ At@@ t@@ ach@@ ing@@ Test.@@ copy@@ A@@ g@@ ent@@ To@@ File@@ ("@@ j@@ vm@@ ti@@ att@@ ach@@ ing@@ test@@ ag@@ ent@@ 3@@ "); }
@org.junit.@@ B@@ e@@ for@@ e@@ Clas@@ s public static void pre@@ par@@ e@@ A@@ g@@ ent@@ () throw@@ s java.lang.Exception { android.@@ j@@ vm@@ ti@@ .@@ att@@ ach@@ ing.@@ cts.@@ At@@ t@@ ach@@ ing@@ Test.@@ s@@ A@@ g@@ ent@@ File = android.@@ j@@ vm@@ ti@@ .@@ att@@ ach@@ ing.@@ cts.@@ At@@ t@@ ach@@ ing@@ Test.@@ copy@@ A@@ g@@ ent@@ To@@ File@@ ("@@ j@@ vm@@ ti@@ att@@ ach@@ ing@@ test@@ ag@@ ent@@ "); }
public com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ S@@ lo@@ t get@@ U@@ ic@@ c@@ S@@ lo@@ t@@ For@@ C@@ ard@@ Id@@ (java.lang.String c@@ ard@@ Id@@ ) { synchronized@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ ler.@@ m@@ Lock) { for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ S@@ lo@@ t u@@ ic@@ c@@ S@@ lo@@ t : m@@ U@@ ic@@ c@@ S@@ lo@@ t@@ s) { if (@@ u@@ ic@@ c@@ S@@ lo@@ t != null@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ar@@ d u@@ ic@@ c@@ C@@ ar@@ d = u@@ ic@@ c@@ S@@ lo@@ t.get@@ U@@ ic@@ c@@ C@@ ard@@ (); if (@@ u@@ ic@@ c@@ C@@ ar@@ d != null@@ ) { if (@@ false@@ ) { return u@@ ic@@ c@@ S@@ lo@@ t@@ ; } } } } for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ S@@ lo@@ t u@@ ic@@ c@@ S@@ lo@@ t : m@@ U@@ ic@@ c@@ S@@ lo@@ t@@ s) { if ((@@ u@@ ic@@ c@@ S@@ lo@@ t != null@@ ) && (c@@ ard@@ Id@@ .@@ equals(@@ u@@ ic@@ c@@ S@@ lo@@ t.get@@ I@@ cc@@ Id@@ ()))) { return u@@ ic@@ c@@ S@@ lo@@ t@@ ; } } } return null@@ ; }
@org.junit.Test public void test@@ Create@@ T@@ w@@ o@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ ms@@ With@@ S@@ ame@@ S@@ p@@ is@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g ip@@ Sec@@ Con@@ fi@@ g = new android.net.@@ I@@ p@@ Sec@@ Config@@ (); add@@ Default@@ S@@ p@@ is@@ And@@ Remote@@ Add@@ r@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); add@@ Au@@ th@@ And@@ C@@ ryp@@ t@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Respon@@ se create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ ip@@ Sec@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); assert@@ Equal@@ s(@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ O@@ K@@ , create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ statu@@ s); try { m@@ I@@ p@@ Sec@@ Service.@@ create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ ip@@ Sec@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); fail@@ ("@@ I@@ p@@ Sec@@ Ser@@ vice sho@@ ul@@ d h@@ av@@ e throw@@ n an er@@ ror for re@@ u@@ se of S@@ P@@ I@@ "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () { org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); do@@ Return@@ (m@@ He@@ ad@@ set@@ Service@@ ).@@ when@@ (m@@ Service@@ Factory@@ )@@ .get@@ He@@ ad@@ set@@ Service@@ (); do@@ Return@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ ).@@ when@@ (m@@ Service@@ Factory@@ )@@ .get@@ A@@ 2@@ d@@ p@@ Service@@ (); m@@ Handler@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ Phone@@ Po@@ lic@@ y@@ Test@@ Handler@@ Thread@@ "); m@@ Handler@@ Thread@@ .@@ start@@ (); m@@ Test@@ L@@ oo@@ per@@ Manager = android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ In@@ strument@@ ation@@ ().@@ ac@@ qu@@ i@@ re@@ L@@ oo@@ per@@ Manager@@ (m@@ Handler@@ Thread@@ .get@@ L@@ oo@@ per@@ ()); do@@ Return@@ (m@@ Handler@@ Thread@@ .get@@ L@@ oo@@ per@@ ()).@@ when@@ (m@@ Adap@@ ter@@ Service@@ )@@ .get@@ M@@ ain@@ L@@ oo@@ per@@ (); m@@ Adap@@ ter = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (); m@@ Test@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 0@@ 1@@ :@@ 0@@ 3@@ :@@ 0@@ 4@@ :@@ 0@@ 5@@ "); }
@java.lang.Override public void on@@ D@@ est@@ ro@@ y@@ () { debu@@ g@@ Log@@ ("@@ on@@ D@@ est@@ ro@@ y@@ ()@@ "); m@@ Pro@@ file@@ Ob@@ server.@@ st@@ op@@ (); }
public void de@@ ac@@ tiv@@ ate@@ Data@@ Call@@ (@@ int c@@ id, @@@ android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ Request@@ Re@@ as@@ on@@ on@@ Ref@@ res@@ h@@ ed@@ , android.@@ telephony.@@ data@@ .@@ Data@@ Service@@ Call@@ b@@ ac@@ k call@@ back@@ ) { call@@ back@@ .@@ on@@ De@@ ac@@ tiv@@ ate@@ Data@@ Call@@ Comp@@ let@@ e(@@ Data@@ Service@@ Callback@@ .@@ RE@@ S@@ UL@@ T_@@ ER@@ RO@@ R@@ _@@ UN@@ S@@ U@@ P@@ P@@ P@@ O@@ RT@@ E@@ D@@ ); }
public void set@@ up@@ Data@@ Call@@ (@@ int ac@@ cess@@ Network@@ Type, android.@@ telephony.@@ data@@ .@@ Data@@ Pro@@ fi@@ le data@@ Pro@@ file@@ , boolean is@@ R@@ o@@ am@@ ing@@ , boolean al@@ low@@ R@@ o@@ am@@ ing@@ , @@@ android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ Request@@ Re@@ as@@ on@@ on@@ , int re@@ as@@ on@@ , android.net.@@ Lin@@ k@@ Proper@@ ti@@ es lin@@ k@@ Properties@@ , android.@@ telephony.@@ data@@ .@@ Data@@ Service@@ Call@@ b@@ ac@@ k call@@ back@@ ) { call@@ back@@ .@@ on@@ Set@@ up@@ Data@@ Call@@ Comp@@ let@@ e(@@ Data@@ Service@@ Callback@@ .@@ RE@@ S@@ UL@@ T_@@ ER@@ RO@@ R@@ _@@ UN@@ S@@ U@@ P@@ P@@ P@@ O@@ RT@@ E@@ D@@ , null@@ ); }
@java.lang.Override public int has@@ h@@ Code@@ () { int p@@ ri@@ me@@ N@@ u@@ m = 3@@ 1; return ((((@@ ((((@@ ((((@@ ((@@ ((m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ) * p@@ ri@@ me@@ N@@ um@@ ) + ((m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ C@@ d@@ ma@@ D@@ b@@ m@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ C@@ d@@ ma@@ E@@ c@@ io@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ E@@ v@@ do@@ D@@ b@@ m@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ E@@ v@@ do@@ E@@ c@@ io@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ E@@ v@@ do@@ S@@ n@@ r@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Rs@@ r@@ p@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Rs@@ r@@ q@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ C@@ q@@ i@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ I@@ s@@ G@@ s@@ m@@ ? 1 : 0@@ )) + (m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l ? 1 : 0); }
public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l out, int flag@@ s) { out.@@ write@@ Int@@ (m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ); out.@@ write@@ Int@@ (m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ); out.@@ write@@ Int@@ (m@@ C@@ d@@ ma@@ D@@ b@@ m@@ ); out.@@ write@@ Int@@ (m@@ C@@ d@@ ma@@ E@@ c@@ io@@ ); out.@@ write@@ Int@@ (m@@ E@@ v@@ do@@ D@@ b@@ m@@ ); out.@@ write@@ Int@@ (m@@ E@@ v@@ do@@ E@@ c@@ io@@ ); out.@@ write@@ Int@@ (m@@ E@@ v@@ do@@ S@@ n@@ r@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ Rs@@ r@@ p@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ Rs@@ r@@ q@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ C@@ q@@ i@@ ); out.@@ write@@ Int@@ (m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ); out.@@ write@@ Int@@ (m@@ I@@ s@@ G@@ s@@ G@@ s@@ m@@ m@@ ? 1 : 0@@ )); out.@@ write@@ Int@@ ((m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l ? 1 : 0@@ )); }
private void assert@@ Par@@ cel@@ ing@@ I@@ s@@ Lo@@ ss@@ l@@ es@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th s@@ si@@ ) throw@@ s java.lang.Exception { android.os.@@ Par@@ ce@@ l p = android.os.@@ Par@@ ce@@ l.@@ ob@@ t@@ ain@@ (); s@@ si@@ .@@ write@@ To@@ Par@@ cel@@ (p@@ , 0); p.@@ set@@ Data@@ Position@@ (@@ 0); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th ss@@ o = Sign@@ al@@ Str@@ ength@@ .@@ C@@ RE@@ AT@@ OR@@ .@@ create@@ From@@ Par@@ cel@@ (p@@ ); assert@@ True@@ (s@@ s@@ o.@@ equals(@@ s@@ si@@ )); }
@org.junit.Test public void test@@ Default@@ s() throw@@ s java.lang.Exception { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th s = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ (); assert@@ Equal@@ s@@ ((@@ -1@@ ), s.get@@ C@@ d@@ ma@@ D@@ b@@ m@@ ()); assert@@ Equal@@ s@@ ((@@ -1@@ ), s.get@@ C@@ d@@ ma@@ E@@ c@@ io@@ ()); assert@@ Equal@@ s@@ ((@@ -1@@ ), s.get@@ E@@ v@@ do@@ D@@ b@@ m@@ ()); assert@@ Equal@@ s@@ ((@@ -1@@ ), s.get@@ E@@ v@@ do@@ E@@ c@@ io@@ ()); assert@@ Equal@@ s@@ ((@@ -1@@ ), s.get@@ E@@ v@@ do@@ S@@ n@@ r@@ ()); assert@@ Equal@@ s@@ ((@@ -1@@ ), s.get@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ()); assert@@ Equal@@ s(@@ 99@@ , s.get@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ()); assert@@ Equal@@ s@@ (@@ true@@ , s.@@ is@@ G@@ s@@ m@@ ()); }
private void set@@ From@@ No@@ t@@ if@@ ier@@ Bund@@ le@@ (android.os.@@ Bund@@ le m@@ ) { m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ eng@@ th = m@@ .get@@ Int@@ ("@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ "); m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate = m@@ .get@@ Int@@ ("@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ "); mC@@ d@@ ma@@ D@@ b@@ m = m@@ .get@@ Int@@ ("@@ C@@ d@@ ma@@ D@@ b@@ m@@ "); mC@@ d@@ ma@@ E@@ c@@ i@@ o = m@@ .get@@ Int@@ ("@@ C@@ d@@ ma@@ E@@ c@@ io@@ "); m@@ E@@ v@@ do@@ D@@ b@@ m = m@@ .get@@ Int@@ ("@@ E@@ v@@ do@@ D@@ b@@ m@@ "); m@@ E@@ v@@ do@@ E@@ c@@ i@@ o = m@@ .get@@ Int@@ ("@@ E@@ v@@ do@@ E@@ c@@ io@@ "); m@@ E@@ v@@ do@@ S@@ n@@ r = m@@ .get@@ Int@@ ("@@ E@@ v@@ do@@ S@@ n@@ r@@ "); m@@ L@@ te@@ Sign@@ al@@ Str@@ eng@@ th = m@@ .get@@ Int@@ ("@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ "); m@@ L@@ te@@ Rs@@ r@@ p = m@@ .get@@ Int@@ ("@@ L@@ te@@ Rs@@ r@@ p@@ "); m@@ L@@ te@@ Rs@@ r@@ q = m@@ .get@@ Int@@ ("@@ L@@ te@@ Rs@@ r@@ q@@ "); m@@ L@@ te@@ R@@ ss@@ n@@ r = m@@ .get@@ Int@@ ("@@ L@@ te@@ R@@ ss@@ n@@ r@@ "); m@@ L@@ te@@ C@@ q@@ i = m@@ .get@@ Int@@ ("@@ L@@ te@@ C@@ q@@ i@@ "); m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ s@@ t = m@@ .get@@ Int@@ ("@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ "); m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p = m@@ .get@@ Int@@ ("@@ T@@ d@@ S@@ c@@ d@@ ma@@ "); m@@ I@@ s@@ G@@ s@@ m@@ .get@@ Boolean@@ ("@@ I@@ s@@ G@@ s@@ m@@ "@@ "@@ ); m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l = m@@ .get@@ Boolean@@ ("@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ "); }
public void fil@@ l@@ In@@ No@@ t@@ if@@ ier@@ Bund@@ le@@ (android.os.@@ Bund@@ le m@@ ) { m.@@ put@@ Int@@ ("@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ", m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ); m.@@ put@@ Int@@ ("@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ", m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ); m.@@ put@@ Int@@ ("@@ C@@ d@@ ma@@ D@@ b@@ m@@ ", mC@@ d@@ ma@@ D@@ b@@ m@@ ); m.@@ put@@ Int@@ ("@@ C@@ d@@ ma@@ E@@ c@@ io@@ ", mC@@ d@@ ma@@ E@@ c@@ io@@ ); m.@@ put@@ Int@@ ("@@ E@@ v@@ do@@ D@@ b@@ m@@ ", m@@ E@@ v@@ do@@ D@@ b@@ m@@ ); m.@@ put@@ Int@@ ("@@ E@@ v@@ do@@ E@@ c@@ io@@ ", m@@ E@@ v@@ do@@ E@@ c@@ io@@ ); m.@@ put@@ Int@@ ("@@ E@@ v@@ do@@ S@@ n@@ r@@ ", m@@ E@@ v@@ do@@ S@@ n@@ r@@ ); m.@@ put@@ Int@@ ("@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ", m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ); m.@@ put@@ Int@@ ("@@ L@@ te@@ Rs@@ r@@ p@@ ", m@@ L@@ te@@ Rs@@ r@@ p@@ ); m.@@ put@@ Int@@ ("@@ L@@ te@@ Rs@@ r@@ q@@ ", m@@ L@@ te@@ Rs@@ r@@ q@@ ); m.@@ put@@ Int@@ ("@@ L@@ te@@ R@@ ss@@ n@@ r@@ ", m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ); m.@@ put@@ Int@@ ("@@ L@@ te@@ C@@ q@@ i@@ ", m@@ L@@ te@@ C@@ q@@ i@@ ); m.@@ put@@ Int@@ ("@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ", m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ); m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ); m.@@ put@@ Int@@ ("@@ T@@ d@@ S@@ c@@ d@@ ma@@ ", m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ); m.@@ put@@ Boolean@@ ("@@ I@@ s@@ G@@ s@@ m@@ "@@ m@@ I@@ s@@ G@@ s@@ m@@ ); m.@@ put@@ Boolean@@ ("@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ ", m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ ); }
protected void copy@@ From@@ (android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th s) { m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ eng@@ th = s.@@ m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ; m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate = s.@@ m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ; mC@@ d@@ ma@@ D@@ b@@ m = s.@@ mC@@ d@@ ma@@ D@@ b@@ m@@ ; mC@@ d@@ ma@@ E@@ c@@ i@@ o = s.@@ mC@@ d@@ ma@@ E@@ c@@ io@@ ; m@@ E@@ v@@ do@@ D@@ b@@ m = s.@@ m@@ E@@ v@@ do@@ D@@ b@@ m@@ ; m@@ E@@ v@@ do@@ E@@ c@@ i@@ o = s.@@ m@@ E@@ v@@ do@@ E@@ c@@ io@@ ; m@@ E@@ v@@ do@@ S@@ n@@ r = s.@@ m@@ E@@ v@@ do@@ S@@ n@@ r@@ ; m@@ L@@ te@@ Sign@@ al@@ Str@@ eng@@ th = s.@@ m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ; m@@ L@@ te@@ Rs@@ r@@ p = s.@@ m@@ L@@ te@@ Rs@@ r@@ p@@ ; m@@ L@@ te@@ Rs@@ r@@ q = s.@@ m@@ L@@ te@@ Rs@@ r@@ q@@ ; m@@ L@@ te@@ R@@ ss@@ n@@ r = s.@@ m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ; m@@ L@@ te@@ C@@ q@@ i = s.@@ m@@ L@@ te@@ C@@ q@@ i@@ ; m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p = s.@@ m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ; m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ s@@ t = s.@@ m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ; m@@ I@@ s@@ G@@ s@@ m@@ I@@ s@@ G@@ s@@ m@@ I@@ s@@ G@@ s@@ m@@ ; m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l = s.@@ m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ ; }
@java.lang.Override public boolean equals(@@ java.lang.Object o@@ ) { android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th s; try { s = ((@@ android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ ) (@@ o@@ )); } catch (java.lang.@@ Class@@ C@@ ast@@ Exception ex@@ ) { return false@@ ; } if (@@ o == null@@ ) { return false@@ ; } return ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((@@ ((m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ) == (@@ s.@@ m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ )) && ((m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ) == (@@ s.@@ m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ))) && ((m@@ C@@ d@@ ma@@ D@@ b@@ m@@ ) == (@@ s.@@ mC@@ d@@ ma@@ D@@ b@@ m@@ ))) && ((m@@ C@@ d@@ ma@@ E@@ c@@ io@@ ) == (@@ s.@@ mC@@ d@@ ma@@ E@@ c@@ io@@ ))) && ((m@@ E@@ v@@ do@@ D@@ b@@ m@@ ) == (@@ s.@@ m@@ E@@ v@@ do@@ D@@ b@@ m@@ ))) && ((m@@ E@@ v@@ do@@ E@@ c@@ io@@ ) == (@@ s.@@ m@@ E@@ v@@ do@@ E@@ c@@ io@@ ))) && ((m@@ E@@ v@@ do@@ S@@ n@@ r@@ ) == (@@ s.@@ m@@ E@@ v@@ do@@ S@@ n@@ r@@ ))) && ((m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ) == (@@ s.@@ m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ))) && ((m@@ L@@ te@@ Rs@@ r@@ p@@ ) == (@@ s.@@ m@@ L@@ te@@ Rs@@ r@@ p@@ ))) && ((m@@ L@@ te@@ Rs@@ r@@ q@@ ) == (@@ s.@@ m@@ L@@ te@@ Rs@@ r@@ q@@ ))) && ((m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ) == (@@ s.@@ m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ))) && ((m@@ L@@ te@@ C@@ q@@ i@@ ) == (@@ s.@@ m@@ L@@ te@@ C@@ q@@ i@@ ))) && ((m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ) == (@@ s.@@ m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ))) && ((m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ) == (@@ s.@@ m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ))) && ((m@@ I@@ s@@ G@@ s@@ m@@ ) == (@@ s.@@ m@@ I@@ s@@ G@@ s@@ m@@ ))) && ((m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ ) == (@@ s.@@ m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ )); }
@org.junit.Test public void test@@ Par@@ cel@@ Un@@ par@@ cel@@ () throw@@ s java.lang.Exception { assert@@ Par@@ cel@@ ing@@ I@@ s@@ Lo@@ ss@@ l@@ ess@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ ()); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th s = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ (@@ 2@@ 0, 5, (@@ -@@ 9@@ 5@@ ), 1@@ 0, (@@ -@@ 9@@ 8@@ ), (@@ -@@ 5@@ ), (@@ -@@ 2@@ ), 4@@ 5, (-1@@ 0@@ 5@@ ), (-1@@ 1@@ 5@@ ), 1@@ 3@@ , (@@ -@@ 9@@ 0@@ ), 2, false@@ , true@@ ); assert@@ Par@@ cel@@ ing@@ I@@ s@@ Lo@@ ss@@ l@@ es@@ s(@@ s); }
@java.lang.Override public java.lang.String toString@@ () { return ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ("@@ Sign@@ al@@ Str@@ ength@@ :@@ " + (m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ )) + " ") + (m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ )) + " ") + (m@@ C@@ d@@ ma@@ D@@ b@@ m@@ )) + " ") + (m@@ C@@ d@@ ma@@ E@@ c@@ io@@ )) + " ") + (m@@ E@@ v@@ do@@ D@@ b@@ m@@ )) + " ") + (m@@ E@@ v@@ do@@ E@@ c@@ io@@ )) + " ") + (m@@ E@@ v@@ do@@ S@@ n@@ r@@ )) + " ") + (m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ )) + " ") + (m@@ L@@ te@@ Rs@@ r@@ p@@ )) + " ") + (m@@ L@@ te@@ Rs@@ r@@ p@@ )) + " ") + (m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ )) + " ") + (m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ )) + " ") + (m@@ I@@ s@@ G@@ s@@ m@@ |@@ l@@ te@@ " : "@@ c@@ d@@ ma@@ ")) + " ") + (m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l ? "@@ u@@ se@@ _@@ on@@ ly@@ _@@ rs@@ r@@ p@@ _@@ for@@ _@@ l@@ te@@ _@@ le@@ vel@@ " : "@@ u@@ se@@ _@@ rs@@ r@@ p@@ _@@ for@@ _@@ l@@ te@@ _@@ le@@ vel@@ "); }
public int get@@ As@@ u@@ Level@@ () { int as@@ u@@ Leve@@ l = 0; if (is@@ G@@ s@@ m@@ ) { if ((m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ) == (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ )) { if ((m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ) == (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ )) { as@@ u@@ Leve@@ l = get@@ G@@ s@@ m@@ As@@ u@@ Level@@ (); } else { as@@ u@@ Leve@@ l = get@@ T@@ d@@ S@@ c@@ d@@ ma@@ As@@ u@@ Level@@ (); } } else { as@@ u@@ Leve@@ l = get@@ L@@ te@@ As@@ u@@ Level@@ (); } } else { int c@@ d@@ ma@@ As@@ u@@ Leve@@ l = get@@ C@@ d@@ ma@@ As@@ u@@ Level@@ (); int e@@ v@@ do@@ As@@ u@@ Leve@@ l = get@@ E@@ v@@ do@@ As@@ u@@ Level@@ (); if (@@ e@@ v@@ do@@ As@@ u@@ Leve@@ l == 0) { as@@ u@@ Leve@@ l = c@@ d@@ ma@@ As@@ u@@ Level@@ ; } else if (c@@ d@@ ma@@ As@@ u@@ Leve@@ l == 0) { as@@ u@@ Leve@@ l = e@@ v@@ do@@ As@@ u@@ Level@@ ; } else { as@@ u@@ Leve@@ l = (c@@ d@@ ma@@ As@@ u@@ Leve@@ l < e@@ v@@ do@@ As@@ u@@ Level@@ ) ? c@@ d@@ ma@@ As@@ u@@ Leve@@ l : e@@ v@@ do@@ As@@ u@@ Level@@ ; } } if (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ D@@ B@@ G) android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ log@@ (("@@ get@@ As@@ u@@ Level@@ =@@ " + as@@ u@@ Level@@ )); return as@@ u@@ Level@@ ; }
public void update@@ Sub@@ s@@ cription@@ N@@ i@@ ck@@ name@@ (@@ int sub@@ s@@ cription@@ Id, java.lang.String n@@ i@@ ck@@ name@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Intent@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } com@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r = update@@ Sub@@ s@@ cription@@ N@@ i@@ ck@@ name@@ (s@@ u@@ b@@ s@@ cription@@ Id, n@@ i@@ ck@@ name@@ , call@@ back@@ Intent@@ ); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void switch@@ To@@ Sub@@ s@@ cription@@ (@@ int sub@@ s@@ cription@@ Id, android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Intent@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ R@@ log.@@ v@@ (com.android.bluetooth.@@ util.@@ log.@@ v@@ (com.android.bluetooth.@@ s@@ ap.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ B@@ ad to clo@@ se p@@ le@@ ve@@ r " + sub@@ s@@ cription@@ Id@@ )); return@@ ; } try { cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void delet@@ e@@ Sub@@ s@@ cription@@ (@@ int sub@@ s@@ cription@@ Id, android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Intent@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } if ((@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void continue@@ Oper@@ ation@@ (android.@@ content.@@ Int@@ ent res@@ ol@@ uti@@ on@@ Intent@@ , android.os.@@ Bund@@ le res@@ ol@@ uti@@ on@@ Ex@@ tr@@ as@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Int@@ ent = res@@ ol@@ uti@@ on@@ Int@@ ent.get@@ Par@@ cel@@ able@@ Extra@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ EX@@ TR@@ A@@ _@@ E@@ M@@ B@@ E@@ D@@ DE@@ D_@@ S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _RE@@ S@@ O@@ L@@ UT@@ ION@@ _C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ IN@@ T@@ EN@@ T@@ ); if (c@@ all@@ back@@ Int@@ ent != null@@ ) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); } return@@ ; } com@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r = res@@ ol@@ uti@@ on@@ Intent@@ , res@@ ol@@ uti@@ on@@ Ex@@ tr@@ as@@ ); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void er@@ ase@@ Sub@@ s@@ cription@@ s(@@ android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Intent@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } com@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void do@@ wn@@ load@@ Sub@@ s@@ cription@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ Do@@ wn@@ load@@ able@@ Sub@@ s@@ cri@@ pti@@ on sub@@ s@@ cription@@ , boolean switch@@ A@@ f@@ ter@@ Do@@ wn@@ load@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Intent@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } com@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r .@@ do@@ wn@@ load@@ Sub@@ s@@ cription@@ (s@@ u@@ b@@ s@@ cription@@ , switch@@ A@@ f@@ ter@@ Do@@ wn@@ load@@ , m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), call@@ back@@ Intent@@ ); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } } }
public void get@@ Do@@ wn@@ load@@ able@@ Sub@@ s@@ cription@@ M@@ et@@ ad@@ ata@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ Do@@ wn@@ load@@ able@@ Sub@@ s@@ cri@@ pti@@ on sub@@ s@@ cription@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Intent@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } com@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r .get@@ Do@@ wn@@ load@@ able@@ Sub@@ s@@ cription@@ M@@ et@@ ad@@ ata@@ (s@@ u@@ b@@ s@@ cription@@ , m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), call@@ back@@ Intent@@ ); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
@@@ android.@@ annotation.@@ Nullable public android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Info get@@ E@@ u@@ ic@@ c@@ Info@@ () { if (!(@@ is@@ Enabled@@ ())) { return null@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return null@@ ; try { return cont@@ ro@@ lle@@ r .get@@ E@@ u@@ ic@@ c@@ Info@@ (); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
@java.lang.Override protected com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ () { return I@@ E@@ u@@ ic@@ c@@ Control@@ ler.@@ St@@ u@@ b.@@ as@@ Interface@@ (android.os.@@ Service@@ Manager.@@ get@@ Service@@ ("@@ ec@@ on@@ t@@ ro@@ l@@ ler@@ ")); }
public void get@@ Default@@ Do@@ wn@@ load@@ able@@ Sub@@ s@@ cription@@ List@@ (android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Intent@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } com@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r = get@@ Default@@ Do@@ wn@@ load@@ able@@ Sub@@ s@@ cription@@ List@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), call@@ back@@ Intent@@ ); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
@@@ android.@@ annotation.@@ System@@ Ap@@ i public int get@@ O@@ t@@ a@@ Statu@@ s() { if (!(@@ is@@ Enabled@@ ())) { return android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ E@@ U@@ IC@@ C@@ _@@ O@@ TA@@ _@@ UN@@ AV@@ A@@ IL@@ AB@@ LE@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager@@ .@@ E@@ U@@ IC@@ C@@ _@@ O@@ TA@@ _@@ STAT@@ US@@ _@@ UN@@ AV@@ A@@ IL@@ AB@@ LE@@ ; try { return cont@@ ro@@ lle@@ r@@ .get@@ O@@ t@@ a@@ Statu@@ s(); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
@@@ android.@@ annotation.@@ Nullable public java.lang.String get@@ E@@ id@@ () { if (!(@@ is@@ Enabled@@ ())) { return null@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return null@@ ; try { return cont@@ ro@@ lle@@ r .get@@ E@@ id@@ (); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void r@@ et@@ ain@@ Sub@@ s@@ cription@@ s@@ For@@ Factory@@ Res@@ et@@ (android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent call@@ back@@ Intent@@ ) { if (!(@@ is@@ Enabled@@ ())) { android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Manager.@@ send@@ Un@@ ava@@ il@@ able@@ Error@@ (c@@ all@@ back@@ Intent@@ ); return@@ ; } com@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ E@@ u@@ ic@@ c@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); if (@@ cont@@ ro@@ lle@@ r == null@@ ) return@@ ; try { cont@@ ro@@ lle@@ r = get@@ I@@ E@@ u@@ ic@@ c@@ Control@@ ler@@ (); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
private static java.lang.String request@@ To@@ String@@ (@@ int request@@ ) { switch (@@ request@@ ) { case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Constants.@@ R@@ IL@@ _RE@@ Q@@ UE@@ ST_@@ GE@@ T_@@ S@@ LO@@ T_@@ STAT@@ U@@ S : return "@@ GE@@ T_@@ S@@ LO@@ T_@@ STAT@@ US@@ "; default : return "@@ <@@ un@@ k@@ no@@ w@@ n request@@ >@@ "; } }
@java.lang.Override public void set@@ System@@ Property@@ (java.lang.String pro@@ per@@ ty@@ , java.lang.String value@@ ) { if (get@@ Un@@ it@@ Test@@ Mode@@ ()) { return@@ ; } if ((@@ is@@ Phone@@ Type@@ G@@ s@@ m@@ ()) || (is@@ Phone@@ Type@@ C@@ d@@ ma@@ L@@ t@@ e@@ ())) || (is@@ Phone@@ Type@@ C@@ d@@ m@@ a@@ ())) { android.@@ telephony.@@ Telephony@@ Manager.@@ set@@ Telephony@@ Property@@ (m@@ Phone@@ Id, pro@@ per@@ ty@@ , value@@ ); } else { super@@ .set@@ System@@ Property@@ (pro@@ per@@ ty@@ , value@@ ); } }
@java.lang.Override public boolean update@@ Current@@ C@@ ar@@ ri@@ er@@ In@@ Provider@@ () { if (is@@ Phone@@ Type@@ G@@ s@@ m@@ ()) || (is@@ Phone@@ Type@@ C@@ d@@ ma@@ L@@ t@@ e@@ ())) { long current@@ D@@ d@@ s = android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ get@@ Default@@ Data@@ Sub@@ s@@ cription@@ Id@@ (); java.lang.String o@@ per@@ ator@@ N@@ um@@ er@@ i@@ c = get@@ Oper@@ ator@@ N@@ um@@ er@@ ic@@ (); log@@ d@@ ((@@ ((@@ (("@@ update@@ Current@@ C@@ ar@@ ri@@ er@@ In@@ Provider@@ : m@@ Sub@@ Id = " + (get@@ Sub@@ Id@@ ())) + " current@@ D@@ d@@ s = ") + current@@ D@@ d@@ s) + " o@@ per@@ ator@@ N@@ um@@ er@@ i@@ c = ") + o@@ per@@ ator@@ N@@ um@@ er@@ ic@@ )); if ((@@ !@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ o@@ per@@ ator@@ N@@ um@@ er@@ ic@@ ))) && ((@@ get@@ Sub@@ Id@@ ()) == current@@ D@@ d@@ s@@ )) { try { android.net.@@ Ur@@ i ur@@ i = android.net.@@ U@@ ri@@ .@@ w@@ ith@@ Ap@@ pend@@ ed@@ Path@@ (@@ Telephon@@ y.@@ C@@ ar@@ ri@@ er@@ s.@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , "@@ current@@ "); android.content.@@ Content@@ Value@@ s ma@@ p = new android.content.@@ Content@@ Valu@@ es@@ (); m@@ ap.@@ put@@ (@@ Telephon@@ y.@@ C@@ ar@@ ri@@ er@@ s.@@ N@@ U@@ M@@ ER@@ IC@@ , o@@ per@@ ator@@ N@@ um@@ er@@ ic@@ ); m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ ().@@ in@@ ser@@ t@@ (@@ ur@@ i@@ , m@@ ap@@ ); return true@@ ; } catch (android.@@ dat@@ ab@@ ase.@@ S@@ Q@@ L@@ Exception e) { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, "@@ Can't st@@ or@@ e curr@@ ent o@@ per@@ at@@ or ", e); } } return false@@ ; } else { return true@@ ; }
@java.lang.Override public java.lang.String get@@ System@@ Property@@ (java.lang.String pro@@ per@@ ty@@ , java.lang.String de@@ f@@ Value@@ ) { if ((@@ is@@ Phone@@ Type@@ G@@ s@@ m@@ ()) || (is@@ Phone@@ Type@@ C@@ d@@ ma@@ L@@ t@@ e@@ ature@@ ())) || (is@@ Phone@@ Type@@ C@@ d@@ m@@ a@@ ())) { if (get@@ Un@@ it@@ Test@@ Mode@@ ()) { return null@@ ; } return android.@@ telephony.@@ Telephony@@ Manager.@@ get@@ Telephony@@ Property@@ (m@@ Phone@@ Id, pro@@ per@@ ty@@ , de@@ f@@ Value@@ ); } else { return super@@ .get@@ System@@ Property@@ (pro@@ per@@ ty@@ , de@@ f@@ Value@@ ); } }
public android.net.@@ Network@@ Stat@@ s read@@ Network@@ Stat@@ s@@ S@@ um@@ m@@ ary@@ De@@ v@@ () throw@@ s java.io.IOException { if (!(m@@ Stat@@ s@@ X@@ t@@ Iface@@ Al@@ l.@@ exist@@ s@@ ())) return read@@ Network@@ Stat@@ s@@ Iface@@ De@@ v@@ (); final android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ Thread@@ Po@@ lic@@ y s@@ av@@ ed@@ Po@@ lic@@ y = android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ al@@ low@@ Thread@@ Dis@@ k@@ Read@@ s(); final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (), 6@@ ); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er read@@ er = null@@ ; try { read@@ er = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er@@ (@@ new java.io.File@@ InputStream@@ (m@@ Stat@@ s@@ X@@ t@@ Iface@@ All@@ )); while (@@ read@@ er.@@ has@@ M@@ ore@@ Data@@ ()) { e@@ n@@ try@@ .@@ if@@ ac@@ e = read@@ er.@@ next@@ String@@ (); e@@ n@@ try@@ .@@ u@@ id = U@@ ID@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ set = SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = TAG@@ _N@@ ON@@ E@@ ; final boolean ac@@ tiv@@ e = (@@ read@@ er.@@ next@@ Int@@ ()) != 0; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); if (@@ ac@@ tive@@ ) { e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s +@@ = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s +@@ = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s +@@ = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s +@@ = read@@ er.@@ next@@ Long@@ (); } st@@ at@@ s.@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); } } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception | java.lang.@@ Number@@ Format@@ Exception e) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ ("@@ Er@@ ror par@@ s@@ ing st@@ at@@ s@@ ", e); } final@@ l@@ y { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (@@ read@@ er@@ ); android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ set@@ Thread@@ Po@@ lic@@ y@@ (s@@ av@@ ed@@ Po@@ lic@@ y@@ ); } return st@@ at@@ s; }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public android.net.@@ Network@@ Stat@@ s read@@ Network@@ Stat@@ s@@ Iface@@ De@@ v@@ () throw@@ s java.io.IOException { final android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ Thread@@ Po@@ lic@@ y s@@ av@@ ed@@ Po@@ lic@@ y = android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ al@@ low@@ Thread@@ Dis@@ k@@ Read@@ s(); final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (), 6@@ ); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er read@@ er = null@@ ; try { read@@ er = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er@@ (@@ new java.io.File@@ InputStream@@ (m@@ Stat@@ s@@ Iface@@ De@@ v@@ )); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); while (@@ read@@ er.@@ has@@ M@@ ore@@ Data@@ ()) { e@@ n@@ try@@ .@@ if@@ ac@@ e = read@@ er.@@ next@@ String@@ (); e@@ n@@ try@@ .@@ u@@ id = U@@ ID@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ set = SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = TAG@@ _N@@ ON@@ E@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); for (@@ int i = 0; i < 6@@ ; i++) { read@@ er.@@ next@@ Long@@ (); } e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); st@@ at@@ s.@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); } } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception | java.lang.@@ Number@@ Format@@ Exception e) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ ("@@ pro@@ ble@@ m par@@ s@@ ing st@@ at@@ s@@ ", e); } final@@ l@@ y { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (@@ read@@ er@@ ); android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ set@@ Thread@@ Po@@ lic@@ y@@ (s@@ av@@ ed@@ Po@@ lic@@ y@@ ); } return st@@ at@@ s; }
public android.net.@@ Network@@ Stat@@ s read@@ Network@@ Stat@@ s@@ S@@ um@@ m@@ ary@@ X@@ t@@ () throw@@ s java.io.IOException { if (!(m@@ Stat@@ s@@ X@@ t@@ Iface@@ F@@ m@@ t.@@ exist@@ s@@ ())) return read@@ Network@@ Stat@@ s@@ Iface@@ De@@ v@@ (); final android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ Thread@@ Po@@ lic@@ y s@@ av@@ ed@@ Po@@ lic@@ y = android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ al@@ low@@ Thread@@ Dis@@ k@@ Read@@ s(); final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (), 6@@ ); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er read@@ er = null@@ ; try { read@@ er = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er@@ (@@ new java.io.File@@ Input@@ Stream@@ (m@@ Stat@@ s@@ X@@ t@@ Iface@@ F@@ m@@ t@@ )); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); while (@@ read@@ er.@@ has@@ M@@ ore@@ Data@@ ()) { e@@ n@@ try@@ .@@ if@@ ac@@ e = read@@ er.@@ next@@ String@@ (); e@@ n@@ try@@ .@@ u@@ id = U@@ ID@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ set = SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = TAG@@ _N@@ ON@@ E@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); st@@ at@@ s.@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); } } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception | java.lang.@@ Number@@ Format@@ Exception e) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ ("@@ Er@@ ror par@@ s@@ ing st@@ at@@ s@@ ", e); } final@@ l@@ y { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (@@ read@@ er@@ ); android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ set@@ Thread@@ Po@@ lic@@ y@@ (s@@ av@@ ed@@ Po@@ lic@@ y@@ ); } return st@@ at@@ s; }
@java.lang.Override public android.net.@@ Network@@ Cap@@ abili@@ ti@@ es create@@ From@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l in@@ ) { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es net@@ C@@ a@@ p = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); net@@ C@@ ap.@@ m@@ Network@@ Cap@@ abili@@ ti@@ es = in@@ .@@ read@@ Long@@ (); net@@ C@@ ap.@@ m@@ Trans@@ port@@ Type@@ s = in@@ .@@ read@@ Long@@ (); net@@ C@@ ap.@@ m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ p@@ s = in@@ .@@ read@@ Int@@ (); net@@ C@@ ap.@@ m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ p@@ s = in@@ .@@ read@@ Int@@ (); net@@ C@@ ap.@@ m@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er = in@@ .@@ read@@ Par@@ cel@@ able@@ (@@ null@@ ); net@@ C@@ ap.@@ m@@ Sign@@ al@@ Str@@ eng@@ th = in@@ .@@ read@@ Int@@ (); net@@ C@@ ap.@@ m@@ Al@@ low@@ ed@@ U@@ id@@ s = ((@@ android.util.@@ Array@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ >@@ ) (in@@ .@@ read@@ Array@@ Set@@ (@@ null@@ ))); return net@@ Cap@@ ; }
@java.lang.Override public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l out, int flag@@ s) { out.@@ write@@ Int@@ ((@@ al@@ low@@ B@@ yp@@ as@@ s ? 1 : 0@@ )); out.@@ write@@ Int@@ ((@@ ex@@ pli@@ c@@ it@@ ly@@ Se@@ lec@@ ted ? 1 : 0@@ )); out.@@ write@@ Int@@ ((@@ ac@@ ce@@ p@@ t@@ Un@@ valid@@ ate@@ d ? 1 : 0@@ )); out.@@ write@@ String@@ (s@@ u@@ b@@ s@@ cri@@ b@@ er@@ Id@@ ); out.@@ write@@ Int@@ ((@@ pro@@ vision@@ ing@@ No@@ t@@ if@@ ic@@ ation@@ Dis@@ able@@ d ? 1 : 0@@ )); out.@@ write@@ Int@@ (m@@ an@@ ag@@ er@@ U@@ id@@ ); }
@java.lang.Override public int has@@ h@@ Code@@ () { return ((((@@ ((@@ ((m@@ Network@@ Cap@@ abili@@ ties@@ ) & -1@@ )) + ((@@ (@@ int@@ ) ((m@@ Network@@ Cap@@ abili@@ ties@@ ) >@@ > 32@@ )) * 3@@ )) + ((@@ (@@ int@@ ) ((m@@ Trans@@ port@@ Typ@@ es) & -1@@ )) * 5@@ )) + ((@@ (@@ int@@ ) ((m@@ Trans@@ port@@ Typ@@ es) >@@ > 32@@ )) * 7@@ )) + ((m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ) * 1@@ 1@@ 1@@ 1@@ )) + ((m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ) * 1@@ 3@@ )) + ((@@ java.util.@@ Object@@ s.@@ has@@ h@@ Code@@ (m@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ )) * 1@@ 7@@ )) + ((m@@ Sign@@ al@@ Str@@ ength@@ ) * 1@@ 9@@ )) + ((@@ java.util.@@ Object@@ s.@@ has@@ h@@ Code@@ (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) * 2@@ 3@@ )); }
public boolean al@@ low@@ s@@ U@@ id@@ (@@ int u@@ id@@ ) { if (@@ null == (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) return true@@ ; for (android.net.@@ U@@ id@@ R@@ ang@@ e r@@ ang@@ e : m@@ Al@@ low@@ ed@@ U@@ id@@ s) { if (@@ r@@ ang@@ e.@@ contain@@ s(@@ u@@ id@@ )) { return true@@ ; } } return false@@ ; }
private void update@@ U@@ id@@ s@@ (com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i@@ , android.net.@@ Network@@ Cap@@ abili@@ ti@@ es pre@@ v@@ N@@ c@@ , android.net.@@ Network@@ Cap@@ abili@@ ti@@ es new@@ N@@ c@@ ) { final java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > pre@@ v@@ R@@ ang@@ es = (@@ null == pre@@ v@@ N@@ c@@ ) ? null : pre@@ v@@ N@@ c@@ .get@@ U@@ id@@ s(); final java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > new@@ R@@ ang@@ es = (@@ null == new@@ N@@ c@@ ) ? null : new@@ N@@ c@@ .get@@ U@@ id@@ s(); final java.util.ArrayList<@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > remo@@ v@@ ed@@ R@@ ang@@ es@@ ; final java.util.ArrayList<@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > add@@ ed@@ R@@ ang@@ es@@ ; if (@@ null == pre@@ v@@ R@@ ang@@ es) { if (@@ null == new@@ R@@ ang@@ es) { return@@ ; } remo@@ v@@ ed@@ R@@ ang@@ es = null@@ ; add@@ ed@@ R@@ ang@@ es = new java.util.Array@@ List@@ (@@ new@@ R@@ ang@@ es@@ ); } else if (@@ null == new@@ N@@ c@@ ) { remo@@ v@@ ed@@ R@@ ang@@ es = new java.util.Array@@ List@@ (p@@ re@@ v@@ R@@ ang@@ es@@ ); add@@ ed@@ R@@ ang@@ es = null@@ ; } else { remo@@ v@@ ed@@ R@@ ang@@ es = new java.util.Array@@ List@@ (); add@@ ed@@ R@@ ang@@ es = new java.util.Array@@ List@@ (); for (@@ final android.net.@@ U@@ id@@ R@@ ang@@ e pre@@ v@@ R@@ ang@@ e : pre@@ v@@ R@@ ang@@ es) { if (!@@ (@@ new@@ R@@ ang@@ es.@@ contain@@ s(@@ pre@@ v@@ R@@ ang@@ e@@ ))) { remo@@ v@@ ed@@ R@@ ang@@ es.@@ add@@ (p@@ re@@ v@@ R@@ ang@@ e); } } for (@@ final android.net.@@ U@@ id@@ R@@ ang@@ e new@@ R@@ ang@@ e : new@@ R@@ ang@@ es) { if (!@@ (p@@ re@@ v@@ R@@ ang@@ es.@@ contain@@ s@@ (@@ new@@ R@@ ang@@ e@@ ))) { add@@ ed@@ R@@ ang@@ es.@@ add@@ (@@ new@@ R@@ ang@@ e); } } try { if (@@ null != remo@@ v@@ ed@@ R@@ ang@@ es) && (!(@@ remo@@ v@@ ed@@ R@@ ang@@ es.@@ isEmpty@@ ()))) { final android.net.@@ U@@ id@@ R@@ ang@@ e@@ [] remo@@ v@@ ed@@ R@@ ang@@ es@@ Ar@@ ra@@ y = new android.net.@@ U@@ id@@ R@@ ang@@ es.@@ size@@ ()@@ ]; remo@@ v@@ ed@@ R@@ ang@@ es.@@ to@@ Array@@ (@@ remo@@ v@@ ed@@ R@@ ang@@ es@@ Array@@ ); m@@ Net@@ d.@@ remove@@ V@@ p@@ n@@ U@@ id@@ R@@ ang@@ es@@ (@@ n@@ a@@ i.@@ network@@ .@@ net@@ Id, remo@@ v@@ ed@@ R@@ ang@@ es@@ Array@@ ); } if (@@ (@@ null != add@@ ed@@ R@@ ang@@ es) && (!(@@ add@@ ed@@ R@@ ang@@ es.@@ isEmpty@@ ()))) { final android.net.@@ U@@ id@@ R@@ ang@@ e@@ [] add@@ ed@@ R@@ ang@@ es@@ Ar@@ ra@@ y = new android.net.@@ U@@ id@@ R@@ ang@@ e@@ [@@ add@@ ed@@ R@@ ang@@ es.@@ size@@ ()@@ ]; add@@ ed@@ R@@ ang@@ es.@@ to@@ Array@@ (@@ add@@ ed@@ R@@ ang@@ es@@ Array@@ ); m@@ Net@@ d.@@ add@@ V@@ p@@ n@@ U@@ id@@ R@@ ang@@ es@@ (@@ n@@ a@@ i.@@ network@@ .@@ add@@ ed@@ R@@ ang@@ es@@ Array@@ ); } } catch (java.lang.Exception e) { com.android.server.@@ Connectivity@@ Service.@@ log@@ e@@ )); } } }
public java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ > get@@ Al@@ low@@ ed@@ U@@ id@@ s() { return java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ > is@@ Al@@ low@@ ed@@ U@@ id@@ s = new java.util.@@ Array@@ Set@@ <@@ android.net.@@ U@@ id@@ >@@ (@@ libcore.@@ java.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ , android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ , android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ , android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ , android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ <@@ android.util.@@ Array@@ Set@@ , android.util.@@ Array@@ Set@@ (m@@ Al@@ low@@ ed@@ U@@ id@@ s); }
@java.lang.Override public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l d@@ est@@ , int flag@@ s) { d@@ est.@@ write@@ Long@@ (m@@ Network@@ Cap@@ abili@@ ties@@ ); d@@ est.@@ write@@ Long@@ (m@@ Trans@@ port@@ Typ@@ es@@ ); d@@ est.@@ write@@ Int@@ (m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ); d@@ est.@@ write@@ Int@@ (m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ); d@@ est.@@ write@@ Par@@ cel@@ able@@ ((@@ (android.os.@@ Par@@ cel@@ able@@ ) (m@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ )), flag@@ s); d@@ est.@@ write@@ Int@@ (m@@ Sign@@ al@@ Str@@ ength@@ ); d@@ est.@@ write@@ Array@@ Set@@ (@@ new android.util.@@ Array@@ Set@@ (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )); }
private void pre@@ par@@ e@@ In@@ ternal@@ (java.lang.String new@@ Package@@ ) { long to@@ k@@ e@@ n = android.os.@@ B@@ ind@@ er.@@ clear@@ Call@@ ing@@ Id@@ enti@@ ty@@ (); try { if ((m@@ Interface@@ ) != null@@ ) { m@@ Statu@@ s@@ Int@@ ent = null@@ ; ag@@ ent@@ Dis@@ connect@@ (); j@@ n@@ i@@ Res@@ et@@ (m@@ Interface@@ ); m@@ Inter@@ face = null@@ ; m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ set@@ Al@@ low@@ ed@@ U@@ id@@ s@@ (@@ null@@ ); } if ((m@@ Connection@@ ) != null@@ ) { try { m@@ Connection@@ .@@ m@@ Service.@@ trans@@ act@@ (@@ I@@ B@@ ind@@ er.@@ LA@@ ST_@@ C@@ AL@@ L@@ _@@ TR@@ AN@@ S@@ AC@@ TION@@ , android.os.@@ Par@@ ce@@ l.@@ ob@@ t@@ ain@@ (), null@@ , I@@ B@@ ind@@ er.@@ F@@ LA@@ G_@@ ON@@ E@@ W@@ A@@ Y@@ ); } catch (java.lang.Exception e) { } m@@ Context.@@ un@@ b@@ ind@@ Service@@ (m@@ Connection@@ ); m@@ Connec@@ tion = null@@ ; } else if ((m@@ Le@@ g@@ ac@@ y@@ V@@ p@@ n@@ Runner@@ ) != null@@ ) { m@@ Le@@ g@@ ac@@ y@@ V@@ p@@ n@@ Run@@ ner.@@ ex@@ it@@ (); m@@ Le@@ g@@ ac@@ y@@ V@@ p@@ n@@ Run@@ ne@@ r = null@@ ; } try { m@@ Net@@ d.@@ d@@ en@@ y@@ Pro@@ te@@ ct@@ (m@@ O@@ w@@ ner@@ U@@ ID@@ ); } catch (java.lang.Exception e) { android.util.Log.@@ w@@ t@@ f@@ (com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ TAG, ((@@ ("@@ Faile@@ d to dis@@ al@@ lo@@ w U@@ I@@ D " + (m@@ O@@ w@@ ner@@ U@@ ID@@ )) + " to cal@@ l pro@@ te@@ ct@@ () ") + e@@ )); } android.util.Log.@@ i@@ (com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ TAG, ((@@ ("@@ Un@@ able f@@ ro@@ m " + (m@@ Package@@ )) + " to ") + new@@ Package@@ )); m@@ Pack@@ age = new@@ Package@@ ; m@@ O@@ w@@ ner@@ U@@ id@@ (@@ new@@ Package@@ , m@@ User@@ Handle@@ ); try { m@@ Net@@ d.@@ al@@ low@@ Pro@@ te@@ ct@@ (m@@ O@@ w@@ ner@@ U@@ ID@@ ); } catch (java.lang.Exception e) { android.util.Log.@@ w@@ t@@ f@@ (com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ TAG, ((@@ ("@@ Faile@@ d to al@@ lo@@ w U@@ I@@ D " + (m@@ O@@ w@@ ner@@ U@@ ID@@ )) + " to cal@@ l pro@@ te@@ ct@@ () " e@@ )); } m@@ Con@@ fi@@ g = null@@ ; update@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ ID@@ LE@@ , "@@ pre@@ par@@ e@@ "); set@@ V@@ p@@ n@@ For@@ ce@@ d@@ Lock@@ ed@@ (m@@ Loc@@ k@@ do@@ wn@@ ); } final@@ l@@ y { android.os.@@ B@@ ind@@ er.@@ r@@ est@@ ore@@ Call@@ ing@@ Id@@ enti@@ ty@@ (@@ to@@ k@@ en@@ ); } }
public void on@@ User@@ Add@@ ed@@ (@@ int user@@ Handle@@ ) { android.content.@@ p@@ m.@@ User@@ Info u@@ se@@ r = android.os.@@ User@@ Manager.@@ get@@ (m@@ Context@@ )@@ .get@@ User@@ Info@@ (@@ user@@ Handle@@ ); if ((@@ us@@ er.@@ is@@ Res@@ tr@@ ic@@ ted@@ ()) && ((@@ us@@ er.@@ res@@ tr@@ ic@@ ted@@ Pro@@ file@@ Parent@@ Id@@ ) == (m@@ User@@ Handle@@ ))) { synchronized@@ (@@ this@@ ) { final java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > exist@@ ing@@ R@@ ang@@ es = m@@ Network@@ Cap@@ abili@@ ties@@ .get@@ Al@@ low@@ ed@@ U@@ id@@ s(); if ((@@ exist@@ ing@@ R@@ ang@@ es@@ != null@@ ) { try { add@@ User@@ To@@ R@@ ang@@ es@@ (@@ exist@@ ing@@ R@@ ang@@ es@@ , user@@ Handle@@ , m@@ Config.@@ al@@ low@@ ed@@ Application@@ s, m@@ Config.@@ dis@@ al@@ low@@ ed@@ Application@@ s); m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ set@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ exist@@ ing@@ R@@ ang@@ es@@ ); if ((m@@ Network@@ A@@ g@@ ent@@ ) != null@@ ) { final java.util.List<@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > r@@ ang@@ es = com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ u@@ id@@ R@@ ang@@ es@@ For@@ User@@ (@@ user@@ Hand@@ le@@ , m@@ Network@@ Cap@@ abili@@ ties@@ .get@@ Al@@ low@@ ed@@ U@@ id@@ s()); m@@ Network@@ A@@ g@@ ent.@@ add@@ U@@ id@@ R@@ ang@@ es@@ (@@ r@@ ang@@ es.@@ to@@ Array@@ (@@ new android.net.@@ U@@ id@@ R@@ ang@@ e@@ [@@ r@@ ang@@ es.@@ size@@ ()@@ ]@@ )); } } catch (java.lang.Exception e) { android.util.Log.@@ w@@ t@@ f@@ (com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ TAG, "@@ Un@@ able to ad@@ d res@@ tr@@ ic@@ ted u@@ se@@ r to o@@ w@@ ne@@ r ", e); } } set@@ V@@ p@@ n@@ For@@ ce@@ d@@ Lock@@ ed@@ (m@@ Loc@@ k@@ do@@ wn@@ ); } } }
public void on@@ User@@ Remo@@ v@@ ed@@ (@@ int user@@ Handle@@ ) { android.content.@@ p@@ m.@@ User@@ Info u@@ se@@ r = android.os.@@ User@@ Manager.@@ get@@ (m@@ Context@@ )@@ .get@@ User@@ Info@@ (@@ user@@ Handle@@ ); if ((@@ us@@ er.@@ is@@ Res@@ tr@@ ic@@ ted@@ ()) && ((@@ us@@ er.@@ res@@ tr@@ ic@@ ted@@ Pro@@ file@@ Parent@@ Id@@ ) == (m@@ User@@ Handle@@ ))) { synchronized@@ (@@ this@@ ) { final java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > exist@@ ing@@ R@@ ang@@ es = m@@ Network@@ Cap@@ abili@@ ties@@ .get@@ Al@@ low@@ ed@@ U@@ id@@ s(); if ((@@ exist@@ ing@@ R@@ ang@@ es@@ != null@@ ) { try { final java.util.List<@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > remo@@ v@@ ed@@ R@@ ang@@ es = com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ u@@ id@@ R@@ ang@@ es@@ For@@ U@@ se@@ r@@ (@@ user@@ Hand@@ le@@ , exist@@ ing@@ R@@ ang@@ es@@ ); if ((m@@ Network@@ A@@ g@@ ent@@ ) != null@@ ) { m@@ Network@@ A@@ g@@ ent.@@ remove@@ U@@ id@@ R@@ ang@@ es@@ (@@ remo@@ v@@ ed@@ R@@ ang@@ es.@@ to@@ Array@@ (@@ new android.net.@@ U@@ id@@ R@@ ang@@ e@@ [@@ remo@@ v@@ ed@@ R@@ ang@@ es.@@ size@@ ()@@ ]@@ )); } exist@@ ing@@ R@@ ang@@ es.@@ remove@@ All@@ (@@ remo@@ v@@ ed@@ R@@ ang@@ es@@ ); m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ set@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ exist@@ ing@@ R@@ ang@@ es@@ ); } catch (java.lang.Exception e) { android.util.Log.@@ w@@ t@@ f@@ (com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ TAG, "@@ Un@@ able to remo@@ v@@ e res@@ tr@@ ic@@ ted u@@ se@@ r to o@@ w@@ ne@@ r ", e); } } set@@ V@@ p@@ n@@ For@@ ce@@ d@@ Lock@@ ed@@ (m@@ Loc@@ k@@ do@@ wn@@ ); } } }
@java.lang.Override public void int@@ er@@ face@@ Remo@@ v@@ ed@@ (java.lang.String int@@ er@@ fa@@ z@@ e) { synchronized@@ (@@ this@@ ) { if (@@ int@@ er@@ fa@@ z@@ e.@@ equal@@ s@@ (m@@ Interface@@ )) && ((@@ j@@ n@@ i@@ Check@@ (@@ int@@ er@@ fa@@ z@@ e@@ )) == 0@@ )) { m@@ Statu@@ s@@ Int@@ ent = null@@ ; m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ set@@ Al@@ low@@ ed@@ U@@ id@@ s(); m@@ Con@@ fi@@ g = null@@ ; m@@ Inter@@ face = null@@ ; if ((m@@ Connection@@ ) != null@@ ) { m@@ Context.@@ un@@ b@@ ind@@ Service@@ (m@@ Connection@@ ); m@@ Connec@@ tion = null@@ ; ag@@ ent@@ Dis@@ connect@@ (); } else if ((m@@ Le@@ g@@ ac@@ y@@ V@@ p@@ n@@ Runner@@ ) != null@@ ) { m@@ Le@@ g@@ ac@@ y@@ V@@ p@@ n@@ Run@@ ner.@@ ex@@ it@@ (); m@@ Le@@ g@@ ac@@ y@@ V@@ p@@ n@@ Run@@ ne@@ r = null@@ ; } } }
public synchronized boolean app@@ li@@ es@@ To@@ U@@ id@@ (@@ int u@@ id@@ ) { if (!(@@ is@@ Run@@ ning@@ Lock@@ ed@@ ())) { return false@@ ; } return m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ toString@@ (); }
@java.lang.Override public boolean equals(@@ java.lang.Object ob@@ j@@ ) { if ((@@ ob@@ j == null@@ ) || ((@@ ob@@ j instanceof android.net.@@ Network@@ Cap@@ abili@@ ties@@ ) == false@@ )) return false@@ ; android.net.@@ Network@@ Cap@@ abili@@ ti@@ es th@@ at = ((@@ android.net.@@ Network@@ Cap@@ abili@@ ties@@ ) (@@ ob@@ j@@ )); return (((@@ equal@@ s@@ Net@@ Cap@@ abili@@ ties@@ (@@ th@@ at@@ )) && (@@ equal@@ s@@ Trans@@ port@@ Typ@@ es@@ (@@ th@@ at@@ ))) && (@@ equal@@ s@@ Lin@@ k@@ B@@ and@@ wid@@ th@@ s(@@ th@@ at@@ ))) && (@@ equal@@ s@@ Sign@@ al@@ Str@@ ength@@ (@@ th@@ at@@ ))) && (@@ equal@@ s@@ S@@ pe@@ c@@ if@@ i@@ er(@@ th@@ at@@ ))@@ ) && (@@ equal@@ s@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ th@@ at@@ )); }
public static com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data n@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ (@@ java.net.Inet@@ Address src@@ Addres@@ s, int src@@ P@@ ort@@ , java.net.Inet@@ Address d@@ st@@ Addres@@ s, int d@@ st@@ P@@ ort@@ ) throw@@ s com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ In@@ valid@@ Pack@@ et@@ Exception { if ((@@ !@@ (s@@ rc@@ Address instanceof java.net.Inet@@ 4@@ Address@@ )) || (!(@@ d@@ st@@ Address instanceof java.net.Inet@@ 4@@ Address@@ ))) { throw new com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ In@@ valid@@ Pack@@ et@@ Exception(@@ ER@@ RO@@ R@@ _@@ IN@@ V@@ AL@@ ID@@ _@@ IP@@ _@@ AD@@ D@@ RE@@ SS@@ ); } if (d@@ st@@ P@@ or@@ t != (@@ N@@ AT@@ T_@@ P@@ O@@ RT@@ )) { throw new com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ In@@ valid@@ Pack@@ et@@ Exception(@@ ER@@ RO@@ R@@ _@@ IN@@ V@@ AL@@ ID@@ _P@@ O@@ RT@@ ); } int l@@ eng@@ th = ((@@ java.net.@@ Socket@@ ) (@@ this@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (@@ length@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (@@ 6@@ 4@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ byte@@ ) (@@ O@@ s@@ Constants.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ ))); int ip@@ Check@@ s@@ um@@ O@@ ff@@ set = bu@@ f.@@ position@@ (); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (0@@ ))); bu@@ f.@@ put@@ (s@@ rc@@ Addres@@ s.get@@ Address@@ ()); bu@@ f.@@ put@@ (d@@ st@@ Addres@@ s.get@@ Address@@ ()); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (s@@ rc@@ P@@ ort@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (d@@ st@@ P@@ ort@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (d@@ st@@ P@@ ort@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (@@ l@@ eng@@ th - 2@@ 0@@ ))); int u@@ d@@ p@@ Check@@ s@@ um@@ O@@ ff@@ set = bu@@ f.@@ position@@ (); bu@@ f.@@ put@@ Short@@ ((@@ (@@ byte@@ ) (0@@ ))); bu@@ f.@@ put@@ Short@@ (@@ byte@@ ) (@@ 25@@ 5@@ ))); bu@@ f.@@ put@@ Short@@ (@@ ip@@ Check@@ s@@ um@@ Offset@@ , android.net.@@ util.@@ I@@ p@@ Utils.@@ ip@@ Check@@ s@@ um@@ (@@ bu@@ f@@ , 0@@ )); bu@@ f.@@ put@@ Short@@ (@@ u@@ d@@ p@@ Check@@ s@@ um@@ Offset@@ , android.net.@@ util.@@ I@@ p@@ Utils.@@ u@@ d@@ p@@ Check@@ s@@ um@@ (@@ bu@@ f@@ , 0, Connectivity@@ Constants.@@ IP@@ V@@ 4@@ _@@ H@@ E@@ AD@@ ER_@@ L@@ EN@@ G@@ TH@@ )); return new com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data@@ (s@@ rc@@ Address@@ , src@@ P@@ ort@@ , d@@ st@@ Address@@ , bu@@ f.@@ array@@ ()); }
private void com@@ b@@ ine@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { if (@@ null == (@@ n@@ c.@@ m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) || (@@ null == (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ ))) { m@@ Al@@ low@@ ed@@ U@@ id@@ s = null@@ ; return@@ ; } m@@ Al@@ low@@ ed@@ U@@ id@@ s.@@ add@@ All@@ (@@ n@@ c.@@ m@@ Al@@ low@@ ed@@ U@@ id@@ s); }
private boolean s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ , boolean on@@ ly@@ Im@@ m@@ ut@@ able@@ ) { return ((@@ (((@@ n@@ c != null@@ ) && (s@@ ati@@ s@@ fi@@ ed@@ By@@ Net@@ Cap@@ abili@@ ties@@ (@@ n@@ c@@ , on@@ ly@@ Im@@ m@@ ut@@ able@@ ))) && (s@@ ati@@ s@@ fi@@ ed@@ By@@ Trans@@ port@@ Typ@@ es@@ (@@ n@@ c@@ ))) && (@@ on@@ ly@@ Im@@ m@@ ut@@ able || (s@@ ati@@ s@@ fi@@ ed@@ By@@ Lin@@ k@@ B@@ and@@ wid@@ th@@ s(@@ n@@ c@@ )@@ ))) && (s@@ ati@@ s@@ fi@@ ed@@ By@@ S@@ pe@@ c@@ if@@ i@@ er(@@ n@@ c@@ ))) && (@@ on@@ ly@@ Im@@ m@@ ut@@ able || (s@@ ati@@ s@@ fi@@ ed@@ By@@ Sign@@ al@@ Str@@ ength@@ (@@ n@@ c@@ ))) && (@@ on@@ ly@@ Im@@ m@@ ut@@ able || (s@@ ati@@ s@@ fi@@ ed@@ By@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ n@@ c@@ ))) && ; }
private void ag@@ ent@@ Con@@ nect@@ () { android.net.@@ Lin@@ k@@ Proper@@ ti@@ es l@@ p = m@@ ake@@ Lin@@ k@@ Properties@@ (); if ((@@ l@@ p.@@ has@@ IP@@ v@@ 4@@ Default@@ R@@ ou@@ te@@ ()) || (@@ l@@ p.@@ has@@ IP@@ v@@ 6@@ Default@@ R@@ ou@@ te@@ ())) { m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ add@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); } else { m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ remove@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); } m@@ Network@@ Info.@@ set@@ D@@ eta@@ ile@@ d@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , null@@ ); android.net.@@ Network@@ M@@ is@@ c network@@ M@@ is@@ c = new android.net.@@ Network@@ M@@ is@@ c@@ (); network@@ M@@ is@@ c.@@ al@@ low@@ B@@ yp@@ as@@ s = (m@@ Config.@@ al@@ low@@ B@@ yp@@ as@@ s) && (!(m@@ Loc@@ k@@ do@@ wn@@ ); network@@ M@@ is@@ c.@@ manag@@ er@@ U@@ id = android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (); m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ set@@ U@@ id@@ s(@@ create@@ User@@ And@@ Res@@ tr@@ ic@@ ted@@ Pro@@ fil@@ es@@ R@@ ang@@ es@@ (m@@ User@@ Handle@@ , m@@ Config.@@ al@@ low@@ ed@@ Application@@ s, m@@ Config.@@ dis@@ al@@ low@@ ed@@ Application@@ s@@ )); long to@@ k@@ e@@ n = android.os.@@ B@@ ind@@ er.@@ clear@@ Call@@ ing@@ Id@@ enti@@ ty@@ (); try { m@@ Network@@ A@@ g@@ ent = new android.net.@@ Network@@ A@@ g@@ ent@@ (m@@ L@@ oo@@ per@@ , m@@ Context@@ , com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ N@@ E@@ T@@ W@@ OR@@ K@@ TYP@@ E, m@@ Network@@ Info@@ , m@@ Network@@ Cap@@ abili@@ ties@@ , l@@ p@@ , 0, network@@ M@@ is@@ c@@ ) { @java.lang.Override public void un@@ w@@ an@@ ted@@ () { } }; } final@@ l@@ y { android.os.@@ B@@ ind@@ er.@@ r@@ est@@ ore@@ Call@@ ing@@ Id@@ enti@@ ty@@ (@@ to@@ k@@ en@@ ); } m@@ Network@@ Info.@@ set@@ I@@ s@@ A@@ va@@ il@@ able@@ (@@ true@@ ); update@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , "@@ ag@@ ent@@ Con@@ nect@@ "); }
private void ag@@ ent@@ Con@@ nect@@ () { android.net.@@ Lin@@ k@@ Proper@@ ti@@ es l@@ p = m@@ ake@@ Lin@@ k@@ Properties@@ (); if ((@@ l@@ p.@@ has@@ IP@@ v@@ 4@@ Default@@ R@@ ou@@ te@@ ()) || (@@ l@@ p.@@ has@@ IP@@ v@@ 6@@ Default@@ R@@ ou@@ te@@ ())) { m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ add@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); } else { m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ remove@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); } m@@ Network@@ Info.@@ set@@ D@@ eta@@ ile@@ d@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , null@@ ); android.net.@@ Network@@ M@@ is@@ c network@@ M@@ is@@ c = new android.net.@@ Network@@ M@@ is@@ c@@ (); network@@ M@@ is@@ c.@@ al@@ low@@ B@@ yp@@ as@@ s = (m@@ Config.@@ al@@ low@@ B@@ yp@@ as@@ s) && (!(m@@ Loc@@ k@@ do@@ wn@@ )); m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ set@@ U@@ id@@ s(@@ create@@ User@@ And@@ Res@@ tr@@ ic@@ ted@@ Pro@@ fil@@ es@@ R@@ ang@@ es@@ (m@@ User@@ Handle@@ , m@@ Config.@@ al@@ low@@ ed@@ Application@@ s, m@@ Config.@@ dis@@ al@@ low@@ ed@@ Application@@ s@@ )); long to@@ k@@ e@@ n = android.os.@@ B@@ ind@@ er.@@ clear@@ Call@@ ing@@ Id@@ enti@@ ty@@ (); try { m@@ Network@@ A@@ g@@ ent = new android.net.@@ Network@@ A@@ g@@ ent@@ (m@@ L@@ oo@@ per@@ , m@@ Context@@ , com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ N@@ E@@ T@@ W@@ OR@@ K@@ TYP@@ E, m@@ Network@@ Info@@ , m@@ Network@@ Cap@@ abili@@ ties@@ , l@@ p@@ , com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ V@@ P@@ N@@ _@@ DE@@ FA@@ UL@@ T_@@ S@@ C@@ OR@@ E@@ , network@@ M@@ is@@ c@@ ) { @java.lang.Override public void un@@ w@@ an@@ ted@@ () { } }; } final@@ l@@ y { android.os.@@ B@@ ind@@ er.@@ r@@ est@@ ore@@ Call@@ ing@@ Id@@ enti@@ ty@@ (@@ to@@ k@@ en@@ ); } m@@ Network@@ Info.@@ set@@ I@@ s@@ A@@ va@@ il@@ able@@ (@@ true@@ ); update@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , "@@ ag@@ ent@@ Con@@ nect@@ "); }
private void ag@@ ent@@ Con@@ nect@@ () { android.net.@@ Lin@@ k@@ Proper@@ ti@@ es l@@ p = m@@ ake@@ Lin@@ k@@ Properties@@ (); if ((@@ l@@ p.@@ has@@ IP@@ v@@ 4@@ Default@@ R@@ ou@@ te@@ ()) || (@@ l@@ p.@@ has@@ IP@@ v@@ 6@@ Default@@ R@@ ou@@ te@@ ())) { m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ add@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); } else { m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ remove@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); } m@@ Network@@ Info.@@ set@@ D@@ eta@@ ile@@ d@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , null@@ ); android.net.@@ Network@@ M@@ is@@ c network@@ M@@ is@@ c = new android.net.@@ Network@@ M@@ is@@ c@@ (); network@@ M@@ is@@ c.@@ al@@ low@@ B@@ yp@@ as@@ s = (m@@ Config.@@ al@@ low@@ B@@ yp@@ as@@ s) && (!(m@@ Loc@@ k@@ do@@ w@@ n@@ )); m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ set@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ create@@ User@@ And@@ Res@@ tr@@ ic@@ ted@@ Pro@@ fil@@ es@@ R@@ ang@@ es@@ (m@@ User@@ Handle@@ , m@@ Config.@@ al@@ low@@ ed@@ Application@@ s, m@@ Config.@@ dis@@ al@@ low@@ ed@@ Application@@ s@@ )); long to@@ k@@ e@@ n = android.os.@@ B@@ ind@@ er.@@ clear@@ Call@@ ing@@ Id@@ enti@@ ty@@ (); try { m@@ Network@@ A@@ g@@ ent = new android.net.@@ Network@@ A@@ g@@ ent@@ (m@@ L@@ oo@@ per@@ , m@@ Context@@ , com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ N@@ E@@ T@@ W@@ OR@@ K@@ TYP@@ E, m@@ Network@@ Info@@ , m@@ Network@@ Cap@@ abili@@ ties@@ , l@@ p@@ , 0, network@@ M@@ is@@ c@@ ) { @java.lang.Override public void un@@ w@@ an@@ ted@@ () { } }; } final@@ l@@ y { android.os.@@ B@@ ind@@ er.@@ r@@ est@@ ore@@ Call@@ ing@@ Id@@ enti@@ ty@@ (@@ to@@ k@@ en@@ ); } m@@ Network@@ Info.@@ set@@ I@@ s@@ A@@ va@@ il@@ able@@ (@@ true@@ ); update@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , "@@ ag@@ ent@@ Con@@ nect@@ "); }
@java.lang.Override public android.net.@@ Network@@ Requ@@ est request@@ Network@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.os.@@ Mess@@ eng@@ er mess@@ eng@@ er, int time@@ out@@ M@@ s, android.os.@@ I@@ B@@ in@@ der b@@ in@@ der@@ , int le@@ g@@ ac@@ y@@ Typ@@ e) { final android.net.@@ Network@@ Requ@@ est.@@ Type type = (@@ network@@ Cap@@ abili@@ ti@@ es == null@@ ) ? Network@@ Requ@@ est.@@ Type.@@ TR@@ AC@@ K@@ _@@ DE@@ FA@@ UL@@ T : Network@@ Requ@@ est.@@ Type.@@ RE@@ Q@@ UE@@ S@@ T@@ ; if (@@ type == (@@ Network@@ Requ@@ est.@@ Type.@@ TR@@ AC@@ K@@ _@@ DE@@ FA@@ UL@@ T@@ )) { network@@ Cap@@ abili@@ ti@@ es = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (m@@ Default@@ Requ@@ est.@@ network@@ Cap@@ abili@@ ties@@ ); e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); } else { network@@ Cap@@ abili@@ ti@@ es = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); e@@ n@@ for@@ ce@@ Network@@ Request@@ Permission@@ s(@@ network@@ Cap@@ abili@@ ties@@ ); e@@ n@@ for@@ ce@@ M@@ eter@@ ed@@ Ap@@ n@@ Po@@ lic@@ y@@ (@@ network@@ Cap@@ abili@@ ties@@ ); } en@@ su@@ re@@ Request@@ able@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); network@@ Cap@@ abili@@ ti@@ es.@@ set@@ S@@ ing@@ le@@ U@@ id@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); if (@@ time@@ out@@ M@@ s < 0) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ B@@ ad time@@ out s@@ pe@@ c@@ if@@ i@@ ed@@ "); } en@@ su@@ re@@ Valid@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ network@@ Cap@@ abili@@ ties@@ ); android.net.@@ Network@@ Requ@@ est network@@ Requ@@ est = new android.net.@@ Network@@ Request@@ (@@ network@@ Cap@@ abili@@ ties@@ , le@@ g@@ ac@@ y@@ Type, next@@ Network@@ Request@@ Id@@ (), typ@@ e); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (m@@ ess@@ eng@@ er, network@@ Request@@ , b@@ in@@ der@@ ); if (com.android.server.@@ Connectivity@@ Service.@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ request@@ Net@@ wor@@ k for " + n@@ ri@@ )); m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ RE@@ G@@ IS@@ TER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _RE@@ Q@@ UE@@ S@@ T@@ , n@@ ri@@ )); if (@@ time@@ out@@ M@@ s > 0) { m@@ Handler.@@ send@@ Message@@ D@@ el@@ ay@@ ed@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ TI@@ ME@@ O@@ U@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _RE@@ Q@@ UE@@ S@@ T@@ , n@@ ri@@ ), time@@ out@@ M@@ s); } return network@@ Request@@ ; }
@java.lang.Override public void pend@@ ing@@ List@@ en@@ For@@ Network@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent o@@ per@@ ation@@ ) { check@@ NotNull@@ (@@ o@@ per@@ ation@@ , "@@ N@@ e@@ ed can@@ not b@@ e null@@ .@@ "); if (!(@@ has@@ W@@ if@@ i@@ Network@@ List@@ en@@ Permission@@ (@@ network@@ Cap@@ abili@@ ties@@ ))) { e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); } en@@ su@@ re@@ Valid@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ network@@ Cap@@ abili@@ ties@@ ); network@@ Cap@@ abili@@ ti@@ es.@@ set@@ S@@ ing@@ le@@ U@@ id@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); android.net.@@ Network@@ Requ@@ est network@@ Requ@@ est = new android.net.@@ Network@@ Request@@ (@@ new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ), TYP@@ E_@@ N@@ ON@@ E, next@@ Network@@ Request@@ Id@@ (), Network@@ Requ@@ est.@@ Type.@@ L@@ IS@@ T@@ EN@@ ); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (@@ network@@ Request@@ , o@@ per@@ ation@@ ); if (com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ request@@ ing for " + n@@ ri@@ )); m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ RE@@ G@@ IS@@ TER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ L@@ IS@@ T@@ EN@@ ER@@ , n@@ ri@@ )); }
@java.lang.Override public android.net.@@ Network@@ Cap@@ abili@@ ties@@ [] get@@ Default@@ Network@@ Cap@@ abili@@ ties@@ For@@ User@@ (@@ int user@@ Id@@ ) { e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); java.util.@@ Hash@@ Map@@ <@@ android.net.@@ Network@@ , android.net.@@ Network@@ Cap@@ abili@@ ties@@ > result = new java.util.@@ Hash@@ Map@@ <@@ android.net.@@ Network@@ , android.net.@@ Network@@ Cap@@ abili@@ ties@@ >(); com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i = get@@ Default@@ Network@@ (); android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = get@@ Network@@ Cap@@ abili@@ ties@@ In@@ ternal@@ (@@ n@@ a@@ i@@ ); if (@@ n@@ c != null@@ ) { res@@ ult.@@ put@@ (@@ n@@ a@@ i.@@ network@@ , n@@ c@@ ); } synchronized@@ (m@@ V@@ p@@ n@@ s) { if (!(m@@ Loc@@ k@@ do@@ wn@@ Enabled@@ )) { com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n v@@ p@@ n = m@@ V@@ p@@ n@@ s.get@@ (@@ user@@ Id@@ ); if (@@ v@@ p@@ n != null@@ ) { android.net.@@ Network@@ [] network@@ s = v@@ p@@ n@@ .get@@ Un@@ der@@ ly@@ ing@@ Network@@ s(); if (@@ network@@ s != null@@ ) { for (android.net.@@ Net@@ wor@@ k net@@ wor@@ k : network@@ s) { n@@ a@@ i = get@@ Network@@ A@@ g@@ ent@@ Info@@ For@@ Network@@ (@@ network@@ ); n@@ c = get@@ Network@@ Cap@@ abili@@ ties@@ In@@ ternal@@ (@@ n@@ a@@ i@@ ); n@@ c.@@ set@@ S@@ ing@@ le@@ U@@ id@@ (@@ user@@ Id@@ ); if (@@ n@@ c != null@@ ) { res@@ ult.@@ put@@ (@@ network@@ , n@@ c@@ ); } } } } android.net.@@ Network@@ Cap@@ abili@@ ties@@ [] out = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ [@@ res@@ ult.@@ size@@ ()@@ ]; out = res@@ ult.@@ valu@@ es@@ ().@@ to@@ Array@@ (@@ out); return out@@ ; }
public boolean s@@ ati@@ s@@ fi@@ ed@@ By@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { if (@@ null == (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) return true@@ ; if (@@ null == (@@ n@@ c.@@ m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) return false@@ ; for (android.net.@@ U@@ id@@ R@@ ang@@ e requ@@ i@@ re@@ d@@ R@@ ang@@ e : n@@ c.@@ m@@ Al@@ low@@ ed@@ U@@ id@@ s) { if (!(@@ al@@ low@@ s@@ U@@ id@@ R@@ ang@@ e(@@ requ@@ i@@ re@@ d@@ R@@ ang@@ e@@ ))) { return false@@ ; } } return true@@ ; }
public android.net.@@ Network@@ Cap@@ abili@@ ti@@ es set@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > al@@ low@@ ed@@ U@@ id@@ s) { if (@@ null == al@@ low@@ ed@@ U@@ id@@ s) { m@@ Al@@ low@@ ed@@ U@@ id@@ s = null@@ ; } else { m@@ Al@@ low@@ ed@@ U@@ id@@ s = new android.util.@@ Array@@ Set@@ (@@ al@@ low@@ ed@@ U@@ id@@ s); } return this@@ ; }
private android.net.@@ Network@@ Requ@@ est create@@ Default@@ Inter@@ net@@ Request@@ For@@ Trans@@ port@@ (@@ int trans@@ port@@ Type, android.net.@@ Network@@ Requ@@ est.@@ Type typ@@ e) { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es net@@ C@@ a@@ p = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); net@@ C@@ ap.@@ add@@ Cap@@ abili@@ ty@@ (com.android.server.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); net@@ C@@ ap.@@ add@@ Cap@@ abili@@ ty@@ (com.android.server.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); if (@@ trans@@ port@@ Type > (-1@@ )) { net@@ C@@ ap.@@ add@@ Trans@@ port@@ Type@@ (@@ trans@@ port@@ Type@@ ); } net@@ C@@ ap.@@ remove@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ V@@ P@@ N@@ ); return new android.net.@@ Network@@ Request@@ (@@ net@@ Cap@@ , TYP@@ E_@@ N@@ ON@@ E, next@@ Network@@ Request@@ Id@@ (), typ@@ e); }
@java.lang.Override public android.net.@@ Network@@ Requ@@ est list@@ en@@ For@@ Network@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.os.@@ Mess@@ eng@@ er mess@@ eng@@ er, android.os.@@ I@@ B@@ in@@ der b@@ in@@ der@@ ) { if (!(@@ has@@ W@@ if@@ i@@ Network@@ List@@ en@@ Permission@@ (@@ network@@ Cap@@ abili@@ ties@@ ))) { e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); } network@@ Cap@@ abili@@ ti@@ es.@@ set@@ S@@ ing@@ le@@ U@@ id@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); if (!@@ (android.net.@@ Connectivity@@ Manager.@@ check@@ Chang@@ e@@ Permission@@ (m@@ Context@@ ))) { n@@ c.@@ add@@ Cap@@ abili@@ ty@@ (com.android.server.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D@@ ); } en@@ su@@ re@@ Valid@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ network@@ Cap@@ abili@@ ties@@ ); android.net.@@ Network@@ Requ@@ est network@@ Requ@@ est = new android.net.@@ Network@@ Request@@ (@@ n@@ c@@ , TYP@@ E_@@ N@@ ON@@ E, next@@ Network@@ Request@@ Id@@ (), Network@@ Requ@@ est.@@ Type.@@ L@@ IS@@ T@@ EN@@ ); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (m@@ ess@@ eng@@ er, network@@ Request@@ , b@@ in@@ der@@ ); if (com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ N@@ e@@ ed for " + n@@ ri@@ )); m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ RE@@ G@@ IS@@ TER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ L@@ IS@@ T@@ EN@@ ER@@ , n@@ ri@@ )); return network@@ Request@@ ; }
@java.lang.Override public android.net.@@ Network@@ M@@ is@@ c create@@ From@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l in@@ ) { android.net.@@ Network@@ M@@ is@@ c network@@ M@@ is@@ c = new android.net.@@ Network@@ M@@ is@@ c@@ (); network@@ M@@ is@@ c.@@ al@@ low@@ B@@ yp@@ as@@ s = (in@@ .@@ read@@ Int@@ ()) != 0; network@@ M@@ is@@ c.@@ ex@@ pli@@ c@@ it@@ ly@@ Se@@ lec@@ ted = (in@@ .@@ read@@ Int@@ ()) != 0; network@@ M@@ is@@ c.@@ ac@@ ce@@ p@@ t@@ Un@@ valid@@ ate@@ d = (in@@ .@@ read@@ Int@@ ()) != 0; network@@ M@@ is@@ c.@@ sub@@ s@@ cri@@ b@@ er@@ Id = in@@ .@@ read@@ String@@ (); network@@ M@@ is@@ c.@@ pro@@ vision@@ ing@@ No@@ t@@ if@@ ic@@ ation@@ Dis@@ able@@ d = (in@@ .@@ read@@ Int@@ ()) != 0; network@@ M@@ is@@ c.@@ manag@@ er@@ U@@ id = in@@ .@@ read@@ Int@@ (); return network@@ M@@ is@@ c@@ ; }
@java.lang.Override public java.lang.String toString@@ () { int@@ [] type@@ s = get@@ Trans@@ port@@ Typ@@ es@@ (); java.lang.String trans@@ port@@ s = ((@@ typ@@ es.@@ length) > 0) ? Trans@@ port@@ s@@ : " + (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ trans@@ port@@ Nam@@ es@@ Of@@ (@@ typ@@ es@@ )) : "@@ "; type@@ s = get@@ Cap@@ abili@@ ties@@ (); java.lang.String c@@ ap@@ abili@@ ti@@ es = ((@@ typ@@ es.@@ length) > 0) ? Cap@@ abili@@ ties@@ : "@@ "; for (@@ int i = 0; i < (@@ typ@@ es.@@ length@@ )@@ ;@@ ) { c@@ ap@@ abili@@ ti@@ es +@@ = android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ c@@ ap@@ abili@@ ty@@ Name@@ Of@@ (@@ typ@@ es@@ [i@@ ]@@ ); if ((@@ ++@@ i@@ ) < (@@ typ@@ es.@@ length@@ )) c@@ ap@@ abili@@ ti@@ es +@@ = "@@ &@@ "; } java.lang.String up@@ B@@ an@@ d = ((m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ) > 0) ? ("@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ >@@ = " " " + (m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ )) + "@@ K@@ b@@ ps@@ " : "@@ "; java.lang.String d@@ n@@ B@@ an@@ d = ((m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ) > 0) ? ("@@ Lin@@ k@@ D@@ n@@ B@@ and@@ wid@@ th@@ >@@ = " + (m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ )) + "@@ K@@ b@@ ps@@ " : "@@ "; java.lang.String s@@ pe@@ c@@ if@@ i@@ er = ((m@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ ) == null@@ ) ? "@@ " : ("@@ ) S@@ pe@@ c@@ if@@ ier@@ : < " + (m@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ )) + "@@ >@@ "; java.lang.String sign@@ al@@ Str@@ eng@@ th = (@@ has@@ Sign@@ al@@ Str@@ ength@@ ()) ? Sign@@ al@@ Str@@ ength@@ : " + (m@@ Sign@@ al@@ Str@@ ength@@ ) : "@@ "; java.lang.String al@@ low@@ ed@@ U@@ id@@ s = (@@ null != (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) ? ("@@ Al@@ low@@ ed@@ U@@ id@@ s@@ : < " + (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) + "@@ >@@ " : "@@ "; return ((@@ (((@@ ("@@ [@@ " + trans@@ port@@ s) + "@@ ] up@@ B@@ and@@ ) + "@@ ]@@ "; }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public boolean al@@ low@@ s@@ U@@ id@@ R@@ ang@@ e@@ (android.net.@@ U@@ id@@ R@@ ang@@ e requ@@ i@@ re@@ d@@ R@@ ang@@ e) { if (@@ null == (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) return true@@ ; for (android.net.@@ U@@ id@@ R@@ ang@@ e al@@ low@@ ed@@ R@@ ang@@ e : m@@ Al@@ low@@ ed@@ U@@ id@@ s) { if (@@ al@@ low@@ ed@@ R@@ ang@@ e.@@ contain@@ s@@ R@@ ang@@ e(@@ requ@@ i@@ re@@ d@@ R@@ ang@@ e@@ )) { return true@@ ; } } return false@@ ; }
public void com@@ b@@ ine@@ Cap@@ abili@@ ties@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { com@@ b@@ ine@@ Net@@ Cap@@ abili@@ ties@@ (@@ n@@ c@@ ); com@@ b@@ ine@@ Trans@@ port@@ Typ@@ es@@ (@@ n@@ c@@ ); com@@ b@@ ine@@ Lin@@ k@@ B@@ and@@ wid@@ th@@ s(@@ n@@ c@@ ); com@@ b@@ ine@@ S@@ pe@@ c@@ if@@ ier@@ s(@@ n@@ c@@ ); com@@ b@@ ine@@ Sign@@ al@@ Str@@ ength@@ (@@ n@@ c@@ ); com@@ b@@ ine@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ n@@ c@@ ); }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public boolean equal@@ s@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > com@@ par@@ ed@@ U@@ id@@ s = n@@ c.@@ m@@ Al@@ low@@ ed@@ U@@ id@@ s; if (@@ null == com@@ par@@ ed@@ U@@ id@@ s) return null == (m@@ Al@@ low@@ ed@@ U@@ id@@ s); if (@@ null == (m@@ Al@@ low@@ ed@@ U@@ id@@ s@@ )) return false@@ ; final java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > al@@ low@@ ed@@ U@@ id@@ s = new android.util.@@ Array@@ Set@@ (m@@ Al@@ low@@ ed@@ U@@ id@@ s); for (android.net.@@ U@@ id@@ R@@ ang@@ e r@@ ang@@ e : com@@ par@@ ed@@ U@@ id@@ s) { if (!(@@ al@@ low@@ ed@@ U@@ id@@ s.@@ contain@@ s(@@ r@@ ang@@ e@@ ))) { return false@@ ; } al@@ low@@ ed@@ U@@ id@@ s.@@ remove@@ (@@ r@@ ang@@ e); } return al@@ low@@ ed@@ U@@ id@@ s.@@ isEmpty@@ (); }
@org.junit.Test public void test@@ Par@@ cel@@ Network@@ Cap@@ abili@@ ties@@ () { final java.util.@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ > u@@ id@@ s = new android.util.@@ Array@@ Set@@ (); u@@ id@@ s.@@ add@@ (@@ new android.net.@@ U@@ id@@ R@@ ang@@ e(@@ 5@@ 0, 1@@ 00@@ )); u@@ id@@ s.@@ add@@ (@@ new android.net.@@ U@@ id@@ R@@ ang@@ e(@@ 3@@ 00@@ 0, 4@@ 00@@ 0@@ )); final android.net.@@ Network@@ Cap@@ abili@@ ti@@ es net@@ C@@ a@@ p = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ ().@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ).set@@ Al@@ low@@ ed@@ U@@ id@@ s(@@ u@@ id@@ s@@ ).@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ E@@ I@@ M@@ S@@ ).@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T@@ _M@@ E@@ TER@@ E@@ D@@ ); assert@@ Equal@@ s@@ Th@@ ro@@ u@@ g@@ h@@ M@@ ar@@ sh@@ all@@ ing@@ (@@ net@@ Cap@@ ); }
public void switch@@ S@@ lo@@ ts@@ (@@ int@@ [] ph@@ y@@ si@@ cal@@ S@@ lo@@ t@@ s) { }
public int get@@ C@@ ard@@ Id@@ () { return 0; }
public void switch@@ S@@ lo@@ ts@@ (@@ int@@ [] ph@@ y@@ si@@ cal@@ S@@ lo@@ t@@ s) { try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ Telephon@@ y telephon@@ y = get@@ I@@ Telephony@@ (); if (@@ telephon@@ y == null@@ ) { return@@ ; } telephon@@ y@@ .@@ switch@@ S@@ lo@@ t@@ s(@@ ph@@ y@@ si@@ cal@@ S@@ lo@@ t@@ s); } catch (android.os.@@ Remote@@ Exception e) { return@@ ; } }
@java.lang.Override public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l d@@ est@@ , int flag@@ s) { d@@ est.@@ write@@ Byte@@ ((@@ (@@ byte@@ ) (is@@ Ac@@ tiv@@ e ? 1 : 0@@ ))); d@@ est.@@ write@@ Byte@@ ((@@ (@@ byte@@ ) (is@@ E@@ u@@ ic@@ c ? 1 : 0@@ ))); d@@ est.@@ write@@ Int@@ (c@@ ard@@ Id@@ ); d@@ est.@@ write@@ Int@@ (c@@ ard@@ State@@ Info@@ ); }
public int get@@ C@@ ard@@ Id@@ () { return c@@ ard@@ Id@@ ; }
@java.lang.Override public void switch@@ S@@ lo@@ ts@@ (@@ int@@ [] ph@@ y@@ si@@ cal@@ S@@ lo@@ t@@ s) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ l@@ er.get@@ Instance@@ ()@@ .@@ switch@@ S@@ lo@@ t@@ s(@@ ph@@ y@@ si@@ cal@@ S@@ lo@@ t@@ s); }
@java.lang.Override public android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info@@ [] get@@ U@@ ic@@ c@@ S@@ lo@@ ts@@ Info@@ () { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ [] s@@ lo@@ t@@ s = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ U@@ ic@@ c@@ S@@ lo@@ ts@@ (); if (s@@ lo@@ t@@ s == null@@ ) return null@@ ; android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info@@ [] in@@ fo@@ s = new android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info@@ [@@ s@@ lo@@ ts.@@ length@@ ]; for (@@ int i = 0; i < (s@@ lo@@ ts.@@ length); i++) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ S@@ lo@@ t s@@ lo@@ t = s@@ lo@@ ts@@ [i@@ ]; int c@@ ard@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ U@@ ic@@ c@@ C@@ ard@@ (i@@ )@@ .get@@ C@@ ard@@ Id@@ (); int c@@ ard@@ State = 0; switch (s@@ lo@@ t.get@@ C@@ ard@@ State@@ ()) { case C@@ AR@@ D@@ STATE_@@ AB@@ S@@ EN@@ T : c@@ ard@@ State = android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info.@@ C@@ AR@@ D_@@ STATE_@@ IN@@ F@@ O@@ _@@ AB@@ S@@ EN@@ T@@ ; break@@ ; case C@@ AR@@ D@@ STATE_@@ P@@ RE@@ S@@ EN@@ T : c@@ ard@@ State = android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info.@@ C@@ AR@@ D_@@ STATE_@@ IN@@ F@@ O@@ _P@@ RE@@ S@@ EN@@ T@@ ; break@@ ; case C@@ AR@@ D@@ STATE_@@ ER@@ RO@@ R : c@@ ard@@ State = android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info.@@ C@@ AR@@ D_@@ STATE_@@ IN@@ F@@ O@@ _@@ ER@@ RO@@ R@@ ; break@@ ; case C@@ AR@@ D@@ STATE_@@ RE@@ S@@ TR@@ IC@@ TE@@ D : c@@ ard@@ State = android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info.@@ C@@ AR@@ D_@@ STATE_@@ IN@@ F@@ O@@ _RE@@ S@@ TR@@ IC@@ TE@@ D@@ ; break@@ ; default : break@@ ; } in@@ fo@@ s@@ [i@@ ] = new android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info.@@ Builder@@ ().@@ set@@ I@@ s@@ Ac@@ tive@@ (s@@ lo@@ t.@@ is@@ Ac@@ tive@@ ()@@ ).set@@ I@@ s@@ E@@ u@@ ic@@ c@@ (s@@ lo@@ t.@@ is@@ E@@ u@@ ic@@ c@@ ()@@ ).set@@ C@@ ard@@ Id@@ (c@@ ard@@ Id@@ ).set@@ C@@ ard@@ State@@ (c@@ ard@@ State@@ ).@@ build@@ (); } return in@@ fo@@ s; }
public android.@@ telephony.@@ U@@ ic@@ c@@ S@@ lo@@ t@@ Info@@ [] get@@ U@@ ic@@ c@@ S@@ lo@@ ts@@ Info@@ () { try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ Telephon@@ y telephon@@ y = get@@ I@@ Telephony@@ (); if (@@ telephon@@ y == null@@ ) { return null@@ ; } return telephon@@ y@@ .get@@ U@@ ic@@ c@@ S@@ lo@@ ts@@ Info@@ (); } catch (android.os.@@ Remote@@ Exception e) { return null@@ ; } }
@java.lang.Override public int has@@ h@@ Code@@ () { int result = 1; result = (@@ 3@@ 1 * result@@ ) + (is@@ Ac@@ tiv@@ e ? 1 : 0); result = (@@ 3@@ 1 * result@@ ) + (is@@ E@@ u@@ ic@@ c ? 1 : 0); result = (@@ 3@@ 1 * result@@ ) + (c@@ ard@@ Id@@ ); result = (@@ 3@@ 1 * result@@ ) + (c@@ ard@@ State@@ Info@@ ); return result@@ ; }
@org.junit.Test public void test@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ B@@ in@@ der@@ De@@ ath@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g ip@@ Sec@@ Con@@ fi@@ g = new android.net.@@ I@@ p@@ Sec@@ Config@@ (); add@@ Default@@ S@@ p@@ is@@ And@@ Remote@@ Add@@ r@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); add@@ Au@@ th@@ And@@ C@@ ryp@@ t@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Respon@@ se create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ ip@@ Sec@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ I@@ p@@ Sec@@ Service.@@ m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.@@ system.@@ O@@ s.get@@ u@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ Ref@@ coun@@ ted@@ Res@@ our@@ ce ref@@ coun@@ ted@@ Re@@ cor@@ d = user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ); ref@@ coun@@ ted@@ Record@@ .@@ b@@ in@@ der@@ Di@@ ed@@ (); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ ), an@@ y@@ String@@ (), an@@ y@@ String@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ )); an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ ), an@@ y@@ String@@ (), an@@ y@@ String@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ IN@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); assert@@ Equal@@ s(@@ 0, user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ m@@ Current@@ ); try { user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ); fail@@ ("@@ S@@ ho@@ ul@@ d Illegal@@ Argument@@ Exception on at@@ te@@ mp@@ t to ac@@ ces@@ s@@ "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } }
@java.lang.Override public void f@@ ree@@ Un@@ der@@ ly@@ ing@@ Res@@ ources@@ () { for (@@ int di@@ re@@ c@@ tion : com.android.server.@@ I@@ p@@ Sec@@ Service.@@ DI@@ RE@@ C@@ TION@@ S@@ ) { int s@@ p@@ i = mS@@ p@@ is@@ [@@ di@@ re@@ c@@ tion@@ ]@@ .get@@ S@@ pi@@ (); try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ().@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (m@@ Resource@@ Id, di@@ re@@ c@@ tion@@ , m@@ Config.@@ get@@ Local@@ Address@@ (), m@@ Config.@@ get@@ Remote@@ Address@@ (), s@@ p@@ i@@ , 0, 0); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (com.android.server.@@ I@@ p@@ Sec@@ Service.@@ TAG, ("@@ Un@@ able to delet@@ e S@@ A wit@@ h ID@@ : " + (m@@ Resource@@ Id@@ ))); } } get@@ Resource@@ Tr@@ ack@@ er@@ ().@@ g@@ i@@ ve@@ (); }
@org.junit.Test public void test@@ Create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g ip@@ Sec@@ Con@@ fi@@ g = new android.net.@@ I@@ p@@ Sec@@ Config@@ (); add@@ Default@@ S@@ p@@ is@@ And@@ Remote@@ Add@@ r@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); add@@ Au@@ th@@ And@@ C@@ ryp@@ t@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Respon@@ se create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ ip@@ Sec@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); assert@@ Equal@@ s(@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ O@@ K@@ , create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ statu@@ s); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ ), an@@ y@@ String@@ (), an@@ y@@ Long@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ U@@ T@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (@@ e@@ q@@ (@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ ), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ ), an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ ), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ), an@@ y@@ Int@@ (), e@@ q@@ ("@@ "), e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ (0@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ Add@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ ), an@@ y@@ String@@ (), an@@ y@@ Long@@ (), an@@ y@@ Long@@ (), an@@ y@@ Long@@ (), an@@ y@@ Long@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ 25@@ 6@@ ), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ ), an@@ y@@ Int@@ (), e@@ q@@ (@@ new byte@@ []{ an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ P@@ T_@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ P@@ T_@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ P@@ T_@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ P@@ T_@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ P@@ T_@@ A@@ UT@@ H@@ _@@ KE@@ Y@@ P@@ T_@@ A@@ UT@@ H@@ _@@ KE@@ Y@@
@org.junit.Test public void test@@ D@@ el@@ et@@ e@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g ip@@ Sec@@ Con@@ fi@@ g = new android.net.@@ I@@ p@@ Sec@@ Config@@ (); add@@ Default@@ S@@ p@@ is@@ And@@ Remote@@ Add@@ r@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); add@@ Au@@ th@@ And@@ C@@ ryp@@ t@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Respon@@ se create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ ip@@ Sec@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); m@@ I@@ p@@ Sec@@ Service.@@ delet@@ e@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ ), an@@ y@@ String@@ (), an@@ y@@ String@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ )); an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ ), an@@ y@@ String@@ (), an@@ y@@ String@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ IN@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ I@@ p@@ Sec@@ Service.@@ m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.@@ system.@@ O@@ s.get@@ u@@ id@@ ()); assert@@ Equal@@ s(@@ 0, user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ m@@ Current@@ ); try { user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ); fail@@ ("@@ S@@ P@@ le@@ d Illegal@@ Argument@@ Exception on at@@ te@@ mp@@ t to ac@@ ces@@ s delet@@ ed@@ "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } }
@org.junit.Test public void test@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ B@@ in@@ der@@ De@@ ath@@ () throw@@ s java.lang.Exception { when@@ (m@@ Mock@@ Net@@ d.@@ ip@@ Sec@@ Alloc@@ ate@@ S@@ pi@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ ), an@@ y@@ String@@ (), e@@ q@@ (m@@ Remote@@ Add@@ r@@ ), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ ))@@ ).@@ thenReturn@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ ); I@@ p@@ Sec@@ S@@ pi@@ Respon@@ se s@@ pi@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ al@@ loc@@ ate@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ , m@@ Remote@@ Add@@ r@@ , com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ , new android.os.@@ B@@ in@@ der@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ I@@ p@@ Sec@@ Service.@@ m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.@@ system.@@ O@@ s.get@@ u@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ Ref@@ coun@@ ted@@ Res@@ our@@ ce ref@@ coun@@ ted@@ Re@@ cor@@ d = user@@ Record@@ .@@ mS@@ pi@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (s@@ pi@@ Res@@ p.@@ resource@@ Id@@ ); ref@@ coun@@ ted@@ Record@@ .@@ b@@ in@@ der@@ Di@@ ed@@ (); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (s@@ pi@@ Res@@ p.@@ resource@@ Id@@ ), an@@ y@@ Int@@ (), an@@ y@@ String@@ (), an@@ y@@ String@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ )); assert@@ Equal@@ s(@@ 0, user@@ Record@@ .@@ mS@@ pi@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ m@@ Current@@ ); try { user@@ Record@@ .@@ mS@@ pi@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (s@@ pi@@ Res@@ p.@@ resource@@ Id@@ ); fail@@ ("@@ S@@ pi@@ () Illegal@@ Argument@@ Exception on at@@ te@@ mp@@ t to ac@@ ces@@ s@@ "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } }
@java.lang.Override public void f@@ ree@@ Un@@ der@@ ly@@ ing@@ Res@@ ources@@ () { if (m@@ O@@ w@@ ne@@ d@@ By@@ Tr@@ an@@ s@@ for@@ m@@ ) { android.util.Log.d@@ (com.android.server.@@ I@@ p@@ Sec@@ Service.@@ TAG, (("@@ N@@ e@@ ed@@ ed@@ ed@@ ed@@ ed@@ s@@ for@@ m " + (m@@ S@@ pi@@ )) + " Current@@ l@@ y lock@@ ed b@@ y a Tr@@ an@@ s@@ for@@ m return@@ ; } try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ().@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (m@@ Resource@@ Id, m@@ Dire@@ c@@ tion@@ , m@@ Local@@ Addres@@ s, mS@@ p@@ i@@ , 0, 0@@ ); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (com.android.server.@@ I@@ p@@ Sec@@ Service.@@ TAG, ("@@ Faile@@ d to delet@@ e S@@ P@@ I res@@ er@@ v@@ ation wit@@ h ID@@ : " + (m@@ Resource@@ Id@@ ))); } mS@@ p@@ i = android.net.@@ I@@ p@@ Sec@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _S@@ EC@@ UR@@ I@@ TY@@ _P@@ AR@@ AM@@ E@@ T@@ ER_@@ IN@@ DE@@ X@@ ; get@@ Resource@@ Tr@@ ack@@ er@@ ().@@ g@@ i@@ ve@@ (); }
@org.junit.Test public void test@@ Create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ A@@ e@@ ad@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g ip@@ Sec@@ Con@@ fi@@ g = new android.net.@@ I@@ p@@ Sec@@ Config@@ (); add@@ Default@@ S@@ p@@ is@@ And@@ Remote@@ Add@@ r@@ To@@ I@@ p@@ Sec@@ Config@@ (@@ ip@@ Sec@@ Config@@ ); ip@@ Sec@@ Config.@@ set@@ Au@@ th@@ enti@@ cat@@ ed@@ En@@ c@@ r@@ y@@ ption@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ , com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ E@@ A@@ D_@@ AL@@ G@@ O@@ ); ip@@ Sec@@ Config.@@ set@@ Au@@ th@@ enti@@ cat@@ ed@@ En@@ c@@ r@@ y@@ ption@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ , com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ E@@ A@@ D_@@ AL@@ G@@ O@@ ); android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Respon@@ se create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ ip@@ Sec@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); assert@@ Equal@@ s(@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ O@@ K@@ , create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ statu@@ s); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ Add@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ ), an@@ y@@ String@@ (), an@@ y@@ Long@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ U@@ T@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (@@ e@@ q@@ ("@@ "), e@@ q@@ ("@@ "), e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ ("@@ "), e@@ q@@ (0@@ ), e@@ q@@ ("@@ "), e@@ q@@ (0@@ ), e@@ q@@ (0@@ ), e@@ q@@ (@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ ), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ A@@ E@@ A@@ D_@@ KE@@ Y@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ Add@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (@@ create@@ Tr@@ an@@ s@@ for@@ m@@ Res@@ p.@@ resource@@ Id@@ ), an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ ), an@@ y@@ String@@ (), an@@ y@@ Long@@ (), an@@ y@@ Long@@ (), an@@ y@@ Long@@ (), an@@ y@@ Long@@ (), an@@ y@@ Long@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), e@@ q@@ ("@@ "), e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ (@@ e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ (@@ new byte@@ []{ }@@ ), e@@ q@@ (@@ e@@ q@@ (0@@ ), e@@ q@@ (@@ I@@ p@@ Sec@@ ur@@ ity@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ A@@ E@@ A@@ E@@ A@@ E@@ A@@ E@@ A@@ E@@ A@@ E@@ A@@ E@@ A@@ D_@@ KE@@ Y@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (),
@org.junit.Test public void test@@ Re@@ le@@ ase@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ () throw@@ s java.lang.Exception { when@@ (m@@ Mock@@ Net@@ d.@@ ip@@ Sec@@ Alloc@@ ate@@ S@@ pi@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ ), an@@ y@@ String@@ (), e@@ q@@ (m@@ Remote@@ Add@@ r@@ ), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ ))@@ ).@@ thenReturn@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ ); android.net.@@ I@@ p@@ Sec@@ S@@ pi@@ Respon@@ se s@@ pi@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ al@@ loc@@ ate@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ , m@@ Remote@@ Add@@ r@@ , com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ , new android.os.@@ B@@ in@@ der@@ ()); m@@ I@@ p@@ Sec@@ Service.@@ re@@ le@@ ase@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (s@@ pi@@ Res@@ p.@@ resource@@ Id@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ ip@@ Sec@@ D@@ el@@ et@@ e@@ Sec@@ ur@@ ity@@ A@@ ss@@ o@@ c@@ i@@ ation@@ (@@ e@@ q@@ (s@@ pi@@ Res@@ p.@@ resource@@ Id@@ ), an@@ y@@ Int@@ (), an@@ y@@ String@@ (), an@@ y@@ String@@ (), an@@ y@@ String@@ (), e@@ q@@ (com.android.server.@@ I@@ p@@ Sec@@ Service@@ Parameter@@ iz@@ ed@@ Test.@@ TEST_@@ S@@ P@@ I@@ _@@ O@@ UT@@ ))); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ I@@ p@@ Sec@@ Service.@@ m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.@@ system.@@ O@@ s.get@@ u@@ id@@ ()); assert@@ Equal@@ s(@@ 0, user@@ Record@@ .@@ mS@@ pi@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ m@@ Current@@ ); try { user@@ Record@@ .@@ mS@@ pi@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (s@@ pi@@ Res@@ p.@@ resource@@ Id@@ ); fail@@ ("@@ Illegal@@ Argument@@ Exception on at@@ te@@ mp@@ t to ac@@ ces@@ s delet@@ ed res@@ our@@ ce "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } }
public com.android.server.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Respon@@ se create@@ T@@ un@@ ne@@ l@@ Interface@@ (com.android.server.@@ Net@@ wor@@ k un@@ der@@ ly@@ ing@@ Network@@ , java.lang.String local@@ Add@@ r@@ , java.lang.String remo@@ te@@ Add@@ r@@ ) { check@@ NotNull@@ (b@@ in@@ der@@ , "@@ Null B@@ in@@ der p@@ as@@ se@@ d to open@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ Socket@@ "); check@@ NotNull@@ (@@ un@@ der@@ ly@@ ing@@ Network@@ , "@@ N@@ o un@@ der@@ ly@@ ing net@@ wor@@ k w@@ a@@ s s@@ pe@@ c@@ if@@ i@@ ed@@ "); check@@ NotNull@@ (@@ local@@ Add@@ r@@ , "@@ N@@ o loc@@ al addres@@ s w@@ a@@ s s@@ pe@@ c@@ if@@ i@@ ed@@ "); check@@ NotNull@@ (@@ remo@@ te@@ Add@@ r@@ , "@@ N@@ o remo@@ t@@ e addres@@ s w@@ a@@ s s@@ pe@@ c@@ if@@ i@@ ed@@ "); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ check@@ Inet@@ Addres@@ s(@@ local@@ Add@@ r@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ check@@ Inet@@ Addres@@ s(@@ remo@@ te@@ Add@@ r@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); final int resource@@ Id = (m@@ Next@@ Resource@@ Id@@ )@@ ++@@ ; final int i@@ k@@ ey = m@@ Res@@ er@@ ve@@ Key@@ Tr@@ ack@@ er.@@ res@@ er@@ ve@@ (); final int ok@@ ey = m@@ Res@@ er@@ ve@@ Key@@ Tr@@ ack@@ er.@@ res@@ er@@ ve@@ (); try { if (!(@@ user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ is@@ A@@ va@@ il@@ able@@ ())) { return new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Response@@ (@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ RE@@ S@@ O@@ UR@@ C@@ E_@@ UN@@ AV@@ A@@ IL@@ AB@@ L@@ E); } java.lang.String int@@ f@@ Name = "@@ "; user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.@@ put@@ (@@ resource@@ Id, new com.android.server.@@ I@@ p@@ Sec@@ Service.@@ Ref@@ coun@@ ted@@ Resource@@ <@@ com.android.server.@@ I@@ p@@ Sec@@ Service.@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ >@@ (@@ new com.android.server.@@ I@@ p@@ Sec@@ Service.@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ (@@ resource@@ Id, int@@ f@@ Name, un@@ der@@ ly@@ ing@@ Network@@ , local@@ Add@@ r@@ , remo@@ te@@ Add@@ r@@ , i@@ key@@ , o@@ key@@ ), b@@ in@@ der@@ )); return new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Response@@ (@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ O@@ K@@ , resource@@ Id@@ ); } catch (java.io.IOException | android.system.Errno@@ Exception e) { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (s@@ ock@@ F@@ d@@ ); } return new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Response@@ (@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ RE@@ S@@ O@@ UR@@ C@@ E_@@ UN@@ AV@@ A@@ IL@@ AB@@ L@@ E); }
@java.lang.Override public void f@@ ree@@ Un@@ der@@ ly@@ ing@@ Res@@ ources@@ () { try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ().@@ remove@@ V@@ ir@@ t@@ ual@@ T@@ un@@ ne@@ l@@ Interface@@ (m@@ Interface@@ Name); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (com.android.server.@@ I@@ p@@ Sec@@ Service.@@ TAG, ((@@ ("@@ Faile@@ d to delet@@ e V@@ T@@ I wit@@ h int@@ er@@ face name@@ : " + (m@@ Interface@@ Name@@ )) + " an@@ d id@@ : ") + (m@@ Resource@@ Id@@ ))); } get@@ Resource@@ Tr@@ ack@@ er@@ ().@@ g@@ i@@ ve@@ (); }
@java.lang.Override public synchronized void d@@ est@@ ro@@ y@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ int resource@@ Id@@ ) throw@@ s android.os.@@ Remote@@ Exception { com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); re@@ le@@ ase@@ Resource@@ (@@ user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s, resource@@ Id@@ ); }
public int get@@ I@@ Key@@ () { return m@@ Key@@ s@@ [@@ android.net.@@ I@@ p@@ Sec@@ Manager.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ ]; }
synchronized void re@@ le@@ ase@@ (@@ int i@@ ) { if ((@@ i < 0) || (@@ i >@@ = ((m@@ R@@ ang@@ e@@ Start@@ ) + (@@ n@@ um@@ Bit@@ s@@ )@@ ))) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (); } m@@ Bit@@ Set@@ .@@ clear@@ ((@@ i - (m@@ R@@ ang@@ e@@ Start@@ ))); }
public int get@@ O@@ Key@@ () { return m@@ Key@@ s@@ [@@ android.net.@@ I@@ p@@ Sec@@ Manager.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ ]; }
@java.lang.Override public void app@@ ly@@ T@@ un@@ ne@@ l@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ int di@@ re@@ c@@ tion@@ , int tr@@ an@@ s@@ for@@ m@@ Resource@@ Id, int t@@ un@@ ne@@ l@@ Resource@@ Id@@ ) throw@@ s android.os.@@ Remote@@ Exception { com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ check@@ Dire@@ c@@ tion@@ (@@ di@@ re@@ c@@ tion@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ Tr@@ an@@ s@@ for@@ m@@ Re@@ cor@@ d tr@@ an@@ s@@ for@@ m@@ Info = user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ tr@@ an@@ s@@ for@@ m@@ Resource@@ Id@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ T@@ un@@ ne@@ l@@ Interface@@ Re@@ cor@@ d t@@ un@@ Int@@ f@@ Info = user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ t@@ un@@ ne@@ l@@ Resource@@ Id@@ ); android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g c = tr@@ an@@ s@@ for@@ m@@ Info@@ .get@@ Config@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pre@@ con@@ di@@ tion@@ s.@@ check@@ Argument@@ (((@@ c@@ .get@@ Mode@@ ()) == (@@ I@@ p@@ Sec@@ manag@@ er.@@ M@@ OD@@ E_@@ T@@ UN@@ N@@ E@@ L@@ )), "@@ Tr@@ an@@ s@@ for@@ m mo@@ de w@@ a@@ s not T@@ un@@ ne@@ l mode@@ ; can@@ not b@@ e app@@ li@@ ed to a t@@ un@@ ne@@ l int@@ er@@ face@@ "); try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ().@@ ip@@ Sec@@ App@@ ly@@ T@@ un@@ ne@@ l@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ di@@ re@@ c@@ tion@@ , c@@ .get@@ Source@@ Address@@ (), c@@ .get@@ D@@ est@@ in@@ ation@@ Address@@ (), tr@@ an@@ s@@ for@@ m@@ Info@@ .get@@ S@@ pi@@ Record@@ ().get@@ S@@ pi@@ (), t@@ un@@ Int@@ f@@ Info@@ .get@@ I@@ Key@@ (), t@@ un@@ Int@@ f@@ Info@@ .get@@ O@@ Key@@ (), t@@ un@@ Int@@ f@@ Info@@ .get@@ Un@@ der@@ ly@@ ing@@ Network@@ ()); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { if ((@@ e.@@ error@@ Code@@ ) == (@@ E@@ IN@@ V@@ AL@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (e.toString@@ ()); } else { throw e@@ ; } }
@java.lang.Override public synchronized void app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (android.os.@@ Par@@ cel@@ File@@ Descriptor s@@ ocket@@ , int di@@ re@@ c@@ tion@@ , int resource@@ Id@@ ) throw@@ s android.os.@@ Remote@@ Exception { com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ check@@ Dire@@ c@@ tion@@ (@@ di@@ re@@ c@@ tion@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ Tr@@ an@@ s@@ for@@ m@@ Re@@ cor@@ d in@@ f@@ o = user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ resource@@ Id@@ ); if ((@@ (in@@ f@@ o.@@ p@@ id@@ ) != (get@@ Call@@ ing@@ P@@ id@@ ())) || ((@@ in@@ f@@ o.@@ u@@ id@@ ) != (get@@ Call@@ ing@@ U@@ id@@ ()))) { throw new java.lang.@@ Sec@@ ur@@ ity@@ Exception@@ ("@@ P@@ le@@ as@@ e the o@@ w@@ ne@@ r of an I@@ p@@ Se@@ c Tr@@ an@@ s@@ for@@ m ma@@ y app@@ l@@ y it@@ !@@ "); } android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g c = in@@ fo@@ .get@@ Config@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pre@@ con@@ di@@ tion@@ s.@@ check@@ Argument@@ (((@@ c@@ .get@@ Mode@@ ()) == (@@ I@@ p@@ Sec@@ manag@@ er.@@ M@@ OD@@ E_@@ TR@@ AN@@ S@@ P@@ O@@ RT@@ )), mo@@ de w@@ a@@ s not Trans@@ por@@ t mode@@ ; can@@ not b@@ e app@@ li@@ ed to a s@@ ock@@ et try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ().@@ ip@@ Sec@@ App@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (s@@ ocket@@ .get@@ File@@ Des@@ criptor@@ (), resource@@ Id, di@@ re@@ c@@ tion@@ , c@@ .get@@ Source@@ Address@@ (), c@@ .get@@ D@@ est@@ in@@ fo@@ .get@@ S@@ pi@@ Record@@ ().get@@ S@@ pi@@ ()); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { if ((@@ e.@@ error@@ Code@@ ) == (@@ E@@ IN@@ V@@ AL@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (e.toString@@ ()); } else { throw e@@ ; } } }
synchronized int res@@ er@@ ve@@ () { int curr@@ ent = m@@ Next@@ Index@@ ; for (@@ int i = 0; i < (m@@ Siz@@ e); i@@ +@@ + , curr@@ ent = (@@ ++@@ current@@ ) % (m@@ Size@@ )) { if (!(m@@ Bit@@ Set@@ .get@@ (@@ current@@ ))) { m@@ Bit@@ Set@@ .set@@ (@@ current@@ ); m@@ Next@@ In@@ dex = (@@ curr@@ ent + 1@@ ) % (m@@ Siz@@ e); return (m@@ R@@ ang@@ e@@ Start@@ ) + current@@ ; } } throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ O@@ u@@ t of V@@ T@@ I int@@ er@@ fa@@ ces@@ "); }
public java.util.List<@@ java.lang.String> get@@ Local@@ Address@@ es@@ () { return m@@ Local@@ Address@@ es@@ ; }
@java.lang.Override public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l out, int flag@@ s) { out.@@ write@@ Int@@ (@@ statu@@ s); out.@@ write@@ Int@@ (@@ resource@@ Id@@ ); }
public void set@@ Un@@ der@@ ly@@ ing@@ Network@@ () { return m@@ Un@@ der@@ ly@@ ing@@ Network@@ ; }
@java.lang.Override public java.lang.String toString@@ () { return new java.lang.String@@ Builder@@ ().@@ append@@ ("@@ {@@ super@@ =@@ ").@@ append@@ (@@ super@@ .@@ toString@@ ()).@@ append@@ ("@@ , m@@ Interface@@ Name@@ =@@ ").@@ append@@ (m@@ Interface@@ Name@@ ).@@ append@@ ("@@ , m@@ Un@@ der@@ ly@@ ing@@ Network@@ =@@ ").@@ append@@ (m@@ Un@@ der@@ ly@@ ing@@ Network@@ ).@@ append@@ ("@@ , m@@ Local@@ Address@@ es@@ =@@ ").@@ append@@ (m@@ Local@@ Address@@ es@@ ).@@ append@@ ("@@ , m@@ Remote@@ Address@@ =@@ ").@@ append@@ (m@@ Remote@@ Address@@ ).@@ append@@ ("@@ }@@ ").@@ toString@@ (); }
public void current@@ R@@ ad@@ io@@ Config@@ (@@ int ind@@ ic@@ ation@@ Type, android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ R@@ ad@@ io@@ Config@@ ) { }
synchronized void on@@ Device@@ State@@ Changed@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Device@@ State device@@ State@@ ) { b@@ roadcast@@ Message@@ To@@ State@@ M@@ ach@@ ine@@ s@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ DE@@ V@@ IC@@ E_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , device@@ State@@ ); }
boolean st@@ op@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { final com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { return false@@ ; } int connection@@ State = state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ (); if ((@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ))) { return false@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ V@@ O@@ IC@@ E_@@ RE@@ C@@ O@@ G@@ N@@ I@@ TION@@ _S@@ TO@@ P@@ , device@@ ); } return true@@ ; }
private boolean b@@ ind@@ Response@@ (@@ int ind@@ Id, boolean ind@@ Statu@@ s) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ State@@ M@@ ach@@ in@@ es.@@ value@@ ()) { int connection@@ State = state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ (); if ((@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ))) { continue@@ ; } if (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ Tr@@ y for " + (@@ state@@ M@@ ach@@ in@@ e.get@@ Device@@ ()))); } state@@ M@@ ach@@ in@@ e.@@ send@@ Mess@@ age@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ B@@ IN@@ D_@@ RE@@ S@@ P@@ ON@@ S@@ E, "@@ N@@ EC@@ T@@ "); ind@@ Id@@ To@@ String@@ (in@@ d@@ Statu@@ s ? 1 : 0@@ )); return true@@ ; } } return false@@ ; }
boolean dis@@ connect@@ Au@@ dio@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { final com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, (("@@ dis@@ connect@@ Au@@ dio@@ : de@@ vice " + device@@ ) + " w@@ a@@ s ne@@ ve@@ r connec@@ ted@@ /@@ connect@@ ing@@ ")); return false@@ ; } if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Au@@ dio@@ State@@ ()) != (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ dis@@ connect@@ Au@@ dio@@ , au@@ di@@ o is not connec@@ ted for " + device@@ )); return false@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T_@@ A@@ U@@ D@@ IO@@ , device@@ ); } return true@@ ; }
android.@@ bluetooth.@@ Bluetooth@@ De@@ vice get@@ Current@@ Au@@ dio@@ Device@@ () { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Au@@ dio@@ State@@ ()) == (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { return state@@ M@@ ach@@ in@@ e.get@@ Device@@ (); } } return null@@ ; }
boolean dis@@ connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); android.util.Log.d@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ dis@@ connect@@ () device@@ =@@ " + device@@ )); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es.@@ g@@ et@@ (@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ((@@ ("@@ dis@@ connect@@ ing de@@ vice " + device@@ ) + " not@@ ")); connec@@ ted@@ /@@ connect@@ ing return false@@ ; } int connection@@ State = state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ (); if ((@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ))) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ((@@ ("@@ dis@@ connect@@ () de@@ vice '@@ " + device@@ ) + "@@ ' not connec@@ ted@@ /@@ connect@@ ing@@ , connection@@ State@@ =@@ ") + connection@@ State@@ )); return false@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ , device@@ ); } return true@@ ; }
@java.lang.Override protected synchronized boolean start@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ start@@ ()@@ "); m@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ He@@ ad@@ set@@ Service.@@ State@@ M@@ ach@@ in@@ es@@ "); m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .@@ start@@ (); m@@ System@@ Inter@@ face = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ System@@ Interface@@ (@@ this@@ ); m@@ System@@ Interface@@ .@@ init@@ (); m@@ Native@@ Inter@@ face = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Native@@ Interface@@ .get@@ Instance@@ (); m@@ Native@@ Interface@@ .@@ init@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ MA@@ X@@ _@@ H@@ E@@ AD@@ SE@@ T_@@ C@@ ON@@ N@@ EC@@ TION@@ S@@ , android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set@@ .is@@ In@@ b@@ and@@ R@@ ing@@ Sup@@ ported@@ (@@ this@@ )); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Int@@ ent.@@ AC@@ TION@@ _@@ B@@ AT@@ TER@@ Y@@ _C@@ H@@ AN@@ GE@@ D@@ ); fil@@ ter.@@ add@@ Action@@ (@@ Au@@ dio@@ Manager.@@ V@@ O@@ L@@ U@@ M@@ E_@@ CH@@ AN@@ GE@@ D_@@ AC@@ TION@@ ); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ AC@@ CE@@ SS@@ _RE@@ P@@ L@@ Y@@ ); register@@ Recei@@ ver@@ (m@@ He@@ ad@@ set@@ Recei@@ ver@@ , fil@@ ter@@ ); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .set@@ He@@ ad@@ set@@ Service@@ (@@ this@@ ); m@@ St@@ ar@@ ted = true@@ ; return true@@ ; }
boolean dis@@ able@@ W@@ B@@ S@@ () { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ ()) != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { if (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ D@@ B@@ G) { android.util.@@ Log@@ .@@ TAG, "@@ dis@@ able@@ W@@ B@@ S@@ end@@ ing de@@ vice is not connec@@ ted@@ "); " + (@@ state@@ M@@ ach@@ in@@ e.get@@ Device@@ ()))); } continue@@ ; } if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Au@@ dio@@ State@@ ()) == (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { if (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ dis@@ able@@ W@@ B@@ S@@ () au@@ g@@ h@@ t is al@@ read@@ y connec@@ ted " + (@@ state@@ M@@ ach@@ in@@ e.get@@ Device@@ ()))); } continue@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ AB@@ L@@ E_@@ W@@ B@@ S@@ , state@@ M@@ ach@@ in@@ e.get@@ Device@@ ()); } } return true@@ ; }
private java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (@@ int@@ [] st@@ at@@ es) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); java.util.ArrayList<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > device@@ s = new java.util.ArrayList<@@ >(); if (@@ state@@ s == null@@ ) { return de@@ vices@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { int current@@ State = state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ (); for (@@ int st@@ ate : st@@ at@@ es) { if (@@ current@@ State == state@@ ) { de@@ vices@@ .@@ add(@@ state@@ M@@ ach@@ in@@ e.get@@ Device@@ ()); break@@ ; } } } } return de@@ vices@@ ; }
boolean st@@ op@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { final com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, (("@@ st@@ op@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ () de@@ vice " + device@@ ) + " w@@ a@@ s ne@@ ve@@ r connec@@ ted@@ /@@ connect@@ ing return false@@ ; } int connection@@ State = state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ (); if ((@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ))) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, (("@@ st@@ op@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ ing de@@ vice " + device@@ ) + " is ne@@ ith@@ er connec@@ ted@@ /@@ connect@@ ing return false@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ V@@ I@@ RT@@ U@@ AL@@ _C@@ AL@@ L@@ _S@@ TO@@ P@@ , device@@ ); } return true@@ ; }
boolean start@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { final com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, (("@@ start@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ () de@@ vice " + device@@ ) + " w@@ a@@ s ne@@ ve@@ r connec@@ ted@@ /@@ connect@@ ing return false@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ V@@ I@@ RT@@ U@@ AL@@ _C@@ AL@@ L@@ _@@ START@@ , device@@ ); } return true@@ ; }
@@@ android.@@ annotation.@@ Nullable private android.@@ bluetooth.@@ Bluetooth@@ De@@ vice get@@ L@@ ast@@ Connec@@ ted@@ Device@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice las@@ t@@ Connec@@ ted@@ De@@ i@@ v@@ ce = null@@ ; long las@@ t@@ Connection@@ Tim@@ est@@ amp@@ Milli@@ s = java.lang.@@ Lon@@ g.@@ M@@ IN@@ _V@@ AL@@ UE@@ ; synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ ()) == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { long tim@@ est@@ amp@@ Milli@@ s = state@@ M@@ ach@@ in@@ e.get@@ Connection@@ Tim@@ est@@ amp@@ Milli@@ s(); if (@@ tim@@ est@@ amp@@ Milli@@ s > las@@ t@@ Connection@@ Tim@@ est@@ amp@@ Milli@@ s) { las@@ t@@ Connec@@ ted@@ De@@ i@@ v@@ ce = state@@ M@@ ach@@ in@@ e.get@@ Device@@ (); las@@ t@@ Connection@@ Tim@@ est@@ amp@@ Milli@@ s = tim@@ est@@ amp@@ Milli@@ s; } } } } return las@@ t@@ Connec@@ ted@@ De@@ i@@ v@@ ce@@ ; }
int get@@ Au@@ dio@@ State@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { final com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { return android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; } return state@@ M@@ ach@@ in@@ e.get@@ Au@@ dio@@ State@@ (); }
synchronized void message@@ From@@ Native@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent st@@ ack@@ Event@@ ) { if ((@@ st@@ ack@@ Ev@@ ent.@@ device@@ ) == null@@ ) { android.util.Log.@@ w@@ t@@ f@@ Stack@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ N@@ e@@ ed de@@ vice is null@@ , event@@ : " + st@@ ack@@ Event@@ )); return@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ st@@ ack@@ Ev@@ ent.@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { if ((@@ st@@ ack@@ Ev@@ ent.@@ device@@ ) == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ Tr@@ ack@@ ing de@@ vice is null@@ "); return@@ ; } if ((@@ st@@ ack@@ Ev@@ ent.@@ typ@@ e) == (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ )) { state@@ M@@ ach@@ in@@ e = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ m@@ ake@@ (m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .get@@ L@@ oo@@ per@@ (), this@@ , m@@ Native@@ Interface@@ ); m@@ State@@ M@@ ach@@ in@@ es.@@ put@@ (@@ st@@ ack@@ Ev@@ ent.@@ device@@ , state@@ M@@ ach@@ ine@@ ); } else { android.util.Log.@@ w@@ t@@ f@@ Stack@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ N@@ o m@@ ach@@ in@@ e not fo@@ un@@ d for st@@ ac@@ k event@@ : " + st@@ ack@@ Event@@ )); return@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , st@@ ack@@ Event@@ ); }
synchronized int get@@ Connection@@ State@@ () { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ I@@ State current@@ State = get@@ Current@@ State@@ (); if (@@ current@@ State == (m@@ Con@@ nect@@ ing@@ )) { return android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ; } else if (@@ current@@ State instanceof com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ Connec@@ ted@@ Bas@@ e) { return android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; } else if (@@ current@@ State == (m@@ Dis@@ connect@@ ing@@ )) { return android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ; } return android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; }
synchronized android.@@ bluetooth.@@ Bluetooth@@ De@@ vice get@@ De@@ vice () { return m@@ Current@@ Device@@ ; }
long get@@ Connection@@ Tim@@ est@@ amp@@ Milli@@ s() { return m@@ Connection@@ Tim@@ est@@ amp@@ Milli@@ s; }
private boolean is@@ S@@ co@@ Ac@@ ce@@ p@@ t@@ able@@ () { if ((m@@ Service@@ .get@@ For@@ ce@@ S@@ co@@ Au@@ dio@@ ()) == null@@ ) { return true@@ ; } return (m@@ Au@@ dio@@ R@@ ou@@ te@@ Al@@ low@@ ed@@ ) && ((@@ (m@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ St@@ ar@@ ted@@ ) || (is@@ In@@ Call@@ ())) || ((@@ android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set@@ .is@@ In@@ b@@ and@@ R@@ ing@@ Sup@@ ported@@ (m@@ Service@@ )) && (is@@ R@@ ing@@ ing@@ ()))); }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); when@@ (m@@ System@@ Interface@@ .get@@ He@@ ad@@ set@@ Phone@@ State@@ ()).@@ thenReturn@@ (m@@ Phone@@ State@@ ); when@@ (m@@ System@@ Interface@@ .get@@ Au@@ dio@@ Manager@@ ()).@@ thenReturn@@ (m@@ Au@@ dio@@ Manager@@ ); m@@ Adap@@ ter = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (); m@@ Test@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 0@@ 1@@ :@@ 0@@ 2@@ :@@ 0@@ 3@@ :@@ 0@@ 4@@ :@@ 0@@ 5@@ "); m@@ Native@@ Inter@@ face = s@@ p@@ y@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Native@@ Interface@@ .get@@ Instance@@ ()); do@@ No@@ th@@ ing@@ ().@@ when@@ (m@@ Native@@ Interface@@ ).@@ init@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ Boolean@@ ()); do@@ Return@@ (@@ true@@ ).@@ when@@ (m@@ Native@@ Interface@@ ).@@ connect@@ H@@ f@@ p@@ (m@@ Test@@ Device@@ ); do@@ Return@@ (@@ true@@ ).@@ when@@ (m@@ Native@@ Interface@@ ).@@ dis@@ connect@@ H@@ f@@ p@@ (m@@ Test@@ Device@@ ); do@@ Return@@ (@@ true@@ ).@@ when@@ (m@@ Native@@ Interface@@ ).@@ connect@@ Au@@ dio@@ (m@@ Test@@ Device@@ ); do@@ Return@@ (@@ true@@ ).@@ when@@ (m@@ Native@@ Interface@@ ).@@ dis@@ connect@@ Au@@ dio@@ (m@@ Test@@ Device@@ ); when@@ (m@@ He@@ ad@@ set@@ Service.@@ b@@ ind@@ Service@@ (@@ an@@ y@@ (android.@@ content.@@ Intent@@ .@@ class@@ ), an@@ y@@ (android.@@ content.@@ Service@@ Connection@@ .@@ class@@ ), an@@ y@@ Int@@ ()@@ )).@@ thenReturn@@ (@@ true@@ ); when@@ (m@@ He@@ ad@@ set@@ Service@@ .get@@ Res@@ ources@@ ()).@@ thenReturn@@ (android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ ().get@@ Res@@ ources@@ ()); when@@ (m@@ He@@ ad@@ set@@ Service@@ .get@@ Package@@ Manager@@ ()).@@ thenReturn@@ (android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Context@@ ().get@@ Package@@ Manager@@ ()); when@@ (m@@ He@@ ad@@ set@@ Service@@ .get@@ Pri@@ or@@ ity@@ (@@ an@@ y@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ class@@ ))@@ ).@@ thenReturn@@ (@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ ON@@ ); when@@ (m@@ He@@ ad@@ set@@ Service@@ .get@@ For@@ ce@@ S@@ co@@ Au@@ dio@@ ()).@@ thenReturn@@ (@@ true@@ ); m@@ Handler@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ He@@ ad@@ set@@ State@@ M@@ ach@@ ine@@ Test@@ Handler@@ Thread@@ "); m@@ Handler@@ Thread@@ .@@ start@@ (); He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ s@@ Con@@ nect@@ Time@@ out@@ Milli@@ s = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ ine@@ Test.@@ C@@ ON@@ N@@ EC@@ T_@@ TI@@ ME@@ O@@ U@@ T_@@ TE@@ S@@ T@@ _M@@ IL@@ L@@ IS@@ ; m@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ m@@ ake@@ (m@@ Handler@@ Thread@@ .get@@ L@@ oo@@ per@@ (), m@@ He@@ ad@@ set@@ Service@@ , m@@ Native@@ Interface@@ ); }
boolean connect@@ Au@@ dio@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); if (@@ de@@ vice == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ connect@@ Au@@ dio@@ : de@@ vice is null@@ "); return false@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { final com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, (("@@ connect@@ Au@@ dio@@ : de@@ vice " + device@@ ) + " w@@ a@@ s ne@@ ve@@ r connec@@ ted@@ /@@ connect@@ ing@@ ")); return false@@ ; } if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ ()) != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ connect@@ Au@@ dio@@ : pro@@ fi@@ le not connec@@ ted@@ "); return false@@ ; } if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Au@@ dio@@ State@@ ()) != (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ connect@@ Au@@ dio@@ : au@@ di@@ o is not id@@ le@@ , curr@@ ent st@@ ate " + (@@ state@@ M@@ ach@@ in@@ e.get@@ Au@@ dio@@ State@@ ()))); return false@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T_@@ A@@ U@@ D@@ IO@@ , device@@ ); } return true@@ ; }
@java.lang.Override protected synchronized boolean st@@ op@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ st@@ op@@ ()@@ "); if (!(m@@ St@@ ar@@ ted@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ st@@ op@@ ()@@ "); return true@@ ; } m@@ St@@ ar@@ ted = false@@ ; un@@ register@@ Recei@@ ver@@ (m@@ He@@ ad@@ set@@ Recei@@ ver@@ ); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ d@@ est@@ ro@@ y@@ (@@ state@@ M@@ ach@@ ine@@ ); } m@@ State@@ M@@ ach@@ in@@ es.@@ clear@@ (); } m@@ Native@@ Interface@@ .@@ cle@@ an@@ up@@ (); m@@ System@@ Interface@@ .@@ st@@ op@@ (); m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .@@ qu@@ it@@ S@@ a@@ f@@ el@@ y(); m@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad@@ set@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad@@ set@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad = null@@ ; m@@ State@@ M@@ ach@@ in@@ es.@@ clear@@ (); } m@@ Native@@ Interface@@ .@@ cle@@ an@@ up@@ (); m@@ System@@ Interface@@ .@@ st@@ op@@ (); m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .@@ qu@@ it@@ S@@ a@@ f@@ el@@ y(); m@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad@@ es@@ Th@@ re@@ ad@@ set@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad@@ set@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad@@ set@@ State@@ M@@ ach@@ in@@ es@@ (@@ state@@ ); return true@@ ; }
void dis@@ connect@@ He@@ ad@@ set@@ () { synchronized@@ (m@@ S@@ co@@ Client@@ s) { if ((m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ ) != null@@ ) { set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ De@@ vice = (m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ ); } m@@ Bluetooth@@ He@@ ad@@ set = null@@ ; } }
private boolean handle@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ Chang@@ e@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice b@@ t@@ Device@@ , boolean is@@ Ac@@ tive@@ ) { if (b@@ t@@ De@@ vice == null@@ ) { return true@@ ; } java.lang.String addres@@ s = b@@ t@@ Device@@ .get@@ Addres@@ s(); android.@@ bluetooth.@@ Bluetooth@@ Clas@@ s b@@ t@@ Clas@@ s = b@@ t@@ Device@@ .get@@ Bluetooth@@ Class@@ (); int out@@ De@@ vice = android.@@ media.@@ Au@@ dio@@ System.@@ DE@@ V@@ IC@@ E_@@ O@@ U@@ T_@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _S@@ C@@ O@@ ; int in@@ De@@ vice = android.@@ media.@@ Au@@ dio@@ System.@@ DE@@ V@@ IC@@ E_@@ IN@@ _@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _S@@ C@@ O@@ _@@ H@@ E@@ AD@@ SE@@ T@@ ;@@ "); if (@@ b@@ t@@ Clas@@ s != null@@ ) { switch (b@@ t@@ Clas@@ s.get@@ Device@@ Class@@ ()) { case Bluetooth@@ Clas@@ s.@@ Device@@ .@@ A@@ U@@ D@@ IO@@ _V@@ ID@@ E@@ O@@ _@@ W@@ E@@ AR@@ AB@@ L@@ E_@@ H@@ E@@ AD@@ SE@@ T : case Bluetooth@@ Clas@@ s.@@ Device@@ .@@ A@@ U@@ D@@ IO@@ _V@@ ID@@ E@@ O@@ _@@ H@@ AN@@ D@@ S@@ F@@ RE@@ E : out@@ De@@ vice = android.@@ media.@@ Au@@ dio@@ System.@@ DE@@ V@@ IC@@ E_@@ O@@ U@@ T_@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _S@@ C@@ O@@ _@@ H@@ E@@ AD@@ SE@@ T@@ ; break@@ ; case Bluetooth@@ Clas@@ s.@@ Device@@ .@@ A@@ U@@ D@@ IO@@ _V@@ ID@@ E@@ O@@ _C@@ AR@@ _@@ A@@ U@@ DI@@ O : out@@ De@@ vice = android.@@ media.@@ Au@@ dio@@ System.@@ DE@@ V@@ IC@@ E_@@ O@@ U@@ T_@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _S@@ C@@ O@@ _C@@ AR@@ K@@ I@@ T@@ ; break@@ ; } } if (!@@ (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ check@@ Bluetooth@@ Addres@@ s(@@ add@@ ress@@ ))) { addres@@ s = "@@ "; } java.lang.String b@@ t@@ Device@@ Name = b@@ t@@ Device@@ .getName@@ (); return@@ ; } if (@@ handle@@ Device@@ Connection@@ (is@@ Ac@@ tive@@ , out@@ Device@@ , addres@@ s, b@@ t@@ Device@@ Name@@ )) && (@@ handle@@ Device@@ Connection@@ (is@@ Ac@@ tive@@ , in@@ De@@ vice = null@@ ; b@@ t@@ Device@@ Name@@ )); }
boolean start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { final com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { return false@@ ; } int connection@@ State = state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ (); if ((@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ))) { return false@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ V@@ O@@ IC@@ E_@@ RE@@ C@@ O@@ G@@ N@@ I@@ TION@@ _@@ START@@ , device@@ ); } return true@@ ; }
private void c@@ l@@ cc@@ Response@@ (@@ int index@@ , int di@@ re@@ c@@ tion@@ , int statu@@ s, int mode@@ , boolean mpty@@ , java.lang.String n@@ umber@@ , int typ@@ e) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ M@@ OD@@ I@@ F@@ Y@@ _P@@ H@@ ON@@ E_@@ STA@@ TE@@ , null@@ ); b@@ roadcast@@ roadcast@@ roadcast@@ roadcast@@ Supplicant@@ State@@ M@@ ach@@ ine@@ s(@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ S@@ END@@ _C@@ C@@ L@@ C@@ _RE@@ S@@ P@@ ON@@ S@@ E, new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Cl@@ cc@@ Response@@ (in@@ dex@@ , di@@ re@@ c@@ tion@@ , statu@@ s, mode@@ , n@@ umber@@ , type@@ )); }
boolean connect@@ Au@@ dio@@ () { synchronized@@ (m@@ Lock) { if ((m@@ State@@ M@@ ach@@ in@@ es) == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ connect@@ Au@@ dio@@ () n@@ o@@ k is connec@@ ted@@ "); return false@@ ; } return connect@@ Au@@ dio@@ (@@ device@@ ); } }
boolean en@@ able@@ W@@ B@@ S@@ () { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ ()) != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { if (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ D@@ B@@ G) { android.util.@@ Log@@ .@@ TAG, "@@ en@@ able@@ W@@ B@@ S@@ end@@ ing de@@ vice is not connec@@ ted@@ "); " + (@@ state@@ M@@ ach@@ in@@ e.get@@ Device@@ ()))); } continue@@ ; } if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Au@@ dio@@ State@@ ()) == (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { if (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ en@@ able@@ W@@ B@@ S@@ : au@@ di@@ o is al@@ read@@ y connec@@ ted " + (@@ state@@ M@@ ach@@ in@@ e.get@@ Device@@ ()))); } continue@@ ; } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ EN@@ AB@@ L@@ E_@@ W@@ B@@ S@@ , state@@ M@@ ach@@ in@@ e.get@@ Device@@ ()); } } return true@@ ; }
boolean dis@@ connect@@ Au@@ dio@@ () { synchronized@@ (m@@ Lock) { if ((m@@ State@@ ) == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ dis@@ connect@@ ing n@@ o au@@ di@@ o@@ "); return false@@ ; } return dis@@ connect@@ Au@@ di@@ o@@ (@@ de@@ m@@ State@@ ); } }
public boolean get@@ Au@@ dio@@ R@@ ou@@ te@@ Al@@ low@@ ed@@ () { return m@@ Au@@ dio@@ R@@ ou@@ te@@ Al@@ low@@ ed@@ ; }
boolean is@@ Au@@ dio@@ On@@ () { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { if ((@@ state@@ M@@ ach@@ in@@ e.get@@ Au@@ dio@@ State@@ ()) != (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { return true@@ ; } } return false@@ ; }
void set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice b@@ t@@ Device@@ ) { android.util.Log.d@@ (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ TAG, (("@@ set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ (@@ " + b@@ t@@ Device@@ ) + "@@ )@@ ")); synchronized@@ (m@@ S@@ co@@ Client@@ s) { final android.@@ bluetooth.@@ Bluetooth@@ De@@ vice pre@@ vi@@ ou@@ s@@ Ac@@ tive@@ De@@ vice = m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ ; if (!(@@ java.util.@@ Object@@ s.@@ equals(@@ b@@ t@@ Device@@ , pre@@ vi@@ ou@@ s@@ Ac@@ tive@@ Device@@ ))) { if (!(@@ handle@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ Chang@@ e@@ (p@@ re@@ vi@@ ou@@ s@@ Ac@@ tive@@ Device@@ , false@@ ))) { android.util.Log.@@ w@@ (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ TAG, ("@@ set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ () fa@@ ile@@ d to remo@@ v@@ e pre@@ vi@@ ou@@ s de@@ vice " + pre@@ vi@@ ou@@ s@@ Ac@@ tive@@ Device@@ )); return@@ ; } if (!(@@ handle@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ Chang@@ e@@ (b@@ t@@ Device@@ , true@@ ))) { android.util.Log.@@ w@@ (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ TAG, ("@@ set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ () fa@@ ile@@ d to ad@@ d new de@@ vice " + b@@ t@@ Device@@ )); return@@ ; } m@@ Bluetooth@@ He@@ ad@@ set@@ De@@ vice = b@@ t@@ Device@@ ; if ((m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ ) == null@@ ) { res@@ et@@ Bluetooth@@ S@@ co@@ (); } android.util.Log.d@@ (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ TAG, (("@@ set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ (@@ " + b@@ t@@ Device@@ ) + ") do@@ n@@ e set@@ ")); } } android.util.Log.d@@ (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ TAG, (("@@ set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ (@@ " + b@@ t@@ Device@@ ) + ") do@@ ne@@ ")); }
private void phon@@ e@@ State@@ Changed@@ (@@ int n@@ um@@ Ac@@ tive@@ , int n@@ um@@ H@@ eld@@ , int call@@ State@@ , java.lang.String n@@ umber@@ , int typ@@ e) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ M@@ OD@@ I@@ F@@ Y@@ _P@@ H@@ ON@@ E_@@ STA@@ TE@@ , null@@ ); b@@ roadcast@@ C@@ ast@@ Message@@ To@@ State@@ M@@ ach@@ ine@@ s(@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ C@@ AL@@ L@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Call@@ State@@ (@@ n@@ um@@ Ac@@ tive@@ , n@@ um@@ H@@ eld@@ , call@@ State@@ , n@@ umber@@ , type@@ )); }
@java.lang.Override public void f@@ ree@@ Un@@ der@@ ly@@ ing@@ Res@@ ources@@ () { try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ().@@ te@@ ar@@ do@@ wn@@ V@@ ir@@ t@@ ual@@ T@@ un@@ ne@@ l@@ Interface@@ (m@@ Interface@@ Name); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (com.android.server.@@ I@@ p@@ Sec@@ Service.@@ TAG, ((@@ ("@@ Un@@ der@@ ly@@ ing to delet@@ e V@@ T@@ I wit@@ h int@@ er@@ face name@@ : " + (m@@ Interface@@ Name@@ )) + " an@@ d id@@ : ") + (m@@ Resource@@ Id@@ ))); } get@@ Resource@@ Tr@@ ack@@ er@@ ().@@ g@@ i@@ ve@@ (); m@@ Res@@ er@@ ve@@ Key@@ Tr@@ ack@@ er.@@ re@@ le@@ ase@@ (m@@ Key@@ s); }
@java.lang.Override public synchronized void app@@ ly@@ T@@ un@@ ne@@ l@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ int di@@ re@@ c@@ tion@@ , int tr@@ an@@ s@@ for@@ m@@ Resource@@ Id, int t@@ un@@ ne@@ l@@ Resource@@ Id@@ ) throw@@ s android.os.@@ Remote@@ Exception { com.android.server.@@ I@@ p@@ Sec@@ Service.@@ check@@ Dire@@ c@@ tion@@ (@@ di@@ re@@ c@@ tion@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ Tr@@ an@@ s@@ for@@ m@@ Re@@ cor@@ d tr@@ an@@ s@@ for@@ m@@ Info = user@@ Record@@ .@@ m@@ Tr@@ an@@ s@@ for@@ m@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ tr@@ an@@ s@@ for@@ m@@ Resource@@ Id@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ T@@ un@@ ne@@ l@@ Interface@@ Re@@ cor@@ d t@@ un@@ ne@@ l@@ Interface@@ Info = user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ t@@ un@@ ne@@ l@@ Resource@@ Id@@ ); android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g c = tr@@ an@@ s@@ for@@ m@@ Info@@ .get@@ Config@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pre@@ con@@ di@@ tion@@ s.@@ check@@ Argument@@ (((@@ c@@ .get@@ Mode@@ ()) == (android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ M@@ OD@@ E_@@ T@@ UN@@ N@@ E@@ L@@ )), mo@@ de w@@ a@@ s not T@@ un@@ ne@@ l mode@@ ; can@@ not b@@ e app@@ li@@ ed to a t@@ un@@ ne@@ l int@@ er@@ face int@@ er@@ face int@@ er@@ face int@@ [] key@@ s = t@@ un@@ ne@@ l@@ Interface@@ Info@@ .get@@ Key@@ s(); try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ().@@ ip@@ Sec@@ App@@ ly@@ T@@ un@@ ne@@ l@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ di@@ re@@ c@@ tion@@ , c@@ .get@@ Source@@ Address@@ (), c@@ .get@@ D@@ est@@ in@@ ation@@ Address@@ (), tr@@ an@@ s@@ for@@ m@@ Info@@ .get@@ S@@ pi@@ Record@@ ().get@@ S@@ pi@@ (), key@@ s@@ [@@ di@@ re@@ c@@ tion@@ ]@@ ); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { if ((@@ e.@@ error@@ Code@@ ) == (@@ E@@ IN@@ V@@ AL@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (e.toString@@ ()); } else { throw e@@ ; } }
private int get@@ Dex@@ Flag@@ s(@@ android.content.@@ p@@ m.@@ Application@@ Info in@@ fo@@ , java.lang.String comp@@ il@@ er@@ Filter@@ , com.android.server.@@ p@@ m.@@ dex.@@ Dex@@ opt@@ Option@@ s option@@ s) { int flag@@ s = in@@ f@@ o.@@ flag@@ s; boolean debu@@ gg@@ able = (@@ flag@@ s & (android.@@ content.@@ p@@ m.@@ Application@@ Info.@@ F@@ LA@@ G_@@ DE@@ B@@ U@@ G@@ G@@ G@@ G@@ AB@@ LE@@ )) != 0; boolean is@@ Pro@@ file@@ G@@ u@@ id@@ ed@@ Fil@@ ter = d@@ alvi@@ k.@@ system.@@ Dex@@ File@@ .is@@ Pro@@ file@@ G@@ u@@ id@@ ed@@ Comp@@ il@@ er@@ Filter@@ (@@ comp@@ il@@ er@@ Filter@@ ); boolean is@@ P@@ u@@ bli@@ c = (!@@ (in@@ f@@ o.@@ is@@ For@@ w@@ ard@@ Lock@@ ed@@ ())) && (!@@ is@@ Pro@@ file@@ G@@ u@@ id@@ ed@@ Filter@@ ); int pro@@ file@@ F@@ la@@ g = (is@@ Pro@@ file@@ G@@ u@@ id@@ ed@@ Filter@@ ) ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ P@@ RO@@ F@@ IL@@ E_@@ G@@ U@@ ID@@ E@@ D : 0; int dex@@ Flag@@ s = ((@@ android.net.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ P@@ U@@ B@@ L@@ I@@ C : 0) | (@@ debu@@ gg@@ able ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ DE@@ B@@ U@@ G@@ G@@ AB@@ L@@ E : 0@@ )) | pro@@ file@@ Flag@@ ) | (@@ option@@ s.@@ is@@ B@@ oot@@ Comp@@ let@@ e@@ () ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ B@@ O@@ O@@ O@@ T@@ C@@ O@@ M@@ P@@ LE@@ T@@ E : 0@@ )) | (@@ option@@ s.@@ is@@ Dex@@ opt@@ Id@@ le@@ B@@ ack@@ g@@ round@@ J@@ ob@@ () ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ ID@@ L@@ E_@@ B@@ AC@@ K@@ G@@ RO@@ UN@@ D_@@ J@@ O@@ B : 0@@ 0@@ 0) | (in@@ f@@ o.@@ is@@ System@@ App@@ () ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ D@@ IS@@ AB@@ L@@ E_@@ H@@ ID@@ D@@ EN@@ _@@ AP@@ I@@ _C@@ H@@ EC@@ K@@ S : 0@@ ; return ad@@ j@@ ust@@ Dex@@ opt@@ Flag@@ s(@@ dex@@ Flag@@ s); }
private void b@@ roadcast@@ Config@@ Changed@@ Intent@@ (@@ int phon@@ e@@ Id@@ ) { android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ AC@@ TION@@ _C@@ AR@@ R@@ I@@ ER@@ _C@@ ON@@ FI@@ G@@ _C@@ H@@ AN@@ GE@@ D@@ ); int@@ ent.@@ add@@ Flag@@ s@@ ((@@ (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ E@@ F@@ OR@@ E_@@ B@@ O@@ T@@ ) | (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER_@@ IN@@ C@@ L@@ U@@ D@@ E_@@ B@@ AC@@ K@@ G@@ RO@@ UN@@ D@@ ))); android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ put@@ Phone@@ Id@@ And@@ Sub@@ Id@@ Extra@@ (@@ int@@ ent@@ , phon@@ e@@ Id@@ ); int@@ ent.@@ put@@ Extra@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ EX@@ TR@@ A@@ _P@@ H@@ ON@@ E_@@ ID@@ , phon@@ e@@ Id@@ ); android.@@ app.@@ Activity@@ Manager.@@ b@@ roadcast@@ S@@ ti@@ ck@@ y@@ Intent@@ (@@ int@@ ent@@ , User@@ Hand@@ le.@@ US@@ ER_@@ AL@@ L); m@@ Has@@ S@@ ent@@ Config@@ Chang@@ e@@ [@@ phon@@ e@@ Id@@ ] = true@@ ; }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () { m@@ E@@ u@@ ic@@ c@@ C@@ ar@@ d = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Imp@@ l@@ V@@ 2@@ (@@ new com.android.@@ e@@ u@@ ic@@ c.@@ data@@ .@@ E@@ u@@ ic@@ c@@ Spec@@ Version@@ (@@ 2, 0, 0@@ ), m@@ Mock@@ T@@ m@@ ); }
private static com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ Oper@@ ator@@ Id build@@ Oper@@ ator@@ Id@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node no@@ de@@ ) throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ In@@ valid@@ As@@ n@@ 1@@ Data@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ T@@ ag@@ Not@@ F@@ ound@@ Exception { byte@@ [] g@@ id@@ 1 = null@@ ; if (@@ no@@ d@@ e.@@ has@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 1@@ )) { g@@ id@@ 1 = no@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 1@@ ).@@ as@@ Bytes@@ (); } byte@@ [] g@@ id@@ 2 = null@@ ; if (@@ no@@ d@@ e.@@ has@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 2@@ )) { g@@ id@@ 2 = no@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 2@@ ).@@ as@@ Bytes@@ (); } return new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ Oper@@ ator@@ Id@@ (@@ no@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 0@@ ).@@ as@@ Bytes@@ (), g@@ id@@ 1, g@@ id@@ 2@@ ); }
private int mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ (java.lang.String respon@@ se@@ , java.lang.String.@@ .@@ . ex@@ tra@@ Respon@@ s@@ es) { int channe@@ l = com.android.@@ e@@ u@@ ic@@ c.@@ telephony.@@ U@@ ic@@ c@@ Channel@@ Mock@@ er.@@ mock@@ Open@@ Log@@ ic@@ al@@ Channel@@ Response@@ (m@@ Mock@@ T@@ m@@ , I@@ cc@@ Open@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ e.@@ STAT@@ US@@ _N@@ O@@ _@@ ER@@ RO@@ R@@ , "@@ 9@@ 00@@ 0@@ "); com.android.@@ e@@ u@@ ic@@ c.@@ telephony.@@ U@@ ic@@ c@@ Channel@@ Mock@@ er.@@ mock@@ S@@ end@@ To@@ Log@@ ic@@ al@@ Channel@@ (m@@ Mock@@ T@@ m@@ , channe@@ l@@ , respon@@ se@@ , ex@@ tra@@ Respon@@ s@@ es@@ ); com.android.@@ e@@ u@@ ic@@ c.@@ telephony.@@ U@@ ic@@ c@@ Channel@@ Mock@@ er.@@ mock@@ Clo@@ se@@ Log@@ ic@@ al@@ Channel@@ (m@@ Mock@@ T@@ m@@ , channe@@ l@@ ); return channe@@ l@@ ; }
public void pre@@ par@@ e@@ Do@@ wn@@ load@@ (@@ @@@ android.@@ annotation.@@ Nullable byte@@ [] has@@ h@@ C@@ c@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ s@@ m@@ d@@ p@@ S@@ ig@@ ne@@ d@@ 2, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ s s@@ m@@ d@@ p@@ Sign@@ ature@@ 2, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ s, s@@ m@@ d@@ p@@ Cer@@ t@@ if@@ ic@@ ate@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { }
@org.junit.Test public void test@@ Get@@ All@@ Pro@@ fil@@ es@@ () throw@@ s com.android.@@ e@@ u@@ ic@@ c.@@ telephony.@@ U@@ ic@@ c@@ Channel@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ D@@ 1@@ 4@@ A@@ 0@@ 12@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 9@@ F@@ 7@@ 00@@ 10@@ 1@@ 9@@ 00@@ 0@@ "); com.android.@@ e@@ u@@ ic@@ c.@@ data@@ .@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ [] pro@@ file@@ s = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ All@@ Pro@@ fil@@ es@@ (); assert@@ Equal@@ s(@@ 1, pro@@ fil@@ es.@@ length); assert@@ Equal@@ s("@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ 10@@ ", pro@@ fil@@ es@@ [0@@ ]@@ .get@@ I@@ cc@@ id@@ ()); assert@@ Equal@@ s(@@ Pro@@ file@@ State.@@ EN@@ AB@@ LE@@ D@@ , pro@@ fil@@ es@@ [0@@ ]@@ .get@@ State@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ D@@ 0@@ D@@ 5@@ C@@ 0@@ B@@ 5@@ A@@ 9@@ 0@@ 9@@ 1@@ 9@@ 2@@ B@@ 7@@ 9@@ F@@ 7@@ 0@@ 9@@ 5@@ 99@@ B@@ F@@ 7@@ 6@@ "); }
public void get@@ E@@ u@@ ic@@ c@@ Info@@ 1@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { }
public void au@@ th@@ enti@@ cate@@ Server@@ (java.lang.String match@@ ing@@ Id, android.os.@@ As@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ [] ser@@ ver@@ S@@ ig@@ ne@@ d@@ 1, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ , ser@@ ver@@ Sign@@ ature@@ 1, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ e@@ u@@ ic@@ c@@ C@@ i@@ P@@ k@@ Id@@ To@@ B@@ e@@ U@@ sed@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > ser@@ ver@@ Cer@@ t@@ if@@ ic@@ ate@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { }
public void can@@ cel@@ Session@@ (@@ byte@@ [] trans@@ action@@ Id, @@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Can@@ cel@@ Re@@ as@@ on int re@@ as@@ on@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { }
private void ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ int channe@@ l@@ , java.lang.String command@@ ) { ve@@ r@@ if@@ y@@ (m@@ Mock@@ T@@ m@@ , tim@@ es@@ (1@@ )).@@ ic@@ c@@ Trans@@ m@@ it@@ Ap@@ du@@ Log@@ ic@@ al@@ Channel@@ (@@ channe@@ l@@ , (1@@ 2@@ 8 | channe@@ l@@ ), 2@@ 6@@ , 1@@ 4@@ 5, 0, ((@@ command@@ .@@ length@@ ()) / 2@@ ), command@@ ); }
public void get@@ E@@ u@@ ic@@ c@@ Info@@ 2@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { }
public static java.lang.String str@@ ip@@ Tr@@ a@@ il@@ ing@@ F@@ s@@ (@@ byte@@ [] ic@@ c@@ Id@@ ) { java.lang.String ic@@ c@@ Id@@ Str@@ ing = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter.@@ b@@ c@@ d@@ Bytes@@ To@@ String(@@ ic@@ c@@ Id@@ ); if (@@ ic@@ c@@ Id@@ Str@@ ing.@@ end@@ sWith@@ ("@@ F@@ ")) { ic@@ c@@ Id@@ Str@@ ing = ic@@ c@@ Id@@ Str@@ ing.@@ sub@@ string@@ (@@ 0, ic@@ c@@ Id@@ Str@@ ing.@@ index@@ Of@@ (@@ '@@ F@@ '@@ )); } return ic@@ c@@ Id@@ String@@ ; }
public void load@@ B@@ ound@@ Pro@@ file@@ Package@@ (@com.android.annotations.NonNull com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ bo@@ und@@ Pro@@ file@@ Package@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { }
@org.junit.Test public void test@@ F@@ Su@@ f@@ fix@@ () throw@@ s com.android.@@ e@@ u@@ ic@@ c.@@ telephony.@@ U@@ ic@@ c@@ Channel@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ D@@ 1@@ 4@@ A@@ 0@@ 12@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ F@@ 9@@ F@@ 7@@ 00@@ 10@@ 1@@ 9@@ 00@@ 0@@ "); com.android.@@ e@@ u@@ ic@@ c.@@ data@@ .@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ [] pro@@ file@@ s = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ All@@ Pro@@ fil@@ es@@ (); assert@@ Equal@@ s(@@ 1, pro@@ fil@@ es.@@ length); assert@@ Equal@@ s("@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ ", pro@@ fil@@ es@@ [0@@ ]@@ .get@@ I@@ cc@@ id@@ ()); assert@@ Equal@@ s(@@ Pro@@ file@@ State.@@ EN@@ AB@@ LE@@ D@@ , pro@@ fil@@ es@@ [0@@ ]@@ .get@@ State@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ D@@ 0@@ D@@ 5@@ C@@ 0@@ 9@@ 1@@ 9@@ 2@@ B@@ 7@@ 9@@ F@@ 7@@ 0@@ 9@@ 5@@ 99@@ B@@ F@@ 7@@ 6@@ "); }
private boolean ar@@ e@@ All@@ Record@@ s@@ Load@@ ed@@ () { for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ard@@ Appli@@ c@@ ation ap@@ p : m@@ U@@ ic@@ c@@ Application@@ s) { if ((@@ ap@@ p != null@@ ) && (is@@ Sup@@ ported@@ Application@@ (@@ app@@ ))) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s i@@ r = app@@ .get@@ I@@ cc@@ Record@@ s(); if ((@@ i@@ r == null@@ ) || (!(@@ ir.@@ is@@ Load@@ ed@@ ()))) { log@@ ("@@ ar@@ e@@ All@@ Record@@ s@@ Load@@ ed@@ : "); return false@@ ; } } log@@ (("@@ ar@@ e@@ All@@ Record@@ s@@ Load@@ ed@@ : out@@ s@@ id@@ e lo@@ op@@ , return " + ((m@@ U@@ ic@@ c@@ Application@@ s@@ [0@@ ]@@ ) != null@@ ; return (m@@ U@@ ic@@ c@@ Application@@ s@@ [0@@ ]@@ ) != null@@ ; } return (m@@ U@@ ic@@ c@@ Application@@ s@@ [0@@ ]@@ ) != null@@ ; }
private void update@@ Ex@@ ternal@@ State@@ () { if ((m@@ U@@ ic@@ c@@ C@@ ard@@ .get@@ C@@ ard@@ State@@ ()) == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ ER@@ RO@@ R@@ )) { set@@ Ex@@ ternal@@ State@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ State.@@ C@@ AR@@ D_@@ IO@@ _@@ ER@@ RO@@ R@@ ); return@@ ; } if ((m@@ U@@ ic@@ c@@ C@@ ard@@ .get@@ C@@ ard@@ State@@ ()) == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )) { set@@ Ex@@ ternal@@ State@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ State.@@ C@@ AR@@ D_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); return@@ ; } if ((m@@ U@@ ic@@ c@@ Application@@ ) == null@@ ) || (!(@@ ar@@ e@@ All@@ Application@@ s@@ Read@@ y@@ ()))) { set@@ Ex@@ ternal@@ State@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ State.@@ NO@@ T_@@ RE@@ AD@@ Y@@ ); return@@ ; } switch (m@@ U@@ ic@@ c@@ Application@@ .get@@ State@@ ()) { case AP@@ P@@ STATE_@@ UN@@ K@@ NO@@ W@@ N : set@@ Ex@@ ternal@@ State@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ State.@@ NO@@ T_@@ RE@@ AD@@ Y@@ ); break@@ ; case AP@@ P@@ STATE_@@ S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _P@@ E@@ RS@@ O : if ((m@@ U@@ ic@@ c@@ Application@@ .get@@ Per@@ so@@ Sub@@ State@@ ()) == (@@ I@@ cc@@ C@@ ard@@ Application@@ Statu@@ s.@@ Per@@ so@@ Sub@@ State.@@ P@@ E@@ RS@@ O@@ S@@ U@@ B@@ STATE_@@ SI@@ M@@ _N@@ E@@ T@@ W@@ OR@@ K@@ )) { set@@ Ex@@ ternal@@ State@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ State.@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ LO@@ C@@ KE@@ D@@ ); } break@@ ; case AP@@ P@@ STATE_@@ RE@@ AD@@ Y : set@@ Ex@@ ternal@@ State@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ State.@@ RE@@ AD@@ Y@@ ); break@@ ; } }
public com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ fi@@ le get@@ U@@ ic@@ c@@ Pro@@ file@@ For@@ Phone@@ (@@ int phon@@ e@@ Id@@ ) { synchronized@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ ler.@@ m@@ Lock) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ar@@ d u@@ ic@@ c@@ C@@ ar@@ d = get@@ U@@ ic@@ c@@ C@@ ard@@ For@@ Phone@@ (@@ phon@@ e@@ Id@@ ); return u@@ ic@@ c@@ C@@ ar@@ d != null ? u@@ ic@@ c@@ C@@ ard@@ .get@@ U@@ ic@@ c@@ Pro@@ file@@ () : null@@ ; } }
@java.lang.Override public void handle@@ Message@@ (android.os.@@ Mess@@ age ms@@ g@@ ) { switch (m@@ s@@ g.@@ wh@@ at@@ ) { default : log@@ e@@ (("@@ Can@@ not Ev@@ ent " + (m@@ s@@ g.@@ wh@@ at@@ ))); } }
private void set@@ Current@@ App@@ Type@@ (@@ boolean is@@ G@@ s@@ m@@ ) { log@@ ("@@ set@@ Current@@ App@@ Type@@ "); synchronized@@ (m@@ Lock) { boolean is@@ L@@ te@@ On@@ C@@ d@@ ma@@ Mod@@ e = (android.@@ telephony.@@ Telephony@@ Manager.@@ get@@ L@@ te@@ On@@ C@@ d@@ ma@@ Mode@@ St@@ ati@@ c@@ ()) == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Phone@@ Constants.@@ L@@ T@@ E_@@ ON@@ _C@@ D@@ MA@@ _@@ TR@@ U@@ E); if (is@@ G@@ s@@ m || is@@ L@@ te@@ On@@ C@@ d@@ ma@@ Mode@@ ) { m@@ Current@@ App@@ Type = U@@ ic@@ c@@ Control@@ ler.@@ AP@@ P@@ _@@ F@@ AM@@ _@@ 3@@ G@@ P@@ P@@ ; } else { m@@ Current@@ App@@ Type = U@@ ic@@ c@@ Control@@ ler.@@ AP@@ P@@ _@@ F@@ AM@@ _@@ 3@@ G@@ P@@ P@@ P@@ 2@@ ; } }
private void register@@ All@@ App@@ Event@@ s() { for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ard@@ Appli@@ c@@ ation ap@@ p : m@@ U@@ ic@@ c@@ Application@@ s) { if (@@ ap@@ p != null@@ ) { log@@ ("@@ register@@ ing for EV@@ ENT_@@ AP@@ P@@ _RE@@ AD@@ Y@@ "); app.@@ register@@ For@@ Read@@ y@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ EV@@ ENT_@@ AP@@ P@@ _RE@@ AD@@ Y@@ , null@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s i@@ r = app@@ .get@@ I@@ cc@@ Record@@ s(); if (i@@ r != null@@ ) { log@@ ("@@ register@@ ing for EV@@ ENT_@@ RE@@ C@@ OR@@ D@@ S_@@ LO@@ A@@ DE@@ D ir.@@ register@@ For@@ Record@@ s@@ Load@@ ed@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ EV@@ ENT_@@ RE@@ C@@ OR@@ D@@ S_@@ LO@@ A@@ DE@@ D@@ , null@@ ); ir.@@ register@@ For@@ Record@@ s@@ Event@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ EV@@ ENT_@@ IC@@ C@@ _RE@@ C@@ OR@@ D_@@ EV@@ EN@@ T@@ S@@ , null@@ ); } } }
public void update@@ (android.@@ content.@@ Context c@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ s@@ Inter@@ face c@@ i@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Statu@@ s ic@@ s) { synchronized@@ (m@@ Lock) { mC@@ ard@@ State = ic@@ s.@@ mC@@ ard@@ State@@ ; m@@ Context = c@@ ; mC@@ i = c@@ i@@ ; m@@ I@@ cc@@ id = ic@@ s.@@ ic@@ c@@ id@@ ; update@@ C@@ ard@@ Id@@ (); if ((m@@ C@@ ard@@ State@@ ) != (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ AB@@ S@@ EN@@ T@@ )) { if ((m@@ U@@ ic@@ c@@ Pro@@ file@@ ) == null@@ ) { m@@ U@@ ic@@ c@@ Pro@@ fi@@ le = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file@@ (m@@ Context@@ , mC@@ i@@ , ic@@ s, m@@ Phone@@ Id, this@@ ); } else { m@@ U@@ ic@@ c@@ Pro@@ file.@@ update@@ (m@@ Context@@ , mC@@ i@@ , ic@@ s); } } else { throw new java.lang.@@ RuntimeException@@ ("@@ C@@ ard@@ State st@@ ate is ab@@ s@@ ent@@ ", up@@ dat@@ ing@@ !@@ "); } }
private boolean ar@@ e@@ All@@ Application@@ s@@ Read@@ y@@ () { return m@@ I@@ s@@ Read@@ y@@ ; }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ R@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ B@@ 0@@ 3@@ 8@@ 10@@ 1@@ 9@@ 00@@ 0@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ (@@ 5@@ ); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 1, e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ B@@ 0@@ 5@@ A@@ 00@@ 3@@ 8@@ 00@@ 10@@ 5@@ "); throw e@@ ; } }
private android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation create@@ No@@ t@@ if@@ ic@@ ation@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node no@@ de@@ ) throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ In@@ valid@@ As@@ n@@ 1@@ Data@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ T@@ ag@@ Not@@ F@@ ound@@ Exception { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node m@@ et@@ ad@@ ata@@ Node@@ ; if ((@@ no@@ d@@ e.get@@ T@@ ag@@ ()) == (@@ TAG@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _M@@ E@@ TA@@ DA@@ TA@@ )) { m@@ et@@ ad@@ ata@@ Node = no@@ de@@ ; } else if ((@@ no@@ d@@ e.get@@ T@@ ag@@ ()) == (@@ TAG@@ _P@@ RO@@ F@@ IL@@ E_@@ IN@@ STA@@ L@@ L@@ AT@@ ION@@ _RE@@ S@@ UL@@ T@@ )) { m@@ et@@ ad@@ ata@@ Node = no@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _P@@ RO@@ F@@ IL@@ E_@@ IN@@ STA@@ L@@ AT@@ ION@@ _RE@@ S@@ UL@@ T_@@ DA@@ TA@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _M@@ E@@ TA@@ ); } else { m@@ et@@ ad@@ ata@@ Node = no@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _M@@ E@@ TA@@ ); } return new android.@@ telephony.@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ (m@@ et@@ ad@@ ata@@ No@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _S@@ E@@ Q@@ ).@@ as@@ Integ@@ er@@ (), m@@ et@@ ad@@ ata@@ No@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ TAG@@ _@@ TA@@ R@@ GE@@ T_@@ AD@@ D@@ R@@ ).@@ as@@ String@@ (), m@@ et@@ ad@@ ata@@ No@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ TAG@@ _@@ EV@@ EN@@ T@@ ).@@ as@@ Bit@@ s@@ (), ((@@ no@@ d@@ e.get@@ T@@ ag@@ ()) == (@@ TAG@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _M@@ E@@ TA@@ DA@@ TA@@ ) ? null : no@@ d@@ e.@@ to@@ Bytes@@ ())); }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ Can@@ cel@@ Session@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 4@@ 10@@ 3@@ 8@@ 10@@ 3@@ 9@@ 00@@ 0@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ can@@ cel@@ Session@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter.@@ h@@ ex@@ To@@ Bytes@@ ("@@ A@@ 1@@ B@@ 2@@ C@@ 3@@ "), E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ Can@@ cel@@ Re@@ as@@ on@@ .@@ P@@ O@@ S@@ T@@ P@@ ON@@ E@@ D@@ ); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 3@@ , e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 4@@ 10@@ 8@@ 8@@ 8@@ 00@@ 3@@ A@@ 1@@ B@@ 2@@ C@@ 3@@ 8@@ 10@@ 10@@ 1@@ "); throw e@@ ; } }
@org.junit.Test public void test@@ Remo@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ From@@ List@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 3@@ 00@@ 1@@ 8@@ 00@@ 1@@ 00@@ 9@@ 00@@ 0@@ "); m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ remove@@ No@@ t@@ if@@ ic@@ ation@@ From@@ List@@ (@@ 5@@ ); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 00@@ 3@@ 8@@ 00@@ 10@@ 5@@ "); }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ S@@ wit@@ ch@@ To@@ Pro@@ file@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ D@@ 1@@ 4@@ A@@ 0@@ 12@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 9@@ F@@ 7@@ 00@@ 1@@ 00@@ 0@@ ", "@@ B@@ F@@ 3@@ 8@@ 00@@ 10@@ 3@@ 9@@ 00@@ 0@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ switch@@ To@@ Pro@@ file@@ ("@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ 10@@ ", true@@ ); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 3@@ , e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 1@@ 1@@ 1@@ A@@ 00@@ C@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 8@@ 10@@ 1@@ F@@ F@@ "); throw e@@ ; } }
@org.junit.Test public void t@@ est@@ switch@@ To@@ Pro@@ file@@ _S@@ im@@ Ref@@ res@@ h@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ D@@ 1@@ 4@@ A@@ 0@@ 12@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 9@@ F@@ 7@@ 00@@ 1@@ 00@@ 9@@ 00@@ 0@@ ", "@@ 6@@ 10@@ 6@@ ", "@@ 6@@ f@@ 00@@ "); m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ switch@@ To@@ Pro@@ file@@ ("@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ 10@@ ", true@@ ); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 1@@ 1@@ 1@@ 1@@ A@@ 00@@ C@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 8@@ 10@@ 1@@ F@@ "); }
@org.junit.Test public void test@@ R@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ List@@ _@@ Empty@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ B@@ 0@@ 3@@ 8@@ 10@@ 10@@ 1@@ 9@@ 00@@ 0@@ "); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ [] result = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ r@@ et@@ ri@@ e@@ No@@ t@@ if@@ ic@@ ation@@ List@@ (((@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ DE@@ LE@@ TE@@ ) | (@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ D@@ IS@@ AB@@ LE@@ ))); assert@@ Equal@@ s@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ [0@@ ]@@ , result@@ ); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ B@@ 0@@ 6@@ A@@ 00@@ 4@@ 3@@ 0@@ "); }
@org.junit.Test public void test@@ Get@@ S@@ m@@ d@@ s@@ Addres@@ s() throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 3@@ C@@ 1@@ 4@@ 8@@ 00@@ 8@@ 5@@ 3@@ 4@@ 50@@ 2@@ E@@ 4@@ 3@@ 4@@ F@@ 4@@ D@@ 8@@ 10@@ 8@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 32@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 9@@ 00@@ 0@@ "); assert@@ Equal@@ s("@@ s@@ m@@ d@@ s.@@ com@@ ", m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ S@@ m@@ d@@ s@@ Address@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ C@@ 00@@ "); }
@org.junit.Test public void test@@ Res@@ et@@ M@@ em@@ or@@ y@@ _S@@ im@@ Ref@@ res@@ h@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ 6@@ 10@@ 6@@ ", "@@ 6@@ f@@ 00@@ "); m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ res@@ et@@ M@@ em@@ or@@ y@@ (@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ Res@@ et@@ Option@@ .@@ DE@@ LE@@ T@@ E_@@ FI@@ E@@ L@@ D_@@ LO@@ A@@ DE@@ D_@@ TEST_@@ P@@ RO@@ F@@ IL@@ E@@ S@@ ); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 4@@ 0@@ 2@@ 0@@ 6@@ 4@@ 0@@ "); }
@org.junit.Test public void test@@ List@@ No@@ t@@ if@@ ic@@ ation@@ s() throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ (("@@ B@@ F@@ 2@@ 8@@ 2@@ B@@ A@@ 0@@ 2@@ 9@@ " + (("@@ B@@ F@@ 2@@ F@@ 1@@ 1@@ 8@@ 00@@ 10@@ 10@@ C@@ 0@@ 8@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 2@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 8@@ 10@@ 2@@ 0@@ 4@@ 10@@ " + "@@ B@@ F@@ 2@@ F@@ 12@@ 8@@ 00@@ 10@@ 2@@ 0@@ C@@ 0@@ 9@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 32@@ 2@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 8@@ 10@@ 2@@ 0@@ 4@@ 2@@ 0@@ ") + "@@ 9@@ 00@@ 0@@ "@@ ))); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ [] result = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ list@@ No@@ t@@ if@@ ic@@ ation@@ s@@ (((@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ DE@@ LE@@ TE@@ ) | (@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ D@@ IS@@ AB@@ LE@@ ))); assert@@ Array@@ Equal@@ s@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ []{ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ (1@@ , "@@ s@@ m@@ d@@ p.@@ com@@ ", E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ DE@@ LE@@ TE@@ , null@@ ), new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ (@@ 2, "@@ s@@ m@@ d@@ p@@ 2.@@ com@@ ", E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ D@@ IS@@ AB@@ LE@@ , null@@ ) }@@ , result@@ ); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ 8@@ 0@@ 4@@ 3@@ 0@@ "); }
@org.junit.Test public void test@@ Set@@ N@@ i@@ ck@@ name@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ 9@@ 0@@ 3@@ 8@@ 00@@ 1@@ 00@@ 9@@ 00@@ 0@@ "); m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .set@@ N@@ i@@ ck@@ name@@ ("@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ 10@@ ", "@@ new n@@ i@@ ck@@ name@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ 9@@ 1@@ A@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 9@@ 00@@ C@@ 6@@ E@@ 6@@ 5@@ 7@@ 7@@ 2@@ 0@@ 6@@ E@@ 6@@ 9@@ 6@@ 3@@ 6@@ E@@ 6@@ 16@@ D@@ 6@@ 5@@ "); }
@org.junit.Test public void test@@ Get@@ E@@ u@@ ic@@ c@@ Ch@@ all@@ eng@@ e@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ E@@ 0@@ 5@@ 8@@ 00@@ 3@@ 0@@ 10@@ 2@@ 0@@ 3@@ 9@@ 00@@ 0@@ "); assert@@ Array@@ Equal@@ s@@ (@@ new byte@@ []{ 1, 2, 3 }@@ , m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ E@@ u@@ ic@@ c@@ Ch@@ all@@ eng@@ e@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ E@@ 00@@ "); }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ Au@@ th@@ enti@@ cate@@ Server@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 3@@ 8@@ 0@@ 3@@ 8@@ 10@@ 10@@ 3@@ 9@@ 00@@ 0@@ "); when@@ (m@@ Mock@@ T@@ m@@ .get@@ Device@@ Id@@ ()).@@ thenReturn@@ ("@@ 9@@ 8@@ 7@@ 6@@ 5@@ 4@@ 32@@ 10@@ 12@@ 3@@ 4@@ 5@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ au@@ th@@ enti@@ cate@@ Server@@ ("@@ A@@ 1@@ B@@ 2@@ C@@ 3@@ -@@ X@@ 4@@ Y@@ 5@@ Z@@ 6@@ ", com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 0@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 1@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 2@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 3@@ ).@@ build@@ ()); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 3@@ , e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , ("@@ B@@ F@@ 3@@ 8@@ 2@@ D@@ " + ((((@@ ((@@ (("@@ A@@ 00@@ 0@@ " + "@@ A@@ 1@@ 00@@ ") + "@@ A@@ 2@@ 00@@ ") + "@@ A@@ 3@@ 00@@ ") + "@@ A@@ 0@@ 2@@ 3@@ ") + "@@ 8@@ 00@@ D@@ 4@@ 2@@ 32@@ 4@@ 3@@ 3@@ 3@@ 32@@ D@@ 5@@ 8@@ 3@@ 4@@ 5@@ 9@@ 3@@ 5@@ A@@ 3@@ 6@@ ") + "@@ A@@ 1@@ 12@@ 8@@ 00@@ 4@@ 5@@ 2@@ 3@@ ") + "@@ A@@ 1@@ 00@@ ") + "@@ A@@ 1@@ 00@@ ") + "@@ 8@@ 2@@ 0@@ 8@@ 8@@ 9@@ 6@@ 7@@ 4@@ 5@@ 2@@ 3@@ 0@@ 5@@ "@@ ))); throw e@@ ; } }
@org.junit.Test public void test@@ Res@@ et@@ M@@ em@@ or@@ y@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 3@@ 4@@ 0@@ 3@@ 8@@ 00@@ 1@@ 00@@ 9@@ 00@@ 0@@ "); m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ res@@ et@@ M@@ em@@ or@@ y@@ (@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ Res@@ et@@ Option@@ .@@ DE@@ LE@@ T@@ E_@@ FI@@ E@@ L@@ D_@@ LO@@ A@@ DE@@ D_@@ TEST_@@ P@@ RO@@ F@@ IL@@ E@@ S@@ ); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 4@@ 0@@ 2@@ 0@@ 6@@ 4@@ 0@@ "); }
@org.junit.Test public void test@@ Get@@ E@@ u@@ ic@@ c@@ Info@@ 2@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ 0@@ 3@@ 0@@ 10@@ 2@@ 0@@ 3@@ 9@@ 00@@ 0@@ "); assert@@ Equal@@ s("@@ B@@ F@@ 2@@ 0@@ 3@@ 0@@ 10@@ 2@@ 0@@ 3@@ ", m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ E@@ u@@ ic@@ c@@ Info@@ 2@@ ().@@ to@@ H@@ ex@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ 00@@ "); }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ List@@ No@@ t@@ if@@ ic@@ ation@@ s@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ 8@@ 0@@ 3@@ 8@@ 10@@ 3@@ 9@@ 00@@ 0@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ list@@ No@@ t@@ if@@ ic@@ ation@@ s@@ (((@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ DE@@ LE@@ TE@@ ) | (@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ D@@ IS@@ AB@@ LE@@ ))); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 3@@ , e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ 8@@ 0@@ 4@@ 8@@ 10@@ 2@@ 0@@ 4@@ 3@@ 0@@ "); throw e@@ ; } }
@org.junit.Test public void test@@ Get@@ R@@ at@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ (("@@ B@@ F@@ 4@@ 3@@ 4@@ 7@@ " + ((((@@ ((((@@ ((@@ (("@@ A@@ 0@@ 2@@ 1@@ " + "@@ 8@@ 00@@ 2@@ 0@@ 6@@ C@@ 0@@ ") + "@@ A@@ 1@@ 8@@ ") + "@@ B@@ 7@@ 0@@ A@@ 8@@ 00@@ 3@@ 12@@ F@@ 3@@ 4@@ 5@@ 8@@ 10@@ 3@@ 0@@ 10@@ 2@@ 0@@ 3@@ ") + "@@ B@@ 7@@ 0@@ A@@ 8@@ 00@@ 3@@ 12@@ F@@ 3@@ 4@@ 5@@ 8@@ 2@@ 0@@ 3@@ 0@@ 4@@ 0@@ 50@@ 6@@ ") + "@@ 8@@ 2@@ 0@@ 10@@ 8@@ ") + "@@ A@@ 0@@ 2@@ 2@@ 2@@ ") + "@@ 8@@ 00@@ 2@@ 0@@ 7@@ 8@@ 0@@ ") + "@@ A@@ 1@@ 8@@ ") + "@@ B@@ 7@@ 0@@ A@@ 8@@ 00@@ 3@@ 12@@ E@@ 3@@ 4@@ 5@@ 8@@ 10@@ 3@@ 0@@ 10@@ 2@@ 0@@ 3@@ ") + "@@ B@@ 7@@ 0@@ A@@ 8@@ 00@@ 3@@ E@@ E@@ E@@ E@@ E@@ E@@ E@@ E@@ 4@@ 5@@ 8@@ 2@@ 0@@ 3@@ 0@@ 4@@ 0@@ 50@@ 6@@ ") + "@@ 8@@ 2@@ 0@@ 7@@ 8@@ 0@@ ") + "@@ 9@@ 00@@ 0@@ "@@ ))); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ R@@ at r@@ at = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ R@@ at@@ (); assert@@ Equal@@ s@@ ((@@ -1@@ ), r@@ at@@ .@@ find@@ Index@@ (@@ Po@@ lic@@ y@@ R@@ u@@ le.@@ D@@ O@@ _N@@ O@@ T_@@ DE@@ LE@@ TE@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ Oper@@ ator@@ Id@@ (@@ new byte@@ []{ 1@@ 8@@ , (@@ (@@ byte@@ ) (@@ 24@@ 3@@ )), 6@@ 9 }@@ , null@@ ))); assert@@ Equal@@ s(@@ 1, r@@ at@@ .@@ find@@ Index@@ (@@ Po@@ lic@@ y@@ R@@ u@@ le.@@ D@@ O@@ _N@@ O@@ T_@@ D@@ IS@@ AB@@ LE@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ Oper@@ ator@@ Id@@ (@@ new byte@@ []{ 3@@ , 6@@ 9 }@@ , null@@ , new byte@@ []{ 4@@ , 5, 6 }@@ ))); assert@@ False@@ (@@ r@@ at@@ .@@ has@@ Po@@ lic@@ y@@ R@@ ule@@ Flag@@ (@@ 0, E@@ u@@ ic@@ c@@ R@@ at@@ .@@ Po@@ lic@@ y@@ R@@ ule@@ F@@ la@@ g.@@ C@@ ON@@ S@@ ENT_@@ RE@@ Q@@ U@@ I@@ RE@@ D@@ )); assert@@ True@@ (@@ r@@ at@@ .@@ has@@ Po@@ lic@@ y@@ R@@ ule@@ Flag@@ (1@@ , E@@ u@@ ic@@ c@@ R@@ at@@ .@@ Po@@ lic@@ y@@ R@@ ule@@ F@@ la@@ g.@@ C@@ ON@@ S@@ ENT_@@ RE@@ Q@@ U@@ I@@ RE@@ D@@ )); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 4@@ 3@@ 00@@ "); }
@org.junit.Test public void test@@ S@@ wit@@ ch@@ To@@ Pro@@ file@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ D@@ 1@@ 4@@ A@@ 0@@ 12@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 9@@ F@@ 7@@ 00@@ 1@@ 00@@ 9@@ 00@@ 0@@ ", "@@ B@@ F@@ 3@@ 10@@ 3@@ 8@@ 00@@ 1@@ 00@@ 9@@ 00@@ 0@@ "); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ fi@@ le pro@@ fi@@ le = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ switch@@ To@@ Pro@@ file@@ ("@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ 10@@ ", true@@ ); assert@@ Equal@@ s(@@ pro@@ file@@ .get@@ I@@ cc@@ id@@ (), "@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ 10@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 1@@ 1@@ 1@@ A@@ 00@@ C@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 8@@ 10@@ 1@@ F@@ F@@ F@@ "); }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ Load@@ B@@ ound@@ Pro@@ file@@ Package@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ B@@ F@@ 3@@ 7@@ 0@@ AB@@ F@@ 2@@ 7@@ 0@@ 5@@ A@@ 10@@ 3@@ 8@@ 10@@ 10@@ 3@@ 9@@ 00@@ 0@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ load@@ B@@ ound@@ Pro@@ file@@ Package@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 4@@ 8@@ 9@@ 50@@ ).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 4@@ 8@@ 9@@ 3@@ 1@@ )).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 0@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (1@@ 3@@ 5, new byte@@ []{ 1, 2, 3 }@@ )).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 1@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (1@@ 3@@ 6@@ , new byte@@ []{ 4@@ , 5, 6 }@@ )).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 2@@ )).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 3@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (1@@ 3@@ 4@@ , new byte@@ []{ 7@@ , 8@@ , 9 }@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (1@@ 3@@ 4@@ , new byte@@ []{ 1@@ 0, 1@@ 1, 1@@ 2 }@@ )).@@ build@@ ()); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 3@@ , e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 6@@ 1@@ F@@ B@@ F@@ 2@@ 3@@ 00@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 00@@ 5@@ 8@@ 7@@ 0@@ 3@@ 0@@ 10@@ 2@@ 0@@ 3@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 10@@ 5@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ 8@@ 0@@ 4@@ 50@@ 6@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 2@@ 00@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 2@@ 00@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 2@@ 00@@ "); }
@org.junit.Test public void test@@ Pre@@ par@@ e@@ Do@@ wn@@ load@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ 10@@ 2@@ A@@ 00@@ 0@@ 9@@ 00@@ 0@@ "); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node result = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ pre@@ par@@ e@@ Do@@ wn@@ load@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter.@@ h@@ ex@@ To@@ Bytes@@ ("@@ 4@@ 1@@ 3@@ 1@@ 4@@ 2@@ 32@@ 4@@ 3@@ 3@@ 32@@ D@@ 5@@ 8@@ 3@@ 4@@ 5@@ 9@@ 3@@ 5@@ A@@ 3@@ 6@@ "), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 0@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 1@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 2@@ ).@@ build@@ ()); assert@@ Equal@@ s("@@ B@@ F@@ 2@@ A@@ 00@@ 0@@ ", res@@ ult.@@ to@@ H@@ ex@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , ("@@ B@@ F@@ 2@@ 1@@ 1@@ 1@@ 5@@ " + ((@@ ("@@ A@@ 00@@ 0@@ " + "@@ A@@ 1@@ 00@@ ") + "@@ 0@@ 4@@ 1@@ 3@@ 1@@ 4@@ 3@@ 3@@ 3@@ 32@@ D@@ 5@@ 8@@ 3@@ 4@@ 5@@ 9@@ 3@@ 5@@ A@@ 3@@ 6@@ ") + "@@ A@@ 2@@ 00@@ "@@ ))); }
@org.junit.Test public void test@@ D@@ el@@ et@@ e@@ Pro@@ file@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ (("@@ B@@ F@@ 2@@ D@@ 2@@ 6@@ A@@ 0@@ 24@@ " + (("@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 9@@ F@@ 7@@ 00@@ 1@@ 00@@ " + "@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 2@@ 9@@ F@@ 7@@ 00@@ 10@@ 1@@ ") + "@@ 9@@ 00@@ 0@@ "@@ B@@ F@@ 3@@ 3@@ 0@@ 3@@ 8@@ 00@@ 1@@ 00@@ 9@@ 00@@ 0@@ "); m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ delet@@ e@@ Pro@@ file@@ ("@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ 10@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 0@@ C@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ "); }
@org.junit.Test public void test@@ R@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ (("@@ B@@ F@@ 2@@ B@@ 1@@ 8@@ A@@ 0@@ 16@@ " + ("@@ 3@@ 0@@ 1@@ 4@@ B@@ F@@ 2@@ 1@@ 1@@ 8@@ 00@@ 10@@ C@@ 0@@ 8@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 2@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 8@@ 10@@ 2@@ 0@@ 4@@ 10@@ " + "@@ 9@@ 00@@ 0@@ "@@ ))); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation result = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ (@@ 5@@ ); assert@@ Equal@@ s@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ (1@@ , "@@ s@@ m@@ d@@ p.@@ com@@ ", E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ DE@@ LE@@ TE@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter.@@ h@@ ex@@ To@@ Bytes@@ ("@@ 3@@ 0@@ 1@@ 4@@ B@@ F@@ 1@@ 1@@ 1@@ 1@@ 8@@ 00@@ 10@@ C@@ 0@@ 8@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 2@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 8@@ 10@@ 2@@ 0@@ 4@@ 10@@ "@@ )), result@@ ); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ B@@ 0@@ 5@@ A@@ 00@@ 3@@ 8@@ 00@@ 10@@ 5@@ "); }
@org.junit.Test public void test@@ Get@@ E@@ id@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 3@@ E@@ 0@@ 6@@ 5@@ A@@ 0@@ 4@@ 1@@ A@@ 2@@ B@@ 3@@ C@@ 4@@ D@@ 9@@ 00@@ 0@@ "); assert@@ Equal@@ s("@@ 1@@ A@@ 2@@ B@@ 3@@ C@@ 4@@ D@@ ", m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ E@@ id@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ E@@ 0@@ 3@@ 5@@ C@@ 0@@ 1@@ 5@@ A@@ "); }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ Pre@@ par@@ e@@ Do@@ wn@@ load@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ 10@@ 5@@ A@@ 10@@ 3@@ 0@@ 2@@ 0@@ 10@@ 3@@ 9@@ 00@@ 0@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ pre@@ par@@ e@@ Do@@ wn@@ load@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter.@@ h@@ ex@@ To@@ Bytes@@ ("@@ 4@@ 1@@ 3@@ 1@@ 4@@ 2@@ 32@@ 4@@ 3@@ 3@@ 32@@ D@@ 5@@ 8@@ 3@@ 5@@ A@@ 3@@ 6@@ "), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 0@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 1@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 2@@ ).@@ build@@ ()); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 3@@ , e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , ("@@ B@@ F@@ 2@@ 1@@ 1@@ 5@@ " + ((@@ ("@@ A@@ 00@@ 0@@ " + "@@ A@@ 1@@ 00@@ ") + "@@ 0@@ 4@@ 0@@ D@@ 4@@ 1@@ 3@@ 1@@ 4@@ 2@@ 32@@ 4@@ 3@@ 32@@ D@@ 5@@ 8@@ 3@@ 4@@ 5@@ A@@ 3@@ 6@@ ") + "@@ A@@ 2@@ 00@@ "@@ ))); throw e@@ ; } }
@org.junit.Test public void test@@ Set@@ Default@@ S@@ m@@ d@@ p@@ Addres@@ s() throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 3@@ C@@ 1@@ 4@@ 8@@ 00@@ 8@@ 5@@ 3@@ 4@@ 50@@ 2@@ E@@ 4@@ 3@@ 4@@ F@@ 4@@ D@@ 8@@ 10@@ 8@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 32@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 9@@ 00@@ 0@@ ", "@@ B@@ F@@ 3@@ F@@ 0@@ 3@@ 8@@ 00@@ 1@@ 00@@ 1@@ 00@@ 9@@ 00@@ 0@@ "); assert@@ Equal@@ s("@@ S@@ M@@ D@@ P@@ .@@ C@@ O@@ M@@ ", m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ Default@@ S@@ m@@ d@@ p@@ Address@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ C@@ 00@@ "); m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .set@@ Default@@ S@@ m@@ d@@ p@@ Addres@@ s("@@ s@@ m@@ d@@ p.@@ g@@ s@@ m@@ a.@@ com@@ "); assert@@ Equal@@ s("@@ s@@ m@@ d@@ p.@@ g@@ s@@ m@@ a.@@ com@@ ", m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ Default@@ S@@ m@@ d@@ p@@ Address@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ F@@ 8@@ 00@@ D@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 2@@ E@@ 6@@ 7@@ 3@@ 6@@ D@@ 6@@ 12@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ "); }
@org.junit.Test public void test@@ Au@@ th@@ enti@@ cate@@ Server@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 3@@ 8@@ 0@@ 2@@ A@@ 00@@ 0@@ 9@@ 00@@ 0@@ "); when@@ (m@@ Mock@@ T@@ m@@ .get@@ Device@@ Id@@ ()).@@ thenReturn@@ ("@@ 9@@ 8@@ 7@@ 6@@ 5@@ 4@@ 32@@ 10@@ 12@@ 3@@ 4@@ 5@@ "); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node result = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ au@@ th@@ enti@@ cate@@ Server@@ ("@@ A@@ 1@@ B@@ 2@@ C@@ 3@@ -@@ X@@ 4@@ Y@@ 5@@ Z@@ 6@@ ", com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 0@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 1@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 2@@ ).@@ build@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 3@@ ).@@ build@@ ()); assert@@ Equal@@ s("@@ B@@ F@@ 3@@ 8@@ 0@@ 2@@ A@@ 00@@ 0@@ ", res@@ ult.@@ to@@ H@@ ex@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , ("@@ B@@ F@@ 3@@ 8@@ 2@@ D@@ " + ((((@@ ((@@ (("@@ A@@ 00@@ 0@@ " + "@@ A@@ 1@@ 00@@ ") + "@@ A@@ 2@@ 00@@ ") + "@@ A@@ 3@@ 00@@ ") + "@@ A@@ 0@@ 2@@ 3@@ ") + "@@ 8@@ 00@@ D@@ 4@@ 1@@ 3@@ 1@@ 4@@ 2@@ 32@@ 4@@ 3@@ 3@@ 3@@ 32@@ D@@ 5@@ 8@@ 3@@ 4@@ 5@@ 9@@ 3@@ 5@@ A@@ 3@@ 6@@ ") + "@@ A@@ 1@@ 12@@ 8@@ 00@@ 4@@ 8@@ 9@@ 6@@ 7@@ 4@@ 5@@ 2@@ 3@@ ") + "@@ A@@ 1@@ 00@@ ") + "@@ 8@@ 2@@ 0@@ 8@@ 9@@ 6@@ 7@@ 4@@ 5@@ 2@@ 3@@ 0@@ 12@@ 1@@ 4@@ 3@@ 0@@ 5@@ "@@ ))); }
@org.junit.Test public void test@@ Get@@ E@@ u@@ ic@@ c@@ Info@@ 1@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ 00@@ 3@@ 0@@ 10@@ 2@@ 0@@ 3@@ 9@@ 00@@ 0@@ "); assert@@ Equal@@ s("@@ B@@ F@@ 2@@ 00@@ 3@@ 0@@ 10@@ 2@@ 0@@ 3@@ ", m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ E@@ u@@ ic@@ c@@ Info@@ 1@@ ().@@ to@@ H@@ ex@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ 00@@ 0@@ "); }
@org.junit.Test public void test@@ Load@@ B@@ ound@@ Pro@@ file@@ Package@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ 9@@ 00@@ 0@@ ", "@@ B@@ F@@ 3@@ 7@@ 00@@ 9@@ 00@@ 0@@ "); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node result = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ load@@ B@@ ound@@ Pro@@ file@@ Package@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 4@@ 8@@ 9@@ 50@@ ).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 4@@ 8@@ 9@@ 3@@ 1@@ )).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 0@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (1@@ 3@@ 5, new byte@@ []{ 1, 2, 3 }@@ )).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 1@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (1@@ 3@@ 6@@ , new byte@@ []{ 4@@ , 5, 6 }@@ )).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 2@@ )).@@ add@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ 16@@ 3@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (1@@ 3@@ 4@@ , new byte@@ []{ 7@@ , 8@@ , 9 }@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (1@@ 3@@ 4@@ , new byte@@ []{ 1@@ 0, 1@@ 1, 1@@ 2 }@@ )).@@ build@@ ()); assert@@ Equal@@ s("@@ B@@ F@@ 3@@ 7@@ 00@@ ", res@@ ult.@@ to@@ H@@ ex@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 6@@ 1@@ F@@ B@@ F@@ 2@@ 3@@ 00@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 00@@ 5@@ 8@@ 7@@ 0@@ 3@@ 0@@ 3@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 10@@ 5@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ 8@@ 8@@ 0@@ 3@@ 0@@ 4@@ 0@@ 50@@ 6@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 2@@ 00@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ A@@ 3@@ 0@@ A@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ 8@@ 6@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 4@@ 0@@ 3@@ 0@@ 3@@ 0@@ 4@@ 0@@ 3@@ 0@@ 4@@ 0@@ 4@@ 0@@ 3@@ 0@@ 3@@ 0@@ 4@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 3@@ 0@@ 4@@ 0@@ 4@@ 0@@ 6@@ "); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l
@org.junit.Test public void test@@ R@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ List@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ (("@@ B@@ F@@ 2@@ B@@ 2@@ FA@@ 0@@ 2@@ D@@ " + (("@@ 3@@ 0@@ 1@@ 4@@ B@@ F@@ 1@@ 1@@ 8@@ 00@@ 10@@ C@@ 0@@ 8@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 2@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 8@@ 10@@ 2@@ 0@@ 4@@ 10@@ " + "@@ 3@@ 0@@ 1@@ 5@@ B@@ F@@ 2@@ F@@ 12@@ 8@@ 00@@ 10@@ 2@@ 0@@ C@@ 0@@ 9@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 32@@ 2@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 8@@ 10@@ 2@@ 0@@ 4@@ 2@@ 0@@ ") + "@@ 9@@ 00@@ 0@@ "@@ ))); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ [] result = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ List@@ (((@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ DE@@ LE@@ TE@@ ) | (@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ D@@ IS@@ AB@@ LE@@ ))); assert@@ Array@@ Equal@@ s@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ []{ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ (1@@ , "@@ s@@ m@@ d@@ p.@@ com@@ ", E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ DE@@ LE@@ TE@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter.@@ h@@ ex@@ To@@ Bytes@@ ("@@ 3@@ 0@@ 1@@ 4@@ B@@ F@@ 1@@ 1@@ 1@@ 8@@ 00@@ 10@@ 10@@ C@@ 0@@ 8@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 2@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 8@@ 10@@ 2@@ 0@@ 4@@ 10@@ "@@ )), new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ (@@ 2, "@@ s@@ m@@ d@@ p@@ 2.@@ com@@ ", E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ D@@ IS@@ AB@@ LE@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter.@@ h@@ ex@@ To@@ Bytes@@ ("@@ 3@@ 0@@ 1@@ 5@@ B@@ F@@ 2@@ F@@ 12@@ 8@@ 00@@ 10@@ 2@@ 0@@ C@@ 0@@ 9@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 0@@ 32@@ 2@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 8@@ 10@@ 2@@ 0@@ 4@@ 2@@ 0@@ ")) }@@ , result@@ ); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ 0@@ 6@@ A@@ 00@@ 4@@ 8@@ 10@@ 2@@ 0@@ 4@@ 3@@ 0@@ "); }
public void remove@@ No@@ t@@ if@@ ic@@ ation@@ From@@ List@@ (@@ int se@@ q@@ Number@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { java.lang.String com@@ man@@ d = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _RE@@ M@@ O@@ V@@ E_@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ F@@ RO@@ M@@ _@@ L@@ IS@@ T@@ ).@@ add@@ Ch@@ ild@@ As@@ Integ@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 0, se@@ q@@ Number@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ (); java.lang.String respon@@ se@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ command@@ ); } int result = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Sim@@ ple@@ Result@@ (@@ respon@@ se@@ ); switch (@@ result@@ ) { case Remo@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ From@@ List@@ Co@@ d@@ e.@@ O@@ K : case Remo@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ From@@ List@@ Co@@ d@@ e.@@ NO@@ TH@@ ING@@ _@@ TO@@ _@@ DE@@ LE@@ T@@ E : break@@ ; default : throw new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception(@@ Oper@@ ation@@ Co@@ d@@ e.@@ RE@@ M@@ O@@ V@@ E_@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ F@@ RO@@ M@@ _@@ L@@ IS@@ T@@ , result@@ ); } }
public void res@@ et@@ M@@ em@@ or@@ y@@ (@@ @@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Res@@ et@@ O@@ pti@@ on int option@@ s, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { java.lang.String com@@ man@@ d = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _@@ E@@ U@@ IC@@ C@@ _M@@ E@@ M@@ OR@@ Y@@ _RE@@ SE@@ T@@ ).@@ add@@ Ch@@ ild@@ As@@ Bit@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 2, option@@ s@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ (); java.lang.String respon@@ se@@ ; int result@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ command@@ ); result = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Sim@@ ple@@ Result@@ (@@ respon@@ se@@ ); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception e) { if ((@@ e.get@@ Ap@@ du@@ Statu@@ s()) == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ AP@@ D@@ U@@ _@@ ER@@ RO@@ R@@ _@@ SI@@ M@@ _RE@@ F@@ RE@@ S@@ H@@ )) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Log.@@ get@@ ().@@ i@@ ("@@ C@@ ard@@ : is ref@@ res@@ et@@ t@@ ing me@@ m@@ or@@ y@@ , n@@ o respon@@ se g@@ ot@@ .@@ "); result = Res@@ et@@ M@@ em@@ or@@ y@@ Co@@ d@@ e.@@ O@@ K@@ ; } else { throw e@@ ; } } switch (@@ result@@ ) { case Res@@ et@@ M@@ em@@ or@@ y@@ Co@@ d@@ e.@@ O@@ K : m@@ Pro@@ file@@ s = null@@ ; m@@ Enabled@@ I@@ cc@@ id = null@@ ; m@@ Default@@ S@@ m@@ d@@ p@@ Address = null@@ ; break@@ ; case Res@@ et@@ M@@ em@@ or@@ y@@ Co@@ d@@ e.@@ NO@@ TH@@ ING@@ _@@ TO@@ _@@ DE@@ LE@@ T@@ E : break@@ ; default : throw new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception(@@ Oper@@ ation@@ Co@@ d@@ e.@@ RE@@ SE@@ T@@ _M@@ E@@ M@@ OR@@ Y@@ , result@@ ); } }
public void get@@ S@@ m@@ d@@ s@@ Addres@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <java.lang.String@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { if ((m@@ S@@ m@@ d@@ s@@ Addres@@ s) == null@@ ) { get@@ Default@@ S@@ m@@ d@@ p@@ Addres@@ s(); } return mS@@ m@@ d@@ s@@ Address@@ ; }
public void get@@ E@@ u@@ ic@@ c@@ Ch@@ all@@ eng@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { java.lang.String respon@@ se@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _@@ GE@@ T_@@ E@@ U@@ IC@@ C@@ _C@@ H@@ AL@@ L@@ EN@@ GE@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ ()); } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node no@@ de = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Response@@ (@@ respon@@ se@@ ); try { return no@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 0@@ ).@@ as@@ Bytes@@ (); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ T@@ ag@@ Not@@ F@@ ound@@ Exception | com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ In@@ valid@@ As@@ n@@ 1@@ Data@@ Exception e) { throw new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ In@@ valid@@ Response@@ Exception@@ (("@@ Requ@@ i@@ re@@ d par@@ se respon@@ se@@ : " + respon@@ se@@ ), e); } }
@org.junit.Test public void test@@ Can@@ cel@@ Session@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 4@@ 1@@ 00@@ 9@@ 00@@ 0@@ "); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Node result = m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ can@@ cel@@ Session@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter.@@ h@@ ex@@ To@@ Bytes@@ ("@@ A@@ 1@@ B@@ 2@@ C@@ 3@@ "), E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ Can@@ cel@@ Re@@ as@@ on@@ .@@ P@@ O@@ S@@ T@@ P@@ ON@@ E@@ D@@ ); assert@@ Equal@@ s("@@ B@@ F@@ 4@@ 1@@ 00@@ ", res@@ ult.@@ to@@ H@@ ex@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 4@@ 10@@ 8@@ 8@@ 00@@ 3@@ A@@ 1@@ B@@ 2@@ C@@ 3@@ 8@@ 10@@ 10@@ 10@@ 1@@ "); }
public void can@@ cel@@ Session@@ (@@ byte@@ [] trans@@ action@@ Id, @@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Can@@ cel@@ Re@@ as@@ on int re@@ as@@ on@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { java.lang.String com@@ man@@ d = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ AN@@ CE@@ L@@ _S@@ E@@ SS@@ ION@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 0, trans@@ action@@ Id@@ ).@@ add@@ Ch@@ ild@@ As@@ Integ@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 1, re@@ as@@ on@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ (); java.lang.String respon@@ se@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ command@@ ); } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node ro@@ o@@ t = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Response@@ (@@ respon@@ se@@ ); try { if (@@ ro@@ o@@ t.@@ has@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 1@@ )) { throw new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception(@@ Oper@@ ation@@ Co@@ d@@ e.@@ C@@ AN@@ CE@@ L@@ _S@@ E@@ SS@@ ION@@ , ro@@ o@@ t.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 1@@ ).@@ as@@ Integ@@ er@@ ()); } } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ T@@ ag@@ Not@@ F@@ ound@@ Exception | com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1@@ Data@@ Exception e) { throw new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ In@@ valid@@ Response@@ Exception@@ (("@@ Er@@ ror par@@ se respon@@ se@@ : " + respon@@ se@@ ), e); } return ro@@ ot@@ ; }
public void get@@ E@@ u@@ ic@@ c@@ Info@@ 1@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { java.lang.String respon@@ se@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _@@ GE@@ T_@@ E@@ U@@ IC@@ C@@ _@@ IN@@ F@@ O@@ _@@ 1@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ ()); } return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Response@@ (@@ respon@@ se@@ ); }
public void set@@ Default@@ S@@ m@@ d@@ p@@ Addres@@ s(@@ java.lang.String default@@ S@@ m@@ d@@ p@@ Addres@@ s, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { java.lang.String com@@ man@@ d = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _S@@ E@@ T_@@ DE@@ FA@@ UL@@ T_@@ S@@ M@@ D@@ P@@ _@@ AD@@ D@@ RE@@ SS@@ ).@@ add@@ Ch@@ ild@@ As@@ String(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 0, default@@ S@@ m@@ d@@ p@@ Address@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ (); java.lang.String respon@@ se@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ command@@ ); } int result = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Sim@@ ple@@ Result@@ (@@ respon@@ se@@ ); switch (@@ result@@ ) { case Set@@ Default@@ S@@ m@@ d@@ p@@ Address@@ Co@@ d@@ e.@@ O@@ K : break@@ ; default : throw new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception(@@ Oper@@ ation@@ Co@@ d@@ e.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T_@@ S@@ M@@ D@@ P@@ _@@ AD@@ D@@ RE@@ SS@@ , result@@ ); } m@@ Default@@ S@@ m@@ d@@ p@@ Address = default@@ S@@ m@@ d@@ p@@ Address@@ ; }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ D@@ el@@ et@@ e@@ Pro@@ file@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ (("@@ B@@ F@@ 2@@ D@@ 2@@ 6@@ A@@ 0@@ 24@@ " + (("@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ 9@@ F@@ 7@@ 00@@ 1@@ 00@@ " + "@@ E@@ 3@@ 10@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 2@@ 9@@ F@@ 7@@ 00@@ 10@@ 1@@ ") + "@@ 9@@ 00@@ 0@@ "@@ )), "@@ B@@ F@@ 3@@ 0@@ 3@@ 8@@ 00@@ 10@@ 10@@ 3@@ 9@@ 00@@ 0@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ delet@@ e@@ Pro@@ file@@ ("@@ 9@@ 8@@ 7@@ 6@@ 0000@@ 00@@ 5@@ 4@@ 32@@ 10@@ "); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 3@@ , e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ 3@@ 0@@ C@@ 5@@ A@@ 0@@ A@@ 8@@ 9@@ 6@@ 7@@ 0000@@ 00@@ 4@@ 5@@ 2@@ 3@@ 0@@ 1@@ "); throw e@@ ; } }
public void get@@ Default@@ S@@ m@@ d@@ p@@ Addres@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <java.lang.String@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { if ((@@ (m@@ Default@@ S@@ m@@ d@@ p@@ Addres@@ s) == null@@ ) || ((m@@ S@@ m@@ d@@ s@@ Addres@@ s) == null@@ )) { java.lang.String respon@@ se@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _@@ GE@@ T_@@ C@@ ON@@ FI@@ G@@ U@@ RE@@ D_@@ AD@@ D@@ RE@@ SS@@ E@@ S@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ ()); } try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node ro@@ o@@ t = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Response@@ (@@ respon@@ se@@ ); m@@ Default@@ S@@ m@@ d@@ p@@ Address = ro@@ o@@ t.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 0@@ ).@@ as@@ String@@ (); mS@@ m@@ d@@ s@@ Address = ro@@ o@@ t.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _C@@ T@@ X@@ _@@ 1@@ ).@@ as@@ String@@ (); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ T@@ ag@@ Not@@ F@@ ound@@ Exception | com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1@@ Data@@ Exception e) { throw new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ In@@ valid@@ Response@@ Exception@@ (("@@ Er@@ ror par@@ se respon@@ se@@ : " + respon@@ se@@ ), e); } } return m@@ Default@@ S@@ m@@ d@@ p@@ Address@@ ; }
public void get@@ E@@ u@@ ic@@ c@@ Info@@ 2@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { java.lang.String respon@@ se@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _@@ GE@@ T_@@ E@@ U@@ IC@@ C@@ _@@ IN@@ F@@ O@@ _@@ 2@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ ()); } return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Response@@ (@@ respon@@ se@@ ); }
@org.junit.@@ Test@@ (@@ expec@@ ted = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ .@@ class@@ ) public void test@@ R@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ List@@ _@@ Error@@ () throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 2@@ B@@ 0@@ 3@@ 8@@ 10@@ 3@@ 9@@ 00@@ 0@@ "); try { m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ List@@ (((@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ DE@@ LE@@ TE@@ ) | (@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent.@@ D@@ IS@@ AB@@ LE@@ ))); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception e) { assert@@ Equal@@ s(@@ 3@@ , e.get@@ Error@@ Code@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 2@@ B@@ 0@@ 6@@ A@@ 00@@ 4@@ 8@@ 10@@ 2@@ 0@@ 4@@ 3@@ 0@@ "); throw e@@ ; } }
public void get@@ E@@ id@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <java.lang.String@@ > call@@ back@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { if ((m@@ E@@ id@@ ) == null@@ ) { java.lang.String respon@@ se@@ ; try (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l ch = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Log@@ ic@@ al@@ Channe@@ l.@@ open@@ I@@ s@@ d@@ R@@ (m@@ T@@ m@@ )) { java.lang.String com@@ man@@ d = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node@@ .@@ new@@ Build@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _@@ GE@@ T_@@ E@@ ID@@ ).@@ add@@ Ch@@ ild@@ As@@ Bytes@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _@@ TAG@@ _@@ L@@ IS@@ T@@ , new byte@@ []{ TAG@@ _@@ E@@ I@@ D }@@ ).@@ build@@ ().@@ to@@ H@@ ex@@ (); respon@@ se = ch@@ .@@ exec@@ Store@@ Data@@ (@@ command@@ ); } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ As@@ n@@ 1@@ Node e@@ id@@ As@@ n@@ 1@@ Node = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ parse@@ Response@@ (@@ respon@@ se@@ ); try { m@@ E@@ id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ As@@ n@@ 1@@ Con@@ ver@@ ter@@ .@@ byte@@ s@@ To@@ H@@ ex@@ (@@ e@@ id@@ As@@ n@@ 1@@ No@@ d@@ e.get@@ Ch@@ ild@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ TAG@@ _@@ E@@ ID@@ ).@@ as@@ Bytes@@ ()); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ T@@ ag@@ Not@@ F@@ ound@@ Exception | com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ as@@ n@@ 1.@@ In@@ valid@@ As@@ n@@ 1@@ Data@@ Exception e) { throw new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ In@@ valid@@ Response@@ Exception@@ (("@@ respon@@ se g@@ et E@@ ID@@ : respon@@ se =@@ " + respon@@ se@@ ), e); } } return m@@ E@@ id@@ ; }
@org.junit.Test public void test@@ Get@@ Default@@ S@@ m@@ d@@ p@@ Addres@@ s() throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Exception, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Channel@@ Exception { int channe@@ l = mock@@ Log@@ ic@@ al@@ Channel@@ Respon@@ s@@ es@@ ("@@ B@@ F@@ 3@@ C@@ 1@@ 4@@ 8@@ 00@@ 8@@ 5@@ 3@@ 4@@ 50@@ 2@@ E@@ 4@@ 3@@ 4@@ F@@ 4@@ D@@ 8@@ 10@@ 8@@ 7@@ 3@@ 6@@ D@@ 6@@ 4@@ 7@@ 32@@ E@@ 6@@ 3@@ 6@@ F@@ 6@@ D@@ 9@@ 00@@ 0@@ "); assert@@ Equal@@ s("@@ S@@ M@@ D@@ P@@ .@@ C@@ O@@ M@@ ", m@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .get@@ Default@@ S@@ m@@ d@@ p@@ Address@@ ()); ve@@ r@@ if@@ y@@ Store@@ Data@@ (@@ channe@@ l@@ , "@@ B@@ F@@ 3@@ C@@ 00@@ "); }
public void close@@ () { android.util.Log.d@@ (android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ TAG, ("@@ Tr@@ an@@ s@@ for@@ m wit@@ h Id " + (m@@ Resource@@ Id@@ ))); if ((m@@ Resource@@ Id@@ ) == (android.net.@@ I@@ p@@ Sec@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _RE@@ S@@ O@@ UR@@ C@@ E_@@ ID@@ )) { m@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ close(); return@@ ; } try { android.net.@@ I@@ I@@ p@@ Sec@@ Ser@@ vice s@@ v@@ c = get@@ I@@ p@@ Sec@@ Service@@ (); synchronized@@ (m@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Callback@@ ) { if ((m@@ K@@ ee@@ p@@ al@@ i@@ ve@@ ) != null@@ ) { st@@ op@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ (); } } s@@ v@@ c.@@ delet@@ e@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (m@@ Resource@@ Id@@ ); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ As@@ RuntimeException@@ (); } final@@ l@@ y { m@@ Resource@@ Id = android.net.@@ I@@ p@@ Sec@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _RE@@ S@@ O@@ UR@@ C@@ E_@@ ID@@ ; m@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ close(); } }
@java.lang.Override public void on@@ Error@@ (@@ int error@@ ) { synchronized@@ (@@ this@@ ) { m@@ K@@ ee@@ p@@ al@@ i@@ v@@ e@@ n = null@@ ; } if ((m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Callback@@ ) != null@@ ) m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Call@@ b@@ ac@@ k = on@@ Er@@ ror er(@@ er@@ ror@@ ); }
void st@@ op@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ v@@ e@@ () { synchronized@@ (m@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Callback@@ ) { if ((m@@ K@@ ee@@ p@@ al@@ i@@ ve@@ ) == null@@ ) { android.util.Log.@@ e@@ (android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ TAG, "@@ st@@ op@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ v@@ e to st@@ o@@ p return@@ ; } m@@ K@@ ee@@ p@@ al@@ i@@ v@@ e.@@ st@@ op@@ (); } }
@java.lang.Override public void on@@ St@@ ar@@ ted@@ () { if (!(m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Call@@ b@@ ac@@ k != null@@ ) { m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Call@@ b@@ ac@@ k = on@@ St@@ ar@@ ted@@ (); }
@java.lang.Override public void on@@ St@@ op@@ p@@ ed@@ () { synchronized@@ (@@ this@@ ) { m@@ K@@ ee@@ p@@ al@@ i@@ v@@ e@@ y.@@ set@@ W@@ e@@ Lock) { if ((m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Callback@@ ) != null@@ ) m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Call@@ b@@ ac@@ k = null@@ ; } if ((m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Callback@@ ) != null@@ ) m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Call@@ b@@ ac@@ k = null@@ ; }
void start@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ (java.io.FileDescriptor s@@ ocket@@ , android.net.@@ Connectivity@@ Manager.@@ Pack@@ et@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Call@@ b@@ ac@@ k user@@ Callback@@ , int int@@ er@@ val@@ Sec@@ ond@@ s) throw@@ s java.io.IOException { if ((m@@ Config.@@ get@@ Mode@@ ()) != (android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ M@@ OD@@ E_@@ TR@@ AN@@ S@@ P@@ O@@ RT@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ S@@ av@@ e k@@ ee@@ p@@ al@@ i@@ v@@ e can@@ not b@@ e u@@ se@@ d in T@@ un@@ ne@@ l mo@@ de } if ((m@@ Resource@@ Id@@ ) == (android.net.@@ I@@ p@@ Sec@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _RE@@ S@@ O@@ UR@@ C@@ E_@@ ID@@ )) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ S@@ end@@ ing k@@ ee@@ p@@ al@@ i@@ v@@ e can@@ not b@@ e st@@ ar@@ ted for an in@@ ac@@ tiv@@ e tr@@ an@@ s@@ for@@ m } synchronized@@ (m@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Callback@@ ) { if ((m@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Callback@@ ) != null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ S@@ end@@ ing al@@ read@@ y ac@@ tiv@@ e } java.net.Inet@@ Socket@@ Address local@@ Add@@ r = null@@ ; try { local@@ Add@@ r = ((@@ java.net.Inet@@ Socket@@ Addres@@ s) (android.@@ system.@@ O@@ s.get@@ s@@ ock@@ name@@ (s@@ ocket@@ ))); } catch (android.@@ system.@@ Errno@@ Exception e) { throw e.@@ r@@ e@@ throw@@ As@@ IO@@ Exception@@ (); } m@@ User@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Call@@ b@@ ac@@ k = user@@ Callback@@ ; android.net.@@ Connectivity@@ Manager c@@ m = ((@@ android.net.@@ Connectivity@@ Manager@@ ) (m@@ Contex@@ t.get@@ System@@ Service@@ (@@ Context@@ .@@ C@@ ON@@ N@@ EC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E@@ ))); m@@ K@@ ee@@ p@@ al@@ i@@ v@@ e = c@@ m.@@ start@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ v@@ e@@ (m@@ Config@@ .@@ get@@ Network@@ (), int@@ er@@ val@@ Sec@@ ond@@ s, m@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Callback@@ , local@@ Add@@ r@@ .get@@ Address@@ (), local@@ Add@@ r@@ .get@@ P@@ ort@@ (), android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Address@@ (m@@ Config.@@ get@@ Remote@@ Address@@ ())); } }
private android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m ac@@ tiv@@ ate@@ () throw@@ s I@@ p@@ Sec@@ Manager.@@ Resource@@ Un@@ ava@@ il@@ able@@ Exception, I@@ p@@ Sec@@ Manager.@@ S@@ pi@@ Un@@ ava@@ il@@ able@@ Exception, java.io.IOException { synchronized@@ (@@ this@@ ) { try { android.net.@@ I@@ I@@ I@@ p@@ Sec@@ Ser@@ vice s@@ v@@ c = get@@ I@@ p@@ Sec@@ Service@@ (); android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ Respon@@ se result = s@@ v@@ c.@@ create@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (m@@ Config@@ , new android.os.@@ B@@ in@@ der@@ ()); int statu@@ s = res@@ ult.@@ statu@@ s; check@@ Result@@ Statu@@ s(@@ statu@@ s); m@@ Resource@@ Id = res@@ ult.@@ resource@@ Id@@ ; android.util.Log.d@@ (android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ TAG, ("@@ Tr@@ an@@ s@@ for@@ m wit@@ h Id " + (m@@ Resource@@ Id@@ ))); m@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ open@@ ("@@ build@@ "); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ As@@ RuntimeException@@ (); } } return this@@ ; }
public int get@@ D@@ up@@ le@@ x@@ Mode@@ () { return android.@@ telephony.@@ Service@@ State.@@ D@@ U@@ P@@ LE@@ X@@ _MOD@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ ; }
public int get@@ C@@ ell@@ B@@ and@@ wid@@ th@@ s() { return new int@@ [0@@ ]; }
public void set@@ Channel@@ Number@@ (@@ int channe@@ l@@ Number@@ ) { }
public void set@@ C@@ ell@@ B@@ and@@ wid@@ th@@ s(@@ @com.android.annotations.NonNull java.lang.@@ Class@@ <@@ ?@@ > b@@ and@@ wid@@ th@@ s) { }
public int get@@ Channel@@ Number@@ () { return 0; }
@@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Par@@ cel@@ () { android.@@ telephony.@@ Service@@ State s@@ s = new android.@@ telephony.@@ Service@@ State@@ (); s@@ s.@@ set@@ V@@ o@@ i@@ ce@@ Reg@@ State@@ (@@ Service@@ State.@@ STATE_@@ IN@@ _S@@ ER@@ V@@ IC@@ E); s@@ s.@@ set@@ Data@@ Reg@@ State@@ (@@ Service@@ State.@@ STATE_@@ O@@ U@@ T_@@ O@@ F@@ _S@@ ER@@ V@@ IC@@ E); s@@ s.@@ set@@ V@@ o@@ i@@ ce@@ R@@ o@@ am@@ ing@@ Type@@ (@@ Service@@ State.@@ RO@@ AM@@ ING@@ _@@ TYP@@ E_@@ IN@@ TER@@ N@@ AT@@ ION@@ AL@@ ); s@@ s.@@ set@@ Data@@ R@@ o@@ am@@ ing@@ Type@@ (@@ Service@@ State.@@ RO@@ AM@@ ING@@ _@@ TYP@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ ); s@@ s.@@ set@@ Oper@@ ator@@ Name@@ (@@ "@@ long@@ ", "@@ short@@ ", "@@ n@@ um@@ er@@ ic@@ "); s@@ s.@@ set@@ I@@ s@@ Man@@ ual@@ Selection@@ (@@ true@@ ); s@@ s.@@ set@@ R@@ il@@ V@@ o@@ i@@ ce@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ (@@ Service@@ State.@@ R@@ IL@@ _@@ R@@ AD@@ IO@@ _@@ TE@@ CH@@ NO@@ LO@@ G@@ Y_@@ 1@@ x@@ RT@@ T@@ ); s@@ s.@@ set@@ R@@ il@@ Data@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ (@@ Service@@ State.@@ R@@ IL@@ _@@ R@@ AD@@ IO@@ _@@ TE@@ CH@@ NO@@ LO@@ G@@ Y_@@ EV@@ D@@ O@@ _@@ 0); s@@ s.@@ set@@ C@@ ss@@ In@@ di@@ cat@@ or@@ (1@@ ); s@@ s.@@ set@@ System@@ And@@ Network@@ Id@@ (@@ 2, 3@@ ); s@@ s.@@ set@@ C@@ d@@ ma@@ R@@ o@@ am@@ ing@@ In@@ di@@ cat@@ or@@ (@@ 4@@ ); s@@ s.@@ set@@ C@@ d@@ ma@@ Default@@ R@@ o@@ am@@ ing@@ In@@ di@@ cat@@ or@@ (@@ 5@@ ); s@@ s.@@ set@@ C@@ d@@ ma@@ E@@ ri@@ I@@ con@@ Index@@ (@@ 6@@ ); s@@ s.@@ set@@ C@@ d@@ ma@@ E@@ ri@@ I@@ con@@ Mode@@ (@@ 7@@ ); s@@ s.@@ set@@ E@@ merg@@ enc@@ y@@ On@@ ly@@ (@@ true@@ ); s@@ s.@@ set@@ Data@@ R@@ o@@ am@@ ing@@ From@@ Reg@@ is@@ tr@@ ation@@ (@@ true@@ ); s@@ s.@@ set@@ Channel@@ N@@ umb@@ er(@@ 2@@ 1@@ 00@@ ); s@@ s.@@ set@@ C@@ ell@@ B@@ and@@ wid@@ th@@ s@@ (@@ new int@@ []{ 3@@ , 4@@ , 1@@ 0 }); android.os.@@ Par@@ ce@@ l p = android.os.@@ Par@@ ce@@ l.@@ ob@@ t@@ ain@@ (); s@@ s.@@ write@@ To@@ Par@@ cel@@ (p@@ , 0); p.@@ set@@ Data@@ Position@@ (@@ 0); android.@@ telephony.@@ Service@@ State new@@ S@@ s = new android.@@ telephony.@@ Service@@ State@@ (p@@ ); assert@@ Equal@@ s(@@ s@@ s, new@@ S@@ s); }
public int get@@ C@@ ell@@ Connection@@ Statu@@ s() { return mC@@ ell@@ Connection@@ Statu@@ s; }
public void set@@ C@@ ell@@ Connection@@ Statu@@ s@@ (@@ int cel@@ l@@ Connection@@ Statu@@ s) { mC@@ ell@@ Connection@@ Statu@@ s = cel@@ l@@ Connection@@ Statu@@ s; }
private int get@@ Result@@ Code@@ (java.lang.@@ Throw@@ able e) { if ((@@ e.get@@ C@@ au@@ se@@ ()) instanceof com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception excepti@@ on = ((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Error@@ Exception@@ ) (@@ e.get@@ C@@ au@@ se@@ ())); int result@@ Co@@ de = ((@@ excepti@@ on@@ .get@@ Oper@@ ation@@ Code@@ ()) <@@ < (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler.@@ E@@ U@@ IC@@ C@@ _C@@ AR@@ D_@@ ER@@ RO@@ R@@ _C@@ OD@@ E_@@ O@@ P@@ ER@@ AT@@ ION@@ _@@ B@@ I@@ T@@ S@@ _S@@ H@@ I@@ F@@ T@@ )) + (@@ excepti@@ on@@ .get@@ Error@@ Code@@ ()); return result@@ Code@@ ; } return android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ RE@@ S@@ UL@@ T_@@ UN@@ K@@ NO@@ W@@ N@@ ; }
@java.lang.Override public void on@@ Result@@ (android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info@@ [] pro@@ fil@@ es) { call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ RE@@ S@@ UL@@ T_@@ O@@ K@@ , pro@@ fil@@ es@@ ); }
@java.lang.Override public void get@@ All@@ Pro@@ fil@@ es@@ (java.lang.String call@@ ing@@ Package@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ All@@ Pro@@ fil@@ es@@ Call@@ b@@ ac@@ k call@@ back@@ ) { check@@ Call@@ ing@@ Package@@ (c@@ all@@ ing@@ Package@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info@@ []@@ > c@@ ard@@ C@@ b = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <@@ android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info@@ []@@ >@@ () { @java.lang.Override public void on@@ Result@@ (android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info@@ [] pro@@ fil@@ es) { call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ RE@@ S@@ UL@@ T_@@ O@@ K@@ , pro@@ fil@@ es@@ ); } @java.lang.Override public void on@@ Exception@@ (java.lang.@@ Throw@@ able e) { call@@ back@@ .@@ on@@ Comp@@ let@@ e@@ (get@@ Result@@ Code@@ (@@ e@@ ), null@@ ); } }; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ E@@ u@@ ic@@ c@@ C@@ ard@@ ().get@@ All@@ Pro@@ fil@@ es@@ (c@@ ard@@ C@@ b@@ , m@@ E@@ u@@ ic@@ c@@ Handler@@ ); }
public com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ar@@ d get@@ E@@ u@@ ic@@ c@@ C@@ ard@@ (@@ int s@@ lo@@ t@@ Index@@ ) { return null@@ ; }
@java.lang.Override public void on@@ Exception@@ (java.lang.@@ Throw@@ able e) { call@@ back@@ .@@ on@@ Comp@@ let@@ e@@ (get@@ Result@@ Code@@ (@@ e@@ ), null@@ ); }
public void test@@ J@@ vm@@ ti@@ A@@ g@@ ent@@ App@@ In@@ ternal@@ () throw@@ s java.lang.Exception { run@@ J@@ vm@@ ti@@ A@@ g@@ ent@@ Load@@ Test@@ ((@@ com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ I@@ Test@@ De@@ vice device@@ ,@@ java.lang.String p@@ kg@@ ,@@ java.lang.String ap@@ k@@ ,@@ java.lang.String ab@@ i@@ Name@@ ) -@@ > { try { java.lang.String set@@ A@@ g@@ ent@@ App@@ C@@ m@@ d = (("@@ c@@ m@@ d ac@@ tiv@@ it@@ y set@@ -@@ ag@@ ent@@ -@@ ap@@ p " + p@@ kg@@ ) + " ") + (android.@@ j@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ At@@ t@@ ach@@ ing@@ Host@@ Test.@@ A@@ G@@ EN@@ T@@ ); java.lang.String set@@ A@@ g@@ ent@@ App@@ Re@@ p@@ l@@ y = device@@ .@@ exec@@ ute@@ Sh@@ ell@@ Command@@ (@@ set@@ A@@ g@@ ent@@ App@@ C@@ m@@ d@@ ); if ((@@ set@@ A@@ g@@ ent@@ App@@ Re@@ p@@ l@@ y != null@@ ) && (!(@@ set@@ A@@ g@@ ent@@ App@@ Re@@ p@@ l@@ y.@@ tr@@ im@@ ().@@ isEmpty@@ ()))) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ set@@ A@@ g@@ ent@@ App@@ Re@@ p@@ ly@@ ); } } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ ("@@ Faile@@ d run@@ n@@ ing set@@ -@@ ag@@ ent@@ -@@ app@@ ", e); } try { android.@@ j@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ t@@ ach@@ ing@@ Host@@ Test.@@ run@@ At@@ t@@ ach@@ Test@@ C@@ m@@ d@@ (@@ device@@ , p@@ kg@@ , "@@ "); } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ ("@@ Faile@@ d ag@@ ent@@ -@@ ap@@ p att@@ ach@@ ing@@ ", e); } }); }
public void test@@ J@@ vm@@ ti@@ A@@ g@@ ent@@ App@@ Ex@@ ternal@@ () throw@@ s java.lang.Exception { run@@ J@@ vm@@ ti@@ A@@ g@@ ent@@ Load@@ Test@@ ((@@ com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ I@@ Test@@ De@@ vice device@@ ,@@ java.lang.String p@@ kg@@ ,@@ java.lang.String ap@@ k@@ ,@@ java.lang.String ab@@ i@@ Name@@ ) -@@ > { try { java.lang.String p@@ w@@ d = device@@ .@@ exec@@ ute@@ Sh@@ ell@@ Command@@ ((@@ ("@@ run@@ -@@ a@@ s " + p@@ kg@@ ) + " p@@ w@@ d@@ ")); if (p@@ w@@ d == null@@ ) { throw new java.lang.@@ RuntimeException@@ ("@@ p@@ w@@ d fa@@ ile@@ d@@ "); } p@@ w@@ d = p@@ w@@ d.@@ tr@@ im@@ (); if (p@@ w@@ d.@@ isEmpty@@ ()) { throw new java.lang.@@ RuntimeException@@ ("@@ p@@ w@@ d fa@@ ile@@ d@@ "); } java.lang.String lib@@ In@@ Data@@ Data = (android.@@ j@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ At@@ t@@ ach@@ ing@@ Host@@ Test.@@ A@@ G@@ EN@@ T@@ .@@ sub@@ string@@ (@@ 0, ((@@ android.@@ j@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ At@@ t@@ ach@@ ing@@ Host@@ Test.@@ A@@ G@@ EN@@ T@@ .@@ length@@ ()) - ("@@ .@@ so@@ ".@@ length@@ ()@@ )@@ ))) + "@@ 2.@@ so@@ "; java.lang.String ag@@ ent@@ In@@ Data@@ Data = in@@ stall@@ Lib@@ To@@ Data@@ (@@ device@@ , p@@ kg@@ , ab@@ i@@ Name, ap@@ k@@ , p@@ w@@ d@@ , android.@@ j@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ .@@ exec@@ ute@@ Sh@@ ell@@ Command@@ (@@ set@@ A@@ G@@ EN@@ T@@ , lib@@ In@@ Data@@ ); java.lang.String set@@ A@@ g@@ ent@@ App@@ C@@ m@@ d = (("@@ c@@ m@@ d ac@@ tiv@@ it@@ y set@@ -@@ ag@@ ent@@ -@@ ap@@ p " + p@@ kg@@ ) + " ") + ag@@ ent@@ In@@ Data@@ ; java.lang.String set@@ A@@ g@@ ent@@ App@@ Re@@ p@@ l@@ y = device@@ .@@ exec@@ ute@@ Sh@@ ell@@ Command@@ (@@ set@@ A@@ g@@ ent@@ App@@ C@@ m@@ d@@ ); if ((@@ set@@ A@@ g@@ ent@@ App@@ Re@@ p@@ l@@ y != null@@ ) && (!(@@ set@@ A@@ g@@ ent@@ App@@ Re@@ p@@ l@@ y.@@ tr@@ im@@ ().@@ isEmpty@@ ()))) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e(@@ set@@ A@@ g@@ ent@@ App@@ Re@@ p@@ ly@@ ); } } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ ("@@ Faile@@ d run@@ n@@ ing set@@ -@@ ag@@ ent@@ -@@ app@@ ", e); } try { android.@@ j@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ .@@ cts.@@ J@@ vm@@ ti@@ At@@ t@@ ach@@ ing@@ Host@@ Test.@@ run@@ At@@ t@@ ach@@ Test@@ C@@ m@@ d@@ (@@ device@@ , p@@ kg@@ , "@@ "); } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ ("@@ Faile@@ d ag@@ ent@@ -@@ ap@@ p att@@ ach@@ ing@@ ", e); } }); }
private static void run@@ At@@ t@@ ach@@ Test@@ C@@ m@@ d@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ I@@ Test@@ De@@ vice device@@ , java.lang.String p@@ kg@@ , java.lang.String ag@@ ent@@ Param@@ s) throw@@ s java.lang.Exception { java.lang.String att@@ ach@@ C@@ m@@ d = ((@@ ("@@ ac@@ tiv@@ it@@ y st@@ ar@@ t -@@ S -@@ W " + ag@@ ent@@ Param@@ s) + " -@@ n ") + p@@ kg@@ ) + "@@ /@@ android.@@ j@@ vm@@ ti@@ .@@ J@@ vm@@ ti@@ Activity@@ "; java.lang.String att@@ ach@@ Re@@ p@@ l@@ y = device@@ .@@ exec@@ ute@@ Sh@@ ell@@ Command@@ (@@ att@@ ach@@ C@@ m@@ d@@ ); if ((@@ att@@ ach@@ Re@@ p@@ l@@ y != null@@ ) && (!(@@ att@@ ach@@ Re@@ p@@ l@@ y.@@ tr@@ im@@ ().@@ isEmpty@@ ()))) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e(@@ att@@ ach@@ Re@@ p@@ ly@@ ); } }
@java.lang.Override public void set@@ A@@ g@@ ent@@ App@@ (java.lang.String package@@ Name, java.lang.String ag@@ ent@@ ) { synchronized@@ (@@ this@@ ) { if ((@@ check@@ Call@@ ing@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ SE@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ W@@ AT@@ CH@@ ER@@ )) != (android.@@ content.@@ p@@ m.@@ Package@@ Manager.@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ _@@ G@@ R@@ AN@@ TE@@ D@@ )) { throw new java.lang.@@ Sec@@ ur@@ ity@@ Exception@@ (("@@ Requ@@ i@@ re@@ s per@@ mis@@ sion " + (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ SE@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ W@@ AT@@ CH@@ ER@@ ))); } st@@ op@@ Pro@@ fi@@ ler@@ Lock@@ ed@@ (@@ null@@ , 0); set@@ Pro@@ file@@ App@@ Un@@ check@@ ed@@ (@@ package@@ Name, new android.@@ app.@@ Pro@@ fi@@ ler@@ Info@@ (@@ null@@ , null@@ , 0, false@@ , false@@ , ag@@ ent@@ , true@@ )); m@@ Pro@@ file@@ Pro@@ c = null@@ ; } }
int run@@ Set@@ A@@ g@@ ent@@ App@@ (@@ java.io.@@ P@@ r@@ int@@ Wri@@ ter p@@ w@@ ) throw@@ s android.os.@@ Remote@@ Exception { java.lang.String p@@ k@@ g = get@@ Next@@ Arg@@ Requ@@ i@@ re@@ d@@ (); java.lang.String ag@@ ent = get@@ Next@@ Arg@@ Requ@@ i@@ re@@ d@@ (); m@@ Interface@@ .set@@ A@@ g@@ ent@@ App@@ (p@@ kg@@ , ag@@ ent@@ ); return 0; }
void set@@ Pro@@ file@@ App@@ (android.@@ content.@@ p@@ m.@@ Application@@ Info app@@ , java.lang.String process@@ Name, android.@@ app.@@ Pro@@ fi@@ ler@@ Info pro@@ fi@@ ler@@ Info@@ ) { synchronized@@ (@@ this@@ ) { boolean is@@ Debugg@@ able = "@@ 1@@ ".@@ equals(@@ android.os.@@ System@@ Properties@@ .get@@ (com.android.server.@@ am@@ .@@ Activity@@ Manager@@ Service.@@ S@@ Y@@ S@@ TE@@ M@@ _@@ DE@@ B@@ U@@ G@@ G@@ G@@ G@@ AB@@ LE@@ , "@@ 0@@ ")); if (!@@ is@@ Debugg@@ able@@ ) { if (((@@ app.@@ flag@@ s) & (android.@@ content.@@ p@@ m.@@ Application@@ Info.@@ F@@ LA@@ G_@@ DE@@ B@@ U@@ G@@ G@@ AB@@ LE@@ )) == 0) { throw new java.lang.@@ Sec@@ ur@@ ity@@ Exception@@ (("@@ Co@@ ul@@ d not debu@@ gg@@ able@@ : " + (@@ app@@ .@@ package@@ Name@@ ))); } } set@@ Pro@@ file@@ App@@ Un@@ check@@ ed@@ (pro@@ cess@@ State@@ ); } }
private void r@@ est@@ ore@@ Default@@ AP@@ N@@ (@@ int sub@@ Id@@ ) { android.@@ dat@@ ab@@ ase.@@ s@@ q@@ li@@ te@@ .@@ S@@ Q@@ Li@@ te@@ Dat@@ ab@@ as@@ e d@@ b = get@@ Wri@@ t@@ able@@ Dat@@ ab@@ ase@@ (); java.lang.String wh@@ er@@ e = get@@ W@@ h@@ er@@ e@@ C@@ la@@ u@@ se@@ For@@ R@@ est@@ ore@@ Default@@ Ap@@ n@@ (d@@ b@@ , sub@@ Id@@ ); com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ log@@ (("@@ S@@ ch@@ ang@@ e wh@@ er@@ e@@ : " + wh@@ er@@ e@@ )); if (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ wh@@ er@@ e@@ )) { com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ log@@ e@@ ("@@ S@@ ch@@ et wh@@ er@@ e c@@ la@@ u@@ se to r@@ est@@ or@@ e AP@@ N wh@@ er@@ e = com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ IS@@ _N@@ O@@ T_@@ O@@ W@@ N@@ E@@ D_@@ B@@ Y_@@ D@@ P@@ C@@ ; } try { d@@ b.@@ delet@@ e@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ C@@ AR@@ R@@ I@@ E@@ RS@@ _@@ TA@@ B@@ LE@@ , wh@@ er@@ e@@ , null@@ ); } catch (android.@@ dat@@ ab@@ ase.@@ S@@ Q@@ L@@ Exception e) { com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ log@@ e@@ (("@@ N@@ E@@ T@@ P excepti@@ on wh@@ e@@ n delet@@ ing to r@@ est@@ ore@@ : " + e@@ )); } android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s s@@ p@@ Ap@@ n@@ Id = get@@ Context@@ ().get@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ P@@ RE@@ F@@ _@@ F@@ IL@@ E_@@ AP@@ N@@ , Context.@@ M@@ OD@@ E_@@ P@@ R@@ I@@ V@@ A@@ TE@@ ); android.content.@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ .@@ E@@ d@@ it@@ or editor@@ Ap@@ n@@ Id = s@@ p@@ Ap@@ n@@ Id@@ .@@ ed@@ it@@ (); editor@@ Ap@@ n@@ Id@@ .@@ clear@@ (); editor@@ Ap@@ n@@ Id@@ .@@ app@@ ly@@ (); android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s s@@ p@@ Ap@@ n = get@@ Context@@ ().get@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ P@@ RE@@ F@@ _@@ F@@ IL@@ E_@@ F@@ UL@@ L@@ _@@ AP@@ N@@ , Context.@@ M@@ OD@@ E_@@ P@@ R@@ I@@ V@@ A@@ TE@@ ); android.content.@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ .@@ E@@ d@@ it@@ or editor@@ Ap@@ n = s@@ p@@ Ap@@ n@@ .@@ ed@@ it@@ (); editor@@ Ap@@ n@@ .@@ clear@@ (); editor@@ Ap@@ n@@ .@@ app@@ ly@@ (); if (com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ ap@@ n@@ Source@@ Service@@ Ex@@ ist@@ s(@@ get@@ Context@@ ())) { r@@ est@@ ore@@ Ap@@ n@@ sWith@@ Service@@ (); } else { init@@ Dat@@ ab@@ ase@@ With@@ Dat@@ ab@@ ase@@ Hel@@ per@@ (d@@ b@@ ); } }
void dis@@ connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ I@@ N per@@ mission@@ "); synchronized@@ (@@ this@@ ) { if (m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ contain@@ s@@ Key@@ (@@ device@@ )) { m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .get@@ (@@ device@@ ).@@ send@@ Message@@ (@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); } }
@java.lang.Override public boolean on@@ Con@@ nect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice remo@@ te@@ Device@@ , android.@@ bluetooth.@@ Bluetooth@@ S@@ ock@@ et s@@ ocket@@ ) { if ((@@ remo@@ te@@ De@@ vice == null@@ ) || (s@@ ock@@ et == null@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ TAG, ((@@ ("@@ on@@ Con@@ nect@@ () U@@ ne@@ x@@ pec@@ ted null@@ .@@ "); remo@@ te@@ Device@@ =@@ " + remo@@ te@@ Device@@ ) + " s@@ ocket@@ =@@ ") + s@@ ocket@@ )); return false@@ ; } (m@@ Next@@ No@@ t@@ if@@ ic@@ ation@@ Id@@ )@@ --@@ ; if (m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ contain@@ s@@ Key@@ (@@ remo@@ te@@ Device@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ TAG, ("@@ on@@ Con@@ nect@@ () de@@ vice al@@ read@@ y connec@@ ted@@ . remo@@ te@@ Device@@ =@@ " + remo@@ te@@ Device@@ )); return false@@ ; } com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e@@ ; new@@ State@@ M@@ ach@@ in@@ e = com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e.@@ m@@ ake@@ (@@ this@@ , m@@ Handler@@ Thread@@ .get@@ L@@ oo@@ per@@ (), remo@@ te@@ Device@@ , s@@ ocket@@ , this@@ , m@@ Session@@ Statu@@ s@@ Handle@@ r , m@@ Next@@ No@@ t@@ if@@ ic@@ ation@@ Id@@ ); m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ put@@ (@@ remo@@ te@@ Device@@ , new@@ State@@ M@@ ach@@ ine@@ ); m@@ Server@@ Socket@@ s.@@ pre@@ par@@ e@@ For@@ New@@ Con@@ nect@@ (); return true@@ ; }
java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (@@ int@@ [] st@@ at@@ es) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > device@@ s = new java.util.ArrayList<@@ >(); if ((@@ (m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ ) == null@@ ) || (@@ state@@ s == null@@ )) { return de@@ vices@@ ; } for (@@ int st@@ ate : st@@ at@@ es) { for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice : m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ key@@ Set@@ ()) { if ((@@ st@@ ate == (@@ m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .get@@ (@@ device@@ )@@ .get@@ Connection@@ State@@ ())) { de@@ vices@@ .@@ add@@ (@@ de@@ vice ); } } } return de@@ vices@@ ; }
private void cle@@ an@@ Up@@ Server@@ Socket@@ () { for (com.android.bluetooth.@@ p@@ b@@ ap.@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e : m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ valu@@ es@@ ()) { state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); } cle@@ an@@ Up@@ S@@ d@@ p@@ Record@@ (); if ((m@@ Server@@ Socket@@ s) != null@@ ) { m@@ Server@@ Socket@@ s.@@ sh@@ u@@ t@@ do@@ wn@@ (@@ false@@ ); m@@ Server@@ Socket@@ s = null@@ ; } }
java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > get@@ Connec@@ ted@@ De@@ vices@@ () { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); if ((m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ ) == null@@ ) { return new java.util.ArrayList<@@ >(); } return new java.util.ArrayList<@@ >(); }
int get@@ Connection@@ State@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); if ((m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Ma@@ p@@ ) == null@@ ) || (!(m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ contain@@ s@@ Key@@ (@@ device@@ ))) { return android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; } return m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Map@@ .get@@ (@@ device@@ )@@ .get@@ Connection@@ State@@ (); }
public void add@@ T@@ c@@ p@@ Stat@@ s@@ Result@@ (@@ int s@@ ent@@ , int lo@@ st@@ ) { pend@@ ing@@ S@@ um@@ m@@ ar@@ y.@@ t@@ c@@ p@@ Lo@@ ss@@ R@@ at@@ e.@@ count@@ (@@ lo@@ st@@ , s@@ ent@@ ); }
@java.lang.Override public java.lang.String toString@@ () { java.util.@@ String@@ J@@ o@@ in@@ er j = new java.util.@@ String@@ J@@ o@@ in@@ er@@ ("@@ {@@ ", "@@ }@@ "); j.@@ add@@ (("@@ net@@ Id@@ =@@ " + (@@ net@@ Id@@ ))); for (@@ int t : com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Bit@@ Utils.@@ un@@ pack@@ Bit@@ s(@@ trans@@ port@@ s@@ )) { j.@@ add@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ trans@@ port@@ Name@@ Of@@ (@@ t@@ )); } j.@@ add(@@ java.lang.String@@ .@@ for@@ mat@@ ("@@ N@@ o av@@ g@@ =@@ %@@ d@@ m@@ s@@ ", max@@ =@@ %@@ d@@ m@@ s er@@ r@@ =@@ %@@ .@@ 1@@ f@@ %@@ %@@ %@@ %@@ s@@ ", to@@ t@@ =@@ %@@ d (@@ (@@ int@@ ) (d@@ n@@ s@@ L@@ at@@ enc@@ i@@ es.@@ a@@ ver@@ age@@ ()@@ )), (@@ (@@ int@@ ) (d@@ n@@ s@@ L@@ at@@ enc@@ i@@ es.@@ max@@ )), (1@@ 0@@ 0 * (d@@ n@@ s@@ Error@@ R@@ at@@ e.@@ a@@ ver@@ age@@ ()@@ )), d@@ n@@ s@@ Error@@ R@@ at@@ e.@@ count@@ )); j.@@ add(@@ java.lang.String@@ .@@ for@@ mat@@ ("@@ N@@ o av@@ g@@ =@@ %@@ d@@ m@@ s max@@ =@@ %@@ d@@ m@@ s@@ ", er@@ r@@ =@@ %@@ .@@ 1@@ f@@ %@@ %@@ %@@ %@@ %@@ d@@ ", to@@ t@@ =@@ %@@ d (@@ (@@ int@@ ) (@@ connect@@ L@@ at@@ enc@@ i@@ es.@@ a@@ ver@@ age@@ ()@@ )), (@@ (@@ int@@ ) (@@ connect@@ L@@ at@@ enc@@ i@@ es.@@ max@@ )), (1@@ 0@@ 0 * (@@ connect@@ Error@@ R@@ at@@ e.@@ a@@ ver@@ age@@ ()@@ )), connect@@ Error@@ R@@ at@@ e.@@ count@@ )); j.@@ add(@@ java.lang.String@@ .@@ for@@ mat@@ ("@@ N@@ o av@@ g@@ _@@ lo@@ ss@@ =@@ %@@ .@@ 1@@ f@@ %@@ %@@ s@@ ent@@ =@@ %@@ d to@@ t@@ al@@ _@@ lo@@ st@@ =@@ %@@ d@@ ", (1@@ 0@@ 0 * (@@ t@@ c@@ p@@ Lo@@ ss@@ R@@ at@@ e.@@ a@@ ver@@ age@@ ()@@ )), t@@ c@@ p@@ Lo@@ ss@@ R@@ at@@ e.@@ count@@ , (@@ (@@ int@@ ) (@@ t@@ c@@ p@@ Lo@@ ss@@ R@@ at@@ e.@@ s@@ um@@ )))); return j.@@ toString@@ (); }
@java.lang.Override public synchronized void on@@ T@@ c@@ p@@ Socket@@ Stat@@ s@@ Event@@ (@@ int@@ [] network@@ Id@@ s, int@@ [] pack@@ et@@ S@@ ent@@ Coun@@ ter@@ s, int@@ [] pack@@ et@@ Lo@@ st@@ Coun@@ ter@@ s) { if (((@@ network@@ Id@@ s.@@ length) != (p@@ ack@@ et@@ S@@ ent@@ Coun@@ ter@@ s.@@ length@@ )) || ((@@ network@@ Id@@ s.@@ length) != (p@@ ack@@ et@@ Lo@@ st@@ Coun@@ ter@@ s.@@ length@@ ))) { android.util.Log.@@ e@@ (com.android.server.@@ connec@@ tivity.@@ Net@@ d@@ Event@@ Listener@@ Service.@@ TAG, "@@ In@@ va@@ li@@ d dat@@ a FI@@ X@@ ME@@ "); return@@ ; } long tim@@ est@@ am@@ p = java.lang.System.@@ current@@ Time@@ Milli@@ s(); for (@@ int i = 0; i < (@@ network@@ Id@@ s.@@ length); i++) { int net@@ Id = network@@ Id@@ s@@ [i@@ ]; int s@@ ent = pack@@ et@@ S@@ ent@@ Coun@@ ter@@ s@@ [i@@ ]; int lo@@ s@@ t = pack@@ et@@ Lo@@ st@@ Coun@@ ter@@ s@@ [i@@ ]; get@@ M@@ et@@ ri@@ c@@ s@@ For@@ Network@@ (@@ tim@@ est@@ amp@@ , net@@ Id@@ ).@@ add@@ T@@ c@@ p@@ Stat@@ s@@ Result@@ (s@@ ent@@ , lo@@ st@@ ); } if (com.android.server.@@ connec@@ tivity.@@ Net@@ d@@ Event@@ Listener@@ Service.@@ D@@ B@@ G) { java.util.@@ String@@ J@@ o@@ in@@ er j = new java.util.@@ String@@ J@@ o@@ in@@ er@@ ("@@ , "); for (@@ int i = 0; i < (@@ network@@ Id@@ s.@@ length); i++) { int net@@ Id = network@@ Id@@ s@@ [i@@ ]; int s@@ ent = pack@@ et@@ S@@ ent@@ Coun@@ ter@@ s@@ [i@@ ]; int lo@@ s@@ t = pack@@ et@@ Lo@@ st@@ Coun@@ ter@@ s@@ [i@@ ]; j.@@ add(@@ java.lang.String@@ .@@ for@@ mat@@ ("@@ {@@ net@@ Id@@ =@@ %@@ d@@ , s@@ ent@@ =@@ %@@ d@@ , lo@@ st@@ =@@ %@@ d@@ }@@ ", net@@ Id, s@@ ent@@ , lo@@ st@@ )); } android.util.Log.d@@ (com.android.server.@@ connec@@ tivity.@@ Net@@ d@@ Event@@ Listener@@ Service.@@ TAG, ("@@ T@@ c@@ p@@ Socket@@ Stat@@ s@@ Event@@ : " + (@@ j.@@ toString@@ ()))); } }
public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l d@@ est@@ , int flag@@ s) { d@@ est.@@ write@@ Int@@ (m@@ Ma@@ x@@ Data@@ Call@@ s); }
public android.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ State.@@ Data@@ S@@ pe@@ c@@ if@@ ic@@ State@@ s get@@ Data@@ S@@ pe@@ c@@ if@@ ic@@ Stat@@ es@@ () { return m@@ Data@@ S@@ pe@@ c@@ if@@ ic@@ Stat@@ es@@ ; }
public android.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ State.@@ V@@ o@@ i@@ ce@@ S@@ pe@@ c@@ if@@ ic@@ State@@ s get@@ V@@ o@@ i@@ ce@@ S@@ pe@@ c@@ if@@ ic@@ Stat@@ es@@ () { return m@@ V@@ o@@ i@@ ce@@ S@@ pe@@ c@@ if@@ ic@@ Stat@@ es@@ ; }
@java.lang.Override public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l d@@ est@@ , int flag@@ s) { d@@ est.@@ write@@ Int@@ (m@@ Trans@@ port@@ Type@@ ); d@@ est.@@ write@@ Int@@ (m@@ Do@@ main@@ ); d@@ est.@@ write@@ Int@@ (m@@ Reg@@ State@@ ); d@@ est.@@ write@@ Int@@ (m@@ Access@@ Network@@ T@@ ec@@ h@@ no@@ log@@ y@@ ); d@@ est.@@ write@@ Int@@ (m@@ Re@@ as@@ on@@ For@@ D@@ en@@ i@@ al@@ ); d@@ est.@@ write@@ Boolean@@ (m@@ E@@ merg@@ enc@@ y@@ On@@ ly@@ ); d@@ est.@@ write@@ Int@@ Array@@ (m@@ A@@ va@@ il@@ able@@ Ser@@ vices@@ ); d@@ est.@@ write@@ Par@@ cel@@ able@@ (m@@ C@@ ell@@ Id@@ enti@@ ty@@ , 0); if ((m@@ V@@ o@@ i@@ ce@@ S@@ pe@@ c@@ if@@ ic@@ Stat@@ es) != null@@ ) { d@@ est.@@ write@@ Boolean@@ (@@ true@@ ); m@@ V@@ o@@ i@@ ce@@ S@@ pe@@ c@@ if@@ ic@@ Stat@@ es.@@ write@@ To@@ Par@@ cel@@ (d@@ est@@ , flag@@ s); } else { d@@ est.@@ write@@ Boolean@@ (@@ false@@ ); } if ((m@@ Data@@ S@@ pe@@ c@@ if@@ ic@@ Stat@@ es) != null@@ ) { d@@ est.@@ write@@ Boolean@@ (@@ true@@ ); m@@ Data@@ S@@ pe@@ c@@ if@@ ic@@ Stat@@ es.@@ write@@ To@@ Par@@ cel@@ (d@@ est@@ , flag@@ s); } else { d@@ est.@@ write@@ Boolean@@ (@@ false@@ ); } }
public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l d@@ est@@ , int flag@@ s) { d@@ est.@@ write@@ Boolean@@ (m@@ C@@ ss@@ Sup@@ ported@@ ); d@@ est.@@ write@@ Int@@ (m@@ R@@ o@@ am@@ ing@@ In@@ di@@ cat@@ or@@ ); d@@ est.@@ write@@ Int@@ (m@@ System@@ I@@ s@@ In@@ P@@ r@@ l@@ ); d@@ est.@@ write@@ Int@@ (m@@ Default@@ R@@ o@@ am@@ ing@@ In@@ di@@ cat@@ or@@ ); }
@java.lang.Override public android.os.@@ I@@ B@@ in@@ der on@@ B@@ ind@@ (android.@@ content.@@ Int@@ ent int@@ ent@@ ) { if (@@ int@@ ent == null@@ ) || (!@@ (android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ DA@@ TA@@ _S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ F@@ AC@@ E@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ()@@ )@@ ))) { log@@ e@@ (("@@ I@@ B@@ in@@ der on@@ B@@ ind@@ ing int@@ ent " + int@@ ent@@ )); return null@@ ; } if ((m@@ B@@ in@@ der@@ ) != null@@ ) { m@@ B@@ in@@ der@@ ; m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ DA@@ TA@@ _S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ N@@ AL@@ _RE@@ Q@@ UE@@ ST_@@ IN@@ I@@ TI@@ AL@@ I@@ Z@@ E_@@ S@@ ER@@ V@@ IC@@ E@@ ).@@ send@@ To@@ Target@@ (); m@@ B@@ in@@ der@@ ; = new android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ I@@ Data@@ Service@@ W@@ rap@@ per@@ (); return m@@ B@@ in@@ der@@ ; }
@java.lang.Override public boolean on@@ Un@@ b@@ ind@@ (android.@@ content.@@ Int@@ ent int@@ ent@@ ) { return on@@ D@@ est@@ ro@@ y(); }
@java.lang.Override public void on@@ D@@ est@@ ro@@ y@@ () { if (m@@ C@@ le@@ an@@ ing@@ Up@@ ) { log@@ ("@@ I@@ gn@@ or@@ ing al@@ read@@ y st@@ ar@@ ted@@ .@@ .@@ .@@ "); S@@ k@@ ip@@ p@@ ing cle@@ an@@ up@@ ().@@ .@@ .@@ "); return@@ ; } mC@@ le@@ an@@ ing@@ U@@ p = true@@ ; if ((m@@ Adap@@ ter@@ Service@@ ) != null@@ ) { m@@ Adap@@ ter@@ Service.@@ remove@@ Pro@@ file@@ (@@ this@@ ); } cle@@ an@@ up@@ (); if ((m@@ B@@ in@@ der@@ ) != null@@ ) { m@@ B@@ ind@@ er.@@ cle@@ an@@ up@@ (); m@@ B@@ in@@ der = null@@ ; } super@@ .@@ on@@ D@@ est@@ ro@@ y(); m@@ Adap@@ ter = null@@ ; }
private void do@@ Start@@ () { if ((m@@ Adap@@ ter@@ ) == null@@ ) { android.util.@@ Log@@ .@@ w@@ (m@@ Name, st@@ ar@@ t pro@@ fi@@ le service@@ : de@@ vice do@@ es not h@@ av@@ e B@@ T return@@ ; } m@@ Adap@@ ter@@ Ser@@ vice = com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service@@ .get@@ Adap@@ ter@@ Service@@ (); if ((m@@ Adap@@ ter@@ Service@@ ) == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service.@@ TAG, "@@ S@@ av@@ e not ad@@ d this pro@@ fi@@ le b@@ ec@@ au@@ se Adap@@ ter@@ Ser@@ vice is null@@ .@@ "); return@@ ; } m@@ Adap@@ ter@@ Service.@@ add@@ Pro@@ file@@ (@@ this@@ ); m@@ Pro@@ file@@ St@@ ar@@ ted = start@@ (); if (!(m@@ Pro@@ file@@ St@@ ar@@ ted@@ )) { android.util.@@ Log@@ .@@ e@@ (m@@ Name, start@@ ing pro@@ file@@ . start@@ () return@@ ed false@@ .@@ "); return@@ ; } m@@ Adap@@ ter@@ Service.@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (get@@ Class@@ ().get@@ Name@@ (), Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ ); }
protected boolean is@@ A@@ va@@ il@@ able@@ () { return ((m@@ Pro@@ file@@ St@@ ar@@ ted@@ ) && (!(m@@ C@@ le@@ an@@ ing@@ Up@@ )); }
private void do@@ St@@ op@@ () { if (!(m@@ Pro@@ file@@ St@@ ar@@ ted@@ )) { android.util.Log.@@ w@@ (m@@ Name, "@@ Can@@ not cal@@ le@@ d bu@@ t the pro@@ fi@@ le is not run@@ ning@@ .@@ "); } m@@ Pro@@ file@@ St@@ ar@@ ted = false@@ ; if (!(@@ st@@ o@@ p pro@@ fi@@ le "); } if ((m@@ Adap@@ ter@@ Service@@ ) != null@@ ) { m@@ Adap@@ ter@@ Service.@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (get@@ Class@@ ().get@@ Name@@ (), Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ); } st@@ op@@ S@@ el@@ f@@ (); }
@java.lang.Override public void on@@ Create@@ () { if (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service.@@ D@@ B@@ G) { log@@ ("@@ on@@ Create@@ "); } super@@ .@@ on@@ Create@@ (); m@@ Adap@@ ter = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (); m@@ B@@ in@@ der = init@@ B@@ in@@ der@@ (); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Int@@ ent.@@ AC@@ TION@@ _@@ US@@ ER@@ _S@@ WI@@ T@@ CH@@ E@@ D@@ ); fil@@ ter.@@ add@@ Action@@ (@@ Int@@ ent.@@ AC@@ TION@@ _@@ US@@ ER_@@ UN@@ LO@@ C@@ KE@@ D@@ ); android.content.@@ B@@ roadcast@@ Recei@@ ve@@ r user@@ S@@ wit@@ ch@@ ed@@ Recei@@ ve@@ r = new android.content.@@ B@@ roadcast@@ Recei@@ ver@@ () { @java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { final java.lang.String ac@@ tion = int@@ ent.get@@ Action@@ (); final int user@@ Id = int@@ ent.get@@ Int@@ Extra@@ (@@ Int@@ ent.@@ EX@@ TR@@ A@@ _@@ US@@ ER_@@ H@@ AN@@ D@@ LE@@ , User@@ Hand@@ le.@@ US@@ ER@@ _N@@ UL@@ L); if (@@ user@@ Id == (android.os.@@ User@@ Hand@@ le.@@ US@@ ER@@ _N@@ UL@@ L@@ )) { android.util.Log.@@ e@@ (m@@ Name, re@@ cei@@ ve@@ d an in@@ va@@ li@@ d EX@@ TR@@ A@@ _@@ US@@ ER_@@ H@@ AN@@ D@@ L@@ E return@@ ; } if (@@ Int@@ ent.@@ AC@@ TION@@ _@@ US@@ ER@@ _S@@ WI@@ T@@ CH@@ E@@ D@@ .@@ equals(@@ action@@ )) { android.util.Log.d@@ (m@@ Name, ("@@ Un@@ able to user@@ Id " + user@@ Id@@ )); set@@ Current@@ User@@ (@@ user@@ Id@@ ); } else if (@@ Int@@ ent.@@ AC@@ TION@@ _@@ US@@ ER_@@ UN@@ LO@@ C@@ KE@@ D@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { android.util.Log.d@@ (m@@ Name, ("@@ U@@ ne@@ x@@ pec@@ ted user@@ Id " + user@@ Id@@ )); set@@ User@@ Un@@ lock@@ ed@@ (@@ user@@ Id@@ ); } } }; get@@ Application@@ Context@@ ().@@ register@@ Recei@@ ver@@ (@@ user@@ S@@ wit@@ ch@@ ed@@ Recei@@ ver@@ , fil@@ ter@@ ); int current@@ User@@ Id = android.@@ app.@@ Activity@@ Manager.@@ get@@ Current@@ User@@ (); set@@ Current@@ User@@ (@@ current@@ User@@ Id@@ ); android.os.@@ User@@ Manager user@@ Manager = android.os.@@ User@@ Manager.@@ get@@ Context@@ ()); if (@@ user@@ Manager.@@ is@@ User@@ Un@@ lock@@ ed@@ (@@ current@@ User@@ Id@@ )) { set@@ User@@ Un@@ lock@@ ed@@ (@@ current@@ User@@ Id@@ ); } create@@ (); }
public android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Statu@@ s get@@ Co@@ dec@@ Statu@@ s() { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, "@@ get@@ Co@@ dec@@ Statu@@ s@@ ()@@ "); } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { if (s@@ m.@@ is@@ Connec@@ ted@@ ()) { return null@@ ; } } return m@@ Local@@ Co@@ dec@@ Statu@@ s; } }
private void b@@ roadcast@@ Connection@@ State@@ (@@ int new@@ State@@ , int pre@@ v@@ State@@ ) { if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((((@@ ("@@ Connec@@ tion st@@ ate " + (m@@ Device@@ )) + "@@ : ") + (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ pro@@ file@@ State@@ To@@ String@@ (p@@ re@@ v@@ State@@ ))) + "@@ -@@ >@@ ") + (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ pro@@ file@@ State@@ To@@ String@@ (@@ new@@ State@@ )))); } m@@ Au@@ dio@@ Manager.@@ set@@ Bluetooth@@ A@@ 2@@ d@@ p@@ Device@@ Connection@@ State@@ (m@@ Device@@ , new@@ State@@ , Bluetooth@@ Pro@@ file.@@ A@@ 2@@ D@@ P@@ ); android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ A@@ 2@@ d@@ p.@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , pre@@ v@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , new@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, m@@ Device@@ ); int@@ ent.@@ add@@ Flag@@ s@@ ((@@ (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ E@@ F@@ OR@@ E_@@ B@@ O@@ T@@ ) | (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER_@@ IN@@ C@@ L@@ U@@ D@@ E_@@ B@@ AC@@ K@@ G@@ RO@@ UN@@ D@@ ))); m@@ Service.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ , Pro@@ file@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); }
boolean dis@@ connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ("@@ dis@@ connect@@ () " + device@@ )); } e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ dis@@ connect@@ () dis@@ connec@@ t requ@@ est for " + device@@ ) + " : n@@ o st@@ ate m@@ ach@@ in@@ e return false@@ ; } int connection@@ State = m@@ State@@ .get@@ Connection@@ State@@ (); if ((@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ connection@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ))) { return false@@ ; } s@@ m@@ .@@ send@@ Message@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); return true@@ ; }
private void process@@ Co@@ dec@@ Config@@ Event@@ (android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Statu@@ s new@@ Co@@ dec@@ Statu@@ s) { android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Con@@ fi@@ g pre@@ v@@ Co@@ dec@@ Con@@ fi@@ g = null@@ ; synchronized@@ (@@ this@@ ) { if ((m@@ Co@@ dec@@ Statu@@ s) != null@@ ) { pre@@ v@@ Co@@ dec@@ Con@@ fi@@ g = m@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ Config@@ (); } m@@ Co@@ dec@@ Statu@@ s = new@@ Co@@ dec@@ Statu@@ s; } if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ process@@ Co@@ dec@@ Config@@ Event@@ () Code@@ c Config@@ : " + pre@@ v@@ Co@@ dec@@ Config@@ ) + "@@ -@@ >@@ ") + (@@ new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ Config@@ ()))); for (android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Con@@ fi@@ g cod@@ ec@@ Con@@ fi@@ g : new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ s@@ Local@@ Cap@@ abili@@ ties@@ ()) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ process@@ Co@@ dec@@ Config@@ Event@@ : Code@@ c Loc@@ al Cap@@ abili@@ ty@@ : " + cod@@ ec@@ Config@@ )); } for (android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Con@@ fi@@ g cod@@ ec@@ Con@@ fi@@ g : new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ s@@ Se@@ le@@ ct@@ able@@ Cap@@ abili@@ ties@@ ()) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ process@@ Co@@ dec@@ Config@@ Event@@ () Code@@ c Se@@ le@@ ct@@ able Cap@@ abili@@ ty@@ : " + cod@@ ec@@ Config@@ )); } } android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ A@@ 2@@ d@@ p.@@ AC@@ TION@@ _C@@ OD@@ EC@@ _C@@ ON@@ FI@@ G@@ _C@@ H@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Co@@ dec@@ Statu@@ s.@@ EX@@ TR@@ A@@ _C@@ OD@@ EC@@ _@@ STAT@@ US@@ , m@@ Co@@ dec@@ Statu@@ s); int@@ ent.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ O@@ O@@ O@@ T@@ ); if ((@@ !@@ (@@ new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ Config@@ ().@@ s@@ ame@@ Au@@ dio@@ F@@ e@@ ed@@ ing@@ Parameter@@ s(@@ pre@@ v@@ Co@@ dec@@ Config@@ ))) && ((@@ get@@ Current@@ State@@ ()) == (m@@ Connec@@ ted@@ ))) { int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, m@@ De@@ vice ); m@@ Au@@ dio@@ Manager.@@ handle@@ Bluetooth@@ A@@ 2@@ d@@ p@@ Device@@ Config@@ Chang@@ e@@ (m@@ De@@ vices@@ ); } m@@ Service.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ , A@@ 2@@ d@@ p@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); }
@java.lang.Override public void ent@@ er@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ En@@ ter Dis@@ connec@@ ted@@ (@@ " + (m@@ Device@@ )) + "@@ )@@ : ") + (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ message@@ W@@ hat@@ To@@ String@@ (get@@ Current@@ Message@@ ().@@ wh@@ at@@ )))); m@@ Connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; remove@@ Mess@@ ag@@ es@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T_@@ TI@@ ME@@ O@@ UT@@ ); if ((m@@ L@@ ast@@ Connection@@ State@@ ) != (-1@@ )) { b@@ roadcast@@ Connection@@ State@@ (m@@ Connection@@ State@@ , m@@ L@@ ast@@ Connection@@ State@@ ); } }
boolean ok@@ To@@ Con@@ nect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Ser@@ vice ad@@ ap@@ ter@@ Ser@@ vice = com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service@@ .get@@ Adap@@ ter@@ Service@@ (); int p@@ ri@@ or@@ it@@ y = m@@ Service@@ .get@@ Pri@@ or@@ ity@@ (@@ device@@ ); if ((@@ ad@@ ap@@ ter@@ Ser@@ vice == null@@ ) || (@@ ad@@ ap@@ ter@@ Service.@@ is@@ Q@@ ui@@ et@@ Mode@@ Enabled@@ ())) { return false@@ ; } if ((@@ (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ O@@ F@@ F@@ ) < p@@ ri@@ or@@ ity@@ ) || ((@@ (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ UN@@ DE@@ F@@ IN@@ E@@ D@@ ) == p@@ ri@@ or@@ ity@@ ) && ((@@ device@@ .get@@ B@@ ond@@ State@@ ()) != (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E@@ )@@ ))) { return true@@ ; } return false@@ ; }
@java.lang.Override public void dum@@ p@@ (@@ java.lang.String@@ Builder s@@ b@@ ) { super@@ .@@ dum@@ p@@ (s@@ b@@ ); for@@ e@@ (m@@ State@@ M@@ ach@@ in@@ e s@@ m : m@@ State@@ M@@ ach@@ in@@ es.@@ value@@ s) { s@@ m@@ Log.@@ dum@@ p@@ (s@@ b@@ ); } if ((m@@ Av@@ rc@@ p@@ ) != null@@ ) { m@@ Av@@ rc@@ p.@@ dum@@ p@@ (s@@ b@@ ); } }
@org.junit.Test public void test@@ In@@ com@@ ing@@ Pri@@ or@@ ity@@ Re@@ ject@@ () { when@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ .get@@ Pri@@ or@@ ity@@ (@@ an@@ y@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ class@@ ))@@ ).@@ thenReturn@@ (@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ O@@ F@@ ); com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent con@@ n@@ St@@ C@@ h = new com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Stack@@ Event@@ (@@ A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); con@@ n@@ St@@ Ch@@ .@@ value@@ In@@ t = A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ ent@@ .@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; con@@ n@@ St@@ Ch@@ .@@ de@@ vice = m@@ Test@@ Device@@ ; m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , con@@ n@@ St@@ Ch@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ).@@ ne@@ ver@@ ()).@@ send@@ B@@ roadcast@@ (@@ an@@ y@@ (android.@@ content.@@ Intent@@ .@@ class@@ ), an@@ y@@ String@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Th@@ at@@ (m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.get@@ Current@@ State@@ (), an@@ y@@ Object@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Th@@ at@@ (m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.get@@ Current@@ State@@ (), an@@ y@@ String@@ ()); }
@org.junit.Test public void test@@ Default@@ Dis@@ connec@@ ted@@ State@@ () { org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s@@ (m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.get@@ Connection@@ State@@ (), Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); }
@org.junit.Test public void test@@ Out@@ go@@ ing@@ Time@@ out@@ () { when@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ .get@@ Pri@@ or@@ ity@@ (@@ an@@ y@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ class@@ ))@@ ).@@ thenReturn@@ (@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ ON@@ ); when@@ (m@@ A@@ 2@@ d@@ p@@ Native@@ Interface@@ .@@ connect@@ A@@ 2@@ d@@ p@@ (@@ an@@ y@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ class@@ ))@@ ).@@ thenReturn@@ (@@ true@@ ); when@@ (m@@ A@@ 2@@ d@@ p@@ Native@@ Interface@@ .@@ dis@@ connect@@ A@@ 2@@ d@@ p@@ (@@ an@@ y@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ class@@ ))@@ ).@@ thenReturn@@ (@@ true@@ ); m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T@@ , m@@ Test@@ Device@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ android.content.@@ Intent@@ > int@@ ent@@ Argument@@ 1 = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ android.content.@@ Intent@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ).@@ tim@@ es@@ (1@@ )).@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ Argument@@ 1.@@ c@@ ap@@ t@@ ure@@ (), an@@ y@@ String@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , int@@ ent@@ Argument@@ 1@@ .get@@ Value@@ ().get@@ Int@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , (-1@@ ))); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Th@@ at@@ (m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.get@@ Current@@ State@@ (), org.@@ h@@ am@@ c@@ res@@ t.@@ core.@@ I@@ s@@ Instance@@ Of@@ .@@ instance@@ Of@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ .@@ class@@ )); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ android.content.@@ Intent@@ > int@@ ent@@ Argument@@ 2 = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ android.content.@@ Intent@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (((@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ s@@ Con@@ nect@@ Time@@ out@@ M@@ s) * 2@@ )).@@ tim@@ es@@ (@@ 2@@ )).@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ Argument@@ 2.@@ c@@ ap@@ t@@ ure@@ (), an@@ y@@ String@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , int@@ ent@@ Argument@@ 2@@ .get@@ Value@@ ().get@@ Int@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , (-1@@ ))); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Th@@ at@@ (m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.get@@ Current@@ State@@ (), org.@@ h@@ am@@ c@@ res@@ t.@@ core.@@ I@@ s@@ Instance@@ Of@@ .@@ instance@@ Of@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ Dis@@ connec@@ ted@@ .@@ class@@ )); }
public void set@@ Co@@ dec@@ Config@@ Pre@@ ference@@ (android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Con@@ fi@@ g cod@@ ec@@ Config@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ("@@ set@@ Co@@ dec@@ Config@@ Pre@@ ference@@ () " + (java.util.@@ Object@@ s.@@ toString@@ (@@ cod@@ ec@@ Config@@ )))); } m@@ A@@ 2@@ d@@ p@@ Co@@ dec@@ Con@@ fi@@ g = null@@ ; }
public void dis@@ able@@ Option@@ al@@ Co@@ dec@@ s() { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, "@@ dis@@ able@@ Option@@ al@@ Co@@ dec@@ s@@ ()@@ "); } m@@ A@@ 2@@ d@@ p@@ Co@@ dec@@ Con@@ fi@@ g@@ g@@ .@@ dis@@ able@@ Option@@ al@@ Co@@ dec@@ s(); }
public void dum@@ p@@ (@@ java.lang.String@@ Builder s@@ b@@ ) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service.@@ p@@ r@@ int@@ ln@@ (s@@ b@@ , ("@@ B@@ luetoo@@ th " + (m@@ De@@ ))); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service.@@ p@@ r@@ int@@ ln@@ (s@@ b@@ , ("@@ B@@ luetoo@@ th State@@ M@@ ach@@ ine@@ : " + (@@ this@@ .@@ toString@@ ()@@ ))); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service.@@ p@@ r@@ int@@ ln@@ (s@@ b@@ , m@@ I@@ s@@ Play@@ ing@@ : " + (m@@ I@@ s@@ Play@@ ing@@ ))); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service.@@ p@@ r@@ int@@ ln@@ (s@@ b@@ , ("@@ B@@ ad " + (m@@ Co@@ dec@@ Statu@@ s.@@ toString@@ ()))); }
public void en@@ able@@ Option@@ al@@ Co@@ dec@@ s() { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, "@@ en@@ able@@ Option@@ al@@ Co@@ dec@@ s@@ ()@@ "); } m@@ A@@ 2@@ d@@ p@@ Co@@ dec@@ Con@@ fi@@ g@@ ent.@@ en@@ able@@ Option@@ al@@ Co@@ dec@@ s(); }
@java.lang.Override protected boolean cle@@ an@@ up@@ () { if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, "@@ cle@@ an@@ up@@ ()@@ "); } if ((m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ver@@ ) != null@@ ) { un@@ register@@ Recei@@ ver@@ (m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ver@@ ); m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ve@@ r = null@@ ; } if ((m@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ ) != null@@ ) { un@@ register@@ Recei@@ ver@@ (m@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ ); m@@ Connection@@ State@@ Changed@@ Recei@@ ve@@ r = null@@ ; } for (java.util.@@ I@@ ter@@ ator@@ <@@ java.util.Map@@ .@@ E@@ n@@ try@@ <@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ , com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ >@@ > i@@ t = m@@ State@@ M@@ ach@@ in@@ es.@@ e@@ n@@ try@@ Set@@ ().@@ iter@@ ator@@ (); it.@@ has@@ Next@@ ()@@ ;@@ ) { com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m = it.@@ next@@ ().get@@ Value@@ (); s@@ m.@@ cle@@ an@@ up@@ (); } m@@ A@@ 2@@ d@@ p@@ Native@@ Interface@@ .@@ cle@@ an@@ up@@ (); if ((m@@ Av@@ rc@@ p@@ ) != null@@ ) { m@@ Av@@ rc@@ p@@ .@@ cle@@ an@@ up@@ (); m@@ Av@@ rc@@ p = null@@ ; } com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ clear@@ A@@ 2@@ d@@ p@@ Service@@ (); return true@@ ; }
void message@@ From@@ Native@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent st@@ ack@@ Event@@ ) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = st@@ ack@@ Ev@@ ent.@@ device@@ ; if ((@@ st@@ ack@@ Ev@@ ent.@@ typ@@ e) == (@@ A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ OD@@ EC@@ _C@@ ON@@ FI@@ G@@ _C@@ H@@ AN@@ GE@@ D@@ )) { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice z@@ er@@ o@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ "); if ((@@ de@@ vice == null@@ ) || (@@ device@@ .@@ equals(@@ z@@ er@@ o@@ Device@@ ))) { m@@ Local@@ Co@@ dec@@ Statu@@ s = st@@ ack@@ Ev@@ ent.@@ cod@@ ec@@ Statu@@ s; return@@ ; } } com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m = get@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); if (s@@ m == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ("@@ Tr@@ ack@@ ing pro@@ ces@@ s st@@ ac@@ k event@@ : n@@ o st@@ ate m@@ ach@@ ine@@ : " + st@@ ack@@ Event@@ )); return@@ ; } s@@ m@@ .@@ send@@ Message@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , st@@ ack@@ Event@@ ); } }
private void process@@ Connection@@ Event@@ (@@ int state@@ ) { switch (@@ state@@ ) { case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D : android.util.Log.@@ i@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ Dis@@ connec@@ ted@@ : " + (m@@ Device@@ ))); tr@@ an@@ sition@@ To@@ (m@@ Dis@@ connec@@ ted@@ ); break@@ ; case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D : android.util.Log.@@ w@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ Dis@@ connect@@ ing int@@ er@@ rup@@ ted@@ : de@@ vice is connec@@ ted@@ : " + (m@@ Device@@ ))); tr@@ an@@ sition@@ To@@ (m@@ Connec@@ ted@@ ); break@@ ; case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ IN@@ G : android.util.Log.@@ i@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ Dis@@ connect@@ ing int@@ er@@ rup@@ ted@@ : try to re@@ connect@@ : " + (m@@ Device@@ ))); tr@@ an@@ sition@@ To@@ (m@@ Con@@ nect@@ ing@@ ); break@@ ; case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ IN@@ G : break@@ ; default : android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ In@@ cor@@ re@@ c@@ t state@@ : " + state@@ )); break@@ ; } }
private com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e get@@ State@@ M@@ ach@@ ine@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (@@ de@@ vice == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, "@@ get@@ State@@ M@@ ach@@ in@@ e fa@@ ile@@ d@@ : de@@ vice can@@ not b@@ e null@@ "); return null@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m != null@@ ) { return s@@ m@@ ; } if ((m@@ State@@ M@@ ach@@ in@@ es.@@ size@@ ()) > (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ MA@@ X@@ _@@ A@@ 2@@ D@@ P@@ _@@ STA@@ TE@@ _M@@ AC@@ H@@ IN@@ E@@ S@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ("@@ Ma@@ x@@ im@@ u@@ m n@@ umb@@ er of A@@ 2@@ D@@ P st@@ ate m@@ ach@@ ine@@ s re@@ ach@@ ed@@ : " + (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ MA@@ X@@ _@@ A@@ 2@@ D@@ P@@ _@@ STA@@ TE@@ _M@@ AC@@ H@@ IN@@ E@@ S@@ ))); return null@@ ; } if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ("@@ Cre@@ at@@ ing a new st@@ ate m@@ ach@@ in@@ e for " + device@@ )); } s@@ m = com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ m@@ ake@@ (@@ device@@ , this@@ , m@@ A@@ 2@@ d@@ p@@ Native@@ Interface@@ , m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .get@@ L@@ oo@@ per@@ ()); m@@ State@@ M@@ ach@@ in@@ es.@@ put@@ (@@ device@@ , s@@ m@@ ); return s@@ m@@ ; } }
public boolean connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ("@@ connect@@ : " + device@@ )); } e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if ((@@ get@@ Pri@@ or@@ ity@@ (@@ device@@ )) == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ O@@ F@@ F@@ )) { return false@@ ; } android.os.@@ Par@@ cel@@ U@@ u@@ id@@ [] f@@ e@@ ature@@ U@@ u@@ id@@ s = device@@ .get@@ U@@ u@@ id@@ s(); if ((@@ android.@@ bluetooth.@@ Bluetooth@@ U@@ u@@ id@@ .@@ contain@@ s@@ An@@ y@@ U@@ u@@ id@@ (f@@ e@@ ature@@ U@@ u@@ id@@ s, com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ A@@ 2@@ D@@ P@@ _S@@ O@@ UR@@ C@@ E_@@ U@@ U@@ U@@ U@@ ID@@ )) && (!@@ (android.@@ bluetooth.@@ Bluetooth@@ U@@ u@@ id@@ .@@ contain@@ s@@ All@@ U@@ u@@ id@@ s(@@ f@@ e@@ ature@@ U@@ u@@ id@@ s, com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ A@@ 2@@ D@@ P@@ _S@@ O@@ UR@@ C@@ E_@@ S@@ IN@@ K@@ _@@ U@@ U@@ U@@ U@@ U@@ U@@ U@@ ID@@ S@@ )@@ ))) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, "@@ connect@@ : do@@ es not h@@ av@@ e A@@ 2@@ D@@ P@@ S@@ in@@ k U@@ U@@ I@@ D return false@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m@@ Connec@@ t = get@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); if (s@@ m@@ Connec@@ t == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ connect@@ () connec@@ t to " + device@@ ) + " : n@@ o st@@ ate m@@ ach@@ in@@ e return false@@ ; } int connection@@ State = s@@ m@@ Connec@@ t.get@@ Connection@@ State@@ (); if ((@@ connection@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) || (@@ connection@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ))) { return false@@ ; } for (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m@@ Dis@@ connec@@ t : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { if (!@@ (s@@ m@@ Dis@@ connec@@ t.get@@ Device@@ ().@@ equals(@@ device@@ ))) { s@@ m@@ Dis@@ connec@@ t@@ .@@ send@@ Message@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ .@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); } } s@@ m@@ Connec@@ t.@@ send@@ Message@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ .@@ C@@ ON@@ N@@ EC@@ T@@ ); return true@@ ; }
@java.lang.Override public void get@@ Data@@ Call@@ List@@ (@@ int s@@ lo@@ t@@ Id, android.@@ telephony.@@ data@@ .@@ I@@ Data@@ Service@@ Call@@ b@@ ac@@ k call@@ back@@ ) { if (c@@ all@@ b@@ ac@@ k == null@@ ) { log@@ e@@ ("@@ get@@ Data@@ Call@@ b@@ ac@@ k is null@@ "); return@@ ; } m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ DA@@ TA@@ _S@@ ER@@ V@@ IC@@ E_@@ RE@@ Q@@ UE@@ ST_@@ GE@@ T_@@ DA@@ TA@@ _C@@ AL@@ L@@ _@@ L@@ IS@@ T@@ , s@@ lo@@ t@@ Id, 0, call@@ back@@ ).@@ send@@ To@@ Target@@ (); }
public static void do@@ Test@@ () throw@@ s java.lang.Exception { ar@@ t.@@ R@@ ed@@ e@@ fin@@ i@@ tion@@ .@@ en@@ able@@ Com@@ mon@@ R@@ et@@ r@@ an@@ s@@ for@@ m@@ ation@@ (@@ true@@ ); ar@@ t.@@ R@@ ed@@ e@@ fin@@ i@@ tion@@ .@@ do@@ Com@@ mon@@ Class@@ R@@ et@@ r@@ an@@ s@@ for@@ m@@ ation@@ (@@ ar@@ t.@@ Test@@ 9@@ 8@@ 3@@ .@@ Tr@@ an@@ s@@ for@@ m@@ .@@ class@@ ); ar@@ t.@@ R@@ ed@@ e@@ fin@@ i@@ tion@@ .@@ do@@ Com@@ mon@@ Class@@ R@@ et@@ r@@ an@@ s@@ for@@ m@@ ation@@ (@@ java.lang.Ob@@ ject@@ .@@ class@@ ); ar@@ t.@@ R@@ ed@@ e@@ fin@@ i@@ tion@@ .@@ do@@ Com@@ mon@@ Class@@ R@@ et@@ r@@ an@@ s@@ for@@ m@@ ation@@ (java.lang.@@ Class@@ Load@@ er@@ .@@ class@@ ); ar@@ t.@@ R@@ ed@@ e@@ fin@@ i@@ tion@@ .@@ en@@ able@@ Com@@ mon@@ R@@ et@@ r@@ an@@ s@@ for@@ m@@ ation@@ (@@ false@@ ); }
public static void test_@@ set@@ L@@ ang@@ u@@ age@@ T@@ ag@@ _@@ w@@ ell@@ For@@ m@@ ed@@ T@@ ag@@ s() { ar@@ t.@@ Test@@ 9@@ 8@@ 3@@ .@@ do@@ Test@@ (); }
com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info m@@ ake@@ N@@ a@@ i@@ (@@ int net@@ Id, int s@@ core@@ , com.android.server.@@ connec@@ tivity.@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s@@ Test.@@ I@@ P i@@ p@@ , long trans@@ port@@ s) { com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i = mock@@ (com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info@@ .@@ class@@ ); when@@ (@@ n@@ a@@ i.@@ network@@ ()).@@ thenReturn@@ (@@ new android.net.@@ Network@@ (@@ net@@ Id@@ )); when@@ (@@ n@@ a@@ i@@ .get@@ Current@@ S@@ core@@ ()).@@ thenReturn@@ (s@@ core@@ ); n@@ a@@ i.@@ lin@@ k@@ Proper@@ ti@@ es = new android.net.@@ Lin@@ k@@ Properties@@ (); n@@ a@@ i.@@ network@@ Cap@@ abili@@ ti@@ es = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); n@@ a@@ i.@@ las@@ t@@ Valid@@ ate@@ d = true@@ ; for (@@ int t : com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Bit@@ Utils.@@ un@@ pack@@ Bit@@ s(@@ trans@@ port@@ s@@ )) { n@@ a@@ i.@@ network@@ Cap@@ abili@@ ti@@ es.@@ add@@ Trans@@ port@@ Type@@ (@@ t@@ ); } if (i@@ p == (com.android.server.@@ connec@@ tivity.@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s@@ Test.@@ IP@@ .@@ V@@ 4@@ )) || (i@@ p == (com.android.server.@@ connec@@ tivity.@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s@@ Test.@@ IP@@ .@@ D@@ U@@ AL@@ )) { n@@ a@@ i.@@ lin@@ k@@ Proper@@ ti@@ es.@@ add@@ Lin@@ k@@ Address@@ (@@ new android.net.@@ Lin@@ k@@ Addres@@ s("@@ 1@@ 9@@ 2.@@ 0.@@ 2.@@ 12@@ /@@ 24@@ ")); n@@ a@@ i.@@ lin@@ k@@ Proper@@ ti@@ es.@@ add@@ R@@ ou@@ te@@ (@@ new android.net.@@ R@@ ou@@ te@@ Info@@ (@@ new android.net.@@ I@@ p@@ Pre@@ fix@@ ("@@ 0.@@ 0.@@ 0@@ /@@ 0@@ "@@ ))); } if (i@@ p == (com.android.server.@@ connec@@ tivity.@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s@@ Test.@@ IP@@ .@@ V@@ 6@@ )) || (i@@ p == (com.android.server.@@ connec@@ tivity.@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s@@ Test.@@ IP@@ .@@ D@@ U@@ AL@@ ))@@ ))); n@@ a@@ i.@@ lin@@ k@@ Proper@@ ti@@ es.@@ add@@ Lin@@ k@@ Address@@ (@@ new android.net.@@ Lin@@ k@@ Addres@@ s("@@ 2@@ 00@@ 1@@ :@@ d@@ b@@ 8@@ :@@ de@@ ad@@ :@@ b@@ ee@@ f@@ :@@ f@@ 00@@ :@@ a@@ 0@@ /@@ 6@@ 4@@ ")); n@@ a@@ i.@@ lin@@ k@@ Proper@@ ti@@ es.@@ add@@ R@@ ou@@ te@@ (@@ new android.net.@@ R@@ ou@@ te@@ Info@@ (@@ new android.net.@@ I@@ p@@ Pre@@ fix@@ ("@@ :@@ /@@ 0@@ "@@ ))); } return n@@ a@@ i@@ ; }
public void test@@ Par@@ se@@ U@@ t@@ c@@ Long@@ () throw@@ s java.lang.Exception { java.lang.String round@@ T@@ ri@@ p@@ For@@ ma@@ t = "@@ y@@ y@@ y@@ M@@ d@@ d H@@ :@@ m@@ m@@ :@@ s@@ s.@@ SS@@ S@@ S z@@ z@@ z@@ z@@ "; libcore.@@ java.text.@@ Sim@@ ple@@ Date@@ Format@@ Test@@ .@@ do@@ U@@ t@@ c@@ Par@@ sing@@ Test@@ (java.util.@@ Loc@@ a@@ le.@@ EN@@ G@@ L@@ IS@@ H@@ , round@@ T@@ ri@@ p@@ Format@@ ); libcore.@@ java.text.@@ Sim@@ ple@@ Date@@ Format@@ Test@@ .@@ do@@ U@@ t@@ c@@ Par@@ sing@@ Test@@ (java.util.@@ Loc@@ a@@ le.@@ SI@@ M@@ P@@ L@@ I@@ FI@@ E@@ D_@@ CH@@ IN@@ E@@ S@@ E, round@@ T@@ ri@@ p@@ Format@@ ); }
public void test@@ Par@@ se@@ U@@ t@@ c@@ Short@@ () throw@@ s java.lang.Exception { java.lang.String round@@ T@@ ri@@ p@@ For@@ ma@@ t = "@@ y@@ y@@ y@@ M@@ d@@ d H@@ :@@ m@@ m@@ :@@ s@@ s.@@ SS@@ S@@ S z@@ "; libcore.@@ java.text.@@ Sim@@ ple@@ Date@@ Format@@ Test@@ .@@ do@@ U@@ t@@ c@@ Par@@ sing@@ Test@@ (java.util.@@ Loc@@ a@@ le.@@ EN@@ G@@ L@@ IS@@ H@@ , round@@ T@@ ri@@ p@@ Format@@ ); libcore.@@ java.text.@@ Sim@@ ple@@ Date@@ Format@@ Test@@ .@@ do@@ U@@ t@@ c@@ Par@@ sing@@ Test@@ (java.util.@@ Loc@@ a@@ le.@@ SI@@ M@@ P@@ L@@ I@@ FI@@ E@@ D_@@ CH@@ IN@@ E@@ S@@ E, round@@ T@@ ri@@ p@@ Format@@ ); }
private static void do@@ U@@ t@@ c@@ Par@@ sing@@ Test@@ (java.util.@@ Local@@ e loc@@ ale@@ , java.lang.String round@@ T@@ ri@@ p@@ Format@@ ) throw@@ s java.lang.Exception { java.util.@@ Time@@ Z@@ on@@ e n@@ on@@ U@@ t@@ c@@ Z@@ on@@ e = java.util.@@ Time@@ Z@@ on@@ e.get@@ TimeZone@@ ("@@ A@@ m@@ er@@ ic@@ a@@ /@@ Lo@@ s@@ _@@ An@@ g@@ el@@ es@@ "); java.text.@@ Date@@ For@@ ma@@ t for@@ mat@@ ter = new java.text.@@ Sim@@ ple@@ Date@@ Format@@ (@@ round@@ T@@ ri@@ p@@ Format@@ , loc@@ ale@@ ); java.text.@@ Date@@ For@@ ma@@ t parse@@ r = new java.text.@@ Sim@@ ple@@ Date@@ Format@@ (@@ round@@ T@@ ri@@ p@@ Format@@ , loc@@ ale@@ ); for (java.lang.String time@@ Zone@@ Id : libcore.@@ java.text.@@ Sim@@ ple@@ Date@@ Format@@ Test.@@ UT@@ C@@ _@@ Z@@ ON@@ E_@@ ID@@ S@@ ) { java.util.@@ Time@@ Z@@ on@@ e time@@ Z@@ on@@ e = java.util.@@ Time@@ Z@@ on@@ e.get@@ TimeZone@@ (@@ time@@ Zone@@ Id@@ ); assert@@ Equal@@ s(@@ time@@ Zone@@ Id, time@@ Z@@ on@@ e.get@@ ID@@ ()); java.util.@@ D@@ ate date@@ To@@ For@@ ma@@ t = new java.util.@@ Date@@ (); for@@ mat@@ ter.@@ set@@ TimeZone@@ (@@ time@@ Zone@@ ); java.lang.String date@@ Time@@ Str@@ ing = for@@ mat@@ ter@@ .@@ for@@ mat@@ (@@ date@@ To@@ Format@@ ); par@@ ser.@@ set@@ TimeZone@@ (@@ n@@ on@@ U@@ t@@ c@@ ); java.util.@@ D@@ ate par@@ sed@@ D@@ ate = par@@ ser.@@ parse@@ (@@ date@@ Time@@ String@@ ); assert@@ Equal@@ s(@@ date@@ To@@ Format@@ , par@@ sed@@ Date@@ ); } }
public void st@@ op@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ (@@ int session@@ Handle@@ , android.os.@@ Mess@@ age result@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y = get@@ R@@ ad@@ io@@ Prox@@ y@@ (@@ result@@ ); if (@@ rad@@ io@@ Prox@@ y == null@@ ) { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ R@@ IL@@ J@@ _@@ LO@@ G_@@ TAG, "@@ R@@ ad@@ i@@ o Prox@@ y ob@@ ject is null@@ !@@ "); return@@ ; } android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 1.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y@@ 1@@ 1 = android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 1.@@ I@@ R@@ ad@@ io.@@ cast@@ From@@ (@@ rad@@ io@@ Prox@@ y@@ ); if (@@ rad@@ io@@ Prox@@ y@@ 1@@ 1 == null@@ ) { if (@@ result != null@@ ) { android.os.@@ As@@ ync@@ Result@@ .@@ for@@ Message@@ (@@ result@@ , null@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ Exception@@ .@@ f@@ rom@@ R@@ il@@ Errno@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ RE@@ Q@@ UE@@ ST_@@ NO@@ T_@@ S@@ U@@ P@@ P@@ O@@ RT@@ E@@ D@@ )); res@@ ult.@@ send@@ To@@ Target@@ (); } return@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Requ@@ est r@@ r = ob@@ t@@ ain@@ Request@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ _RE@@ Q@@ UE@@ ST_@@ S@@ TO@@ P@@ _@@ KE@@ E@@ P@@ AL@@ I@@ V@@ E, result@@ , m@@ R@@ IL@@ Default@@ W@@ or@@ k@@ Source@@ ); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ R@@ IL@@ J@@ _@@ LO@@ G@@ D@@ ) ri@@ l@@ j@@ Log@@ ((((@@ r@@ r.@@ ser@@ i@@ al@@ String@@ ()) + "@@ > ") + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ request@@ To@@ String(@@ r@@ r.@@ m@@ Request@@ )))); try { rad@@ io@@ Prox@@ y@@ 1@@ 1.@@ st@@ op@@ K@@ ee@@ p@@ al@@ i@@ ve@@ (@@ r@@ r.@@ m@@ Ser@@ i@@ al@@ , session@@ Handle@@ ); } catch (android.os.@@ Remote@@ Exception | java.lang.@@ Runtime@@ Exception e) { handle@@ R@@ ad@@ io@@ Prox@@ y@@ Exception@@ For@@ R@@ R@@ (@@ r@@ r@@ r@@ r@@ r@@ r@@ r@@ r@@ r@@ , "@@ st@@ op@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ ", e); } }
@java.lang.Override public com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ data@@ connection@@ .@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Statu@@ s create@@ From@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l source@@ ) { return new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ data@@ connection@@ .@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Statu@@ s(@@ source@@ .@@ read@@ Int@@ (), source@@ .@@ read@@ Int@@ (), source@@ .@@ read@@ Int@@ ()); }
private int check@@ Source@@ Addres@@ s() { for (@@ java.net.Inet@@ Address addres@@ s : m@@ N@@ a@@ i.@@ lin@@ k@@ Properties@@ .get@@ Address@@ es@@ ()) { if (@@ addres@@ s.@@ equal@@ s@@ (m@@ Pack@@ et@@ .@@ src@@ Address@@ )) { android.util.Log.d@@ (com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ TAG, "@@ N@@ o a match@@ ing addres@@ s to "); return S@@ U@@ C@@ CE@@ SS@@ ; } } return ER@@ RO@@ R@@ _@@ IN@@ V@@ AL@@ ID@@ _@@ IP@@ _@@ AD@@ D@@ RE@@ SS@@ ; }
public byte@@ [] get@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ () throw@@ s android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ In@@ valid@@ Pack@@ et@@ Exception { if ((@@ !@@ ((@@ src@@ Addres@@ s) instanceof java.net.Inet@@ 4@@ Address@@ )) || (!@@ ((@@ d@@ st@@ Addres@@ s) instanceof java.net.Inet@@ 4@@ Address@@ ))) { throw new android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ In@@ valid@@ Pack@@ et@@ Exception(@@ ER@@ RO@@ R@@ _@@ IN@@ V@@ AL@@ ID@@ _@@ IP@@ _@@ AD@@ D@@ RE@@ SS@@ ); } if ((@@ d@@ st@@ P@@ ort@@ ) != (@@ N@@ AT@@ T_@@ P@@ O@@ RT@@ )) { throw new android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ In@@ valid@@ Pack@@ et@@ Exception(@@ ER@@ RO@@ R@@ _@@ IN@@ V@@ AL@@ ID@@ _P@@ O@@ RT@@ ); } int l@@ eng@@ th = ((@@ android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ IP@@ V@@ 4@@ _@@ H@@ E@@ AD@@ ER_@@ L@@ EN@@ G@@ TH@@ ) + (android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ U@@ D@@ P@@ _@@ H@@ E@@ AD@@ ER_@@ L@@ EN@@ G@@ TH@@ )) + 1; java.nio.Byte@@ Buffer bu@@ f = java.nio.Byte@@ Buff@@ er.@@ al@@ loc@@ ate@@ (@@ length); bu@@ f.@@ or@@ der@@ (@@ java.nio.Byte@@ Or@@ d@@ er.@@ B@@ I@@ G_@@ END@@ I@@ AN@@ ); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (1@@ 7@@ 6@@ 4@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (@@ length@@ ))); bu@@ f.@@ put@@ Int@@ (@@ 0); bu@@ f.@@ put@@ ((@@ (@@ byte@@ ) (@@ 6@@ 4@@ ))); bu@@ f.@@ put@@ ((@@ (@@ byte@@ ) (@@ O@@ s@@ Constants.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ ))); int ip@@ Check@@ s@@ um@@ O@@ ff@@ set = bu@@ f.@@ position@@ (); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (0@@ ))); bu@@ f.@@ put@@ (@@ this@@ .@@ src@@ Addres@@ s.get@@ Address@@ ()); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (@@ this@@ .@@ src@@ P@@ ort@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (@@ this@@ .@@ d@@ st@@ P@@ ort@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (@@ l@@ eng@@ th - 2@@ 0@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (0@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ short@@ ) (0@@ ))); bu@@ f.@@ put@@ Short@@ ((@@ (@@ byte@@ ) (@@ 25@@ 5@@ ))); bu@@ f.@@ put@@ Short@@ (@@ ip@@ Check@@ s@@ um@@ Offset@@ , android.net.@@ util.@@ I@@ p@@ Utils.@@ ip@@ Check@@ s@@ um@@ (@@ bu@@ f@@ , 0@@ )); bu@@ f.@@ put@@ Short@@ (@@ u@@ d@@ p@@ Check@@ s@@ um@@ Offset@@ , android.net.@@ util.@@ I@@ p@@ Utils.@@ u@@ d@@ p@@ Check@@ s@@ um@@ (@@ bu@@ f@@ , 0, android.net.@@ util.@@ I@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data.@@ IP@@ V@@ 4@@ _@@ H@@ E@@ AD@@ ER_@@ L@@ EN@@ G@@ TH@@ )); return bu@@ f.@@ array@@ (); }
private int is@@ Valid@@ () { synchronized@@ (m@@ N@@ a@@ i@@ ) { int er@@ ror = check@@ Inter@@ val@@ (); if (@@ er@@ ror == (@@ S@@ U@@ C@@ CE@@ SS@@ )) er@@ ror = check@@ Network@@ Connec@@ ted@@ (); if (@@ er@@ ror == (@@ S@@ U@@ C@@ CE@@ SS@@ )) er@@ ror = check@@ Source@@ Addres@@ s(); return S@@ U@@ C@@ CE@@ S@@ ; } }
int start@@ W@@ if@@ i@@ IP@@ Pack@@ et@@ O@@ ff@@ load@@ (@@ int s@@ lo@@ t@@ , android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data pack@@ et@@ Data@@ , int int@@ er@@ val@@ Sec@@ ond@@ s) { byte@@ [] pack@@ et = null@@ ; byte@@ [] d@@ st@@ Ma@@ c = null@@ ; try { pack@@ et = pack@@ et@@ Data@@ .get@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ (); d@@ st@@ Ma@@ c = get@@ D@@ st@@ M@@ ac@@ For@@ K@@ ee@@ p@@ al@@ i@@ ve@@ (p@@ ack@@ et@@ Data@@ ); } catch (android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data e) { return e.@@ error@@ ; } int re@@ t = m@@ W@@ if@@ i@@ N@@ ativ@@ e.@@ start@@ S@@ end@@ ing@@ O@@ ff@@ load@@ ed@@ Pack@@ et@@ (s@@ lo@@ t@@ , d@@ st@@ M@@ ac@@ , pack@@ et@@ Data.@@ pro@@ to@@ co@@ l@@ , (@@ int@@ er@@ val@@ Sec@@ ond@@ s * 1@@ 00@@ 0@@ )); if (re@@ t != 0) { log@@ e@@ ((((@@ (("@@ start@@ W@@ if@@ i@@ IP@@ Pack@@ et@@ O@@ ff@@ load@@ (@@ " + s@@ lo@@ t@@ ) + "@@ : ") + int@@ er@@ val@@ Sec@@ ond@@ s) + " h@@ ardwar@@ e er@@ ror ") + r@@ et@@ )); return Connectivity@@ Manager.@@ Pack@@ et@@ K@@ ee@@ p@@ al@@ i@@ v@@ e.@@ ER@@ RO@@ R@@ _@@ H@@ AR@@ D@@ W@@ AR@@ E_@@ ER@@ RO@@ R@@ ; } else { return Connectivity@@ Manager.@@ Pack@@ et@@ K@@ ee@@ p@@ al@@ i@@ v@@ e.@@ S@@ U@@ C@@ CE@@ SS@@ ; } }
public java.lang.String toString@@ () { return new java.lang.String@@ Buffer@@ ("@@ [@@ ").@@ append(@@ " network@@ =@@ ").@@ append@@ (m@@ N@@ a@@ i.@@ network@@ ).@@ append(@@ " is@@ St@@ ar@@ ted@@ =@@ ").@@ append(@@ is@@ St@@ ar@@ ted@@ ).@@ append(@@ " m@@ Pack@@ et@@ .@@ src@@ P@@ ort@@ )).@@ append@@ ("@@ -@@ >@@ ").@@ append@@ (android.net.@@ util.@@ I@@ p@@ Utils.@@ add@@ ress@@ And@@ P@@ ort@@ To@@ String@@ (m@@ Pack@@ et@@ .@@ d@@ st@@ Addres@@ s, m@@ Pack@@ et@@ .@@ d@@ st@@ P@@ ort@@ )).@@ append(@@ " int@@ er@@ val@@ =@@ " + (m@@ Inter@@ val@@ ))@@ ).@@ append@@ ("@@ )@@ "); u@@ id@@ =@@ ").@@ append@@ (m@@ U@@ id@@ ).@@ append(@@ " p@@ id@@ =@@ ").@@ append@@ (m@@ P@@ id@@ ).@@ append(@@ " ] "); }
public void start@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ (com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i@@ , int int@@ er@@ val@@ Sec@@ ond@@ s, android.os.@@ Mess@@ eng@@ er mess@@ eng@@ er, android.os.@@ I@@ B@@ in@@ der b@@ in@@ der@@ , java.lang.String src@@ Add@@ r@@ String@@ , int src@@ P@@ ort@@ , java.lang.String d@@ st@@ Add@@ r@@ String@@ , int d@@ st@@ P@@ ort@@ ) { if (@@ n@@ a@@ i == null@@ ) { not@@ if@@ y@@ Mess@@ eng@@ er@@ (m@@ ess@@ eng@@ er, com.android.server.@@ connec@@ tivity.@@ NO@@ _@@ KE@@ E@@ P@@ AL@@ I@@ V@@ E, com.android.server.@@ connec@@ tivity.@@ ER@@ RO@@ R@@ _@@ IN@@ V@@ AL@@ ID@@ _N@@ E@@ T@@ W@@ OR@@ K@@ ); return@@ ; } java.net.Inet@@ Address src@@ Address@@ ; java.net.Inet@@ Address d@@ st@@ Address@@ ; try { android.util.Log.d@@ (com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ TAG, ((@@ ("@@ start@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ TAG, ((@@ ("@@ start@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er " + src@@ Add@@ r@@ String@@ ) + " d@@ st@@ Add@@ r@@ String@@ )); src@@ Address = android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s(@@ src@@ Add@@ r@@ String@@ ); d@@ st@@ Address = android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s(@@ d@@ st@@ Add@@ r@@ String@@ ); } catch (java.lang.@@ Illegal@@ Argument@@ Exception e) { android.util.Log.d@@ (com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ TAG, "@@ start@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ TAG, "@@ Start@@ ing par@@ se i@@ p addres@@ se@@ s not@@ if@@ y@@ Mess@@ eng@@ er@@ (m@@ ess@@ eng@@ er, com.android.server.@@ connec@@ tivity.@@ NO@@ _@@ KE@@ E@@ P@@ AL@@ I@@ V@@ E, com.android.server.@@ connec@@ tivity.@@ ER@@ RO@@ R@@ _@@ IN@@ V@@ AL@@ ID@@ _@@ IP@@ _@@ AD@@ D@@ RE@@ SS@@ ); return@@ ; } android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data pack@@ et@@ ; try { pack@@ et = new android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data@@ (s@@ rc@@ Addres@@ s, src@@ P@@ ort@@ , d@@ st@@ Addres@@ s, N@@ AT@@ T_@@ P@@ O@@ RT@@ ); } catch (android.net.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Pack@@ et@@ Data e) { not@@ if@@ y@@ Mess@@ eng@@ er, com.android.server.@@ connec@@ tivity.@@ NO@@ _@@ KE@@ E@@ P@@ AL@@ I@@ V@@ E, e.@@ error@@ ); return@@ ; } com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Info k@@ i = new com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Info@@ (m@@ ess@@ eng@@ er, b@@ in@@ der@@ , n@@ a@@ i@@ , int@@ er@@ val@@ Sec@@ ond@@ s); android.util.Log.d@@ (com.android.server.@@ connec@@ tivity.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ TAG, ("@@ start@@ N@@ att@@ K@@ ee@@ p@@ al@@ i@@ ve@@ : " + (@@ k@@ i.@@ toString@@ ()))); m@@ Connectivity@@ Service@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (@@ Network@@ A@@ g@@ ent.@@ C@@ M@@ D_@@ START@@ _P@@ AC@@ KE@@ T_@@ KE@@ E@@ P@@ AL@@ I@@ V@@ E, k@@ i@@ ).@@ send@@ To@@ Target@@ (); }
private int check@@ Network@@ Connec@@ ted@@ () { return m@@ Network@@ Connec@@ ted@@ ; }
public void start@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Response@@ (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ R@@ ad@@ io@@ Response@@ Info respon@@ se@@ Info@@ , android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 1.@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Statu@@ s k@@ ee@@ p@@ al@@ i@@ ve@@ Statu@@ s) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Requ@@ est r@@ r = m@@ R@@ i@@ l.@@ process@@ Response@@ (@@ respon@@ se@@ Info@@ ); if (@@ r@@ r == null@@ ) { return@@ ; } if ((@@ respon@@ se@@ Info.@@ error@@ ) == (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ R@@ ad@@ io@@ Error@@ .@@ N@@ ON@@ E@@ )) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ data@@ connection@@ .@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Statu@@ s re@@ t = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ data@@ connection@@ .@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Statu@@ s(@@ k@@ ee@@ p@@ al@@ i@@ ve@@ Statu@@ s.@@ session@@ Handle@@ , k@@ ee@@ p@@ al@@ i@@ ve@@ Statu@@ s.@@ code@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ ad@@ io@@ Respon@@ s@@ e.@@ send@@ Message@@ Response@@ (@@ r@@ r.@@ m@@ Result@@ , r@@ et@@ ); m@@ R@@ i@@ l.@@ process@@ Response@@ D@@ one@@ (@@ r@@ r@@ r@@ , respon@@ se@@ Info@@ , r@@ et@@ ); } else { } }
public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l@@ eng@@ , int flag@@ s) { try { android.system.@@ Str@@ ing.@@ write@@ In@@ t@@ (d@@ st@@ Addres@@ s); fail@@ (); } catch (java.io.IOException expected) { } try { get@@ Host@@ Address@@ ()); write@@ (d@@ st@@ Addres@@ s.get@@ Host@@ Address@@ ()); get@@ Host@@ Addres@@ s(); } final@@ l@@ y { write@@ In@@ t@@ (d@@ st@@ P@@ ort@@ ); } }
public void update@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ s@@ Inter@@ face c@@ i@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ S@@ lo@@ t@@ Statu@@ s is@@ s) { synchronized@@ (m@@ Lock) { mC@@ i = c@@ i@@ ; if ((@@ is@@ s.@@ s@@ lo@@ t@@ State@@ ) == (@@ I@@ cc@@ S@@ lo@@ t@@ Statu@@ s.@@ S@@ lo@@ t@@ State.@@ S@@ LO@@ T@@ STATE_@@ IN@@ AC@@ TI@@ V@@ E@@ )) { if (m@@ Ac@@ tive@@ ) { m@@ Ac@@ tiv@@ e = false@@ ; m@@ Phone@@ Id = null@@ ; on@@ R@@ ad@@ io@@ State@@ Un@@ ava@@ il@@ able@@ (); } parse@@ A@@ tr@@ (is@@ s.@@ at@@ r@@ ); mC@@ ard@@ State = is@@ s.@@ c@@ ard@@ State@@ ; m@@ I@@ cc@@ Id = is@@ s.@@ ic@@ c@@ id@@ ; } else if ((@@ !@@ (m@@ Ac@@ tive@@ )) && ((@@ is@@ s.@@ s@@ lo@@ t@@ State@@ ) == (@@ I@@ cc@@ S@@ lo@@ t@@ Statu@@ s.@@ S@@ lo@@ t@@ State.@@ S@@ LO@@ T@@ STATE_@@ AC@@ TI@@ V@@ E@@ ))) { m@@ Ac@@ tiv@@ e = true@@ ; } } }
public void on@@ R@@ ad@@ io@@ State@@ Un@@ ava@@ il@@ able@@ () { if ((m@@ U@@ ic@@ c@@ C@@ ard@@ ) != null@@ ) { m@@ U@@ ic@@ c@@ C@@ ard@@ .@@ dis@@ po@@ se@@ (); } m@@ U@@ ic@@ c@@ C@@ ar@@ d = null@@ ; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ b@@ roadcast@@ In@@ ternal@@ I@@ cc@@ State@@ Changed@@ Intent@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ UN@@ K@@ NO@@ W@@ N@@ , null@@ , m@@ Phone@@ Id@@ ); mC@@ ard@@ State = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ AB@@ S@@ EN@@ T@@ ; m@@ L@@ ast@@ R@@ ad@@ io@@ State = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ s@@ Interface@@ .@@ R@@ ad@@ io@@ State.@@ R@@ AD@@ IO@@ _@@ UN@@ AV@@ A@@ IL@@ AB@@ LE@@ ; }
@org.junit.Test public void test@@ Re@@ co@@ ver@@ From@@ Zip@@ C@@ or@@ r@@ u@@ ption@@ Str@@ ess@@ Test@@ () throw@@ s java.lang.Exception { java.lang.@@ Th@@ re@@ ad start@@ Service@@ s = new java.lang.@@ Thread@@ () { @java.lang.Override public void run() { start@@ Ser@@ vices@@ (); } }; start@@ Ser@@ vices@@ .@@ start@@ (); for (@@ int i = 0; i < 7@@ ; i++) { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (1@@ 00@@ 0); t@@ am@@ per@@ All@@ Ex@@ c@@ tr@@ ac@@ ted@@ Z@@ i@@ ps@@ (); } start@@ Ser@@ vices@@ .@@ j@@ o@@ in@@ (); try { wait@@ Ser@@ vices@@ Comp@@ let@@ i@@ on@@ (); } catch (java.util.@@ concurrent.@@ Time@@ out@@ Exception e) { } k@@ il@@ l@@ Ser@@ vices@@ (); check@@ Re@@ co@@ ver@@ (); }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ up@@ () throw@@ s java.lang.Exception { android.util.Log.@@ i@@ (com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ TAG, "@@ set@@ up@@ "); java.io.File app@@ li@@ cation@@ Data@@ Di@@ r = new java.io.File@@ (android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ ().get@@ Application@@ Info@@ ().@@ data@@ Dir@@ ); com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ clear@@ Dir@@ Content@@ (@@ app@@ li@@ cation@@ Data@@ Dir@@ ); target@@ Files@@ Di@@ r = android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ ().get@@ Files@@ Dir@@ (); android.util.Log.@@ i@@ (com.android.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ TAG, "@@ set@@ u@@ p do@@ ne@@ "); }
private java.lang.String get@@ Ser@@ vices@@ Comp@@ let@@ i@@ on@@ Statu@@ s() { for (@@ int i = com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ M@@ IN@@ _S@@ ER@@ V@@ IC@@ E@@ ; i <@@ = (com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ MA@@ X@@ _S@@ ER@@ V@@ IC@@ E); i++) { java.io.File result@@ File = new java.io.File@@ (@@ target@@ Files@@ Dir@@ , ("@@ Service@@ " + i@@ )); if (!(@@ result@@ File@@ .is@@ File@@ ())) { return ("@@ Service@@ " + i@@ ) + " ne@@ ve@@ r comp@@ let@@ ed.@@ "; } if ((@@ result@@ File@@ .@@ length@@ ()) != 8@@ ) { return ("@@ Service@@ " + i@@ ) + " w@@ a@@ s r@@ est@@ ar@@ ted@@ .@@ "; } } return com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ C@@ O@@ M@@ P@@ LE@@ TION@@ _S@@ U@@ C@@ CE@@ SS@@ ; }
private java.lang.String get@@ Service@@ Comp@@ let@@ i@@ on@@ Statu@@ s@@ (@@ int service@@ Id@@ ) { java.io.File result@@ File = new java.io.File@@ (@@ target@@ Files@@ Dir@@ , ("@@ Service@@ " + service@@ Id@@ )); if (!(@@ result@@ File@@ .is@@ File@@ ())) { return ("@@ Service@@ " + service@@ Id@@ ) + " ne@@ ve@@ r comp@@ let@@ ed.@@ "; } if ((@@ result@@ File@@ .@@ length@@ ()) != 8@@ ) { return ("@@ Service@@ " + service@@ Id@@ ) + " w@@ a@@ s r@@ est@@ ar@@ ted@@ .@@ "; } return com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ Ser@@ vices@@ Tests.@@ C@@ O@@ M@@ P@@ LE@@ TION@@ _S@@ U@@ C@@ CE@@ SS@@ ; }
private java.io.File get@@ Sec@@ ond@@ ary@@ Folder@@ () { java.io.File di@@ r = new java.io.File@@ (@@ new java.io.File@@ (android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ ().get@@ Application@@ Info@@ ().@@ data@@ Dir@@ , "@@ code@@ _@@ c@@ ach@@ e@@ "), "@@ sec@@ ond@@ ary@@ -@@ dex@@ es@@ "); junit.framework.@@ Asser@@ t@@ .@@ assert@@ True@@ (d@@ ir.@@ is@@ Directory@@ ()); return d@@ ir@@ ; }
private void t@@ am@@ per@@ All@@ Ex@@ c@@ tr@@ ac@@ ted@@ Z@@ i@@ ps@@ () throw@@ s java.io.IOException { android.util.Log.@@ i@@ (com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ TAG, "@@ T@@ amp@@ er ex@@ tr@@ ac@@ ted z@@ i@@ p file@@ s b@@ y o@@ ver@@ wri@@ t@@ ing al@@ l cont@@ ent b@@ y
@org.junit.Test public void test@@ Re@@ co@@ ver@@ From@@ Zip@@ C@@ or@@ r@@ u@@ ption@@ () throw@@ s java.lang.Exception { int service@@ Id = 1; init@@ Ser@@ vices@@ W@@ or@@ k@@ Files@@ (); start@@ Service@@ (@@ service@@ Id@@ ); wait@@ Ser@@ vices@@ Comp@@ let@@ i@@ on@@ (@@ service@@ Id@@ ); t@@ am@@ per@@ All@@ Ex@@ c@@ tr@@ ac@@ ted@@ Z@@ i@@ ps@@ (); k@@ il@@ l@@ Ser@@ vices@@ (); check@@ Re@@ co@@ ver@@ (); }
private void t@@ am@@ per@@ All@@ O@@ dex@@ () throw@@ s java.io.IOException { android.util.Log.@@ i@@ (com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ TAG, ("@@ T@@ amp@@ er ex@@ tr@@ ac@@ ted z@@ i@@ p file@@ s b@@ y o@@ ver@@ wri@@ t@@ ing al@@ l cont@@ ent bu@@ t the c@@ en@@ tr@@ al di@@ re@@ ctory@@ " + " b@@ y \@@ '@@ \@@ \@@ '@@ s.@@ ")); byte@@ [] z@@ er@@ o@@ s = new byte@@ [@@ 4 * 10@@ 24@@ ]; int s@@ av@@ ed@@ Size@@ For@@ O@@ dex@@ He@@ ad@@ er = 8@@ 0; for (@@ java.io.File o@@ dex : get@@ Sec@@ ond@@ ary@@ Folder@@ ().@@ list@@ Files@@ (@@ new com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ Ext@@ ension@@ Filter@@ ("@@ .@@ dex@@ "@@ ))) { long file@@ L@@ eng@@ th = o@@ dex.@@ length@@ (); junit.framework.@@ Asser@@ t@@ .@@ assert@@ True@@ ((@@ file@@ L@@ eng@@ th > ((@@ z@@ er@@ os.@@ length) + s@@ av@@ ed@@ Size@@ For@@ O@@ dex@@ He@@ ader@@ ))); o@@ dex.@@ set@@ Wri@@ t@@ able@@ (@@ true@@ ); java.io.@@ R@@ an@@ do@@ m@@ Access@@ File ra@@ f = new java.io.@@ R@@ an@@ do@@ m@@ Access@@ File@@ (@@ o@@ dex@@ , "@@ r@@ w@@ "); try { ra@@ f.@@ se@@ e@@ k@@ (s@@ av@@ ed@@ Size@@ For@@ O@@ dex@@ He@@ ader@@ ); ra@@ f.@@ write@@ (@@ z@@ er@@ o@@ s, 0, z@@ er@@ os.@@ length); } final@@ l@@ y { ra@@ f.@@ close(); } }
@org.junit.Test public void test@@ Re@@ co@@ ver@@ From@@ Dex@@ C@@ or@@ r@@ u@@ ption@@ Str@@ ess@@ Test@@ () throw@@ s java.lang.Exception { java.lang.@@ Th@@ re@@ ad start@@ Service@@ s = new java.lang.@@ Thread@@ () { @java.lang.Override public void run() { start@@ Ser@@ vices@@ (); } }; start@@ Ser@@ vices@@ .@@ start@@ (); for (@@ int i = 0; i < 7@@ ; i++) { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (1@@ 00@@ 0); t@@ am@@ per@@ All@@ O@@ dex@@ (); } start@@ Ser@@ vices@@ .@@ j@@ o@@ in@@ (); try { wait@@ Ser@@ vices@@ Comp@@ let@@ i@@ on@@ (); } catch (java.util.@@ concurrent.@@ Time@@ out@@ Exception e) { } k@@ il@@ l@@ Ser@@ vices@@ (); check@@ Re@@ co@@ ver@@ (); }
private void check@@ Re@@ co@@ ver@@ () throw@@ s java.util.@@ concurrent.@@ Time@@ out@@ Exception { int service@@ Id = 1; init@@ Ser@@ vices@@ W@@ or@@ k@@ Files@@ (); start@@ Service@@ (@@ service@@ Id@@ ); wait@@ Ser@@ vices@@ Comp@@ let@@ i@@ on@@ (@@ service@@ Id@@ ); java.lang.String comp@@ let@@ i@@ on@@ Statu@@ s = get@@ Service@@ Comp@@ let@@ i@@ on@@ Statu@@ s(@@ service@@ Id@@ ); if (@@ comp@@ let@@ i@@ on@@ Statu@@ s != (com.android.@@ framework.@@ m@@ ult@@ id@@ ex@@ le@@ g@@ ac@@ y@@ test@@ ser@@ vices@@ .@@ test@@ 2.@@ Ser@@ vices@@ Tests.@@ C@@ O@@ M@@ P@@ LE@@ TION@@ _S@@ U@@ C@@ CE@@ SS@@ )) { junit.framework.Assert.@@ fail@@ (@@ comp@@ let@@ i@@ on@@ Statu@@ s); } }
public void open@@ (java.lang.String clo@@ ser@@ ) { if (c@@ lo@@ se@@ r == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ close@@ r == null@@ "); } if (!(@@ d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ en@@ able@@ d@@ )) { clo@@ ser@@ Name@@ Or@@ Allocation@@ Info = clo@@ ser@@ ; return@@ ; } java.lang.String mess@@ age = ("@@ Un@@ able ter@@ min@@ ation m@@ ethod '@@ " + clo@@ ser@@ ) + "@@ ' not cal@@ le@@ d st@@ ac@@ k = new java.lang.@@ Throw@@ able@@ (m@@ ess@@ age@@ ); clo@@ ser@@ Name@@ Or@@ Allocation@@ Info = st@@ ack@@ ; if ((@@ d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ current@@ Tr@@ ack@@ er@@ ) != null@@ ) { d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ current@@ Tr@@ ack@@ er.@@ open@@ (@@ st@@ ack@@ ); } }
public static void set@@ Re@@ por@@ ter@@ (d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ Re@@ por@@ ter re@@ por@@ ter@@ ) { if (re@@ por@@ ter == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ local@@ por@@ ter == null@@ "); } re@@ por@@ ter@@ ; }
public void close@@ (@@ boolean in@@ iti@@ aliz@@ ed@@ ) { if (((@@ d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ current@@ Tr@@ ack@@ er@@ ) != null@@ ) && ((@@ clo@@ ser@@ Name@@ Or@@ Allocation@@ Info@@ ) instanceof java.lang.@@ Throw@@ able@@ ) { d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ current@@ Tr@@ ack@@ er.@@ close@@ (in@@ ); } clo@@ ser@@ Name@@ Or@@ Allocation@@ Info@@ ; }
public void war@@ n@@ I@@ f@@ Open@@ () { if ((@@ clo@@ ser@@ Name@@ Or@@ Allocation@@ Info@@ ) instanceof java.lang.String@@ ) { mess@@ age = ("@@ war@@ n@@ I@@ f@@ Open@@ : " + "@@ : ") + (@@ java.lang.String@@ ) (c@@ lo@@ ser@@ Name@@ Or@@ Allocation@@ Info@@ ))) + " st@@ ac@@ k = d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ UN@@ K@@ NO@@ W@@ N@@ _@@ AL@@ LO@@ C@@ AT@@ ION@@ ; } else { mess@@ age = res@@ our@@ ce w@@ a@@ s ac@@ qu@@ i@@ re@@ d at att@@ ach@@ ed st@@ ac@@ k tr@@ ac@@ e bu@@ t ne@@ ve@@ r re@@ le@@ as@@ ed@@ . st@@ ac@@ k = ((@@ java.lang.@@ Throw@@ able@@ ) (c@@ lo@@ ser@@ Name@@ Or@@ Allocation@@ Info@@ )); } mess@@ age +@@ = java.io.@@ Clo@@ se@@ able for in@@ for@@ m@@ ation on a@@ void@@ ing res@@ our@@ ce le@@ ak@@ s.@@ "; d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ re@@ por@@ ter@@ .@@ re@@ port@@ (m@@ ess@@ age@@ , st@@ ack@@ ); } }
public static boolean is@@ Enabled@@ () { return d@@ alvi@@ k.@@ system.@@ Clo@@ se@@ G@@ u@@ ard@@ .@@ en@@ able@@ d@@ ; }
public static void set@@ Enabled@@ (@@ boolean en@@ abled@@ ) { en@@ able@@ d@@ d = en@@ abled@@ ; }
@org.junit.Test public void test@@ Message@@ From@@ Native@@ _@@ device@@ Dis@@ connec@@ ted@@ Un@@ k@@ no@@ wn@@ () { m@@ Current@@ De@@ vice = get@@ Test@@ Device@@ (@@ 0); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent connect@@ ing@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ Current@@ Device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ connect@@ ing@@ Event@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ s@@ Object@@ s@@ Factory@@ ); }
void message@@ From@@ Native@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent st@@ ack@@ Event@@ ) { java.util.@@ Object@@ s.@@ requ@@ i@@ re@@ Non@@ Null@@ (@@ st@@ ack@@ Ev@@ ent.@@ device@@ , ("@@ N@@ o sho@@ ul@@ d ne@@ ve@@ r b@@ e null@@ , event@@ : " + st@@ ack@@ Event@@ )); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ st@@ ack@@ Ev@@ ent.@@ device@@ ); if (@@ state@@ M@@ ach@@ in@@ e == null@@ ) { if ((@@ st@@ ack@@ Ev@@ ent.@@ typ@@ e) != (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ N@@ EC@@ TE@@ D@@ : m@@ ach@@ in@@ e not fo@@ un@@ d for st@@ ac@@ k event@@ : " + st@@ ack@@ Event@@ )); } switch (@@ st@@ ack@@ Ev@@ ent.@@ value@@ Int@@ ) { case He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D : case He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ IN@@ G : { state@@ M@@ ach@@ in@@ e = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Factory@@ .get@@ Instance@@ ().@@ m@@ ake@@ State@@ M@@ ach@@ ine@@ (@@ st@@ ack@@ Ev@@ ent.@@ device@@ , m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .get@@ L@@ oo@@ per@@ (), this@@ , m@@ Native@@ Interface@@ , m@@ System@@ Interface@@ ); m@@ State@@ M@@ ach@@ in@@ es.@@ put@@ (@@ st@@ ack@@ Ev@@ ent.@@ device@@ , state@@ M@@ ach@@ ine@@ ); break@@ ; } default : android.util.@@ Log@@ .@@ check@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, (("@@ N@@ o for un@@ k@@ no@@ w@@ n device@@ , ign@@ or@@ e connec@@ tion event@@ s@@ " + "@@ th@@ an connect@@ ing@@ /@@ connec@@ ted@@ , " + st@@ ack@@ Event@@ )); return@@ ; } } state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , st@@ ack@@ Event@@ ); }
@org.junit.Test public void test@@ Message@@ From@@ Native@@ _@@ device@@ Connec@@ ted@@ () { m@@ Current@@ De@@ vice = get@@ Test@@ Device@@ (@@ 0); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent connec@@ ted@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ Current@@ Device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ connec@@ ted@@ Event@@ ); ve@@ r@@ if@@ y@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ s@@ Object@@ s@@ Factory@@ ).@@ m@@ ake@@ State@@ M@@ ach@@ ine@@ (m@@ Current@@ Device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ L@@ oo@@ per@@ (), m@@ He@@ ad@@ set@@ Service@@ , m@@ Native@@ Interface@@ ); ve@@ r@@ if@@ y@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )).@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , connec@@ ted@@ Event@@ ); when@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )@@ .get@@ Device@@ ()).@@ thenReturn@@ (m@@ Current@@ Device@@ ); when@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )@@ .get@@ Connection@@ State@@ ()).@@ thenReturn@@ (@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connection@@ State@@ (m@@ Current@@ Device@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ java.util.Collection@@ s.@@ sing@@ let@@ on@@ List@@ (m@@ Current@@ Device@@ ), m@@ He@@ ad@@ set@@ Service@@ .get@@ Connec@@ ted@@ De@@ vices@@ ()); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent dis@@ connect@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ Current@@ Device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (d@@ is@@ connect@@ Event@@ ); ve@@ r@@ if@@ y@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )).@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , dis@@ connect@@ Event@@ ); when@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )@@ .get@@ Connection@@ State@@ ()).@@ thenReturn@@ (@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connection@@ State@@ (m@@ Current@@ Device@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ java.util.Collection@@ s.@@ E@@ M@@ P@@ TY@@ _@@ L@@ IS@@ T@@ , m@@ He@@ ad@@ set@@ He@@ ad@@ set@@ Service@@ .get@@ Connec@@ ted@@ De@@ vices@@ ()); }
@org.junit.Test public void test@@ Message@@ From@@ Native@@ _@@ device@@ Con@@ nect@@ ing@@ Un@@ k@@ no@@ wn@@ () { m@@ Current@@ De@@ vice = get@@ Test@@ Device@@ (@@ 0); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent connect@@ ing@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , m@@ Current@@ Device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ connect@@ ing@@ Event@@ ); ve@@ r@@ if@@ y@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ s@@ Object@@ s@@ Factory@@ ).@@ m@@ ake@@ State@@ M@@ ach@@ ine@@ (m@@ Current@@ Device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ L@@ oo@@ per@@ (), m@@ He@@ ad@@ set@@ Service@@ , m@@ Native@@ Interface@@ , m@@ System@@ Interface@@ ); ve@@ r@@ if@@ y@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )).@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , connect@@ ing@@ Event@@ ); }
@java.lang.Override public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { m@@ J@@ ob@@ S@@ ch@@ ed@@ ul@@ er.@@ can@@ cel@@ (android.@@ j@@ ob@@ s@@ ch@@ ed@@ ul@@ er.@@ cts.@@ Connectivity@@ Con@@ str@@ a@@ int@@ Test.@@ C@@ ON@@ N@@ EC@@ TI@@ V@@ I@@ TY@@ _@@ J@@ O@@ B@@ _@@ ID@@ ); if ((m@@ W@@ if@@ i@@ Manager.@@ is@@ W@@ if@@ i@@ Enabled@@ ()) == (m@@ In@@ iti@@ al@@ W@@ i@@ Fi@@ State@@ )) { return@@ ; } android.net.@@ Network@@ Info.@@ State expected@@ State = (m@@ In@@ iti@@ al@@ W@@ i@@ Fi@@ State@@ ) ? Network@@ Info.@@ State.@@ C@@ ON@@ N@@ EC@@ TE@@ D : Network@@ Info.@@ State.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; android.@@ j@@ ob@@ s@@ ch@@ ed@@ ul@@ er.@@ cts.@@ Connectivity@@ Con@@ str@@ a@@ int@@ Test.@@ Connectivity@@ Action@@ Recei@@ ve@@ r re@@ cei@@ ve@@ r = new android.@@ j@@ ob@@ s@@ ch@@ ed@@ ul@@ er.@@ cts.@@ Connectivity@@ Con@@ str@@ a@@ int@@ Test.@@ Connectivity@@ Action@@ Recei@@ ver@@ (android.net.@@ Connectivity@@ Manager.@@ TYP@@ E_@@ WI@@ FI@@ , expected@@ State@@ ); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Connectivity@@ Manager.@@ C@@ ON@@ N@@ EC@@ TI@@ V@@ I@@ TY@@ _@@ AC@@ TION@@ ); m@@ Context.@@ register@@ Recei@@ ver@@ (re@@ cei@@ ver@@ , fil@@ ter@@ ); assert@@ True@@ (m@@ W@@ if@@ i@@ Manager.@@ set@@ W@@ if@@ i@@ Enabled@@ (m@@ In@@ iti@@ al@@ W@@ i@@ Fi@@ State@@ )); re@@ cei@@ ver.@@ wait@@ For@@ State@@ Chang@@ e@@ (); assert@@ True@@ ("@@ Faile@@ d to r@@ est@@ or@@ e pre@@ vi@@ ou@@ s W@@ i@@ F@@ i st@@ ate ((m@@ W@@ if@@ i@@ Manager.@@ is@@ W@@ if@@ i@@ Enabled@@ ()) == (m@@ In@@ iti@@ al@@ W@@ i@@ Fi@@ State@@ ))); m@@ Context.@@ un@@ register@@ Recei@@ ver@@ (re@@ cei@@ ver@@ ); if (m@@ In@@ iti@@ al@@ Res@@ tri@@ ct@@ B@@ ack@@ g@@ round@@ ) { com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ util.@@ System@@ Util.@@ run@@ Sh@@ ell@@ Command@@ (get@@ In@@ strument@@ ation@@ (), android.@@ j@@ ob@@ s@@ ch@@ ed@@ ul@@ er.@@ cts.@@ Connectivity@@ Con@@ str@@ a@@ int@@ Test.@@ RE@@ S@@ TR@@ IC@@ T_@@ B@@ AC@@ K@@ G@@ RO@@ UN@@ D_@@ ON@@ _C@@ M@@ D@@ ); } }
@java.lang.Override public void set@@ up@@ Data@@ Call@@ (@@ int rad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ , android.@@ telephony.@@ data@@ .@@ Data@@ Pro@@ fi@@ le data@@ Pro@@ file@@ , boolean is@@ R@@ o@@ am@@ ing@@ , boolean al@@ low@@ R@@ o@@ am@@ ing@@ , int re@@ as@@ on@@ , android.net.@@ Lin@@ k@@ Proper@@ ti@@ es lin@@ k@@ Properties@@ , android.os.@@ Mess@@ age result@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ test.@@ Sim@@ ul@@ ated@@ Command@@ s@@ V@@ er@@ if@@ i@@ er.get@@ Instance@@ ().@@ set@@ up@@ Data@@ Call@@ (@@ rad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ , data@@ Pro@@ file@@ , is@@ R@@ o@@ am@@ ing@@ , al@@ low@@ R@@ o@@ am@@ ing@@ , re@@ as@@ on@@ , lin@@ k@@ Proper@@ ti@@ es@@ , result@@ ); if ((m@@ D@@ c@@ Response@@ ) == null@@ ) { try { m@@ D@@ c@@ Respon@@ se = new android.@@ telephony.@@ data@@ .@@ Data@@ Call@@ Response@@ (@@ 0, (-1@@ ), 1, 2, "@@ IP@@ ", "@@ r@@ m@@ net@@ _@@ data@@ 7@@ ", java.util.Arrays.@@ as@@ List@@ (@@ new android.net.@@ Lin@@ k@@ Addres@@ s("@@ 1@@ 2.@@ 3@@ 4@@ .@@ 5@@ 6@@ .@@ 7@@ 8@@ /@@ 32@@ "@@ )), java.util.Arrays.@@ as@@ List@@ (android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s("@@ 9@@ 8@@ .@@ 7@@ 6@@ .@@ 5@@ 4@@ .@@ 32@@ "@@ )), java.util.Arrays.@@ as@@ List@@ (android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s("@@ 1@@ 1.@@ 2@@ 2.@@ 3@@ 3@@ 3@@ .@@ 4@@ 4@@ "@@ )), null@@ , 1@@ 4@@ 4@@ 0); } catch (java.lang.Exception e) { } } if (m@@ D@@ c@@ Su@@ c@@ ces@@ s) { result@@ Su@@ c@@ ces@@ s(@@ result@@ , m@@ D@@ c@@ Response@@ ); } else { result@@ Fail@@ (@@ result@@ , m@@ D@@ c@@ Response@@ , new java.lang.@@ RuntimeException@@ ("@@ No@@ t dat@@ a cal@@ l fa@@ ile@@ d@@ !@@ "); } }
public void write@@ R@@ il@@ De@@ ac@@ tiv@@ ate@@ Data@@ Call@@ (@@ int phon@@ e@@ Id, int ri@@ l@@ Ser@@ i@@ al@@ , int c@@ id, int re@@ as@@ on@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ n@@ an@@ o.@@ Telephony@@ Pro@@ to.@@ Telephony@@ Ev@@ ent.@@ R@@ il@@ De@@ ac@@ tiv@@ ate@@ Data@@ Cal@@ l de@@ ac@@ tiv@@ ate@@ Data@@ Cal@@ l = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ n@@ an@@ o.@@ Telephony@@ Pro@@ to.@@ Telephony@@ Ev@@ ent.@@ R@@ il@@ De@@ ac@@ tiv@@ ate@@ Data@@ Call@@ (); de@@ ac@@ tiv@@ ate@@ Data@@ Cal@@ l.@@ c@@ id = c@@ id@@ ; switch (re@@ as@@ on@@ ) { case android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ RE@@ Q@@ UE@@ ST_@@ RE@@ A@@ S@@ ON@@ _N@@ OR@@ MA@@ L : de@@ ac@@ tiv@@ ate@@ Data@@ Cal@@ l.@@ re@@ as@@ on = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ n@@ an@@ o.@@ Telephony@@ Pro@@ to.@@ Telephony@@ Ev@@ ent.@@ R@@ il@@ De@@ ac@@ tiv@@ ate@@ Data@@ Cal@@ l.@@ De@@ ac@@ tiv@@ ate@@ Re@@ as@@ on@@ .@@ DE@@ AC@@ TI@@ V@@ AT@@ E_@@ RE@@ A@@ S@@ ON@@ _N@@ ON@@ E@@ ; break@@ ; case android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ RE@@ Q@@ UE@@ ST_@@ RE@@ A@@ S@@ ON@@ _S@@ H@@ UT@@ D@@ O@@ W@@ N : de@@ ac@@ tiv@@ ate@@ Data@@ Cal@@ l.@@ re@@ as@@ on = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ n@@ an@@ o.@@ Telephony@@ Pro@@ to.@@ Telephony@@ Ev@@ ent.@@ R@@ il@@ De@@ ac@@ tiv@@ ate@@ Data@@ Cal@@ l.@@ De@@ ac@@ tiv@@ ate@@ Re@@ as@@ on@@ .@@ DE@@ AC@@ TI@@ V@@ AT@@ E_@@ RE@@ A@@ S@@ ON@@ _@@ R@@ AD@@ IO@@ _@@ O@@ F@@ ; break@@ ; case android.@@ telephony.@@ data@@ .@@ Data@@ Service.@@ RE@@ Q@@ UE@@ ST_@@ RE@@ A@@ S@@ ON@@ _@@ H@@ AN@@ D@@ O@@ V@@ E@@ R : } de@@ ac@@ tiv@@ ate@@ Data@@ Cal@@ l.@@ re@@ as@@ on = re@@ as@@ on + 1; add@@ Telephony@@ Event@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ m@@ et@@ ri@@ c@@ s.@@ Telephony@@ Event@@ Build@@ er(@@ phon@@ e@@ Id@@ ).set@@ De@@ ac@@ tiv@@ ate@@ Data@@ Call@@ (@@ de@@ ac@@ tiv@@ ate@@ Data@@ Call@@ ).@@ build@@ ()); }
void set@@ up@@ Data@@ Call@@ (@@ int rad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ , android.@@ telephony.@@ data@@ .@@ Data@@ Pro@@ fi@@ le data@@ Pro@@ file@@ , boolean is@@ R@@ o@@ am@@ ing@@ , boolean al@@ low@@ R@@ o@@ am@@ ing@@ , int re@@ as@@ on@@ , android.net.@@ Lin@@ k@@ Proper@@ ti@@ es lin@@ k@@ Properties@@ , android.os.@@ Mess@@ age result@@ );
@java.lang.Override protected boolean is@@ G@@ s@@ mC@@ d@@ ma@@ Connection@@ () { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e phon@@ e = get@@ Phone@@ (); if (@@ phon@@ e != null@@ ) { switch (@@ phon@@ e.get@@ Phone@@ Type@@ ()) { case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Phone@@ Constants.@@ P@@ H@@ ON@@ E_@@ TYP@@ E_@@ G@@ S@@ M : case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Phone@@ Constants.@@ P@@ H@@ ON@@ E_@@ TYP@@ E_@@ C@@ D@@ M@@ A : case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Phone@@ Constants.@@ P@@ H@@ ON@@ E_@@ TYP@@ E_@@ C@@ D@@ MA@@ _@@ L@@ T@@ E : return true@@ ; default : return false@@ ; } } return false@@ ; }
@java.lang.Override public void on@@ Res@@ um@@ e@@ () { super@@ .@@ on@@ Res@@ um@@ e@@ (); if (m@@ Fi@@ rst@@ Res@@ um@@ e) { if ((m@@ I@@ c@@ ic@@ le@@ ) == null@@ ) { if (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ D@@ B@@ G) android.util.Log.d@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ LO@@ G_@@ TAG, "@@ st@@ ar@@ t to in@@ i@@ t "); res@@ et@@ P@@ w@@ Chang@@ e@@ State@@ (); m@@ Pre@@ feren@@ ces@@ .get@@ (m@@ In@@ it@@ Index@@ ).@@ init@@ (@@ this@@ , false@@ , m@@ Phone@@ ); } else { if (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ D@@ B@@ G) android.util.Log.d@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ LO@@ G_@@ TAG, "@@ r@@ est@@ or@@ e st@@ or@@ ed st@@ at@@ es@@ "); m@@ In@@ it@@ In@@ dex = m@@ Pre@@ feren@@ ces@@ .@@ size@@ (); for (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ feren@@ ce pre@@ f : m@@ Pre@@ feren@@ ces@@ ) { android.os.@@ Bund@@ le b@@ und@@ le = m@@ I@@ c@@ ic@@ le@@ .get@@ Par@@ cel@@ able@@ (p@@ ref@@ .get@@ Key@@ ()); pre@@ f.@@ handle@@ Call@@ B@@ ar@@ r@@ ing@@ Result@@ (b@@ und@@ le@@ .get@@ Boolean@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ KE@@ Y_@@ STAT@@ US@@ )); pre@@ f.@@ init@@ (@@ this@@ , true@@ , m@@ Phone@@ ); } m@@ P@@ w@@ Chang@@ e@@ State = m@@ I@@ c@@ ic@@ le@@ .get@@ Int@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ P@@ W@@ _C@@ H@@ AN@@ G@@ E_@@ STATE_@@ KE@@ Y@@ ); m@@ O@@ l@@ d@@ P@@ ass@@ wor@@ d = m@@ I@@ c@@ ic@@ le@@ .get@@ String@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ O@@ L@@ D_@@ P@@ W@@ _@@ KE@@ Y@@ ); m@@ New@@ P@@ ass@@ wor@@ d = m@@ I@@ c@@ ic@@ le@@ .get@@ String@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ N@@ E@@ W@@ _P@@ W@@ _@@ KE@@ Y@@ ); m@@ B@@ utton@@ Chang@@ e@@ P@@ W@@ .set@@ Di@@ alo@@ g@@ Message@@ (m@@ I@@ c@@ ic@@ le@@ .get@@ String@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ DI@@ A@@ LO@@ G@@ _M@@ E@@ SS@@ A@@ G@@ E_@@ KE@@ Y@@ )); m@@ B@@ utton@@ Chang@@ e@@ P@@ W@@ .set@@ Text@@ (m@@ I@@ c@@ ic@@ le@@ .get@@ String@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ DI@@ A@@ LO@@ G@@ _P@@ W@@ _@@ EN@@ TR@@ Y_@@ KE@@ Y@@ )); } m@@ Fi@@ rst@@ Res@@ um@@ e = false@@ ; m@@ I@@ c@@ ic@@ le = null@@ ; } }
private boolean valid@@ ate@@ P@@ ass@@ wor@@ d@@ (java.lang.String p@@ ass@@ wor@@ d@@ ) { if ((@@ p@@ ass@@ wor@@ d == null@@ ) || ((@@ p@@ ass@@ wor@@ d.@@ length@@ ()) != (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ P@@ W@@ _@@ L@@ EN@@ G@@ TH@@ ))) { return false@@ ; } else { return true@@ ; } }
@java.lang.Override protected void on@@ Pre@@ par@@ e@@ Di@@ alo@@ g@@ Builder@@ (android.@@ app.@@ Al@@ er@@ t@@ Di@@ alo@@ g.@@ Builder build@@ er@@ ) { builder.@@ set@@ Po@@ si@@ tive@@ B@@ utton@@ (@@ null@@ , null@@ ); if (is@@ Ac@@ tiv@@ ated@@ ) { builder.@@ set@@ N@@ e@@ u@@ tr@@ al@@ B@@ utton@@ (m@@ Dis@@ able@@ Text@@ , this@@ ); } else { builder.@@ set@@ N@@ e@@ u@@ tr@@ al@@ B@@ utton@@ (m@@ En@@ able@@ Text@@ , this@@ ); } }
public void set@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ (java.lang.String fa@@ c@@ ili@@ ty@@ , boolean lock@@ State@@ , java.lang.String p@@ ass@@ wor@@ d@@ , int service@@ Class@@ , android.os.@@ Mess@@ age on@@ Comp@@ let@@ e) { if (is@@ Phone@@ Type@@ G@@ s@@ m@@ ()) { mC@@ i.@@ set@@ F@@ ac@@ ili@@ ty@@ Lock@@ (@@ fa@@ c@@ ili@@ ty@@ , lock@@ State@@ , p@@ ass@@ wor@@ d@@ , service@@ Class@@ , on@@ Comp@@ let@@ e); } else { log@@ e@@ ("@@ set@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ : not pos@@ si@@ b@@ le in C@@ D@@ MA@@ "); } }
public void get@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ (java.lang.String fa@@ c@@ ili@@ ty@@ , java.lang.String p@@ ass@@ wor@@ d@@ , int service@@ Class@@ , android.os.@@ Mess@@ age on@@ Comp@@ let@@ e) { if (is@@ Phone@@ Type@@ G@@ s@@ m@@ ()) { mC@@ i.@@ qu@@ er@@ y@@ F@@ ac@@ ili@@ ty@@ Lock@@ (@@ fa@@ c@@ ili@@ ty@@ , p@@ ass@@ wor@@ d@@ , service@@ Class@@ , on@@ Comp@@ let@@ e); } else { log@@ e@@ ("@@ get@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ : not pos@@ si@@ b@@ le in C@@ D@@ MA@@ "); } }
@java.lang.Override protected void on@@ Di@@ alo@@ g@@ Clo@@ sed@@ (@@ boolean po@@ si@@ tive@@ Result@@ ) { super@@ .@@ on@@ Di@@ alo@@ g@@ Clo@@ sed@@ (@@ po@@ si@@ tive@@ Result@@ ); if (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ D@@ B@@ G) android.util.Log.d@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ LO@@ G_@@ TAG, ((@@ ("@@ m@@ B@@ utton@@ C@@ li@@ ck@@ ed@@ =@@ " + (m@@ B@@ utton@@ C@@ li@@ ck@@ ed@@ )) + ", po@@ si@@ tive@@ Result@@ =@@ ") + po@@ si@@ tive@@ Result@@ )); if (@@ (@@ this@@ .@@ m@@ B@@ utton@@ C@@ li@@ ck@@ ed@@ ) != (android.@@ content.@@ Di@@ alo@@ g@@ Interface@@ .@@ B@@ UT@@ T@@ ON@@ _N@@ E@@ G@@ AT@@ I@@ V@@ E@@ )) { m@@ P@@ ass@@ wor@@ d = get@@ E@@ d@@ it@@ Text@@ ().get@@ Text@@ ().@@ toString@@ (); if ((@@ (m@@ P@@ ass@@ wor@@ d@@ ) == null@@ ) || ((m@@ P@@ ass@@ wor@@ d.@@ length@@ ()) != (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ P@@ W@@ _@@ L@@ EN@@ G@@ TH@@ ))) { android.@@ widget@@ .@@ To@@ ast.@@ m@@ ake@@ Text@@ (m@@ Context@@ , m@@ Contex@@ t.get@@ String(@@ R.@@ str@@ ing.@@ call@@ _@@ b@@ ar@@ r@@ ing@@ _@@ ri@@ g@@ h@@ t@@ _@@ p@@ w@@ d@@ _@@ n@@ umber@@ ), To@@ ast.@@ L@@ EN@@ G@@ TH@@ _S@@ H@@ O@@ RT@@ ).@@ sho@@ w@@ (); return@@ ; } if (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ D@@ B@@ G) android.util.Log.d@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ LO@@ G_@@ TAG, ("@@ on@@ Di@@ alo@@ g@@ Clo@@ sed@@ : m@@ P@@ ass@@ wor@@ d@@ =@@ " + (m@@ P@@ ass@@ wor@@ d@@ ))); ((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Ph@@ on@@ e) (m@@ Phone@@ )@@ ).set@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ (m@@ F@@ ac@@ ili@@ ty@@ , (!(@@ is@@ Ac@@ tiv@@ ated@@ )), m@@ P@@ ass@@ wor@@ d@@ , 0, m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ M@@ y@@ Handler.@@ ME@@ SS@@ A@@ G@@ E_@@ SE@@ T_@@ C@@ AL@@ L@@ _@@ B@@ AR@@ R@@ ING@@ )); if ((m@@ T@@ c@@ p@@ Listener@@ ) != null@@ ) { m@@ T@@ c@@ p@@ List@@ en@@ er.@@ on@@ St@@ ar@@ ted@@ (@@ this@@ , false@@ ); } }
private void handle@@ Set@@ Call@@ B@@ ar@@ r@@ ing@@ Response@@ (android.os.@@ Mess@@ age ms@@ g@@ ) { android.os.@@ As@@ ync@@ Res@@ ult ar = ((@@ android.os.@@ As@@ ync@@ Result@@ ) (m@@ s@@ g.@@ ob@@ j@@ )); if (((@@ ar.@@ excepti@@ on@@ ) != null@@ ) || ((@@ ar.@@ user@@ Ob@@ j@@ ) instanceof java.lang.@@ Throw@@ able@@ )) { if (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ D@@ B@@ G) android.util.Log.d@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ LO@@ G_@@ TAG, ("@@ handle@@ Set@@ Call@@ B@@ ar@@ r@@ ing@@ Response@@ : ar.@@ excepti@@ on@@ =@@ " + (@@ ar.@@ excepti@@ on@@ ))); } if (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ D@@ B@@ G) android.util.Log.d@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ LO@@ G_@@ TAG, "@@ handle@@ Set@@ Call@@ B@@ ar@@ r@@ ing@@ Response@@ : r@@ e get@@ "); ((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Ph@@ on@@ e) (m@@ Phone@@ ))@@ .get@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ (m@@ F@@ ac@@ ili@@ ty@@ , "@@ ", 0, ob@@ t@@ ain@@ Message@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ M@@ y@@ Handler.@@ ME@@ SS@@ A@@ G@@ E_@@ GE@@ T_@@ C@@ AL@@ L@@ _@@ B@@ AR@@ R@@ ING@@ , 0, com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ M@@ y@@ Handler.@@ ME@@ SS@@ A@@ G@@ E_@@ SE@@ T_@@ C@@ AL@@ L@@ _@@ B@@ AR@@ R@@ ING@@ , ar.@@ excepti@@ on@@ )); }
private final void res@@ et@@ P@@ w@@ Chang@@ e@@ State@@ () { m@@ P@@ w@@ Chang@@ e@@ State = com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ P@@ W@@ _C@@ H@@ AN@@ G@@ E_@@ O@@ L@@ D@@ ; dis@@ play@@ P@@ w@@ Chang@@ e@@ Di@@ alo@@ g@@ (@@ 0, false@@ ); m@@ O@@ l@@ d@@ P@@ ass@@ wor@@ d = "@@ "; m@@ New@@ P@@ ass@@ wor@@ d = "@@ "; }
private final void dis@@ play@@ P@@ w@@ Chang@@ e@@ Di@@ alo@@ g@@ () { dis@@ play@@ P@@ w@@ Chang@@ e@@ Di@@ alo@@ g@@ (@@ 0, true@@ ); }
private final void res@@ et@@ Call@@ B@@ ar@@ r@@ ing@@ Pre@@ f@@ State@@ (@@ boolean b@@ En@@ able@@ ) { for (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ feren@@ ce pre@@ f : m@@ Pre@@ feren@@ ces@@ ) { pre@@ f.@@ is@@ Ac@@ tiv@@ ate@@ d = b@@ En@@ able@@ ; pre@@ f.@@ update@@ S@@ um@@ m@@ ary@@ Text@@ (); } }
public void on@@ P@@ in@@ En@@ ter@@ ed@@ (com.android.@@ phon@@ e.@@ setting@@ s.@@ fd@@ n@@ .@@ E@@ d@@ it@@ P@@ in@@ Pre@@ feren@@ ce pre@@ ference@@ , boolean po@@ si@@ tive@@ Result@@ ) { if (p@@ re@@ feren@@ ce == (m@@ B@@ utton@@ Chang@@ e@@ P@@ W@@ )) { update@@ P@@ W@@ Chang@@ e@@ State@@ (@@ po@@ si@@ tive@@ Result@@ ); } else if (p@@ re@@ feren@@ ce == (m@@ B@@ utton@@ De@@ a@@ All@@ )) { de@@ ac@@ tiv@@ ate@@ All@@ B@@ ar@@ r@@ ing@@ (@@ po@@ si@@ tive@@ Result@@ ); } }
private final void dis@@ play@@ P@@ w@@ Chang@@ e@@ Di@@ alo@@ g@@ (@@ int str@@ Id, boolean sho@@ ul@@ d@@ Display@@ ) { int ms@@ g@@ Id = 0; switch (m@@ P@@ w@@ Chang@@ e@@ State@@ ) { case com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ P@@ W@@ _C@@ H@@ AN@@ G@@ E_@@ O@@ L@@ D : ms@@ g@@ Id = R.@@ str@@ ing.@@ call@@ _@@ b@@ ar@@ r@@ ing@@ _@@ old@@ _@@ p@@ w@@ d@@ ; break@@ ; case com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ P@@ W@@ _C@@ H@@ AN@@ G@@ E_@@ N@@ E@@ W : ms@@ g@@ Id = R.@@ str@@ ing.@@ call@@ _@@ b@@ ar@@ r@@ ing@@ _@@ new@@ _@@ p@@ w@@ d@@ ; break@@ ; case com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ P@@ W@@ _C@@ H@@ AN@@ G@@ E_@@ RE@@ EN@@ TE@@ R : ms@@ g@@ Id = R.@@ str@@ ing.@@ call@@ _@@ b@@ ar@@ r@@ ing@@ _@@ con@@ fi@@ r@@ m@@ _@@ p@@ w@@ d@@ ; break@@ ; default : break@@ ; } if (@@ str@@ Id != 0) { m@@ B@@ utton@@ Chang@@ e@@ P@@ W@@ .set@@ Di@@ alo@@ g@@ Message@@ ((((@@ get@@ Text@@ (m@@ s@@ g@@ Id@@ )) + "@@ \n") + (get@@ Text@@ (@@ str@@ Id@@ )))); } else { m@@ B@@ utton@@ Chang@@ e@@ P@@ W@@ .set@@ Di@@ alo@@ g@@ Message@@ (m@@ s@@ g@@ Id@@ ); } if (s@@ ho@@ ul@@ d@@ Display@@ ) { m@@ B@@ utton@@ Chang@@ e@@ P@@ W@@ .@@ sho@@ w@@ P@@ in@@ Di@@ alo@@ g@@ (); }
void handle@@ Call@@ B@@ ar@@ r@@ ing@@ Result@@ (@@ boolean statu@@ s) { is@@ Ac@@ tiv@@ ate@@ d = statu@@ s; if (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ D@@ B@@ G) android.util.Log.d@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ LO@@ G_@@ TAG, ("@@ handle@@ Get@@ C@@ B@@ Respon@@ se do@@ ne@@ , is@@ Ac@@ tiv@@ ated@@ =@@ " + statu@@ s@@ )); }
private final void dis@@ play@@ Message@@ (@@ int str@@ Id@@ ) { android.@@ widget@@ .@@ To@@ ast.@@ m@@ ake@@ Text@@ (@@ this@@ , get@@ String(@@ str@@ Id@@ ), To@@ ast.@@ L@@ EN@@ G@@ TH@@ _S@@ H@@ O@@ RT@@ ).@@ sho@@ w@@ (); }
@java.lang.Override public boolean sho@@ ul@@ d@@ Dis@@ able@@ De@@ pend@@ ent@@ s() { return sho@@ ul@@ d@@ Dis@@ able@@ ; }
void init@@ (com.android.@@ phon@@ e.@@ Time@@ Con@@ s@@ um@@ ing@@ Pre@@ ference@@ List@@ en@@ er list@@ ener@@ , boolean s@@ k@@ ip@@ Read@@ ing@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e phon@@ e) { if (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ LO@@ G_@@ TAG, ("@@ Get@@ t@@ ing call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ feren@@ ce phon@@ e id = " + (@@ phon@@ e.get@@ Phone@@ Id@@ ()))); } m@@ Ph@@ on@@ e = phon@@ e@@ ; m@@ T@@ c@@ p@@ List@@ en@@ er = list@@ ener@@ ; if (!@@ s@@ k@@ ip@@ Read@@ ing@@ ) { ((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Ph@@ on@@ e) (m@@ Phone@@ ))@@ .get@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ (m@@ F@@ ac@@ ili@@ ty@@ , "@@ ", 0, m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ ference@@ .@@ M@@ y@@ Handler.@@ ME@@ SS@@ A@@ G@@ E_@@ GE@@ T_@@ C@@ AL@@ L@@ _@@ B@@ AR@@ R@@ ING@@ )); if ((m@@ T@@ c@@ p@@ Listener@@ ) != null@@ ) { m@@ T@@ c@@ p@@ List@@ en@@ er.@@ on@@ St@@ ar@@ ted@@ (@@ this@@ , true@@ ); } }
@java.lang.Override protected void on@@ S@@ a@@ ve@@ Instance@@ State@@ (android.os.@@ Bund@@ le out@@ State@@ ) { super@@ .@@ on@@ S@@ a@@ ve@@ Instance@@ State@@ (@@ out@@ State@@ ); for (com.android.@@ phon@@ e.@@ Call@@ B@@ ar@@ r@@ ing@@ E@@ d@@ it@@ Pre@@ feren@@ ce pre@@ f : m@@ Pre@@ feren@@ ces@@ ) { android.os.@@ Bund@@ le b@@ und@@ le = new android.os.@@ Bund@@ le@@ (); b@@ und@@ le.@@ put@@ Boolean@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ KE@@ Y_@@ STAT@@ US@@ , pre@@ f.@@ is@@ Ac@@ tiv@@ ated@@ ); out@@ State.@@ put@@ Par@@ cel@@ able@@ (p@@ ref@@ .get@@ Key@@ (), b@@ und@@ le@@ ); } out@@ State.@@ put@@ Int@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ P@@ W@@ _C@@ H@@ AN@@ G@@ E_@@ STATE_@@ KE@@ Y@@ , m@@ P@@ w@@ Chang@@ e@@ State@@ ); out@@ State.@@ put@@ String@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ O@@ L@@ D_@@ P@@ W@@ _@@ KE@@ Y@@ , m@@ O@@ l@@ d@@ P@@ ass@@ wor@@ d@@ ); out@@ State.@@ put@@ String@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ N@@ E@@ W@@ _P@@ W@@ _@@ KE@@ Y@@ , m@@ New@@ P@@ ass@@ wor@@ d@@ ); out@@ State.@@ put@@ String@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ DI@@ A@@ LO@@ G@@ _M@@ E@@ SS@@ A@@ G@@ E_@@ KE@@ Y@@ , m@@ B@@ utton@@ Chang@@ e@@ P@@ W@@ .get@@ Di@@ alo@@ g@@ Message@@ ().@@ toString@@ ()); out@@ State.@@ put@@ String@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ DI@@ A@@ LO@@ G@@ _P@@ W@@ _@@ EN@@ TR@@ Y_@@ KE@@ Y@@ , m@@ B@@ utton@@ Chang@@ e@@ P@@ W@@ .get@@ Text@@ ()); }
public static void init@@ (android.@@ pre@@ ference@@ .@@ Pre@@ ference@@ S@@ cre@@ e@@ n pre@@ f@@ S@@ creen@@ , com.android.@@ phon@@ e.@@ Sub@@ s@@ cription@@ Info@@ Hel@@ p@@ er sub@@ Info@@ Hel@@ per@@ ) { android.@@ pre@@ ference@@ .@@ Pre@@ feren@@ ce call@@ For@@ w@@ ard@@ ing@@ Pre@@ f = pre@@ f@@ S@@ creen@@ .@@ find@@ Pre@@ ference@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ Option@@ s.@@ C@@ AL@@ L@@ _@@ F@@ OR@@ W@@ AR@@ D@@ ING@@ _@@ KE@@ Y@@ ); call@@ For@@ w@@ ard@@ ing@@ Pre@@ f@@ .set@@ Intent@@ (s@@ u@@ b@@ Info@@ Hel@@ p@@ er.get@@ Intent@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ For@@ w@@ ard@@ Option@@ s@@ .@@ class@@ )); android.@@ pre@@ ference@@ .@@ Pre@@ feren@@ ce add@@ i@@ tion@@ al@@ G@@ s@@ m@@ Setting@@ s@@ Pre@@ f = pre@@ f@@ S@@ creen@@ .@@ find@@ Pre@@ ference@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ Option@@ s.@@ AD@@ DI@@ TION@@ AL@@ _@@ G@@ S@@ M@@ _S@@ E@@ T@@ T@@ ING@@ S_@@ KE@@ Y@@ ); add@@ i@@ tion@@ al@@ G@@ s@@ m@@ Setting@@ s@@ Pre@@ f@@ .set@@ Intent@@ (s@@ u@@ b@@ Info@@ Hel@@ p@@ er.get@@ Intent@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Add@@ i@@ tion@@ al@@ Call@@ Option@@ s@@ .@@ class@@ )); android.@@ pre@@ ference@@ .@@ Pre@@ feren@@ ce call@@ B@@ ar@@ r@@ ing@@ Pre@@ f = pre@@ f@@ S@@ creen@@ .@@ find@@ Pre@@ ference@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ Option@@ s.@@ C@@ AL@@ L@@ _@@ B@@ AR@@ R@@ ING@@ _@@ KE@@ Y@@ ); android.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Config@@ Manager config@@ Manager = ((@@ android.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Config@@ Manager@@ ) (p@@ ref@@ S@@ creen@@ .get@@ Context@@ ().get@@ System@@ Service@@ (@@ Context.@@ C@@ AR@@ R@@ I@@ ER@@ _C@@ ON@@ FI@@ G@@ _S@@ ER@@ V@@ IC@@ E@@ ))); android.os.@@ Per@@ si@@ st@@ able@@ Bund@@ le b = config@@ Manager.@@ get@@ Config@@ (); if ((@@ b != null@@ ) && (b@@ .get@@ Boolean@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _S@@ H@@ O@@ W@@ _C@@ AL@@ L@@ _@@ B@@ O@@ O@@ O@@ L@@ ))) { call@@ B@@ ar@@ r@@ ing@@ Pre@@ f@@ .set@@ Intent@@ (s@@ u@@ b@@ Info@@ Hel@@ p@@ er.get@@ Intent@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ class@@ )); } else { pre@@ f@@ S@@ creen@@ .@@ remove@@ Pre@@ ference@@ (c@@ all@@ B@@ ar@@ r@@ ing@@ Pre@@ f@@ ); } }
@java.lang.Override protected void on@@ B@@ ind@@ View@@ (android.@@ view@@ .@@ Vi@@ e@@ w view@@ ) { super@@ .@@ on@@ B@@ ind@@ View@@ (@@ view@@ ); android.@@ widget@@ .@@ Text@@ Vi@@ e@@ w s@@ um@@ m@@ ary@@ Vi@@ e@@ w = ((@@ android.@@ widget@@ .@@ Text@@ View@@ ) (@@ view@@ .@@ find@@ View@@ By@@ Id@@ (android.@@ R.@@ id@@ .@@ s@@ um@@ m@@ ary@@ ))); if (s@@ um@@ m@@ ary@@ Vi@@ e@@ w != null@@ ) { java.lang.@@ Char@@ Se@@ qu@@ en@@ ce s@@ um@@ ; int vi@@ s; if (is@@ Ac@@ tiv@@ ated@@ ) { su@@ m = ((m@@ S@@ um@@ m@@ ary@@ On@@ ) == null@@ ) ? get@@ S@@ um@@ m@@ ary@@ () : mS@@ um@@ m@@ ary@@ On@@ ; } else { su@@ m = ((m@@ S@@ um@@ m@@ ary@@ O@@ ff@@ ) == null@@ ) ? get@@ S@@ um@@ m@@ ary@@ () : mS@@ um@@ m@@ ary@@ O@@ ff@@ ; } if (s@@ u@@ m != null@@ ) { s@@ um@@ m@@ ary@@ View@@ .set@@ Text@@ (s@@ um@@ ); vi@@ s = android.@@ view@@ .@@ View@@ .@@ V@@ I@@ SI@@ B@@ LE@@ ; } else { vi@@ s = android.@@ view@@ .@@ View@@ .@@ G@@ ON@@ E@@ ; } if (@@ vi@@ s != (s@@ um@@ m@@ ary@@ View@@ .get@@ Vi@@ si@@ b@@ ili@@ ty@@ ())) { s@@ um@@ m@@ ary@@ View@@ .set@@ Vi@@ si@@ b@@ ili@@ ty@@ (@@ vi@@ s); } } }
@java.lang.Override protected void on@@ B@@ ind@@ Di@@ alo@@ g@@ View@@ (android.@@ view@@ .@@ Vi@@ e@@ w view@@ ) { super@@ .@@ on@@ B@@ ind@@ Di@@ alo@@ g@@ View@@ (@@ view@@ ); m@@ B@@ utton@@ C@@ li@@ ck@@ ed = android.content.@@ Di@@ alo@@ g@@ Interface@@ .@@ B@@ UT@@ T@@ ON@@ _N@@ E@@ G@@ AT@@ I@@ V@@ E@@ ; final android.@@ widget@@ .@@ E@@ d@@ it@@ T@@ ex@@ t ed@@ it@@ T@@ ex@@ t = ((@@ android.@@ widget@@ .@@ E@@ d@@ it@@ Text@@ ) (@@ view@@ .@@ find@@ View@@ By@@ Id@@ (android.@@ R.@@ id@@ .@@ ed@@ it@@ ))); if (@@ ed@@ it@@ T@@ ex@@ t != null@@ ) { ed@@ it@@ T@@ ex@@ t.@@ set@@ S@@ ing@@ le@@ Line@@ (@@ true@@ ); ed@@ it@@ T@@ ex@@ t.@@ set@@ Tr@@ an@@ s@@ for@@ m@@ ation@@ Method@@ (android.@@ text.@@ method@@ .@@ P@@ ass@@ wor@@ d@@ Tr@@ an@@ s@@ for@@ m@@ ation@@ Method@@ .get@@ Instance@@ ()); ed@@ it@@ T@@ ex@@ t.@@ set@@ Key@@ Listener@@ (android.@@ text.@@ method@@ .@@ Dig@@ it@@ s@@ Key@@ List@@ en@@ er.get@@ Instance@@ ()); } }
private void de@@ ac@@ tiv@@ ate@@ All@@ B@@ ar@@ r@@ ing@@ (@@ boolean po@@ si@@ tive@@ Result@@ ) { if (!@@ po@@ si@@ tive@@ Result@@ ) { return@@ ; } java.lang.String p@@ ass@@ wor@@ d = m@@ B@@ utton@@ De@@ a@@ Al@@ l.get@@ Text@@ (); if ((@@ p@@ ass@@ wor@@ d == null@@ ) || ((@@ p@@ ass@@ wor@@ d.@@ length@@ ()) != (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ P@@ W@@ _@@ L@@ EN@@ G@@ TH@@ ))) { m@@ B@@ utton@@ De@@ a@@ Al@@ l.@@ set@@ Text@@ ("@@ "); dis@@ play@@ Message@@ (@@ R.@@ str@@ ing.@@ call@@ _@@ b@@ ar@@ r@@ ing@@ _@@ ri@@ g@@ h@@ t@@ _@@ p@@ w@@ d@@ _@@ n@@ umber@@ ); return@@ ; } m@@ B@@ utton@@ De@@ a@@ Al@@ l.@@ set@@ Text@@ ("@@ "); android.os.@@ Mess@@ age on@@ Comp@@ let@@ e = my@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.@@ phon@@ e.@@ G@@ s@@ m@@ U@@ m@@ ts@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ s.@@ EV@@ ENT_@@ DE@@ AC@@ T_@@ AL@@ L@@ _C@@ O@@ M@@ P@@ LE@@ TE@@ ); ((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Ph@@ on@@ e) (m@@ Phone@@ )@@ ).set@@ Call@@ B@@ ar@@ r@@ ing@@ Option@@ (@@ Command@@ s@@ Interface@@ .@@ C@@ B@@ _@@ F@@ AC@@ IL@@ I@@ TY@@ _@@ B@@ A@@ _@@ AL@@ L@@ , false@@ , p@@ ass@@ wor@@ d@@ , 0, on@@ Comp@@ let@@ e); this@@ .@@ on@@ St@@ ar@@ ted@@ (m@@ B@@ utton@@ De@@ a@@ All@@ , false@@ ); }
private void start@@ Call@@ Record@@ ing@@ T@@ one@@ (android.@@ content.@@ Context context@@ ) { if ((m@@ Record@@ ing@@ T@@ one@@ Play@@ er@@ ) != null@@ ) { return@@ ; } android.@@ media.@@ Au@@ dio@@ Device@@ Info telephon@@ y@@ De@@ vice = get@@ Telephony@@ Device@@ (m@@ Au@@ dio@@ Manager@@ ); if (@@ telephon@@ y@@ De@@ vice != null@@ ) { android.telecom.@@ Log.@@ i@@ (@@ this@@ , "@@ start@@ Call@@ Record@@ ing@@ T@@ one@@ : play@@ ing cal@@ l re@@ cord@@ ing t@@ on@@ e to remo@@ t@@ e end@@ .@@ "); m@@ Record@@ ing@@ T@@ one@@ Play@@ er = android.@@ media.@@ Media@@ Play@@ er.@@ create@@ (@@ context@@ , R.@@ raw@@ .@@ re@@ cord@@ ); m@@ Record@@ ing@@ T@@ one@@ Play@@ er.@@ set@@ L@@ oo@@ p@@ ing@@ (@@ true@@ ); m@@ Record@@ ing@@ T@@ one@@ Play@@ er.@@ set@@ Pre@@ fer@@ re@@ d@@ Device@@ (@@ telephon@@ y@@ Device@@ ); m@@ Record@@ ing@@ T@@ one@@ Play@@ er.@@ set@@ V@@ ol@@ um@@ e(@@ 0.@@ 1@@ F@@ ); m@@ Record@@ ing@@ T@@ one@@ Play@@ er.@@ start@@ (); } else { android.telecom.@@ Log.@@ w@@ (@@ this@@ , "@@ start@@ Call@@ Record@@ ing@@ T@@ one@@ : can@@ 't fin@@ d telephon@@ y au@@ di@@ o device@@ .@@ "); } }
@java.lang.Override public void on@@ Record@@ ing@@ Config@@ Changed@@ (@@ java.util.List<@@ android.@@ media.@@ Au@@ dio@@ Record@@ ing@@ Configuration@@ > config@@ s) { handle@@ Record@@ ing@@ Configuration@@ Chang@@ e(@@ config@@ s); m@@ ay@@ b@@ e@@ Start@@ Call@@ Au@@ dio@@ T@@ one@@ (); m@@ ay@@ b@@ e@@ St@@ op@@ Call@@ Au@@ dio@@ T@@ one@@ (); }
@java.lang.Override @org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (); org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); m@@ Call@@ Record@@ ing@@ T@@ one@@ Play@@ er = new com.android.server.@@ telecom.@@ Call@@ Record@@ ing@@ T@@ one@@ Play@@ er@@ (m@@ Comp@@ onent@@ Context@@ Fi@@ xt@@ ure@@ .get@@ Test@@ D@@ ouble@@ ().get@@ Application@@ Context@@ (), m@@ Au@@ dio@@ Manager@@ ); when@@ (m@@ Au@@ dio@@ Manager.@@ get@@ Ac@@ tive@@ Record@@ ing@@ Configuration@@ s@@ ()).@@ thenReturn@@ (@@ null@@ ); }
private void add@@ Call@@ (com.android.server.@@ telecom.@@ Cal@@ l to@@ Add@@ ) { boolean is@@ Fi@@ rst@@ Cal@@ l = m@@ Call@@ s.@@ isEmpty@@ (); m@@ Call@@ s.@@ add(@@ to@@ Add@@ ); if (is@@ Fi@@ rst@@ Call@@ ) { handle@@ Record@@ ing@@ Configuration@@ Chang@@ e@@ (m@@ Au@@ dio@@ Manager.@@ get@@ Ac@@ tive@@ Record@@ ing@@ Configuration@@ s()); m@@ Au@@ dio@@ Manager.@@ register@@ Au@@ dio@@ Record@@ ing@@ Callback@@ (m@@ Au@@ dio@@ Record@@ ing@@ Callback@@ , null@@ ); } m@@ ay@@ b@@ e@@ Start@@ Call@@ Au@@ dio@@ T@@ one@@ (); }
private static boolean is@@ Current@@ Pro@@ file@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , int u@@ id@@ ) { final int current@@ U@@ se@@ r = android.@@ app.@@ Activity@@ Manager.@@ get@@ Current@@ User@@ (); final int call@@ ing@@ User@@ Id = android.os.@@ User@@ Handle@@ .get@@ User@@ Id@@ (@@ u@@ id@@ ); if (c@@ all@@ ing@@ User@@ Id == current@@ User@@ ) { return true@@ ; } else { java.util.List<@@ android.content.@@ p@@ m.@@ User@@ Info@@ > user@@ Pro@@ file@@ s = con@@ tex@@ t.get@@ System@@ Service@@ (android.os.@@ User@@ Manager@@ .@@ class@@ )@@ .get@@ Pro@@ fil@@ es@@ (@@ current@@ User@@ ); for (android.@@ content.@@ p@@ m.@@ User@@ Info u@@ se@@ r : user@@ Pro@@ fil@@ es) { if ((@@ us@@ er.@@ id@@ ) == call@@ ing@@ User@@ Id@@ ) { return true@@ ; } } return false@@ ; }
public static boolean can@@ Access@@ C@@ ell@@ Location@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , @@@ android.@@ annotation.@@ NonNull java.lang.String p@@ kg@@ Name, int u@@ id, int p@@ id@@ ) throw@@ s java.lang.@@ Sec@@ ur@@ ity@@ Exception { android.os.@@ Trace@@ .@@ b@@ e@@ gin@@ Sec@@ tion@@ ("@@ Telephony@@ Location@@ Check@@ "); try { if ((@@ con@@ text.@@ check@@ Permission@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ , p@@ id, u@@ id@@ )) == (android.@@ content.@@ p@@ m.@@ Package@@ Manager.@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ _@@ D@@ EN@@ I@@ E@@ D@@ )) { return false@@ ; } final int op@@ Co@@ de = android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ per@@ mission@@ To@@ Op@@ Code@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ ); if ((@@ op@@ Co@@ de != (android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ O@@ P@@ _N@@ ON@@ E@@ )) && ((@@ con@@ tex@@ t.get@@ System@@ Service@@ (android.@@ app.@@ App@@ O@@ ps@@ Manager@@ .@@ class@@ ).@@ no@@ te@@ Op@@ (@@ op@@ Code@@ , u@@ id, p@@ kg@@ Name@@ )) != (android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ M@@ OD@@ E_@@ AL@@ LO@@ W@@ E@@ D@@ ))) { return false@@ ; } if ((@@ !@@ (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y.@@ is@@ Location@@ Mode@@ Enabled@@ (@@ context@@ , android.os.@@ User@@ Handle@@ .get@@ User@@ Id@@ (@@ u@@ id@@ )@@ ))) && (!@@ (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y.@@ is@@ Le@@ g@@ ac@@ y@@ For@@ eg@@ round@@ (@@ context@@ , p@@ kg@@ Name, u@@ id@@ )@@ ))) { return false@@ ; } return (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y.@@ is@@ Current@@ Pro@@ file@@ (@@ context@@ , u@@ id@@ )) || (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y.@@ check@@ Inter@@ act@@ Ac@@ ro@@ ss@@ User@@ s@@ F@@ ull@@ (@@ context@@ )); } final@@ l@@ y { android.os.@@ Trace@@ .@@ end@@ Sec@@ tion@@ (); } }
private static boolean is@@ Le@@ g@@ ac@@ y@@ For@@ eg@@ round@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , @@@ android.@@ annotation.@@ NonNull java.lang.String p@@ kg@@ Name, int u@@ id@@ ) { return (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y.@@ is@@ Le@@ g@@ ac@@ y@@ Version@@ (@@ context@@ , p@@ kg@@ Name@@ )) && (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y.@@ is@@ For@@ eg@@ round@@ App@@ (@@ context@@ , u@@ id@@ )); }
@java.lang.Override protected void dum@@ p@@ (java.io.FileDescriptor fd, java.io.@@ P@@ r@@ int@@ Wri@@ ter wri@@ ter@@ , java.lang.String[] arg@@ s) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ D@@ U@@ M@@ P@@ , com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG@@ ); if ((@@ args.@@ length) == 0) { wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ luetoo@@ th dum@@ p in AP@@ P S@@ ER@@ V@@ IC@@ E@@ S@@ , se@@ e bluetooth@@ _@@ man@@ age@@ r sec@@ tion@@ .@@ "); wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ luetoo@@ th --@@ p@@ r@@ int arg@@ um@@ ent for dum@@ ps@@ y@@ s di@@ re@@ c@@ t f@@ ro@@ m Adap@@ ter@@ Service@@ .@@ "); return@@ ; } ver@@ bo@@ se@@ Log@@ (("@@ B@@ on@@ de@@ d arg@@ ument@@ s, ch@@ ec@@ k for pro@@ to@@ bu@@ f output@@ : " + (android.@@ text.@@ Text@@ Utils.@@ j@@ o@@ in@@ (@@ arg@@ s@@ [0@@ ]@@ .@@ equal@@ s@@ (com.android.@@ bluetooth.@@ to@@ -@@ b@@ in@@ ")) { dum@@ p@@ M@@ et@@ ri@@ c@@ s@@ (@@ fd@@ ); return@@ ; } wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ on@@ de@@ d de@@ vices@@ :@@ "); for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice : get@@ B@@ ond@@ ed@@ De@@ vices@@ ()) { wri@@ ter.@@ p@@ r@@ int@@ ln@@ ((((@@ " + (@@ device@@ .get@@ Address@@ ())) + " [@@ ") + (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ DE@@ V@@ IC@@ E_@@ TYP@@ E_@@ N@@ AM@@ E@@ S@@ [@@ device@@ .get@@ Type@@ ()@@ ]@@ )) + " (@@ device@@ .getName@@ ()))); } java.lang.String@@ Builder s@@ b = new java.lang.String@@ Builder@@ (); synchronized@@ (m@@ Pro@@ fil@@ es) { for (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ fi@@ le : m@@ Pro@@ fil@@ es) { pro@@ file.@@ dum@@ p@@ (s@@ b@@ ); } } wri@@ ter.@@ write@@ (s@@ b.@@ toString@@ ()); wri@@ ter.@@ f@@ lu@@ sh@@ (); dum@@ p@@ Native@@ (@@ fd, arg@@ s); }
private void dum@@ p@@ M@@ et@@ ri@@ c@@ s@@ (java.io.FileDescriptor fd@@ ) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG, "@@ dum@@ p@@ M@@ et@@ ri@@ c@@ s@@ "); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Bluetooth@@ Pro@@ to.@@ Bluetooth@@ Lo@@ g m@@ et@@ ri@@ c@@ s = new com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Bluetooth@@ Pro@@ to.@@ Bluetooth@@ Log@@ (); m@@ et@@ ri@@ c@@ s@@ .set@@ N@@ um@@ B@@ ond@@ ed@@ De@@ vices@@ (get@@ B@@ ond@@ ed@@ De@@ vices@@ ().@@ length); for (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ fi@@ le : m@@ Pro@@ fil@@ es) { pro@@ file.@@ dum@@ p@@ Pro@@ to@@ (@@ m@@ et@@ ri@@ c@@ s); } byte@@ [] native@@ M@@ et@@ ri@@ c@@ s@@ Byte@@ s = dum@@ p@@ M@@ et@@ ri@@ c@@ s@@ Native@@ (); android.util.Log.@@ i@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG, ("@@ S@@ end@@ ing native m@@ et@@ ri@@ c@@ s siz@@ e is " + (@@ native@@ M@@ et@@ ri@@ c@@ s@@ By@@ t@@ es.@@ length@@ ()))); try { m@@ et@@ ri@@ c@@ s.@@ merg@@ e@@ From@@ (@@ native@@ M@@ et@@ ri@@ c@@ s@@ Bytes@@ ); } catch (@@ com.google.@@ pro@@ to@@ bu@@ f.@@ m@@ ic@@ ro@@ .@@ In@@ valid@@ Pro@@ to@@ col@@ Buffer@@ M@@ ic@@ ro@@ Exception ex@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG, ("@@ S@@ end@@ ing par@@ s@@ ing m@@ et@@ ri@@ c@@ s Pro@@ to@@ bu@@ f@@ : " + (@@ ex@@ .get@@ Message@@ ()))); return@@ ; } byte@@ [] m@@ et@@ ri@@ c@@ s@@ Byte@@ s = android.util.@@ B@@ ase@@ 6@@ 4@@ .@@ en@@ code@@ (m@@ et@@ ri@@ c@@ s.@@ to@@ ByteArray@@ (), B@@ ase@@ 6@@ 4@@ .@@ DE@@ FA@@ UL@@ T@@ ); android.util.Log.@@ i@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG, ("@@ S@@ end@@ ing com@@ b@@ ine@@ d m@@ et@@ ri@@ c@@ s siz@@ e is " + (m@@ et@@ ri@@ c@@ s@@ By@@ t@@ es.@@ length@@ ))); try (@@ java.io.File@@ Output@@ Stream pro@@ to@@ O@@ u@@ t = new java.io.File@@ Output@@ Stream@@ (@@ fd@@ )) { pro@@ to@@ O@@ u@@ t.@@ write@@ (m@@ et@@ ri@@ c@@ s@@ Bytes@@ ); } catch (java.io.IOException e) { error@@ Log@@ ("@@ Faile@@ d to wri@@ t@@ e J@@ av@@ a pro@@ to@@ bu@@ f@@ "); } }
public static long get@@ Mo@@ b@@ ile@@ R@@ x@@ Pack@@ et@@ s() { long to@@ t@@ al = 0; for (java.lang.String if@@ ac@@ e : android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ Mo@@ b@@ ile@@ I@@ fa@@ ces@@ ()) { long st@@ at = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ UN@@ S@@ U@@ P@@ P@@ O@@ RT@@ E@@ D@@ ; st@@ at = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ R@@ x@@ Pack@@ et@@ s@@ (@@ if@@ ace@@ ); if (@@ st@@ at != (android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ UN@@ S@@ U@@ P@@ P@@ O@@ RT@@ E@@ D@@ )) { to@@ t@@ al +@@ = st@@ at@@ ; } } return to@@ t@@ al@@ ; }
public static long get@@ Mo@@ b@@ ile@@ R@@ x@@ Bytes@@ () { long to@@ t@@ al = 0; for (java.lang.String if@@ ac@@ e : android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ Mo@@ b@@ ile@@ I@@ fa@@ ces@@ ()) { long st@@ at = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ UN@@ S@@ U@@ P@@ P@@ P@@ O@@ RT@@ E@@ D@@ ; st@@ at = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ R@@ x@@ Bytes@@ (@@ if@@ ace@@ ); if (@@ st@@ at != (android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ UN@@ S@@ U@@ P@@ P@@ O@@ RT@@ E@@ D@@ )) { to@@ t@@ al +@@ = st@@ at@@ ; } } return to@@ t@@ al@@ ; }
public static long get@@ Mo@@ b@@ ile@@ T@@ x@@ Bytes@@ () { long to@@ t@@ al = 0; for (java.lang.String if@@ ac@@ e : android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ Mo@@ b@@ ile@@ I@@ fa@@ ces@@ ()) { long st@@ at = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ UN@@ S@@ U@@ P@@ P@@ P@@ O@@ RT@@ E@@ D@@ ; st@@ at = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ T@@ x@@ Bytes@@ (@@ if@@ ace@@ ); if (@@ st@@ at != (android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ UN@@ S@@ U@@ P@@ P@@ O@@ RT@@ E@@ D@@ )) { to@@ t@@ al +@@ = st@@ at@@ ; } } return to@@ t@@ al@@ ; }
public static long get@@ Mo@@ b@@ ile@@ T@@ x@@ Pack@@ et@@ s() { long to@@ t@@ al = 0; for (java.lang.String if@@ ac@@ e : android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ Mo@@ b@@ ile@@ I@@ fa@@ ces@@ ()) { long st@@ at = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ UN@@ S@@ U@@ P@@ P@@ O@@ RT@@ E@@ D@@ ; st@@ at = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ T@@ x@@ Pack@@ et@@ s@@ (@@ if@@ ace@@ ); if (@@ st@@ at != (android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ UN@@ S@@ U@@ P@@ P@@ O@@ RT@@ E@@ D@@ )) { to@@ t@@ al +@@ = st@@ at@@ ; } } return to@@ t@@ al@@ ; }
private java.util.ArrayList<@@ java.lang.String> get@@ SE@@ Access@@ Al@@ low@@ ed@@ Pack@@ ag@@ es@@ () { if ((@@ (m@@ SE@@ Service@@ ) == null@@ ) || (m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es.@@ isEmpty@@ ())) { return null@@ ; } java.lang.String[] read@@ er@@ s = null@@ ; try { read@@ er@@ s = m@@ SE@@ Service@@ .get@@ Read@@ er@@ s(); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (com.android.@@ n@@ f@@ c.@@ N@@ fc@@ Service.@@ TAG, ("@@ Er@@ ror in get@@ Read@@ er@@ s() " + e@@ )); return null@@ ; } if ((@@ read@@ er@@ s == null@@ ) || ((@@ read@@ er@@ s.@@ length) == 0@@ )) { return null@@ ; } boolean@@ [] n@@ fc@@ Access@@ F@@ in@@ al = null@@ ; java.lang.String[] in@@ st@@ al@@ le@@ d@@ Package@@ s = new java.lang.String@@ [@@ m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es.@@ size@@ ()@@ ]; android.@@ s@@ e.@@ om@@ api.@@ I@@ Sec@@ ure@@ Element@@ Call@@ b@@ ac@@ k call@@ b@@ ac@@ k = new android.@@ s@@ e.@@ om@@ api.@@ I@@ Sec@@ ure@@ Element@@ Callback@@ .@@ St@@ u@@ b@@ () { }; for (java.lang.String read@@ er : read@@ er@@ s) { try { boolean@@ [] ac@@ cess@@ Lis@@ t = m@@ SE@@ Service.@@ is@@ N@@ F@@ C@@ Event@@ Al@@ low@@ ed@@ (@@ read@@ er, null@@ , m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es.@@ to@@ Array@@ (in@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es@@ ), call@@ back@@ ); if (@@ ac@@ cess@@ Lis@@ t == null@@ ) { continue@@ ; } if (@@ n@@ fc@@ Access@@ F@@ in@@ al == null@@ ) { n@@ fc@@ Access@@ F@@ in@@ al = ac@@ cess@@ List@@ ; } for (@@ int i = 0; i < (@@ ac@@ cess@@ List.@@ length); i++) { if (@@ ac@@ cess@@ List@@ [i@@ ]@@ ) { n@@ fc@@ Access@@ F@@ in@@ al@@ [i@@ ] = true@@ ; } } } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (com.android.@@ n@@ f@@ c.@@ N@@ fc@@ Service.@@ TAG, ("@@ Er@@ ror in is@@ N@@ F@@ C@@ Event@@ Al@@ low@@ ed@@ () " + e@@ )); } } if (@@ n@@ fc@@ Access@@ F@@ in@@ al == null@@ ) { return null@@ ; } java.util.ArrayList<@@ java.lang.String> package@@ s = new java.util.ArrayList<@@ java.lang.String@@ >(); for (@@ int i = 0; i < (@@ n@@ fc@@ Access@@ F@@ in@@ al.@@ length); i++) { if (@@ n@@ fc@@ Access@@ F@@ in@@ al@@ [i@@ ]@@ ) { package@@ s.@@ add@@ (m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es@@ .get@@ (i@@ )@@ .@@ package@@ Name); } } return package@@ s; }
public void send@@ N@@ fc@@ Trans@@ action@@ Event@@ (@@ byte@@ [] a@@ id, byte@@ [] data@@ , java.lang.String read@@ er@@ ) { if ((@@ (m@@ SE@@ Service@@ ) == null@@ ) || (m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es.@@ isEmpty@@ ())) { return@@ ; } android.@@ s@@ e.@@ om@@ api.@@ I@@ Sec@@ ure@@ Element@@ Call@@ b@@ ac@@ k call@@ b@@ ac@@ k = new android.@@ s@@ e.@@ om@@ api.@@ I@@ Sec@@ ure@@ Element@@ Callback@@ .@@ St@@ u@@ b@@ () { }; java.lang.String[] in@@ st@@ al@@ le@@ d@@ Package@@ s = new java.lang.String@@ [@@ m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es.@@ size@@ ()@@ ]; try { boolean@@ [] n@@ fc@@ Ac@@ ces@@ s = m@@ SE@@ Service.@@ is@@ N@@ F@@ C@@ Event@@ Al@@ low@@ ed@@ (@@ read@@ er, a@@ id, m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es.@@ to@@ Array@@ (in@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es@@ ), call@@ back@@ ); if (@@ n@@ fc@@ Ac@@ ces@@ s == null@@ ) { return@@ ; } java.util.ArrayList<@@ java.lang.String> package@@ s = new java.util.ArrayList<@@ java.lang.String@@ >(); android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (com.android.@@ n@@ f@@ c.@@ N@@ fc@@ Service.@@ AC@@ TION@@ _@@ TR@@ AN@@ S@@ AC@@ TION@@ _@@ EV@@ T@@ ); int@@ ent.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ IN@@ C@@ L@@ U@@ D@@ E_@@ S@@ TO@@ P@@ E@@ D_@@ P@@ AC@@ K@@ A@@ GE@@ S@@ ); int@@ ent.@@ put@@ Extra@@ (com.android.@@ n@@ f@@ c.@@ N@@ fc@@ Service.@@ EX@@ TR@@ A@@ _@@ A@@ ID@@ , a@@ id@@ ); int@@ ent.@@ put@@ Extra@@ (com.android.@@ n@@ f@@ c.@@ N@@ fc@@ Service.@@ EX@@ TR@@ A@@ _@@ DA@@ TA@@ , data@@ ); int@@ ent.@@ put@@ Extra@@ (com.android.@@ n@@ f@@ c.@@ N@@ fc@@ Service.@@ EX@@ TR@@ A@@ _S@@ E_@@ N@@ AM@@ E, read@@ er@@ ); for (@@ int i = 0; i < (@@ n@@ fc@@ Ac@@ ces@@ s.@@ length); i++) { if (@@ n@@ fc@@ Access@@ [i@@ ]@@ ) { int@@ ent.@@ set@@ Package@@ (m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es@@ .get@@ (i@@ )@@ .@@ package@@ Name); m@@ Context.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ ); } } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (com.android.@@ n@@ f@@ c.@@ N@@ fc@@ Service.@@ TAG, ("@@ Er@@ ror in is@@ N@@ F@@ C@@ Event@@ Al@@ low@@ ed@@ () " + e@@ )); } }
private void send@@ N@@ fc@@ E@@ e@@ Access@@ Pro@@ tec@@ ted@@ B@@ roadcast@@ (android.@@ content.@@ Int@@ ent int@@ ent@@ ) { int@@ ent.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ IN@@ C@@ L@@ U@@ D@@ E_@@ S@@ TO@@ P@@ P@@ E@@ D_@@ P@@ AC@@ K@@ A@@ GE@@ S@@ ); m@@ N@@ fc@@ Dis@@ p@@ atch@@ er.@@ res@@ um@@ e@@ App@@ S@@ wit@@ ch@@ es@@ (); java.util.ArrayList<@@ java.lang.String> match@@ ing@@ Package@@ s = new java.util.ArrayList<@@ java.lang.String@@ >(); java.util.ArrayList<@@ java.lang.String> pre@@ fer@@ re@@ d@@ Package@@ s = new java.util.ArrayList<@@ java.lang.String@@ >(); synchronized@@ (@@ this@@ ) { java.util.ArrayList<@@ java.lang.String> SE@@ Package@@ s = get@@ SE@@ Access@@ Al@@ low@@ ed@@ Pack@@ ag@@ es@@ (); if ((@@ SE@@ Package@@ s != null@@ ) && (!(@@ SE@@ Pack@@ ag@@ es.@@ isEmpty@@ ()))) { for (java.lang.String package@@ Name : SE@@ Pack@@ ag@@ es) { int@@ ent.@@ set@@ Package@@ (@@ package@@ Name); m@@ Context.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ ); } } for (android.@@ content.@@ p@@ m.@@ Package@@ Info p@@ k@@ g : m@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es) { if ((@@ p@@ k@@ g != null@@ ) && ((@@ p@@ k@@ g.@@ app@@ li@@ cation@@ Info@@ ) != null@@ )) { if ((@@ (m@@ C@@ ard@@ E@@ m@@ ul@@ ation@@ Manager@@ ) != null@@ ) && (m@@ C@@ ard@@ E@@ m@@ ul@@ ation@@ Manager@@ .@@ package@@ Has@@ Pre@@ fer@@ re@@ d@@ Service@@ (p@@ kg@@ .@@ package@@ Name@@ ))) { pre@@ fer@@ re@@ d@@ Pack@@ ag@@ es.@@ add@@ (p@@ kg@@ .@@ package@@ Name); } } } if ((@@ pre@@ fer@@ re@@ d@@ Pack@@ ag@@ es.@@ size@@ ()) > 0) { for (java.lang.String package@@ Name : pre@@ fer@@ re@@ d@@ Pack@@ ag@@ es) { int@@ ent.@@ set@@ Package@@ (@@ package@@ Name); m@@ Context.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ ); } } else { for (java.lang.String package@@ Name : match@@ ing@@ Pack@@ ag@@ es) { int@@ ent.@@ set@@ Package@@ (@@ package@@ Name); m@@ Context.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ ); } } }
void update@@ Package@@ Cach@@ e@@ () { android.content.@@ p@@ m.@@ Package@@ Manager p@@ m = m@@ Contex@@ t.get@@ Package@@ Manager@@ (); java.util.List<@@ android.content.@@ p@@ m.@@ Package@@ Info@@ > package@@ s = p@@ m@@ .get@@ In@@ st@@ al@@ le@@ d@@ Pack@@ ag@@ es@@ As@@ User@@ (@@ 0, User@@ Hand@@ le.@@ US@@ ER@@ _S@@ Y@@ S@@ TE@@ M@@ ); java.util.List<@@ android.content.@@ p@@ m.@@ Package@@ Info@@ > package@@ s@@ N@@ fc@@ Event@@ s = p@@ m@@ .get@@ Pack@@ ag@@ es@@ H@@ old@@ ing@@ Permission@@ s@@ (@@ new java.lang.String@@ []{ android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ N@@ F@@ C@@ _@@ TR@@ AN@@ S@@ AC@@ TION@@ _@@ EV@@ EN@@ T }@@ , Package@@ Manager.@@ GE@@ T_@@ AC@@ TI@@ V@@ I@@ TI@@ E@@ S@@ ); synchronized@@ (@@ this@@ ) { m@@ In@@ st@@ al@@ le@@ d@@ Package@@ s = package@@ s; m@@ N@@ fc@@ Event@@ In@@ st@@ al@@ le@@ d@@ Package@@ s = package@@ s@@ N@@ fc@@ Event@@ s; } }
@java.lang.Override @com.android.annotations.NonNull public java.util.@@ Set@@ <java.lang.String@@ > get@@ Test@@ Address@@ es@@ () { return ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ get@@ Clas@@ s) + " ") + (m@@ Network@@ Info@@ )) + " ") + (m@@ Lin@@ k@@ Up@@ )) + " ") + (m@@ H@@ w@@ Address@@ )) + " ") + (m@@ Network@@ Info@@ )) + " ") + (m@@ Network@@ A@@ g@@ ent@@ )) + " ") + (m@@ I@@ p@@ Manager@@ )) + "@@ ,@@ ") + (m@@ Lin@@ k@@ Properties@@ )) + "@@ }@@ "; }
void on@@ I@@ p@@ Lay@@ er@@ St@@ ar@@ ted@@ (android.net.@@ Lin@@ k@@ Proper@@ ti@@ es lin@@ k@@ Properties@@ ) { if ((m@@ Network@@ A@@ g@@ ent@@ ) != null@@ ) { android.util.Log.@@ e@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ TAG, "@@ on@@ I@@ p@@ Lay@@ er@@ St@@ ar@@ ted@@ "); } m@@ Lin@@ k@@ Proper@@ ti@@ es = lin@@ k@@ Properties@@ ; m@@ Network@@ Info.@@ set@@ D@@ eta@@ ile@@ d@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , null@@ , m@@ H@@ w@@ Address@@ ); m@@ Network@@ A@@ g@@ ent = new android.net.@@ Network@@ A@@ g@@ ent@@ (m@@ Hand@@ l@@ er.get@@ L@@ oo@@ per@@ (), m@@ Context@@ , com.android.server.@@ ether@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ TYP@@ E, m@@ Network@@ Info@@ , m@@ Cap@@ abili@@ ti@@ es@@ , m@@ Lin@@ k@@ Properties@@ , com.android.server.@@ ether@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ C@@ O@@ RE@@ ) { public void un@@ w@@ an@@ ted@@ () { if (@@ (@@ this@@ ) == (m@@ Network@@ A@@ g@@ ent@@ )) { st@@ o@@ p@@ (); } else if ((m@@ Network@@ A@@ g@@ ent@@ ) != null@@ ) { android.util.Log.d@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ TAG, ("@@ S@@ k@@ Proper@@ ti@@ es un@@ w@@ an@@ ted a@@ s w@@ e h@@ av@@ e a m@@ or@@ e mo@@ der@@ n " + "@@ instance@@ ")); } } }; }
private void st@@ ar@@ t@@ () { if (com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ TAG, java.lang.String@@ .@@ for@@ mat@@ ("@@ N@@ o I@@ p@@ Manager@@ : %@@ s@@ )@@ : m@@ Network@@ Info@@ =@@ %@@ s@@ ", name@@ , m@@ Network@@ Info@@ )); } if ((m@@ I@@ p@@ Manager@@ ) != null@@ ) st@@ op@@ (); m@@ Network@@ Info.@@ set@@ D@@ eta@@ ile@@ d@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State.@@ O@@ B@@ TA@@ IN@@ ING@@ _@@ IP@@ AD@@ D@@ R@@ , null@@ , m@@ H@@ w@@ Addres@@ s); m@@ I@@ p@@ Manager = new android.net.@@ ip.@@ I@@ p@@ Manager@@ (m@@ Context@@ , name@@ , m@@ I@@ p@@ Manager@@ Callback@@ ); if ((@@ com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State.@@ s@@ T@@ c@@ p@@ Buffer@@ Size@@ s) == null@@ ) { com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State.@@ s@@ T@@ c@@ p@@ Buffer@@ Size@@ s = m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ String(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ str@@ ing.@@ config@@ _@@ ether@@ net@@ _@@ t@@ c@@ p@@ _@@ buff@@ er@@ s); } com.android.server.@@ ether@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State.@@ pro@@ vision@@ I@@ p@@ Manager@@ (m@@ I@@ p@@ Config@@ , m@@ I@@ p@@ Config@@ , com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State.@@ s@@ T@@ c@@ p@@ Buffer@@ Size@@ s); }
private com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State network@@ For@@ Request@@ (@@ Network@@ Requ@@ est request@@ ) { java.lang.@@ Char@@ Se@@ qu@@ en@@ ce = requ@@ est.@@ network@@ Cap@@ abili@@ ties@@ .get@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ (); if (s@@ pe@@ c@@ if@@ i@@ er instanceof android.net.@@ String@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ ) { requ@@ es@@ ted@@ I@@ face = ((@@ android.net.@@ String@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ ) (s@@ pe@@ c@@ if@@ ier@@ )).@@ s@@ pe@@ c@@ if@@ ier@@ ; } com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State net@@ wor@@ k = null@@ ; if (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ requ@@ es@@ ted@@ Iface@@ ))) { com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State n = m@@ Tr@@ ack@@ ing@@ Inter@@ fa@@ ces@@ .get@@ (@@ requ@@ es@@ ted@@ Iface@@ ); net@@ wor@@ k = (@@ n@@ .@@ stati@@ s@@ if@@ i@@ ed@@ (@@ requ@@ est.@@ network@@ Cap@@ abili@@ ties@@ )) ? n : null@@ ; } else { for (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State n : m@@ Tr@@ ack@@ ing@@ Inter@@ fa@@ ces@@ .@@ valu@@ es@@ ()) { if (@@ n@@ .@@ stati@@ s@@ if@@ i@@ ed@@ (@@ requ@@ est.@@ network@@ Cap@@ abili@@ ties@@ )) { net@@ wor@@ k = n@@ ; break@@ ; } } } return network@@ ; }
void add@@ Interface@@ (java.lang.String if@@ ace@@ Name, java.lang.String h@@ w@@ Addres@@ s, android.net.@@ Network@@ Cap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ties@@ , android.net.@@ I@@ p@@ Configur@@ ation ip@@ Configuration@@ ) { if (m@@ Tr@@ ack@@ ing@@ Inter@@ fa@@ ces@@ .@@ contain@@ s@@ Key@@ (@@ if@@ ace@@ Name@@ )) { return@@ ; } if (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ TAG, ((@@ ("@@ add@@ Interface@@ , if@@ ace@@ : " + if@@ ace@@ Name@@ ) + ", c@@ ap@@ abili@@ ties@@ : ") + c@@ ap@@ abili@@ ties@@ )); } com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State if@@ ac@@ e = new com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State@@ (@@ if@@ ace@@ Name, h@@ w@@ Addres@@ s, m@@ Handler@@ , m@@ Context@@ , c@@ ap@@ abili@@ ties@@ ); if@@ ace@@ .set@@ I@@ p@@ Config@@ (@@ ip@@ Configuration@@ ); m@@ Tr@@ ack@@ ing@@ Inter@@ fa@@ ces@@ .@@ put@@ (@@ if@@ ace@@ Name, if@@ ace@@ ); }
public boolean write@@ (java.lang.String if@@ ace@@ , android.net.@@ I@@ p@@ Configur@@ ation config@@ ) { boolean mo@@ d@@ if@@ i@@ ed@@ ; synchronized@@ (m@@ S@@ ync@@ ) { if (@@ con@@ fi@@ g == null@@ ) { mo@@ d@@ if@@ i@@ ed = (m@@ I@@ p@@ Configur@@ ations.@@ remove@@ (@@ if@@ ace@@ )) != null@@ ; } else { android.net.@@ I@@ p@@ Configur@@ ation old@@ Con@@ fi@@ g = m@@ I@@ p@@ Configur@@ ations.@@ put@@ (@@ if@@ ace@@ , config@@ ); mo@@ d@@ if@@ i@@ ed = !@@ (@@ config.@@ equals(@@ old@@ Config@@ )); } if (m@@ o@@ d@@ if@@ i@@ ed@@ ) { m@@ Stor@@ e.@@ write@@ I@@ p@@ Configuration@@ s@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Config@@ Stor@@ e.@@ ip@@ Config@@ File@@ , m@@ I@@ p@@ Configuration@@ s); } } return mo@@ d@@ if@@ i@@ ed@@ ; }
void remove@@ Interface@@ (java.lang.String int@@ er@@ face@@ Name@@ ) { com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Network@@ Fa@@ ctory.@@ Network@@ Interface@@ State if@@ ac@@ e = m@@ Tr@@ ack@@ ing@@ Inter@@ fa@@ ces@@ .@@ remove@@ (@@ int@@ er@@ face@@ Name); if (@@ if@@ ac@@ e != null@@ ) { if@@ ace@@ .@@ st@@ op@@ (); } }
void st@@ o@@ p@@ () { if ((m@@ I@@ p@@ Manager@@ ) != null@@ ) { m@@ I@@ p@@ Manager = null@@ ; } m@@ Network@@ Info@@ .set@@ D@@ eta@@ ile@@ d@@ State@@ (@@ D@@ eta@@ ile@@ d@@ State@@ .@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , null@@ , m@@ H@@ w@@ Address@@ ); if ((m@@ Network@@ A@@ g@@ ent@@ ) != null@@ ) { update@@ A@@ g@@ ent@@ ent@@ (); m@@ Network@@ A@@ g@@ ent = null@@ ; } cle@@ ar@@ (); }
private static void pro@@ vision@@ I@@ p@@ Manager@@ (android.net.@@ ip.@@ I@@ p@@ Manager m@@ g@@ r@@ , android.net.@@ I@@ p@@ Configur@@ ation config@@ , java.lang.String t@@ c@@ p@@ Buffer@@ Siz@@ es) { if (((@@ config.@@ get@@ Prox@@ y@@ Setting@@ s()) == (android.net.@@ I@@ p@@ Configur@@ ation.@@ Prox@@ y@@ Setting@@ s.@@ STAT@@ IC@@ )) || ((@@ config.@@ get@@ Prox@@ y@@ Setting@@ s()) == (android.net.@@ I@@ p@@ Configur@@ ation.@@ Prox@@ y@@ Setting@@ s.@@ P@@ AC@@ ))) { m@@ g@@ r@@ .set@@ H@@ ttp@@ Prox@@ y@@ (@@ config.@@ get@@ H@@ ttp@@ Prox@@ y@@ ()); } if (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ t@@ c@@ p@@ Buffer@@ Siz@@ es@@ ))) { m@@ g@@ r@@ .set@@ T@@ c@@ p@@ Buffer@@ Siz@@ es@@ (@@ t@@ c@@ p@@ Buffer@@ Siz@@ es@@ ); } final android.net.@@ ip.@@ I@@ p@@ Manager.@@ Pro@@ vision@@ ing@@ Configur@@ ation pro@@ vision@@ ing@@ Configuration@@ ; if ((@@ config.@@ get@@ I@@ p@@ As@@ sign@@ ment@@ ()) == (android.net.@@ I@@ p@@ Configur@@ ation.@@ I@@ p@@ As@@ sign@@ m@@ ent.@@ STAT@@ IC@@ )) { pro@@ vision@@ ing@@ Configur@@ ation = android.net.@@ ip.@@ I@@ p@@ Manager.@@ build@@ Pro@@ vision@@ ing@@ Configuration@@ ().@@ w@@ ith@@ St@@ ati@@ c@@ Configuration@@ (@@ config.@@ get@@ St@@ ati@@ c@@ I@@ p@@ Configuration@@ ()).@@ build@@ (); } else { pro@@ vision@@ ing@@ Configur@@ ation = android.net.@@ ip.@@ I@@ p@@ Manager.@@ build@@ Pro@@ vision@@ ing@@ Configuration@@ ().@@ w@@ ith@@ Pro@@ vision@@ ing@@ Time@@ out@@ M@@ s(@@ 0@@ ).@@ build@@ (); } m@@ g@@ r.@@ start@@ Pro@@ vision@@ ing@@ Configuration@@ ); }
boolean stati@@ s@@ if@@ i@@ ed@@ (@@ android.util.@@ Network@@ Cap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ti@@ es@@ ) { return this@@ .@@ m@@ Cap@@ abili@@ ti@@ es.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Im@@ m@@ ut@@ able@@ Network@@ Cap@@ abili@@ ti@@ es@@ (c@@ ap@@ abili@@ ti@@ es@@ ); }
void dum@@ p@@ (java.io.FileDescriptor fd, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ In@@ d@@ ent@@ ing@@ P@@ r@@ int@@ Wri@@ ter p@@ w@@ , java.lang.String[] arg@@ s) { try { po@@ st@@ And@@ W@@ ait@@ For@@ Run@@ n@@ able@@ ((@@ ) -@@ > { p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (get@@ Class@@ ().get@@ Sim@@ ple@@ Name@@ ()); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (("@@ E@@ th@@ er@@ ne@@ t int@@ er@@ face name fil@@ ter@@ : " + (m@@ Iface@@ Match@@ ))); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (("@@ Listener@@ s@@ : " + (m@@ Listener@@ s.get@@ Reg@@ ister@@ ed@@ Callback@@ Count@@ ()))); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ ("@@ I@@ P Configuration@@ s@@ :@@ "); p@@ w@@ .@@ in@@ cre@@ ase@@ In@@ d@@ ent@@ (); for (java.lang.String if@@ ac@@ e : m@@ I@@ p@@ Configur@@ ations.@@ key@@ Set@@ ()) { p@@ w@@ .@@ p@@ r@@ int@@ ln@@ ((@@ (@@ if@@ ac@@ e + "@@ : ") + (m@@ I@@ p@@ Configur@@ ations.@@ get@@ (@@ if@@ ace@@ )))); } p@@ w@@ .@@ dec@@ re@@ ase@@ In@@ d@@ ent@@ (); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ ("@@ Net@@ wor@@ k Cap@@ abili@@ ties@@ :@@ "); p@@ w@@ .@@ in@@ cre@@ ase@@ In@@ d@@ ent@@ (); for (java.lang.String if@@ ac@@ e : m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ key@@ Set@@ ()) { p@@ w@@ .@@ p@@ r@@ int@@ ln@@ ((@@ (@@ if@@ ac@@ e + "@@ : ") + (m@@ Network@@ Cap@@ abili@@ ties@@ .get@@ (@@ if@@ ace@@ )))); } p@@ w@@ .@@ dec@@ re@@ ase@@ In@@ d@@ ent@@ (); p@@ w@@ .@@ p@@ r@@ int@@ ln@@ (); m@@ Fa@@ ctory.@@ dum@@ p@@ (@@ fd, p@@ w@@ , arg@@ s); }); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ dum@@ p@@ () int@@ er@@ rup@@ ted@@ "); } }
public android.net.@@ I@@ p@@ Configur@@ ation get@@ I@@ p@@ Configuration@@ For@@ Default@@ Interface@@ (@@ ) { synchronized@@ (m@@ S@@ ync@@ ) { return m@@ I@@ p@@ Configuration@@ For@@ Default@@ Inter@@ face@@ ; } }
public void load@@ () { if ((m@@ Interface@@ Name@@ ) == null@@ ) { m@@ Interface@@ Name = if@@ a@@ ces@@ [0@@ ]; m@@ I@@ p@@ Configur@@ ation = m@@ E@@ th@@ er@@ net@@ Manager.@@ get@@ Configuration@@ (m@@ Interface@@ Name); } }
void dum@@ p@@ (java.io.FileDescriptor fd, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ In@@ d@@ ent@@ ing@@ P@@ r@@ int@@ Wri@@ ter p@@ w@@ , java.lang.String[] arg@@ s) { p@@ w@@ .@@ p@@ r@@ int@@ ln@@ ("@@ W@@ in@@ do@@ w@@ : Clas@@ s
public void write@@ I@@ p@@ And@@ Prox@@ y@@ Configuration@@ s@@ To@@ File@@ (java.lang.String file@@ Path@@ , final android.util.@@ S@@ parse@@ Array@@ <@@ android.net.@@ I@@ p@@ Configuration@@ > network@@ s) { m@@ Wri@@ ter.@@ write@@ (file@@ Path@@ , new com.android.server.@@ net.@@ D@@ el@@ ay@@ ed@@ Dis@@ k@@ Wri@@ te@@ .@@ Wri@@ ter@@ () { public void on@@ Wri@@ te@@ Cal@@ le@@ d@@ (@@ java.io.@@ Data@@ Output@@ Stream out@@ ) throw@@ s java.io.IOException { out.@@ write@@ Int@@ (com.android.server.@@ net.@@ I@@ p@@ Config@@ Stor@@ e.@@ IP@@ C@@ ON@@ FI@@ G_@@ F@@ IL@@ E_@@ V@@ E@@ RS@@ ION@@ ); for (@@ int i = 0; i < (@@ network@@ s.@@ size@@ ()); i++) { com.android.server.@@ net.@@ I@@ p@@ Config@@ Stor@@ e.@@ write@@ Config@@ (@@ out, java.lang.String.@@ value@@ Of@@ (@@ network@@ s.@@ key@@ At@@ (i@@ ), network@@ s.@@ value@@ At@@ (i@@ )); } } }); }
public java.util.List<@@ android.net.@@ I@@ p@@ Configuration@@ > get@@ I@@ p@@ Configuration@@ s() { return m@@ I@@ p@@ Configuration@@ s; }
private void parse@@ E@@ th@@ er@@ net@@ Config@@ (java.lang.String config@@ String@@ ) { java.lang.String[] to@@ k@@ en@@ s = config@@ Str@@ ing.@@ s@@ pli@@ t@@ ("@@ ;@@ "); java.lang.String name = to@@ k@@ en@@ s@@ [0@@ ]; android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ create@@ Network@@ Cap@@ abili@@ ties@@ (((@@ to@@ k@@ en@@ s.@@ length) > 1 ? to@@ k@@ en@@ s@@ [@@ 1@@ ] : null@@ )); m@@ Network@@ Cap@@ abili@@ ti@@ es.@@ put@@ (@@ name@@ , n@@ c@@ ); if (((@@ to@@ k@@ en@@ s.@@ length) > 2@@ ) && (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ to@@ k@@ en@@ s@@ [@@ 2@@ ]@@ )@@ ))) { android.net.@@ I@@ p@@ Configur@@ ation ip@@ Con@@ fi@@ g = com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ create@@ St@@ ati@@ c@@ I@@ p@@ Configuration@@ (@@ to@@ k@@ en@@ s@@ [@@ 2@@ ]@@ ); m@@ I@@ p@@ Configur@@ ations.@@ put@@ (@@ name@@ , ip@@ Config@@ ); } }
private static android.net.@@ Network@@ Cap@@ abili@@ ti@@ es create@@ Network@@ Cap@@ abili@@ ties@@ (@@ @@@ android.@@ annotation.@@ Nullable java.lang.String com@@ ma@@ Se@@ par@@ ated@@ Cap@@ abili@@ ties@@ ) { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); n@@ c.@@ clear@@ All@@ (); n@@ c.@@ add@@ Trans@@ port@@ Type@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ TR@@ AN@@ S@@ P@@ O@@ RT@@ _@@ E@@ TH@@ ER@@ N@@ E@@ T@@ ); n@@ c.@@ set@@ Lin@@ k@@ U@@ ps@@ tr@@ eam@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ((@@ 10@@ 0 * 1@@ 00@@ 0@@ )); n@@ c.@@ set@@ Lin@@ k@@ Do@@ wn@@ str@@ eam@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ((@@ 10@@ 0 * 1@@ 00@@ 0@@ )); if (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ com@@ ma@@ Se@@ par@@ ated@@ Cap@@ abili@@ ties@@ ))) { for (java.lang.String str@@ Network@@ Cap@@ abili@@ t@@ y : com@@ ma@@ Se@@ par@@ ated@@ Cap@@ abili@@ ti@@ es.@@ s@@ pli@@ t@@ ("@@ ,@@ ")) { if (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ str@@ Network@@ Cap@@ abili@@ ty@@ ))) { n@@ c.@@ add@@ Cap@@ abili@@ ty@@ (java.lang.@@ Integ@@ er.@@ value@@ Of@@ (@@ str@@ Network@@ Cap@@ abili@@ ty@@ )); } } } return n@@ c@@ ; }
private void update@@ Interface@@ State@@ (java.lang.String if@@ ace@@ , boolean up@@ ) { boolean mo@@ d@@ if@@ i@@ ed = m@@ Fa@@ ctory.@@ update@@ Interface@@ Lin@@ k@@ State@@ (@@ if@@ ace@@ , up@@ ); if (m@@ o@@ d@@ if@@ i@@ ed@@ ) { boolean res@@ tr@@ ic@@ ted = is@@ Res@@ tr@@ ic@@ ted@@ Interface@@ (@@ if@@ ace@@ ); int n = m@@ Listener@@ s.@@ b@@ e@@ gin@@ B@@ roadcast@@ (); for (@@ int i = 0; i < n@@ ; i++) { try { if (@@ res@@ tr@@ ic@@ ted@@ ) { com.android.server.@@ ether@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ Listener@@ Info list@@ ener@@ Info = ((@@ com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ Listener@@ Info@@ ) (m@@ Listener@@ s.get@@ B@@ roadcast@@ C@@ ook@@ i@@ e@@ (i@@ ))); if (!(@@ list@@ ener@@ Info.@@ can@@ U@@ se@@ Res@@ tr@@ ic@@ ted@@ Network@@ s@@ )) continue@@ ; } m@@ Listener@@ s.get@@ B@@ roadcast@@ Item@@ (i@@ ).@@ on@@ A@@ va@@ il@@ abili@@ ty@@ Changed@@ (@@ if@@ ace@@ , up@@ ); } catch (android.os.@@ Remote@@ Exception e) { } } m@@ Listener@@ s.@@ fin@@ is@@ h@@ B@@ roadcast@@ (); } }
private void po@@ st@@ And@@ W@@ ait@@ For@@ Run@@ n@@ able@@ (java.lang.@@ Run@@ n@@ able r@@ ) throw@@ s java.lang.@@ Interrup@@ ted@@ Exception { java.util.@@ concurrent.@@ Count@@ Do@@ wn@@ L@@ at@@ ch lat@@ ch = new java.util.@@ concurrent.@@ Count@@ Do@@ wn@@ L@@ atch@@ (1@@ ); m@@ Handler.@@ po@@ st@@ ((@@ ) -@@ > { try { r.@@ run@@ (); } final@@ l@@ y { l@@ atch@@ .@@ count@@ Do@@ wn@@ (); } }); l@@ atch@@ .@@ aw@@ ait@@ (); }
private static android.net.@@ Network@@ Cap@@ abili@@ ti@@ es create@@ Default@@ Network@@ Cap@@ abili@@ ties@@ () { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ create@@ Network@@ Cap@@ abili@@ ties@@ (@@ null@@ ); n@@ c.@@ add@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); n@@ c.@@ add@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); return n@@ c@@ ; }
@java.lang.Override public void int@@ er@@ face@@ Lin@@ k@@ State@@ Changed@@ (java.lang.String if@@ ace@@ , boolean up@@ ) { if (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ D@@ B@@ G) android.util.Log.@@ i@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ TAG, (((@@ "@@ int@@ er@@ face@@ Lin@@ k@@ State@@ Changed@@ , if@@ ace@@ : " + if@@ ace@@ ) + ", up@@ : ") + up@@ )); m@@ Handler.@@ po@@ st@@ ((@@ ) -@@ > update@@ Interface@@ State@@ (@@ if@@ ace@@ , up@@ )); }
void update@@ I@@ p@@ Configuration@@ (java.lang.String if@@ ace@@ , android.net.@@ I@@ p@@ Configur@@ ation ip@@ Configuration@@ ) { if (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ D@@ B@@ G) android.util.Log.@@ i@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ TAG, ((@@ ("@@ update@@ I@@ p@@ Configuration@@ , if@@ ace@@ : " + if@@ ace@@ ) + ", c@@ f@@ g@@ : ") + ip@@ Configuration@@ )); m@@ Config@@ Stor@@ e.@@ write@@ (@@ if@@ ace@@ , ip@@ Configuration@@ ); m@@ I@@ p@@ Configur@@ ations.@@ put@@ (@@ if@@ ace@@ , ip@@ Configuration@@ ); m@@ Handler.@@ po@@ st@@ ((@@ ) -@@ > m@@ Fa@@ ctory.@@ update@@ I@@ p@@ Configuration@@ (@@ if@@ ace@@ , ip@@ Configuration@@ )); }
private void add@@ Interface@@ (java.lang.String if@@ ace@@ ) { android.net.@@ Interface@@ Configur@@ ation con@@ fi@@ g = null@@ ; try { m@@ N@@ M@@ Service@@ .set@@ Interface@@ Up@@ (@@ if@@ ace@@ ); con@@ fi@@ g = m@@ N@@ M@@ Service@@ .get@@ Interface@@ Config@@ (@@ if@@ ace@@ ); } catch (android.os.@@ Remote@@ Exception | java.lang.Illegal@@ State@@ Exception e) { android.util.Log.@@ e@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ TAG, ("@@ Er@@ ror up@@ p@@ ing int@@ er@@ face " + if@@ ace@@ ), e); } if (@@ con@@ fi@@ g == null@@ ) { android.util.Log.@@ e@@ (com.android.server.@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ TAG, (("@@ Null int@@ er@@ face con@@ fi@@ g for " + if@@ ace@@ ) + "@@ . B@@ a@@ il@@ ing out.@@ ")); return@@ ; } android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = m@@ Network@@ Cap@@ abili@@ ties@@ .get@@ (@@ if@@ ace@@ ); if (@@ n@@ c == null@@ ) { n@@ c = com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ create@@ Default@@ Network@@ Cap@@ abili@@ ties@@ (); } android.net.@@ I@@ p@@ Configur@@ ation ip@@ Configur@@ ation = m@@ I@@ p@@ Configur@@ ations.@@ get@@ (@@ if@@ ace@@ ); if (@@ ip@@ Configur@@ ation == null@@ ) { ip@@ Configur@@ ation = com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ create@@ Default@@ I@@ p@@ Configuration@@ (); } android.util.Log.d@@ (com.android.server.@@ ether@@ net.@@ E@@ th@@ er@@ net@@ Tr@@ ack@@ er.@@ TAG, ("@@ St@@ ar@@ ted tr@@ ack@@ ing int@@ er@@ face " + if@@ ace@@ )); m@@ Fa@@ ctory.@@ add@@ Interface@@ (@@ if@@ ace@@ , config.@@ get@@ H@@ ardwar@@ e@@ Address@@ (), n@@ c@@ , ip@@ Configuration@@ ); if (@@ config.@@ has@@ Flag@@ ("@@ run@@ ning@@ ")) { update@@ Interface@@ State@@ (@@ if@@ ace@@ , true@@ ); } }
private boolean ar@@ e@@ All@@ Application@@ s@@ Read@@ y@@ () { for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ard@@ Appli@@ c@@ ation ap@@ p : m@@ U@@ ic@@ c@@ Application@@ s) { if (((@@ ap@@ p != null@@ ) && (is@@ Sup@@ ported@@ Application@@ (@@ app@@ ))) && (!(@@ app@@ .is@@ Read@@ y@@ ()))) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ V@@ D@@ B@@ G) log@@ ("@@ ar@@ e@@ All@@ Application@@ s@@ "); return false@@ ; } } if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ V@@ D@@ B@@ G) { log@@ (("@@ ar@@ e@@ All@@ Application@@ s@@ Read@@ y@@ : out@@ s@@ id@@ e lo@@ op@@ , return " + ((m@@ U@@ ic@@ c@@ Application@@ s@@ [0@@ ]@@ ) != null@@ ))); } return (m@@ U@@ ic@@ c@@ C@@ ard@@ ) instanceof com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ ) || ((m@@ U@@ ic@@ c@@ Application@@ s@@ [0@@ ]@@ ) != null@@ )) { } }
private boolean ar@@ e@@ All@@ Record@@ s@@ Load@@ ed@@ () { for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ard@@ Appli@@ c@@ ation ap@@ p : m@@ U@@ ic@@ c@@ Application@@ s) { if ((@@ ap@@ p != null@@ ) && (is@@ Sup@@ ported@@ Application@@ (@@ app@@ ))) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Record@@ s i@@ r = app@@ .get@@ I@@ cc@@ Record@@ s(); if ((@@ i@@ r == null@@ ) || (!(@@ ir.@@ is@@ Load@@ ed@@ ()))) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ V@@ D@@ B@@ G) log@@ ("@@ ar@@ e@@ All@@ Record@@ s@@ Load@@ ed@@ : "); return false@@ ; } } if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ V@@ D@@ B@@ G) { log@@ (("@@ ar@@ e@@ All@@ Record@@ s@@ Load@@ ed@@ : out@@ s@@ id@@ e lo@@ op@@ , return " + ((m@@ U@@ ic@@ c@@ Application@@ s@@ [0@@ ]@@ ) != null@@ ))); } return (m@@ U@@ ic@@ c@@ C@@ ard@@ ) instanceof com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ ) || ((m@@ U@@ ic@@ c@@ Application@@ s@@ [0@@ ]@@ ) != null@@ ); }
@@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ (d@@ es@@ cri@@ pti@@ on = "@@ Requ@@ est an L@@ E connec@@ tion param@@ eter@@ s up@@ dat@@ e.@@ ") public boolean g@@ att@@ Client@@ Request@@ Le@@ Connection@@ Parameter@@ s(@@ @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ index@@ ") java.lang.Integ@@ er index@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ min@@ Connection@@ Inter@@ val@@ ") java.lang.Integ@@ er min@@ Connection@@ Inter@@ val@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ max@@ Connection@@ Inter@@ val@@ ") java.lang.Integ@@ er max@@ Connection@@ Inter@@ val@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ s@@ la@@ ve@@ L@@ at@@ enc@@ y@@ ") java.lang.Integ@@ er s@@ la@@ ve@@ L@@ at@@ enc@@ y@@ , @@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ Param@@ et@@ er(@@ name = "@@ super@@ vision@@ Time@@ out@@ ") java.lang.Integ@@ er super@@ vision@@ Time@@ out@@ ) throw@@ s java.lang.Exception { boolean result = false@@ ; if ((m@@ Bluetooth@@ G@@ att@@ Lis@@ t.get@@ (in@@ dex@@ )) != null@@ ) { result = m@@ Bluetooth@@ G@@ att@@ Lis@@ t.get@@ (in@@ dex@@ ).@@ request@@ Le@@ Connection@@ Parameter@@ s@@ (m@@ in@@ Connection@@ Inter@@ val@@ , max@@ Connection@@ Inter@@ val@@ , s@@ la@@ ve@@ L@@ at@@ enc@@ y@@ , super@@ vision@@ Time@@ out); } else { throw new java.lang.@@ Exception@@ (("@@ In@@ va@@ li@@ d in@@ dex input@@ :@@ " + index@@ )); } return result@@ ; }
@java.lang.Override public void raw@@ Le@@ Connection@@ Parameter@@ s@@ Up@@ date@@ (@@ int c@@ lient@@ I@@ f@@ , java.lang.String addres@@ s, int min@@ Connection@@ Inter@@ val@@ , int max@@ Connection@@ Inter@@ val@@ , int s@@ la@@ ve@@ L@@ at@@ enc@@ y@@ , int super@@ vision@@ Time@@ out@@ ) { com.android.@@ bluetooth.@@ g@@ at@@ t.@@ G@@ att@@ Ser@@ vice ser@@ vice = get@@ Service@@ (); if (@@ ser@@ vice == null@@ ) { return@@ ; } service@@ .@@ raw@@ Le@@ Connection@@ Parameter@@ s@@ Up@@ date@@ (c@@ lient@@ I@@ f@@ , addres@@ s, min@@ Connection@@ Inter@@ val@@ , max@@ Connection@@ Inter@@ val@@ , s@@ la@@ ve@@ L@@ at@@ enc@@ y@@ , super@@ vision@@ Time@@ out); }
void raw@@ Le@@ Connection@@ Parameter@@ s@@ Up@@ date@@ (@@ int c@@ lient@@ I@@ f@@ , java.lang.String addres@@ s, int min@@ Inter@@ val@@ , int max@@ Inter@@ val@@ , int s@@ la@@ ve@@ L@@ at@@ enc@@ y@@ , int super@@ vision@@ Time@@ out@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ g@@ at@@ t.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); if (com.android.bluetooth.@@ g@@ at@@ t.@@ G@@ att@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ g@@ at@@ t.@@ G@@ att@@ Service.@@ TAG, ((((@@ ("@@ raw@@ Le@@ Connection@@ Parameter@@ s@@ Up@@ date@@ () - add@@ ress@@ =@@ " + addres@@ s) + ", int@@ er@@ val@@ s@@ =@@ ") + min@@ Inter@@ val@@ ) + "@@ /@@ ") + max@@ Inter@@ val@@ ) + ", lat@@ enc@@ y@@ =@@ ") + s@@ la@@ ve@@ L@@ at@@ enc@@ y@@ ) + ", time@@ out@@ =@@ ") + super@@ vision@@ Time@@ out@@ )); } g@@ att@@ Connection@@ Parameter@@ Up@@ date@@ Native@@ (c@@ lient@@ I@@ f@@ , addres@@ s, min@@ Inter@@ val@@ , s@@ la@@ ve@@ L@@ at@@ enc@@ y@@ , super@@ vision@@ Time@@ out); }
private void b@@ roadcast@@ Connection@@ State@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int new@@ State@@ ) { java.lang.Integ@@ er pre@@ v@@ State@@ Integ@@ er = m@@ Input@@ De@@ vices@@ .get@@ (@@ device@@ ); int pre@@ v@@ State = (p@@ re@@ v@@ State@@ Integ@@ er == null@@ ) ? android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Ho@@ s@@ t.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D : pre@@ v@@ State@@ Integ@@ er@@ ; if (p@@ re@@ v@@ State == new@@ State@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Host@@ Service.@@ TAG, ("@@ B@@ roadcast@@ Connection@@ State@@ : st@@ ate ch@@ ang@@ e@@ : " + new@@ State@@ )); return@@ ; } m@@ Input@@ De@@ vices@@ .@@ put@@ (@@ device@@ , new@@ State@@ ); if (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Host@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Host@@ Service.@@ TAG, ((((@@ ("@@ B@@ roadcast@@ Connection@@ State@@ : st@@ ate " + device@@ ) + " pre@@ v@@ State@@ ) + "@@ -@@ >@@ ") + new@@ State@@ )); } android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Ho@@ s@@ t.@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , pre@@ v@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , new@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, device@@ ); int@@ ent.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ O@@ O@@ T@@ ); send@@ B@@ roadcast@@ As@@ User@@ (@@ int@@ ent@@ , User@@ Hand@@ le.@@ AL@@ L@@ , com.android.@@ bluetooth.@@ h@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); }
private boolean sup@@ port@@ s@@ Con@@ di@@ tion@@ Provider@@ s() { android.@@ app.@@ Activity@@ Manager am = ((@@ android.@@ app.@@ Activity@@ Manager@@ ) (m@@ Contex@@ t.get@@ System@@ Service@@ (@@ Context.@@ AC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E@@ ))); return (!(m@@ Contex@@ t.get@@ Package@@ Manager@@ ().@@ has@@ System@@ F@@ e@@ ature@@ (@@ Package@@ Manager.@@ F@@ E@@ AT@@ UR@@ E_@@ W@@ AT@@ CH@@ )) && (!(m@@ Contex@@ t.get@@ Package@@ Manager@@ ().@@ has@@ System@@ F@@ e@@ ature@@ (@@ Package@@ Manager.@@ F@@ E@@ AT@@ UR@@ E_@@ W@@ AT@@ CH@@ )); }
@org.junit.Test public void test@@ Get@@ Pro@@ vision@@ ed@@ Valu@@ es@@ () throw@@ s java.lang.Exception { com.android.@@ im@@ s.@@ Im@@ s@@ Manager im@@ s@@ Manager = in@@ iti@@ aliz@@ e@@ Pro@@ vision@@ ed@@ Valu@@ es@@ (); assert@@ Equal@@ s@@ (@@ true@@ , im@@ s@@ Manager.@@ is@@ W@@ fc@@ Pro@@ vision@@ ed@@ On@@ Device@@ ()); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ ))@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ O@@ IC@@ E_@@ O@@ V@@ ER_@@ WI@@ FI@@ _S@@ E@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )); assert@@ Equal@@ s@@ (@@ true@@ , im@@ s@@ Manager.@@ is@@ V@@ t@@ Pro@@ vision@@ ed@@ On@@ Device@@ ()); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ ))@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ L@@ V@@ C@@ _S@@ E@@ T@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )); assert@@ Equal@@ s@@ (@@ true@@ , im@@ s@@ Manager.@@ is@@ V@@ ol@@ te@@ Pro@@ vision@@ ed@@ On@@ Device@@ ()); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ ))@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ L@@ T_@@ SE@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )); assert@@ Equal@@ s@@ (@@ true@@ , im@@ s@@ Manager.@@ is@@ W@@ fc@@ Pro@@ vision@@ ed@@ On@@ Device@@ ()); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ ))@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ O@@ IC@@ E_@@ O@@ V@@ ER_@@ WI@@ FI@@ _S@@ E@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )); assert@@ Equal@@ s@@ (@@ true@@ , im@@ s@@ Manager.@@ is@@ V@@ t@@ Pro@@ vision@@ ed@@ On@@ Device@@ ()); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ ))@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ L@@ V@@ C@@ _S@@ E@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )); assert@@ Equal@@ s@@ (@@ true@@ , im@@ s@@ Manager.@@ is@@ V@@ ol@@ te@@ Pro@@ vision@@ ed@@ On@@ Device@@ ()); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ ))@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ L@@ T_@@ SE@@ T@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )); }
public final void on@@ S@@ ms@@ Statu@@ s@@ Re@@ port@@ Recei@@ v@@ ed@@ (@@ int message@@ Ref@@ , java.lang.String for@@ mat@@ , byte@@ [] p@@ du@@ ) { synchronized@@ (m@@ Lock) { if ((m@@ Listener@@ ) == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ N@@ o not read@@ y@@ .@@ "); } try { m@@ List@@ en@@ er.@@ on@@ S@@ ms@@ Statu@@ s@@ Re@@ port@@ Recei@@ v@@ ed@@ (m@@ ess@@ age@@ Ref@@ , for@@ mat@@ , p@@ du@@ ); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ Manager.@@ Im@@ s@@ S@@ ms@@ Imp@@ l@@ Bas@@ e@@ .@@ LO@@ G_@@ TAG, ("@@ Co@@ ul@@ d not pro@@ ces@@ s s@@ m@@ s statu@@ s re@@ port@@ : " + (@@ e.get@@ Message@@ ()))); ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ Re@@ port@@ (m@@ ess@@ age@@ Ref@@ , android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ .@@ Im@@ s@@ S@@ ms@@ Imp@@ l.@@ STAT@@ US@@ _RE@@ P@@ O@@ RT@@ _@@ STAT@@ US@@ _@@ ER@@ RO@@ R@@ ); } } }
public void ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ (@@ int message@@ Ref@@ , @@@ android.@@ telephony.@@ im@@ s@@ .@@ De@@ li@@ ver@@ Statu@@ s@@ Res@@ ult int result@@ ) { }
public final void on@@ S@@ ms@@ Recei@@ v@@ ed@@ (java.lang.String for@@ mat@@ , byte@@ [] p@@ du@@ ) throw@@ s java.lang.Illegal@@ State@@ Exception { synchronized@@ (m@@ Lock) { if ((m@@ Listener@@ ) == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ N@@ o not read@@ y@@ .@@ "); } try { m@@ List@@ en@@ er.@@ on@@ S@@ ms@@ Recei@@ v@@ ed@@ (@@ for@@ mat@@ , p@@ du@@ ); ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ ((@@ -1@@ ), android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ Manager.@@ Im@@ s@@ S@@ ms@@ Imp@@ l.@@ DE@@ L@@ I@@ V@@ ER_@@ STAT@@ US@@ _@@ O@@ K@@ ); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ im@@ s@@ .@@ LO@@ G_@@ TAG, ("@@ S@@ ms@@ Recei@@ v@@ ed@@ : " + (@@ e.get@@ Message@@ ()))); ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ ((@@ -1@@ ), android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ Manager.@@ Im@@ s@@ S@@ ms@@ Imp@@ l@@ Bas@@ e@@ .@@ DE@@ L@@ I@@ V@@ ER_@@ STAT@@ US@@ _@@ ER@@ RO@@ R@@ ); } }
private void set@@ Default@@ Valu@@ es@@ () { m@@ Bund@@ le.@@ put@@ Boolean@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y_@@ E@@ DI@@ TA@@ B@@ L@@ E_@@ EN@@ H@@ AN@@ CE@@ D_@@ 4@@ G_@@ L@@ T@@ E_@@ B@@ O@@ O@@ L@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ EN@@ H@@ AN@@ CE@@ D_@@ 4@@ G_@@ EN@@ AB@@ L@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ ); m@@ Bund@@ le.@@ put@@ Boolean@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ EN@@ AB@@ LE@@ D_@@ B@@ O@@ L@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ EN@@ AB@@ L@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ ); m@@ Bund@@ le.@@ put@@ Boolean@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ RO@@ AM@@ ING@@ _@@ EN@@ AB@@ LE@@ D_@@ B@@ O@@ L@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ RO@@ AM@@ ING@@ _@@ EN@@ AB@@ L@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ ); m@@ Bund@@ le.@@ put@@ Int@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ W@@ F@@ C@@ _@@ I@@ M@@ S@@ _MOD@@ E_@@ IN@@ T@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ W@@ F@@ C@@ _@@ I@@ M@@ S@@ _MOD@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ ); m@@ Bund@@ le.@@ put@@ Int@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ RO@@ AM@@ ING@@ _MOD@@ E_@@ IN@@ T@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ RO@@ AM@@ ING@@ _MOD@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ ); m@@ Bund@@ le.@@ put@@ Boolean@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _C@@ AR@@ R@@ I@@ ER@@ _V@@ O@@ L@@ T@@ E_@@ P@@ RO@@ V@@ IS@@ ION@@ ING@@ _RE@@ Q@@ U@@ I@@ RE@@ D_@@ B@@ O@@ L@@ , true@@ ); }
private void ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ (@@ int message@@ Ref@@ , @@@ android.@@ telephony.@@ im@@ s@@ .@@ De@@ li@@ ver@@ Statu@@ s@@ Res@@ ult int result@@ ) { get@@ S@@ ms@@ Imp@@ lem@@ ent@@ ation@@ ().@@ ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ (m@@ ess@@ age@@ Ref@@ , result@@ ); }
@org.junit.Test public void test@@ Set@@ Pro@@ vision@@ ed@@ Valu@@ es@@ () throw@@ s java.lang.Exception { com.android.@@ im@@ s.@@ Im@@ s@@ Manager im@@ s@@ Manager = in@@ iti@@ aliz@@ e@@ Pro@@ vision@@ ed@@ Valu@@ es@@ (); assert@@ Equal@@ s@@ (@@ true@@ , im@@ s@@ Manager.@@ is@@ W@@ fc@@ Pro@@ vision@@ ed@@ On@@ Device@@ ()); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ ))@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ O@@ IC@@ E_@@ O@@ V@@ ER_@@ WI@@ FI@@ _S@@ E@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )); im@@ s@@ Manager.@@ get@@ Config@@ Interface@@ ().@@ set@@ Pro@@ vision@@ ed@@ Value@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ O@@ IC@@ E_@@ O@@ V@@ ER_@@ WI@@ FI@@ _S@@ E@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ , Im@@ s@@ Config.@@ F@@ e@@ ature@@ Value@@ Constants.@@ O@@ F@@ ); assert@@ Equal@@ s(@@ 0, (@@ (@@ int@@ ) (m@@ Pro@@ vision@@ ed@@ Int@@ Val@@ s.get@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ O@@ IC@@ E_@@ O@@ V@@ ER_@@ WI@@ FI@@ _S@@ E@@ T@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )))); assert@@ Equal@@ s@@ (@@ false@@ , im@@ s@@ Manager.@@ is@@ W@@ fc@@ Pro@@ vision@@ ed@@ On@@ Device@@ ()); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ )@@ ).set@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ O@@ IC@@ E_@@ O@@ V@@ ER_@@ WI@@ FI@@ _S@@ E@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ ), e@@ q@@ (0@@ )); ve@@ r@@ if@@ y@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ , tim@@ es@@ (1@@ ))@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ e@@ q@@ (@@ Im@@ s@@ Config.@@ Config@@ Constants.@@ V@@ O@@ IC@@ E_@@ O@@ V@@ ER_@@ WI@@ FI@@ _S@@ E@@ T@@ T@@ ING@@ _@@ EN@@ AB@@ LE@@ D@@ )); }
@java.lang.Override public void on@@ Create@@ () { android.util.Log.@@ i@@ (com.android.@@ phon@@ e.@@ test@@ app@@ s.@@ im@@ st@@ est@@ app.@@ Test@@ Im@@ s@@ Service.@@ LO@@ G_@@ TAG, "@@ on@@ Create@@ () on@@ Create@@ "); m@@ Im@@ s@@ Reg@@ is@@ tr@@ ation = com.android.@@ phon@@ e.@@ test@@ app@@ s.@@ im@@ st@@ est@@ app.@@ Test@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l.get@@ Instance@@ (); m@@ Test@@ M@@ m@@ T@@ el@@ F@@ e@@ at@@ ur@@ e = com.android.@@ phon@@ e.@@ test@@ app@@ s.@@ im@@ st@@ est@@ app.@@ Test@@ M@@ m@@ T@@ el@@ F@@ e@@ ature@@ Imp@@ l.get@@ Instance@@ (); m@@ Test@@ R@@ c@@ s@@ F@@ e@@ at@@ ur@@ e = new com.android.@@ phon@@ e.@@ test@@ app@@ s.@@ im@@ st@@ est@@ app.@@ Test@@ R@@ c@@ s@@ F@@ e@@ ature@@ Imp@@ l@@ (); m@@ Test@@ Im@@ s@@ Con@@ fi@@ g = new com.android.@@ phon@@ e.@@ test@@ app@@ s.@@ im@@ st@@ est@@ app.@@ Test@@ Im@@ s@@ Config@@ Imp@@ l@@ (); com.android.@@ phon@@ e.@@ test@@ app@@ s.@@ im@@ st@@ est@@ app.@@ Test@@ Im@@ s@@ Service.@@ m@@ In@@ stan@@ ce = this@@ ; }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ ("@@ Sub@@ s@@ cription@@ Control@@ ler@@ Test@@ "); m@@ Phone@@ Id = m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ (); m@@ Bund@@ le = m@@ Context@@ Fi@@ xt@@ ure@@ .get@@ C@@ ar@@ ri@@ er@@ Config@@ Bund@@ le@@ (); do@@ Return@@ (m@@ Sub@@ Id@@ ).@@ when@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ )@@ .get@@ Sub@@ Id@@ (m@@ Phone@@ Id@@ ); do@@ Return@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ ).@@ when@@ (m@@ B@@ in@@ der@@ ).@@ qu@@ er@@ y@@ Local@@ Interface@@ (@@ an@@ y@@ String@@ ()); m@@ Service@@ Manager@@ Mock@@ ed@@ Ser@@ vices@@ .@@ put@@ ("@@ is@@ u@@ b@@ ", m@@ B@@ in@@ der@@ ); m@@ Im@@ s@@ Manager@@ In@@ stan@@ ces@@ .@@ remove@@ (m@@ Phone@@ Id@@ ); }
private void ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ Re@@ port@@ (@@ int message@@ Ref@@ , @@@ android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ le Im@@ s@@ S@@ ms@@ Imp@@ l.@@ Statu@@ s@@ Re@@ port@@ Res@@ ult int result@@ ) { get@@ S@@ ms@@ Imp@@ lem@@ ent@@ ation@@ ().@@ ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ Re@@ port@@ (m@@ ess@@ age@@ Ref@@ , result@@ ); }
@java.lang.Override public android.system.@@ Im@@ s@@ Config@@ Imp@@ l get@@ Con@@ fi@@ g@@ (@@ int s@@ lo@@ t@@ Index@@ ) throw@@ s android.os.@@ Remote@@ Exception { android.util.@@ S@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Phone@@ Number@@ Utils.@@ get@@ Con@@ fi@@ g@@ Id@@ (), "@@ get@@ Config@@ Imp@@ l@@ Bas@@ e c@@ ; c@@ c = this@@ .get@@ Config@@ (s@@ lo@@ t@@ Id@@ ); return c != null ? c@@ .get@@ B@@ in@@ der@@ () : null@@ ; }
@java.lang.Override public int set@@ Con@@ fi@@ g@@ (@@ int item@@ , int value@@ ) { return Im@@ s@@ Config.@@ Oper@@ ation@@ Statu@@ s@@ Constants.@@ S@@ U@@ C@@ CE@@ SS@@ ; }
@java.lang.Override public int set@@ Con@@ fi@@ g@@ (@@ int item@@ , java.lang.String value@@ ) { return Im@@ s@@ Config.@@ Oper@@ ation@@ Statu@@ s@@ Constants.@@ S@@ U@@ C@@ CE@@ SS@@ ; }
@java.lang.Override public int get@@ Config@@ In@@ t@@ (@@ int ite@@ m@@ ) { return Im@@ s@@ Config.@@ F@@ e@@ ature@@ Value@@ Constants.@@ ON@@ ; }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Get@@ Default@@ Valu@@ es@@ () { do@@ Return@@ ("@@ -1@@ ").@@ when@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ )@@ .get@@ Sub@@ s@@ cription@@ Property@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ String@@ (), an@@ y@@ String@@ ()); set@@ Default@@ Valu@@ es@@ (); com.android.@@ im@@ s.@@ Im@@ s@@ Manager im@@ s@@ Manager = com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ get@@ Instance@@ (m@@ Context@@ , m@@ Phone@@ Id@@ ); assert@@ Equal@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ EN@@ AB@@ L@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ , im@@ s@@ Manager.@@ is@@ W@@ fc@@ Enabled@@ By@@ User@@ ()); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ ))@@ .get@@ Sub@@ s@@ cription@@ Property@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ EN@@ AB@@ LE@@ D@@ ), an@@ y@@ String@@ ()); assert@@ Equal@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ EN@@ H@@ AN@@ CE@@ D_@@ 4@@ G_@@ EN@@ AB@@ L@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ , im@@ s@@ Manager.@@ is@@ En@@ h@@ an@@ ce@@ d@@ 4@@ g@@ L@@ te@@ Mode@@ Setting@@ Enabled@@ By@@ User@@ ()); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ ))@@ .get@@ Sub@@ s@@ cription@@ Property@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ EN@@ H@@ AN@@ CE@@ D_@@ 4@@ G@@ _MOD@@ E_@@ EN@@ AB@@ LE@@ D@@ ), an@@ y@@ String@@ ()); assert@@ Equal@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ W@@ F@@ C@@ _@@ I@@ M@@ S@@ _MOD@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ , im@@ s@@ Manager.@@ get@@ W@@ fc@@ Mode@@ (@@ false@@ )); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ ))@@ .get@@ Sub@@ s@@ cription@@ Property@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ W@@ F@@ C@@ _@@ I@@ M@@ S@@ _MOD@@ E@@ ), an@@ y@@ String@@ ()); assert@@ Equal@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ RO@@ AM@@ ING@@ _MOD@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ , im@@ s@@ Manager.@@ get@@ W@@ fc@@ Mode@@ (@@ true@@ )); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ ))@@ .get@@ Sub@@ s@@ cription@@ Property@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ RO@@ AM@@ ING@@ _MOD@@ E@@ ), an@@ y@@ String@@ ()); assert@@ Equal@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Manager@@ Test.@@ V@@ T_@@ I@@ M@@ S_@@ EN@@ AB@@ L@@ E_@@ DE@@ FA@@ UL@@ T_@@ V@@ AL@@ , im@@ s@@ Manager.@@ is@@ V@@ t@@ Enabled@@ By@@ User@@ ()); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ ))@@ .get@@ Sub@@ s@@ cription@@ Property@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ an@@ y@@ Int@@ (), e@@ q@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ String@@ ()); }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Set@@ Valu@@ es@@ () { com.android.@@ im@@ s.@@ Im@@ s@@ Manager im@@ s@@ Manager = com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ get@@ Instance@@ (m@@ Context@@ , m@@ Phone@@ Id@@ ); im@@ s@@ Manager.@@ set@@ W@@ fc@@ Mode@@ (@@ Im@@ s@@ Config.@@ W@@ fc@@ Mode@@ F@@ e@@ ature@@ Value@@ Constants.@@ CE@@ L@@ L@@ UL@@ AR@@ _P@@ RE@@ F@@ ER@@ RE@@ D@@ ); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ )@@ ).set@@ Sub@@ s@@ cription@@ Property@@ (@@ e@@ q@@ (m@@ Sub@@ Id@@ [0@@ ]@@ ), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ W@@ F@@ C@@ _@@ I@@ M@@ S@@ _MOD@@ E@@ ), e@@ q@@ ("@@ 1@@ ")); im@@ s@@ Manager.@@ set@@ W@@ fc@@ Mode@@ (@@ Im@@ s@@ Config.@@ W@@ fc@@ Mode@@ F@@ e@@ ature@@ Value@@ Constants.@@ CE@@ L@@ L@@ L@@ L@@ UL@@ AR@@ _P@@ RE@@ F@@ ER@@ RE@@ D@@ , true@@ ); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ )@@ ).set@@ Sub@@ s@@ cription@@ Property@@ (@@ e@@ q@@ (m@@ Sub@@ Id@@ [0@@ ]@@ ), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ RO@@ AM@@ ING@@ _MOD@@ E@@ ), e@@ q@@ ("@@ 1@@ ")); im@@ s@@ Manager.@@ set@@ V@@ t@@ Setting@@ (@@ false@@ ); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ )@@ ).set@@ Sub@@ s@@ cription@@ Property@@ (@@ e@@ q@@ (m@@ Sub@@ Id@@ [0@@ ]@@ ), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ V@@ T_@@ I@@ M@@ S_@@ EN@@ AB@@ LE@@ D@@ ), e@@ q@@ ("@@ 0@@ ")); im@@ s@@ Manager.@@ set@@ En@@ h@@ an@@ ce@@ d@@ 4@@ g@@ L@@ te@@ Mode@@ Setting@@ (@@ true@@ ); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ )@@ ).set@@ Sub@@ s@@ cription@@ Property@@ (@@ e@@ q@@ (m@@ Sub@@ Id@@ [0@@ ]@@ ), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ EN@@ H@@ AN@@ CE@@ D_@@ 4@@ G@@ _MOD@@ E_@@ EN@@ AB@@ LE@@ D@@ ), e@@ q@@ ("@@ 1@@ ")); im@@ s@@ Manager.@@ set@@ W@@ fc@@ Setting@@ (@@ true@@ ); ve@@ r@@ if@@ y@@ (m@@ Sub@@ s@@ cription@@ Control@@ ler@@ , tim@@ es@@ (1@@ )@@ ).set@@ Sub@@ s@@ cription@@ Property@@ (@@ e@@ q@@ (m@@ Sub@@ Id@@ [0@@ ]@@ ), e@@ q@@ (@@ Sub@@ s@@ cription@@ Manager.@@ W@@ F@@ C@@ _@@ I@@ M@@ S_@@ EN@@ AB@@ LE@@ D@@ ), e@@ q@@ ("@@ 1@@ ")); }
public void send@@ S@@ ms@@ (@@ int message@@ Ref@@ , java.lang.String for@@ mat@@ , java.lang.String s@@ m@@ sc@@ , boolean is@@ R@@ e@@ try@@ , byte@@ [] p@@ du@@ ) { try { on@@ S@@ end@@ S@@ ms@@ Result@@ (m@@ ess@@ age@@ Ref@@ , android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ .@@ Im@@ s@@ S@@ ms@@ Imp@@ l.@@ S@@ END@@ _@@ STAT@@ US@@ _@@ ER@@ RO@@ R@@ , S@@ ms@@ Manager.@@ RE@@ S@@ UL@@ T_@@ ER@@ RO@@ R@@ _@@ G@@ EN@@ ER@@ IC@@ _@@ FA@@ IL@@ U@@ RE@@ ); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ .@@ Im@@ s@@ S@@ ms@@ Imp@@ l.@@ LO@@ G_@@ TAG, ("@@ send@@ S@@ ms@@ : not s@@ en@@ d s@@ ms@@ : " + (@@ e.get@@ Message@@ ()))); } }
public void ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ Re@@ port@@ (@@ int message@@ Ref@@ , @@@ android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ le Im@@ s@@ S@@ ms@@ Imp@@ l.@@ Statu@@ s@@ Re@@ port@@ Res@@ ult int result@@ ) { }
public final void on@@ S@@ end@@ S@@ ms@@ Result@@ (@@ int message@@ Ref@@ , @@@ android.@@ telephony.@@ im@@ s@@ .@@ st@@ u@@ b@@ le Im@@ s@@ S@@ ms@@ Imp@@ l@@ Bas@@ e = android.os.@@ Remote@@ Exception, java.lang.Illegal@@ State@@ Exception { synchronized@@ (m@@ Lock) { if ((m@@ Listener@@ ) == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ S@@ end@@ S@@ end@@ Result@@ : not read@@ y@@ .@@ "); } m@@ List@@ en@@ er.@@ on@@ S@@ end@@ S@@ ms@@ Result@@ (m@@ ess@@ age@@ Ref@@ , statu@@ s, re@@ as@@ on@@ ); } }
public void start@@ Monitor@@ ing@@ Im@@ s@@ Service@@ () { if ((@@ get@@ Phone@@ Type@@ ()) == (@@ Phone@@ Constants.@@ P@@ H@@ ON@@ E_@@ TYP@@ E_@@ SI@@ P@@ )) { return@@ ; } synchronized@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e.@@ lock@@ For@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ Chang@@ e) { android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); com.android.@@ im@@ s.@@ Im@@ s@@ Manager im@@ s@@ Manager = com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ get@@ Instance@@ (m@@ Context@@ , get@@ Phone@@ Id@@ ()); if ((@@ im@@ s@@ Manager != null@@ ) && (!(@@ im@@ s@@ Manager.@@ is@@ D@@ yn@@ am@@ ic@@ B@@ ind@@ ing@@ ()))) { fil@@ ter.@@ add@@ Action@@ (@@ Im@@ s@@ Manager.@@ AC@@ TION@@ _@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E_@@ U@@ P@@ ); fil@@ ter.@@ add@@ Action@@ (@@ Im@@ s@@ Manager.@@ AC@@ TION@@ _@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E_@@ D@@ O@@ W@@ N@@ ); } m@@ Context.@@ register@@ Recei@@ ver@@ (m@@ Im@@ s@@ Intent@@ Recei@@ ver@@ , fil@@ ter@@ ); if (@@ im@@ s@@ Manager != null@@ ) { if ((@@ im@@ s@@ Manager.@@ is@@ D@@ yn@@ am@@ ic@@ B@@ ind@@ ing@@ ()) || (@@ im@@ s@@ Manager.@@ is@@ Service@@ A@@ va@@ il@@ able@@ ())) { m@@ Im@@ s@@ Service@@ Read@@ y = true@@ ; update@@ Im@@ s@@ Phone@@ (); } } }
@java.lang.Override protected java.lang.String get@@ Service@@ Interface@@ () { return m@@ Service@@ Interface@@ ; }
@java.lang.Override protected java.lang.String get@@ Service@@ Interface@@ () { return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler@@ Comp@@ at@@ .@@ S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ F@@ AC@@ E@@ ; }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ D@@ on@@ t@@ B@@ ind@@ W@@ h@@ en@@ Null@@ C@@ ar@@ ri@@ er@@ Package@@ () throw@@ s android.os.@@ Remote@@ Exception { set@@ up@@ Res@@ ol@@ ver@@ (1@@ ); java.util.List<@@ android.content.@@ p@@ m.@@ Res@@ ol@@ ve@@ Info@@ > in@@ f@@ o = new java.util.ArrayList<@@ >(); java.util.@@ Set@@ <java.lang.String@@ > f@@ e@@ ature@@ s = new java.util.@@ Hash@@ Set@@ <@@ >(); f@@ e@@ at@@ ur@@ es.@@ add(@@ Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ _@@ F@@ E@@ AT@@ U@@ RE@@ ); f@@ e@@ at@@ ur@@ es.@@ add(@@ Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _M@@ M@@ TE@@ L@@ _@@ F@@ E@@ AT@@ U@@ RE@@ ); f@@ e@@ at@@ ur@@ es.@@ add(@@ Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _@@ R@@ C@@ S_@@ F@@ E@@ AT@@ U@@ RE@@ ); in@@ f@@ o.@@ add(@@ get@@ Res@@ ol@@ ve@@ Info@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, f@@ e@@ at@@ ur@@ es@@ , true@@ )); when@@ (m@@ Mock@@ P@@ M@@ .@@ qu@@ er@@ y@@ Intent@@ Ser@@ vices@@ As@@ User@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()@@ )).@@ thenReturn@@ (in@@ fo@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = mock@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler@@ .@@ class@@ ); m@@ Test@@ Im@@ s@@ Res@@ ol@@ ver.@@ set@@ Im@@ s@@ Service@@ Control@@ ler@@ Factory@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Control@@ ler@@ Factory@@ () { @java.lang.Override public java.lang.String get@@ Service@@ Interface@@ () { return Im@@ s@@ Service@@ Control@@ ler.@@ S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ F@@ AC@@ E@@ ; } @java.lang.Override public com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r create@@ (android.@@ content.@@ Context@@ context@@ , context@@ , android.content.@@ Comp@@ onent@@ Name comp@@ onent@@ Name@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ Im@@ s@@ Service@@ Control@@ ler@@ Callback@@ s call@@ back@@ s) { when@@ (@@ cont@@ ro@@ l@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ()).@@ thenReturn@@ (@@ comp@@ onent@@ Name); return cont@@ ro@@ l@@ ler@@ ; } }@@ ); set@@ Config@@ C@@ ar@@ ri@@ er@@ String(@@ 0, null@@ ); m@@ Test@@ Im@@ s@@ Res@@ ol@@ ver.@@ po@@ p@@ ul@@ ate@@ Cach@@ e@@ And@@ Start@@ B@@ ind@@ (); wait@@ For@@ Handler@@ Action@@ (m@@ Test@@ Im@@ s@@ Res@@ ol@@ ver.@@ get@@ Handler@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TEST_@@ TI@@ ME@@ O@@ UT@@ ); ve@@ r@@ if@@ y@@ (@@ cont@@ ro@@ l@@ ler@@ , ne@@ ver@@ ()).@@ b@@ ind@@ (@@ an@@ y@@ ()); ve@@ r@@ if@@ y@@ (@@ cont@@ ro@@ l@@ ler@@ , ne@@ ver@@ ()).@@ un@@ b@@ ind@@ (); }
public final android.@@ telephony.@@ im@@ s.@@ a@@ id@@ l.@@ I@@ Im@@ s@@ Con@@ fi@@ g get@@ B@@ in@@ der@@ () { return m@@ B@@ in@@ der@@ ; }
@java.lang.Override public void remove@@ Im@@ s@@ Config@@ Callback@@ (android.@@ telephony.@@ im@@ s.@@ a@@ id@@ l.@@ I@@ Im@@ s@@ Config@@ Call@@ b@@ ac@@ k c@@ ) throw@@ s android.os.@@ Remote@@ Exception { this@@ .@@ remove@@ Im@@ s@@ Config@@ Callback@@ (c@@ ); }
private void st@@ op@@ List@@ en@@ ing@@ For@@ Call@@ s() { try { res@@ et@@ Im@@ s@@ Cap@@ abili@@ ties@@ (); if ((m@@ Im@@ s@@ Manager@@ ) != null@@ ) { m@@ Im@@ s@@ Manager.@@ get@@ Config@@ Inter@@ face@@ (@@ ).@@ remove@@ Config@@ Call@@ b@@ ac@@ k = m@@ Config@@ Manager.@@ has@@ Config@@ Callback@@ (); m@@ Config@@ Manager.@@ close(); } catch (com.android.@@ im@@ s.@@ Im@@ s@@ Exception e) { } }
private void set@@ Im@@ s@@ Service@@ Control@@ ler@@ Factory@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r device@@ Control@@ ler@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r c@@ ar@@ ri@@ er@@ Control@@ ler@@ 1, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r c@@ ar@@ ri@@ er@@ Control@@ ler@@ 2@@ ) { m@@ Test@@ Im@@ s@@ Res@@ ol@@ ver.@@ set@@ Im@@ s@@ Service@@ Control@@ ler@@ Factory@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Control@@ ler@@ Factory@@ () { @java.lang.Override public java.lang.String get@@ Service@@ Interface@@ () { return Im@@ s@@ Service@@ Control@@ ler.@@ S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ F@@ AC@@ E@@ ; } @java.lang.Override public com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r create@@ (android.@@ content.@@ Context@@ , context@@ , android.content.@@ Comp@@ onent@@ Name comp@@ onent@@ Name, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ Im@@ s@@ Service@@ Control@@ ler@@ Callback@@ s call@@ back@@ s) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ DE@@ V@@ IC@@ E_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ().@@ equals(@@ comp@@ onent@@ Nam@@ e.get@@ Package@@ Name@@ ())) { when@@ (@@ device@@ Control@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ()).@@ thenReturn@@ (@@ comp@@ onent@@ Name); return device@@ Control@@ ler@@ ; } else if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ().@@ equals(@@ comp@@ onent@@ Nam@@ e.get@@ Package@@ Name@@ ())) { when@@ (c@@ ar@@ ri@@ er@@ Control@@ ler@@ 1@@ .get@@ Comp@@ onent@@ Name@@ ()).@@ thenReturn@@ (@@ comp@@ onent@@ Name); return c@@ ar@@ ri@@ er@@ Control@@ ler@@ 1; } else if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ 2@@ _@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ().@@ equals(@@ comp@@ onent@@ Nam@@ e.get@@ Package@@ Name@@ ())) { when@@ (c@@ ar@@ ri@@ er@@ Control@@ ler@@ 2@@ .get@@ Comp@@ onent@@ Name@@ ()).@@ thenReturn@@ (@@ comp@@ onent@@ Name); return c@@ ar@@ ri@@ er@@ Control@@ ler@@ 2@@ ; } return null@@ ; } }); }
private void set@@ Im@@ s@@ Service@@ Control@@ ler@@ Factory@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r device@@ Control@@ ler@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r c@@ ar@@ ri@@ er@@ Control@@ ler@@ ) { m@@ Test@@ Im@@ s@@ Res@@ ol@@ ver.@@ set@@ Im@@ s@@ Service@@ Control@@ ler@@ Factory@@ (@@ new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Control@@ ler@@ Factory@@ () { @java.lang.Override public java.lang.String get@@ Service@@ Interface@@ () { return Im@@ s@@ Service@@ Control@@ ler.@@ S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ F@@ AC@@ E@@ ; } @java.lang.Override public com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r create@@ (android.@@ content.@@ Context@@ context@@ , android.content.@@ Comp@@ onent@@ Name comp@@ onent@@ Name, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ Im@@ s@@ Service@@ Control@@ ler@@ Callback@@ s call@@ back@@ s) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ DE@@ V@@ IC@@ E_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ().@@ equals(@@ comp@@ onent@@ Nam@@ e.get@@ Package@@ Name@@ ())) { when@@ (@@ device@@ Control@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ()).@@ thenReturn@@ (@@ comp@@ onent@@ Name); return device@@ Control@@ ler@@ ; } else if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ().@@ equals(@@ comp@@ onent@@ Nam@@ e.get@@ Package@@ Name@@ ())) { when@@ (c@@ ar@@ ri@@ er@@ Control@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ()).@@ thenReturn@@ (@@ comp@@ onent@@ Name); return c@@ ar@@ ri@@ er@@ Control@@ ler@@ ; } }); }
@java.lang.Override public boolean equals(@@ java.lang.Object o@@ ) { if (@@ (@@ this@@ ) == o@@ ) return true@@ ; if ((@@ o == null@@ ) || ((@@ get@@ Class@@ ()) != (@@ o@@ .get@@ Class@@ ()))) return false@@ ; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info th@@ at = ((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info@@ ) (@@ o@@ )); if ((@@ name@@ ) != null ? !@@ (@@ nam@@ e.@@ equals(@@ th@@ at@@ .@@ name@@ )) : (@@ th@@ at@@ .@@ name@@ ) != null@@ ) return false@@ ; if (s@@ up@@ ported@@ F@@ e@@ at@@ ur@@ es) != null ? !@@ (s@@ up@@ ported@@ F@@ e@@ at@@ ur@@ es.@@ equals(@@ th@@ at@@ .@@ sup@@ ported@@ F@@ e@@ at@@ ur@@ es) : (@@ th@@ at@@ .@@ sup@@ ported@@ F@@ e@@ at@@ ur@@ es) != null@@ ) return false@@ ; return (@@ cont@@ ro@@ l@@ ler@@ Factory@@ ) != null ? cont@@ ro@@ l@@ ler@@ Fa@@ ctory.@@ equals(@@ th@@ at@@ .@@ cont@@ ro@@ l@@ ler@@ Factory@@ ) : (@@ th@@ at@@ .@@ cont@@ ro@@ l@@ ler@@ Factory@@ ) == null@@ ; }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, ("@@ on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , int@@ ent.get@@ Action@@ ()))); if (@@ int@@ ent.@@ has@@ Extra@@ (@@ Im@@ s@@ Manager.@@ EX@@ TR@@ A@@ _P@@ H@@ ON@@ E_@@ ID@@ )) { int ex@@ tra@@ Phone@@ Id = int@@ ent.get@@ Int@@ Extra@@ (@@ Im@@ s@@ Manager.@@ EX@@ TR@@ A@@ _P@@ H@@ ON@@ E_@@ ID@@ , Sub@@ s@@ cription@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _P@@ H@@ ON@@ E_@@ IN@@ DE@@ X@@ ); android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, ("@@ on@@ Recei@@ ve@@ () ex@@ tra@@ Phone@@ Id = " + ex@@ tra@@ Phone@@ Id@@ )); if ((@@ ex@@ tra@@ Phone@@ Id == (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _P@@ H@@ ON@@ E_@@ IN@@ DE@@ X@@ )) || (@@ ex@@ tra@@ Phone@@ Id != (get@@ Phone@@ Id@@ ()))) { return@@ ; } } synchronized@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e.@@ lock@@ For@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ Chang@@ e) { if (@@ int@@ ent.get@@ Action@@ ().@@ equals(@@ Im@@ s@@ Manager.@@ AC@@ TION@@ _@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E_@@ U@@ P@@ )) { m@@ Im@@ s@@ Service@@ Read@@ y = true@@ ; update@@ Im@@ s@@ Phone@@ (); com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ get@@ Instance@@ (m@@ Context@@ , m@@ Phone@@ Id@@ ).@@ update@@ Im@@ s@@ Service@@ Config@@ (@@ false@@ ); } else if (@@ int@@ ent.get@@ Action@@ ().@@ equals(@@ Im@@ s@@ Manager.@@ AC@@ TION@@ _@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E_@@ D@@ O@@ W@@ N@@ )) { m@@ Im@@ s@@ Service@@ Read@@ y = false@@ ; update@@ Im@@ s@@ Phone@@ (); } }
private void start@@ List@@ en@@ ing@@ For@@ Call@@ s() throw@@ s com.android.@@ im@@ s.@@ Im@@ s@@ Exception { m@@ Im@@ s@@ Service@@ R@@ e@@ try@@ Coun@@ t = 0; m@@ Im@@ s@@ Manager.@@ open@@ (m@@ M@@ m@@ T@@ el@@ F@@ e@@ ature@@ Listener@@ ); m@@ Im@@ s@@ Manager.@@ add@@ Reg@@ is@@ tr@@ ation@@ Callback@@ (m@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Callback@@ ); m@@ Im@@ s@@ Manager.@@ add@@ Cap@@ abili@@ ties@@ Callback@@ (m@@ Im@@ s@@ Cap@@ abili@@ ty@@ Callback@@ ); m@@ Im@@ s@@ Manager.@@ set@@ Cap@@ abili@@ ties@@ Call@@ b@@ ac@@ k = m@@ Im@@ s@@ Manager.@@ get@@ Config@@ Interface@@ ().@@ add@@ Config@@ Callback@@ (m@@ Config@@ Callback@@ ); get@@ E@@ c@@ b@@ m@@ Interface@@ ().@@ set@@ E@@ c@@ b@@ m@@ State@@ Listener@@ (m@@ Ph@@ on@@ e.get@@ Im@@ s@@ E@@ c@@ b@@ m@@ State@@ Listener@@ ()); if (m@@ Ph@@ on@@ e.@@ is@@ In@@ E@@ c@@ m@@ ()) { m@@ Ph@@ on@@ e.@@ ex@@ it@@ E@@ merg@@ enc@@ y@@ Callback@@ Mode@@ (); } int m@@ Pre@@ fer@@ re@@ d@@ T@@ ty@@ Mod@@ e = Setting@@ s.@@ Sec@@ ure@@ .get@@ Int@@ (m@@ Ph@@ on@@ e.get@@ Context@@ ().get@@ Content@@ Res@@ ol@@ ver@@ (), Setting@@ s.@@ Sec@@ ure@@ .@@ P@@ RE@@ F@@ ER@@ RE@@ D_@@ T@@ TY@@ _MOD@@ E, Ph@@ on@@ e.@@ T@@ TY@@ _MOD@@ E_@@ O@@ F@@ ); m@@ Im@@ s@@ Manager.@@ set@@ U@@ i@@ T@@ TY@@ Mode@@ (m@@ Ph@@ on@@ e.get@@ Context@@ (), m@@ Pre@@ fer@@ re@@ d@@ T@@ ty@@ Mode@@ , null@@ ); com.android.@@ im@@ s.@@ Im@@ s@@ Multi@@ En@@ d@@ p@@ o@@ int m@@ ulti@@ En@@ d@@ p@@ o@@ int = get@@ Multi@@ En@@ d@@ p@@ o@@ int@@ Interface@@ (); if (m@@ ulti@@ En@@ d@@ p@@ o@@ int != null@@ ) { m@@ ulti@@ En@@ d@@ p@@ o@@ int@@ .set@@ Ex@@ ternal@@ Call@@ State@@ Listener@@ (m@@ Ph@@ on@@ e.get@@ Ex@@ ternal@@ Call@@ Tr@@ ack@@ er@@ ().get@@ Ex@@ ternal@@ Call@@ State@@ Listener@@ ()); } m@@ U@@ t@@ Inter@@ face = get@@ U@@ t@@ Interface@@ (); if ((m@@ U@@ t@@ Interface@@ ) != null@@ ) { m@@ U@@ t@@ Interface@@ .@@ register@@ For@@ Sup@@ p@@ Service@@ In@@ d@@ ic@@ ation@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ EV@@ ENT_@@ S@@ U@@ P@@ _S@@ ER@@ V@@ IC@@ E_@@ IN@@ D@@ IC@@ AT@@ ION@@ , null@@ ); } if (m@@ C@@ ar@@ ri@@ er@@ Config@@ Load@@ ed@@ ) { m@@ Im@@ s@@ Manager.@@ update@@ Im@@ s@@ Service@@ Config@@ (@@ true@@ ); } }
@java.lang.Override public android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ M@@ m@@ T@@ el@@ F@@ e@@ at@@ ur@@ e on@@ Create@@ E@@ merg@@ enc@@ y@@ M@@ T@@ el@@ Im@@ s@@ F@@ e@@ ature@@ (@@ int s@@ lo@@ t@@ Id@@ ) { return null@@ ; }
@java.lang.Override public java.lang.String get@@ Service@@ Interface@@ () { return Im@@ s@@ Service@@ Control@@ ler@@ Comp@@ at@@ .@@ S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ F@@ AC@@ E@@ ; }
@java.lang.Override public java.lang.String get@@ Service@@ Interface@@ () { return Im@@ s@@ Service@@ Control@@ ler.@@ S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ F@@ AC@@ E@@ ; }
@java.lang.Override public void add@@ Im@@ s@@ Config@@ Callback@@ (android.@@ telephony.@@ im@@ s.@@ a@@ id@@ l.@@ I@@ Im@@ s@@ Config@@ Call@@ b@@ ac@@ k c@@ ) throw@@ s android.os.@@ Remote@@ Exception { this@@ .@@ add@@ Im@@ s@@ Config@@ Callback@@ (c@@ ); }
@java.lang.Override public int set@@ Config@@ Int@@ (@@ int item@@ , int value@@ ) throw@@ s android.os.@@ Remote@@ Exception { return java.lang.Integ@@ er.@@ M@@ IN@@ _V@@ AL@@ UE@@ ; }
@java.lang.Override public int set@@ Config@@ String@@ (@@ int item@@ , java.lang.String value@@ ) throw@@ s android.os.@@ Remote@@ Exception { return java.lang.Integ@@ er.@@ M@@ IN@@ _V@@ AL@@ UE@@ ; }
@java.lang.Override public int get@@ Config@@ Int@@ (@@ int item@@ ) throw@@ s android.os.@@ Remote@@ Exception { return java.lang.Integ@@ er.@@ M@@ IN@@ _V@@ AL@@ UE@@ ; }
@java.lang.Override public int get@@ Config@@ String(@@ int ite@@ m@@ ) throw@@ s android.os.@@ Remote@@ Exception { return null@@ ; }
private com.android.@@ im@@ s.@@ Im@@ s@@ Manager in@@ iti@@ aliz@@ e@@ Pro@@ vision@@ ed@@ Valu@@ es@@ () { try { when@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ .get@@ Pro@@ vision@@ ed@@ Value@@ (@@ an@@ y@@ Int@@ ()@@ )).@@ then@@ An@@ sw@@ er(@@ ( in@@ vo@@ cation@@ ) -@@ > { return get@@ Pro@@ vision@@ ed@@ Int@@ ((@@ (java.lang.@@ Integ@@ er@@ ) (in@@ vo@@ cation@@ .get@@ Argument@@ s@@ ()@@ [0@@ ]@@ ))); }); when@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ .set@@ Pro@@ vision@@ ed@@ Value@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()@@ )).@@ then@@ An@@ sw@@ er(@@ ( in@@ vo@@ cation@@ ) -@@ > { m@@ Pro@@ vision@@ ed@@ Int@@ Val@@ s.@@ put@@ ((@@ (java.lang.@@ Integ@@ er@@ ) (in@@ vo@@ cation@@ .get@@ Argument@@ s@@ ()@@ [0@@ ]@@ )), ((@@ java.lang.Integ@@ er@@ ) (in@@ vo@@ cation@@ .get@@ Argument@@ s@@ ()@@ [@@ 1@@ ]@@ ))); return Im@@ s@@ Config.@@ Oper@@ ation@@ Statu@@ s@@ Constants.@@ S@@ U@@ C@@ CE@@ SS@@ ; }); when@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ .get@@ Pro@@ vision@@ ed@@ String@@ Value@@ (@@ an@@ y@@ Int@@ ()@@ )).@@ then@@ An@@ sw@@ er(@@ ( in@@ vo@@ cation@@ ) -@@ > { return get@@ Pro@@ vision@@ ed@@ String@@ ((@@ (java.lang.@@ Integ@@ er@@ ) (in@@ vo@@ cation@@ .get@@ Argument@@ s@@ ()@@ [0@@ ]@@ ))); }); when@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ .set@@ Pro@@ vision@@ ed@@ String@@ Value@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ String@@ ()@@ )).@@ then@@ An@@ sw@@ er(@@ ( in@@ vo@@ cation@@ ) -@@ > { m@@ Pro@@ vision@@ ed@@ String@@ Val@@ s.@@ put@@ ((@@ (java.lang.@@ Integ@@ er@@ ) (in@@ vo@@ cation@@ .get@@ Argument@@ s@@ ()@@ [0@@ ]@@ )), ((@@ java.lang.String@@ ) (in@@ vo@@ cation@@ .get@@ Argument@@ s@@ ()@@ [@@ 1@@ ]@@ ))); return Im@@ s@@ Config.@@ Oper@@ ation@@ Statu@@ s@@ Constants.@@ S@@ U@@ C@@ CE@@ SS@@ ; }); } catch (android.os.@@ Remote@@ Exception ex@@ ) { fail@@ (("@@ in@@ iti@@ aliz@@ e@@ Pro@@ vision@@ ed@@ Value@@ s fa@@ ile@@ d wit@@ h " + ex@@ )); } m@@ Im@@ s@@ Config@@ St@@ u@@ b = new android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Config@@ Imp@@ l@@ Bas@@ e.@@ Im@@ s@@ Config@@ St@@ u@@ b@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ ); do@@ Return@@ (m@@ Im@@ s@@ Config@@ St@@ u@@ b@@ ).@@ when@@ (m@@ Im@@ s@@ Config@@ Imp@@ l@@ B@@ ase@@ Mock@@ )@@ .get@@ I@@ Im@@ s@@ Config@@ (); m@@ Im@@ s@@ Con@@ fi@@ g = new com.android.@@ im@@ s.@@ Im@@ s@@ Config@@ (m@@ Im@@ s@@ Config@@ St@@ u@@ b@@ , m@@ Context@@ ); com.android.@@ im@@ s.@@ Im@@ s@@ Manager im@@ s@@ Manager = com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ get@@ Instance@@ (m@@ Context@@ , m@@ Phone@@ Id@@ ); try { re@@ pla@@ ce@@ Instance@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Manager@@ .@@ class@@ , "@@ m@@ Config@@ ", im@@ s@@ Manager@@ , m@@ Im@@ s@@ Config@@ ); } catch (java.lang.Exception ex@@ ) { fail@@ (("@@ fa@@ ile@@ d wit@@ h " + ex@@ )); } return im@@ s@@ Manager@@ ; }
@java.lang.Override public android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ M@@ m@@ T@@ el@@ F@@ e@@ at@@ ur@@ e on@@ Create@@ M@@ T@@ el@@ Im@@ s@@ F@@ e@@ ature@@ (@@ int s@@ lo@@ t@@ Id@@ ) { return mS@@ p@@ y@@ M@@ M@@ T@@ el@@ F@@ e@@ ature@@ ; }
@@@ android.@@ support.@@ test.@@ fil@@ ter@@ s.@@ F@@ la@@ k@@ y@@ Test @org.junit.Test public void test@@ B@@ ind@@ Service@@ () { java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > test@@ F@@ e@@ ature@@ s = new java.util.@@ Hash@@ Set@@ <@@ >(); test@@ F@@ e@@ at@@ ur@@ es.@@ add@@ (@@ new android.util.@@ Pair@@ (1@@ , 1@@ )); test@@ F@@ e@@ at@@ ur@@ es.@@ add@@ (@@ new android.util.@@ Pair@@ (1@@ , 2@@ )); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ android.content.@@ Intent@@ > int@@ ent@@ Cap@@ tor = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ android.content.@@ Intent@@ .@@ class@@ ); junit.framework.@@ Asser@@ t@@ .@@ assert@@ True@@ (m@@ Test@@ Im@@ s@@ Service@@ Control@@ ler.@@ b@@ ind@@ (test@@ F@@ e@@ at@@ ur@@ es@@ )); int expected@@ Flag@@ s = ((@@ android.content.@@ Context.@@ B@@ IN@@ D_@@ A@@ UT@@ O@@ _C@@ RE@@ A@@ TE@@ ) | (android.@@ content.@@ Context.@@ B@@ IN@@ D_@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D_@@ S@@ ER@@ V@@ IC@@ E@@ )) | (android.@@ content.@@ Context.@@ B@@ IN@@ D_@@ I@@ M@@ P@@ OR@@ TA@@ N@@ T@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Context@@ ).@@ b@@ ind@@ Service@@ (@@ int@@ ent@@ Cap@@ t@@ or.@@ c@@ ap@@ t@@ ure@@ (), an@@ y@@ (), e@@ q@@ (@@ expected@@ Flag@@ s@@ )); android.content.@@ Int@@ ent test@@ Int@@ ent = int@@ ent@@ Cap@@ t@@ or@@ .get@@ Value@@ (); junit.framework.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s@@ ((@@ Im@@ s@@ Service@@ Contro@@ lle@@ r != null@@ ) ? 0 : 0@@ )); junit.framework.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s@@ (m@@ Test@@ Comp@@ onent@@ Name, test@@ Int@@ ent.get@@ Comp@@ onent@@ ()); }
private void la@@ unch@@ No@@ t@@ if@@ ic@@ ation@@ On@@ Key@@ guard@@ (@@ int s@@ lo@@ t@@ Id, java.lang.String message@@ ) { android.@@ app.@@ No@@ t@@ if@@ ic@@ ation.@@ Builder bu@@ ilder = new android.@@ app.@@ No@@ t@@ if@@ ic@@ ation.@@ Builder@@ (@@ this@@ , com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ T@@ K@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ _C@@ H@@ AN@@ N@@ E@@ L@@ _@@ ID@@ ); builder.@@ set@@ St@@ y@@ le@@ (@@ new android.@@ app.@@ No@@ t@@ if@@ ic@@ ation.@@ B@@ ig@@ Text@@ St@@ y@@ le@@ (@@ build@@ er@@ ).@@ b@@ ig@@ Text@@ (m@@ ess@@ age@@ )); builder.@@ set@@ Content@@ Text@@ (m@@ ess@@ age@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ M@@ en@@ u m@@ en@@ u = get@@ M@@ ain@@ M@@ en@@ u@@ (s@@ lo@@ t@@ Id@@ ); if ((m@@ en@@ u == null@@ ) || (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (m@@ en@@ u@@ .@@ ti@@ t@@ le@@ ))) { builder.@@ set@@ Content@@ T@@ it@@ le@@ (get@@ Res@@ ources@@ ().get@@ String(@@ R.@@ str@@ ing.@@ app@@ _@@ name@@ )); } else { builder.@@ set@@ Content@@ T@@ it@@ le@@ (m@@ en@@ u@@ .@@ ti@@ t@@ le@@ ); } builder.@@ set@@ S@@ m@@ all@@ I@@ con@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ d@@ raw@@ ab@@ le.@@ st@@ at@@ _@@ not@@ if@@ y@@ _@@ si@@ m@@ _@@ tool@@ k@@ it@@ ); builder.@@ set@@ On@@ go@@ ing@@ (@@ true@@ ); builder.@@ set@@ On@@ ly@@ Al@@ er@@ t@@ On@@ ce@@ (@@ true@@ ); builder.@@ set@@ Col@@ or@@ (get@@ Res@@ ources@@ ().get@@ Col@@ or@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ col@@ or.@@ s@@ ystem@@ _@@ not@@ if@@ ic@@ ation@@ _@@ ac@@ c@@ ent@@ _@@ col@@ or@@ )); m@@ No@@ t@@ if@@ ic@@ ation@@ Manager.@@ not@@ if@@ y@@ (get@@ No@@ t@@ if@@ ic@@ ation@@ Id@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ ON@@ _@@ KE@@ Y@@ G@@ U@@ AR@@ D@@ , s@@ lo@@ t@@ Id@@ ), builder.@@ build@@ ()); }
private void la@@ unch@@ Input@@ Activity@@ (@@ int s@@ lo@@ t@@ Id@@ ) { android.content.@@ Int@@ ent new@@ Int@@ ent = new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _V@@ I@@ E@@ W@@ ); java.lang.String target@@ Ac@@ tiv@@ it@@ y = com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ T@@ K@@ _@@ IN@@ P@@ U@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E@@ ; java.lang.String ur@@ i@@ Str@@ ing = (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ T@@ K@@ _@@ IN@@ P@@ U@@ T_@@ UR@@ I@@ ) + (java.lang.@@ System.@@ current@@ Time@@ Milli@@ s()); android.net.@@ Ur@@ i ur@@ i@@ Data = android.net.@@ U@@ ri@@ .@@ parse@@ (@@ ur@@ i@@ String@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ LO@@ G_@@ TAG, ("@@ S@@ lo@@ t@@ Id@@ : " + s@@ lo@@ t@@ Id@@ )); new@@ Int@@ ent.@@ set@@ Flag@@ s@@ ((@@ (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ ) | (get@@ Flag@@ Activity@@ No@@ User@@ Action@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ In@@ iti@@ ated@@ By@@ User@@ Action@@ .@@ un@@ k@@ no@@ wn@@ , s@@ lo@@ t@@ Id@@ )))); new@@ Int@@ ent.@@ set@@ Class@@ Name@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ P@@ AC@@ K@@ A@@ G@@ E_@@ N@@ AM@@ E, target@@ Activity@@ ); new@@ Int@@ ent.@@ put@@ Extra@@ ("@@ INPUT@@ ", m@@ St@@ k@@ Context@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ m@@ Current@@ C@@ m@@ d.@@ g@@ e@@ Input@@ ()); new@@ Int@@ ent.@@ put@@ Extra@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ LO@@ T_@@ ID@@ , s@@ lo@@ t@@ Id@@ ); new@@ Int@@ ent.@@ set@@ Data@@ (@@ ur@@ i@@ Data@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ In@@ put in@@ put = m@@ St@@ k@@ Context@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ m@@ Current@@ C@@ m@@ d.@@ g@@ e@@ Input@@ (); not@@ if@@ y@@ User@@ I@@ f@@ N@@ ec@@ ess@@ ary@@ (s@@ lo@@ t@@ Id, (in@@ put != null ? in@@ pu@@ t.@@ tex@@ t : null@@ )); m@@ Context.@@ start@@ Activity@@ (@@ new@@ Intent@@ ); }
private void can@@ cel@@ No@@ t@@ if@@ ic@@ ation@@ On@@ Key@@ guard@@ (@@ int s@@ lo@@ t@@ Index@@ ) { if ((m@@ User@@ P@@ res@@ ent@@ Recei@@ ver@@ ) != null@@ ) { un@@ register@@ Recei@@ ver@@ (m@@ User@@ P@@ res@@ ent@@ Recei@@ ver@@ ); m@@ User@@ P@@ res@@ ent@@ Recei@@ ve@@ r = null@@ ; m@@ No@@ t@@ if@@ ic@@ ation@@ Manager.@@ can@@ cel@@ (get@@ No@@ t@@ if@@ ic@@ ation@@ Id@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ ON@@ _@@ KE@@ Y@@ G@@ U@@ AR@@ D@@ , s@@ lo@@ t@@ Id@@ )); } }
private void la@@ unch@@ Text@@ Di@@ alo@@ g@@ (@@ int s@@ lo@@ t@@ Id@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ LO@@ G_@@ TAG, ("@@ S@@ lo@@ t@@ Id@@ : " + s@@ lo@@ t@@ Id@@ )); android.content.@@ Int@@ ent new@@ Int@@ ent = new android.content.@@ Intent@@ (); java.lang.String target@@ Ac@@ tiv@@ it@@ y = com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ T@@ K@@ _@@ DI@@ A@@ LO@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E@@ ; int ac@@ tion = get@@ Flag@@ Activity@@ No@@ User@@ Action@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ In@@ iti@@ ated@@ By@@ User@@ Action@@ .@@ un@@ k@@ no@@ wn@@ , s@@ lo@@ t@@ Id@@ ); java.lang.String ur@@ i@@ Str@@ ing = (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ T@@ K@@ _@@ DI@@ A@@ LO@@ G_@@ UR@@ I@@ ) + (java.lang.@@ System.@@ current@@ Time@@ Milli@@ s()); android.net.@@ Ur@@ i ur@@ i@@ Data = android.net.@@ U@@ ri@@ .@@ parse@@ (@@ ur@@ i@@ String@@ ); if (@@ new@@ Int@@ ent != null@@ ) { new@@ Int@@ ent.@@ set@@ Class@@ Name@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ P@@ AC@@ K@@ A@@ G@@ E_@@ N@@ AM@@ E, target@@ Activity@@ ); new@@ Int@@ ent.@@ set@@ Flag@@ s@@ ((((@@ android.content.@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ ) | (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ EX@@ C@@ L@@ U@@ D@@ E_@@ F@@ RO@@ M@@ _RE@@ C@@ EN@@ T@@ S@@ )) | (get@@ Flag@@ Activity@@ No@@ User@@ Action@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ In@@ iti@@ ated@@ By@@ User@@ Action@@ .@@ un@@ k@@ no@@ wn@@ , s@@ lo@@ t@@ Id@@ )))); new@@ Int@@ ent.@@ set@@ Data@@ (@@ ur@@ i@@ Data@@ ); new@@ Int@@ ent.@@ put@@ Extra@@ ("@@ TE@@ X@@ T@@ ", m@@ St@@ k@@ Context@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ m@@ Current@@ C@@ m@@ d.@@ g@@ e@@ Text@@ Message@@ ()); new@@ Int@@ ent.@@ put@@ Extra@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ LO@@ T_@@ ID@@ , s@@ lo@@ t@@ Id@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ Text@@ Mess@@ age text@@ Mess@@ age = m@@ St@@ k@@ Context@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ m@@ Current@@ C@@ m@@ d.@@ g@@ e@@ Text@@ Message@@ (); not@@ if@@ y@@ User@@ I@@ f@@ N@@ ec@@ ess@@ ary@@ (s@@ lo@@ t@@ Id, (@@ text@@ Mess@@ age != null ? text@@ Mess@@ age.@@ tex@@ t : null@@ )); start@@ Activity@@ (@@ new@@ Intent@@ ); if (!(m@@ St@@ k@@ Context@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ m@@ Current@@ C@@ m@@ d.@@ g@@ e@@ Text@@ Message@@ ()@@ .@@ respon@@ se@@ N@@ e@@ ed@@ )) { send@@ Response@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ RE@@ S_@@ ID@@ _C@@ ON@@ FI@@ R@@ M@@ , s@@ lo@@ t@@ Id, true@@ ); } } }
public int get@@ C@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ e@@ Statu@@ s(@@ android.content.@@ p@@ m.@@ Package@@ Manager package@@ Manager@@ , java.lang.String package@@ Name@@ ) { try { if (!(@@ has@@ C@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ e@@ R@@ ul@@ es@@ ())) { int st@@ ate = m@@ Stat@@ e.get@@ (); if (@@ st@@ ate == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ e@@ R@@ ul@@ es.@@ STATE_@@ LO@@ AD@@ ING@@ )) { return android.@@ telephony.@@ Telephony@@ Manager.@@ C@@ AR@@ R@@ I@@ ER@@ _P@@ R@@ I@@ V@@ IL@@ E@@ G@@ E_@@ STAT@@ US@@ _@@ R@@ U@@ LE@@ S@@ _N@@ O@@ T_@@ LO@@ A@@ DE@@ D@@ ; } else if (@@ st@@ ate == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ e@@ R@@ ul@@ es.@@ STATE_@@ ER@@ RO@@ R@@ )) { return android.@@ telephony.@@ Telephony@@ Manager.@@ C@@ AR@@ R@@ I@@ ER@@ _P@@ R@@ I@@ V@@ IL@@ E@@ G@@ E_@@ STAT@@ US@@ _@@ ER@@ RO@@ R@@ _@@ LO@@ AD@@ ING@@ _@@ R@@ U@@ LE@@ S@@ ; } return android.@@ telephony.@@ Telephony@@ Manager.@@ C@@ AR@@ R@@ I@@ ER@@ _P@@ R@@ I@@ V@@ IL@@ E@@ G@@ E_@@ STAT@@ US@@ _N@@ O@@ _@@ AC@@ CE@@ SS@@ ; } android.content.@@ p@@ m.@@ Package@@ Info p@@ Info = package@@ Manager.@@ get@@ Package@@ Info@@ (@@ package@@ Name, ((@@ android.content.@@ p@@ m.@@ Package@@ Manager.@@ GE@@ T_@@ SI@@ G@@ N@@ AT@@ U@@ RE@@ S@@ ) | (android.@@ content.@@ p@@ m.@@ Package@@ Manager.@@ M@@ AT@@ CH@@ _@@ D@@ IS@@ AB@@ LE@@ D_@@ UN@@ T@@ IL@@ _@@ US@@ E@@ D_@@ C@@ O@@ M@@ P@@ ON@@ EN@@ T@@ S@@ ))); return get@@ C@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ e@@ Statu@@ s(@@ p@@ Info@@ ); } catch (android.@@ content.@@ p@@ m.@@ Package@@ Manager ex@@ ) { } return android.@@ telephony.@@ Telephony@@ Manager.@@ C@@ AR@@ R@@ I@@ ER@@ _P@@ R@@ I@@ ER@@ _P@@ R@@ I@@ V@@ IL@@ E@@ G@@ E_@@ STAT@@ US@@ _N@@ O@@ _@@ AC@@ CE@@ SS@@ ; }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { st@@ op@@ Service@@ (); m@@ Target@@ Context.@@ un@@ register@@ Recei@@ ver@@ (m@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ ); m@@ Connection@@ State@@ Changed@@ Q@@ ue@@ u@@ e.@@ clear@@ (); m@@ Connection@@ State@@ Changed@@ Q@@ ue@@ u@@ e.@@ clear@@ (); m@@ Connection@@ State@@ Changed@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { com.android.@@ bluetooth.@@ Test@@ Utils.@@ st@@ op@@ Service@@ (m@@ Service@@ R@@ ule@@ , com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service@@ .@@ class@@ ); m@@ Ser@@ vice = null@@ ; m@@ Adap@@ ter = null@@ ; m@@ Adap@@ ter = null@@ ; com.android.@@ bluetooth.@@ Test@@ Utils.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { com.android.@@ bluetooth.@@ Test@@ Utils.@@ st@@ op@@ Service@@ (m@@ Service@@ R@@ ul@@ e); m@@ He@@ ad@@ set@@ Ser@@ vice = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .get@@ He@@ ad@@ set@@ Service@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Null@@ (m@@ He@@ ad@@ set@@ Service@@ ); m@@ State@@ M@@ ach@@ in@@ es.@@ clear@@ (); m@@ Current@@ De@@ vice = null@@ ; java.lang.@@ ref@@ lect.@@ M@@ ethod m@@ ethod = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Factory@@ .@@ class@@ .get@@ Dec@@ lar@@ ed@@ Method@@ ("@@ set@@ Instance@@ For@@ Test@@ ing@@ ", com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Factory@@ .@@ class@@ ); method@@ .set@@ Ac@@ ces@@ si@@ ble@@ (@@ true@@ ); method@@ .@@ invok@@ e@@ (@@ null@@ , ((@@ com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Factory@@ ) (@@ null@@ ))); m@@ Object@@ s@@ Fa@@ ctor@@ y = null@@ ; com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Factory@@ ) (@@ null@@ ))); m@@ Object@@ s@@ Fa@@ ctor@@ y = null@@ ; com.android.@@ bluetooth.@@ Test@@ Utils.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); m@@ Adap@@ ter@@ Ser@@ vice = null@@ ; }
@org.junit.Test public void test@@ In@@ iti@@ aliz@@ e@@ () { android.util.Log.@@ i@@ (com.android.@@ bluetooth.@@ h@@ d@@ p@@ .@@ He@@ al@@ th@@ Service.@@ TAG, "@@ St@@ ar@@ t TA@@ G@@ , t@@ est@@ "); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { com.android.@@ bluetooth.@@ Test@@ Utils.@@ st@@ op@@ Service@@ (m@@ Service@@ R@@ ule@@ , com.android.@@ bluetooth.@@ h@@ d@@ p.@@ He@@ al@@ th@@ Service@@ .@@ class@@ ); m@@ Adap@@ ter = null@@ ; com.android.@@ bluetooth.@@ Test@@ Utils.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Factory@@ .get@@ Instance@@ ().@@ d@@ est@@ ro@@ y@@ State@@ M@@ ach@@ ine@@ (m@@ He@@ ad@@ set@@ State@@ M@@ ach@@ ine@@ ); m@@ Handler@@ Thread@@ .@@ qu@@ it@@ (); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Test@@ Util.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Ser@@ vice = null@@ ; }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { m@@ Target@@ Context = android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ (); org.@@ junit.@@ A@@ ss@@ um@@ e.@@ ass@@ um@@ e@@ True@@ ("@@ I@@ gn@@ or@@ e t@@ est wh@@ e@@ n He@@ al@@ th@@ Ser@@ vice is not en@@ abled@@ ", m@@ Target@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ pro@@ file@@ _@@ sup@@ ported@@ _@@ h@@ d@@ p@@ )); org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); com.android.@@ bluetooth.@@ Test@@ Utils.@@ set@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); com.android.@@ bluetooth.@@ Test@@ Utils.@@ start@@ Service@@ (m@@ Service@@ R@@ ule@@ , com.android.@@ bluetooth.@@ h@@ d@@ p.@@ He@@ al@@ th@@ Service@@ .@@ class@@ ); m@@ Adap@@ ter = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (m@@ Adap@@ ter@@ ); }
@org.junit.Test public void test@@ In@@ iti@@ aliz@@ e@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ Map@@ Client@@ Test.@@ TAG, "@@ test@@ In@@ iti@@ aliz@@ e@@ ()@@ "); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ .@@ do@@ Q@@ u@@ it@@ (); m@@ Handler@@ Thread@@ .@@ qu@@ it@@ (); com.android.@@ bluetooth.@@ Test@@ Utils.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); com.android.@@ bluetooth@@ .@@ Test@@ Utils.@@ set@@ Adap@@ ter@@ Ser@@ vice m@@ Handler@@ Thread@@ .@@ start@@ (); m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ start@@ (); m@@ Test@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 0@@ 1@@ :@@ 0@@ 2@@ :@@ 0@@ 3@@ :@@ 0@@ 4@@ :@@ 0@@ 5@@ "); m@@ Handler@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ Test@@ Handler@@ Thread@@ "); m@@ Handler@@ Thread@@ .@@ start@@ (); m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e = new com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ (m@@ Test@@ Device@@ , m@@ A@@ 2@@ d@@ p@@ Service@@ , m@@ Target@@ Context@@ , m@@ A@@ 2@@ d@@ p@@ Native@@ Interface@@ , m@@ Handler@@ Thread@@ .get@@ L@@ oo@@ per@@ ()); m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ s@@ Con@@ nect@@ Time@@ out@@ M@@ s = 1@@ 00@@ 0; m@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ start@@ (); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { m@@ H@@ id@@ Device@@ Service.@@ st@@ op@@ (); m@@ H@@ id@@ Device@@ Service.@@ cle@@ an@@ up@@ (); m@@ H@@ id@@ Device@@ Ser@@ vice = null@@ ; m@@ Target@@ Context.@@ un@@ register@@ Recei@@ ver@@ (m@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ ); m@@ Connection@@ State@@ Changed@@ Q@@ ue@@ u@@ e.@@ clear@@ (); m@@ Callback@@ Q@@ ue@@ u@@ e.@@ clear@@ (); m@@ H@@ id@@ .@@ H@@ id@@ Device@@ Test.@@ set@@ H@@ id@@ Device@@ Native@@ Interface@@ Instance@@ (@@ null@@ ); com.android.@@ bluetooth.@@ Test@@ Utils.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); m@@ Adap@@ ter@@ Ser@@ vice = null@@ ; }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { m@@ Handler@@ Thread@@ .@@ qu@@ it@@ S@@ a@@ f@@ el@@ y(); com.android.@@ bluetooth.@@ Test@@ Utils.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); m@@ Adap@@ ter@@ Ser@@ vice = null@@ ; }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); com.android.@@ bluetooth.@@ Test@@ Utils.@@ set@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); m@@ Adap@@ ter = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (); m@@ Test@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 0@@ 1@@ :@@ 0@@ 2@@ :@@ 0@@ 3@@ :@@ 0@@ 4@@ :@@ 0@@ 5@@ "); m@@ Handler@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ P@@ b@@ ap@@ Test@@ Handler@@ Thread@@ "); m@@ Handler@@ Thread@@ .@@ start@@ (); m@@ Handle@@ r = new android.os.@@ Handler@@ (m@@ Handler@@ Thread@@ .get@@ L@@ oo@@ per@@ ()); m@@ Bluetooth@@ P@@ b@@ ap@@ Ser@@ vice = mock@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service@@ .@@ class@@ ); do@@ No@@ th@@ ing@@ ().@@ when@@ (m@@ Bluetooth@@ P@@ b@@ ap@@ Service@@ ).@@ check@@ Or@@ Get@@ Phone@@ b@@ ook@@ Permission@@ (@@ an@@ y@@ ()); m@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e = com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e.@@ m@@ ake@@ (m@@ Bluetooth@@ P@@ b@@ ap@@ Service@@ , m@@ Handler@@ Thread@@ .get@@ L@@ oo@@ per@@ (), m@@ Test@@ Device@@ , m@@ Socket@@ , m@@ Bluetooth@@ P@@ b@@ ap@@ Service@@ , m@@ Handler@@ , com.android.@@ bluetooth.@@ p@@ b@@ ap@@ .@@ P@@ b@@ ap@@ State@@ M@@ ach@@ ine@@ Test@@ .@@ TEST_@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ ID@@ ); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { com.android.@@ bluetooth.@@ Test@@ Utils.@@ st@@ op@@ Service@@ (m@@ Service@@ R@@ ule@@ , com.android.@@ bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ Map@@ Client@@ Service@@ .@@ class@@ ); m@@ Ser@@ vice = com.android.@@ bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ Map@@ Client@@ Service@@ .get@@ Map@@ Client@@ Service@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Null@@ (m@@ Service@@ ); m@@ Adap@@ ter = null@@ ; com.android.@@ bluetooth.@@ Test@@ Utils.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); m@@ Adap@@ ter@@ Ser@@ vice = null@@ ; }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { m@@ He@@ ad@@ set@@ Ser@@ vice = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .get@@ He@@ ad@@ set@@ Service@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Null@@ (m@@ He@@ ad@@ set@@ Service@@ ); res@@ et@@ (m@@ Object@@ s@@ Factory@@ , m@@ Adap@@ ter@@ Service@@ ); m@@ Current@@ De@@ vice = null@@ ; java.lang.@@ ref@@ lect.@@ M@@ ethod m@@ ethod = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Fa@@ ctor@@ y = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Fa@@ ctor@@ y@@ .@@ class@@ .get@@ Dec@@ lar@@ ed@@ Method@@ ("@@ set@@ Instance@@ For@@ Test@@ ing@@ ", com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Fa@@ ctor@@ y = null@@ ; method@@ .set@@ Ac@@ ces@@ si@@ ble@@ (@@ true@@ ); method@@ .@@ invok@@ e@@ (@@ null@@ , ((@@ com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Factory@@ ) (@@ null@@ ))); m@@ Object@@ s@@ Fa@@ ctor@@ y = null@@ ; com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Object@@ s@@ Factory@@ .get@@ He@@ ad@@ set@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); }
@java.lang.Override public void on@@ Service@@ Connec@@ ted@@ (android.@@ content.@@ Comp@@ onent@@ Name name@@ , android.os.@@ I@@ B@@ in@@ der service@@ ) { m@@ Service@@ B@@ in@@ der = ((@@ android.@@ telephony.@@ IN@@ et@@ work@@ Service.@@ St@@ u@@ b@@ ) (@@ service@@ )); m@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ Reg@@ Manager@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ (@@ name@@ ); try { m@@ Service@@ B@@ ind@@ er.@@ lin@@ k@@ To@@ De@@ ath@@ (m@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ ); m@@ Service@@ B@@ ind@@ er.@@ create@@ Network@@ Service@@ Provider@@ (m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ ()); m@@ Service@@ B@@ ind@@ er.@@ register@@ For@@ Network@@ Reg@@ is@@ tr@@ ation@@ State@@ Changed@@ (m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ (), new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ Network@@ Reg@@ State@@ Callback@@ (@@ null@@ )); } catch (android.os.@@ Remote@@ Exception excepti@@ on@@ ) { m@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent.@@ b@@ in@@ der@@ Di@@ ed@@ (); android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ TAG, ("@@ Remote@@ Exception " + excepti@@ on@@ )); } }
private boolean b@@ ind@@ Service@@ () { android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ telephony.@@ Network@@ Service.@@ N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ ER@@ V@@ IC@@ E_@@ IN@@ TER@@ F@@ AC@@ E); int@@ ent.@@ set@@ Package@@ (get@@ Package@@ Name@@ ()); return m@@ Ph@@ on@@ e.get@@ Context@@ ().@@ b@@ ind@@ Service@@ (@@ int@@ ent@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ Network@@ Service@@ Connection@@ (), Context.@@ B@@ IN@@ D_@@ A@@ UT@@ O@@ _C@@ RE@@ A@@ TE@@ ); }
public void register@@ For@@ Network@@ Reg@@ is@@ tr@@ ation@@ State@@ Changed@@ (android.os.@@ Handle@@ r h@@ , int wh@@ at@@ , java.lang.Object ob@@ j@@ ) { android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ TAG, "@@ register@@ For@@ Network@@ Reg@@ is@@ tr@@ ation@@ State@@ Changed@@ "); android.os.@@ Reg@@ is@@ tr@@ an@@ t r = new android.os.@@ Reg@@ is@@ tr@@ ant@@ (@@ h@@ , wh@@ at@@ , ob@@ j@@ ); m@@ Reg@@ State@@ Chang@@ e@@ Reg@@ is@@ tr@@ an@@ ts.@@ add@@ Un@@ i@@ q@@ ue@@ (@@ h@@ , wh@@ at@@ , ob@@ j@@ ); }
@java.lang.Override public void b@@ in@@ der@@ Di@@ ed@@ () { android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ TAG, ((@@ (("@@ Network@@ Service@@ (@@ " + (m@@ Comp@@ onent@@ Name@@ )) + " trans@@ por@@ t type ") + (m@@ Trans@@ port@@ Type@@ )) + ") di@@ ed.@@ ")); }
@java.lang.Override public void on@@ Network@@ State@@ Changed@@ () { android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ TAG, "@@ on@@ Network@@ State@@ Changed@@ "); m@@ Reg@@ State@@ Chang@@ e@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (); }
private java.lang.String get@@ Package@@ Name@@ () { java.lang.String package@@ Name@@ ; int resource@@ Id@@ ; java.lang.String c@@ ar@@ ri@@ er@@ Config@@ ; switch (m@@ Trans@@ port@@ Typ@@ e) { case android.@@ telephony.@@ Access@@ Network@@ Constants.@@ Trans@@ port@@ Type.@@ W@@ A@@ N : resource@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ str@@ ing.@@ config@@ _@@ w@@ an@@ _@@ network@@ _@@ package@@ ; c@@ ar@@ ri@@ er@@ Con@@ fi@@ g = android.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _C@@ AR@@ R@@ I@@ ER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ ER@@ V@@ IC@@ E_@@ W@@ W@@ AN@@ _P@@ AC@@ K@@ A@@ G@@ E_@@ O@@ V@@ ER@@ R@@ ID@@ E_@@ S@@ TR@@ ING@@ ; break@@ ; case android.@@ telephony.@@ Access@@ Network@@ Constants.@@ Trans@@ port@@ Type.@@ W@@ LA@@ N : resource@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ str@@ ing.@@ config@@ _@@ w@@ lan@@ _@@ network@@ _@@ package@@ ; c@@ ar@@ ri@@ er@@ Con@@ fi@@ g = android.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _C@@ AR@@ R@@ I@@ ER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ ER@@ V@@ IC@@ E_@@ W@@ L@@ AN@@ _P@@ AC@@ K@@ A@@ G@@ E_@@ O@@ V@@ ER@@ R@@ ID@@ E_@@ S@@ TR@@ ING@@ ; break@@ ; default : throw new java.lang.Illegal@@ State@@ Exception@@ (("@@ Trans@@ por@@ t type not W@@ W@@ A@@ N or W@@ L@@ AN@@ . type@@ =@@ " + (m@@ Trans@@ port@@ Type@@ ))); } package@@ Name = m@@ Ph@@ on@@ e.get@@ Context@@ ().get@@ Res@@ ources@@ ().get@@ String(@@ resource@@ Id@@ ); android.os.@@ Per@@ si@@ st@@ able@@ Bund@@ le b = mC@@ ar@@ ri@@ er@@ Config@@ Manager.@@ get@@ Config@@ For@@ Sub@@ Id@@ (m@@ Ph@@ on@@ e.get@@ Sub@@ Id@@ ()); if (@@ b != null@@ ) { package@@ Name = b@@ .get@@ String@@ (c@@ ar@@ ri@@ er@@ Config@@ , package@@ Name); } android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ TAG, ((@@ ("@@ B@@ ind@@ ing to package@@ Name " + package@@ Name@@ ) + " for trans@@ por@@ t type@@ ") + (m@@ Trans@@ port@@ Type@@ ))); return package@@ Name@@ ; }
public void get@@ Network@@ Reg@@ is@@ tr@@ ation@@ State@@ (@@ int do@@ main@@ , android.os.@@ Mess@@ age on@@ Comp@@ let@@ e@@ Message@@ ) { if (@@ on@@ Comp@@ let@@ e@@ Mess@@ age == null@@ ) return@@ ; android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ TAG, ("@@ get@@ Network@@ Reg@@ is@@ tr@@ ation@@ State do@@ ma@@ in " + do@@ main@@ )); if (!(@@ is@@ Service@@ Connec@@ ted@@ ())) { on@@ Comp@@ let@@ e@@ Mess@@ age.@@ ob@@ j = new android.os.@@ As@@ ync@@ Result@@ (@@ on@@ Comp@@ let@@ e@@ Mess@@ age.@@ ob@@ j@@ , null@@ , new java.lang.Illegal@@ State@@ Exception@@ ("@@ Ser@@ vice not connec@@ ted@@ .@@ ")); on@@ Comp@@ let@@ e@@ Mess@@ age.@@ send@@ To@@ Target@@ (); return@@ ; } try { m@@ Service@@ B@@ ind@@ er.get@@ Network@@ Reg@@ is@@ tr@@ ation@@ State@@ (m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ (), do@@ main@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ Network@@ Reg@@ State@@ Callback@@ (@@ on@@ Comp@@ let@@ e@@ Message@@ )); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ TAG, ("@@ get@@ Network@@ Reg@@ is@@ tr@@ ation@@ State Remote@@ Exception " + e@@ )); on@@ Comp@@ let@@ e@@ Mess@@ age.@@ ob@@ j = new android.os.@@ As@@ ync@@ Result@@ (@@ on@@ Comp@@ let@@ e@@ Mess@@ age.@@ ob@@ j@@ , null@@ , e); on@@ Comp@@ let@@ e@@ Mess@@ age.@@ send@@ To@@ Target@@ (); } }
@java.lang.Override public void on@@ Service@@ Dis@@ connec@@ ted@@ (android.@@ content.@@ Comp@@ onent@@ Name name@@ ) { android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ Manager.@@ TAG, ("@@ on@@ Service@@ Dis@@ connec@@ ted " + name@@ )); if ((m@@ Service@@ B@@ in@@ der@@ ) != null@@ ) { m@@ Service@@ B@@ ind@@ er.@@ un@@ lin@@ k@@ To@@ De@@ ath@@ (m@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ , 0); } }
private void update@@ () { boolean tr@@ ac@@ ing@@ O@@ n = com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ is@@ Tr@@ ac@@ ing@@ On@@ (); get@@ Q@@ s@@ T@@ ile@@ ().@@ set@@ I@@ con@@ (android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ I@@ con@@ .@@ create@@ With@@ Resource@@ (@@ this@@ , R.@@ d@@ raw@@ ab@@ le.@@ st@@ at@@ _@@ s@@ ys@@ _@@ ad@@ b@@ )); get@@ Q@@ s@@ T@@ ile@@ ().@@ set@@ State@@ ((@@ tr@@ ac@@ ing@@ O@@ n ? android.@@ service@@ .@@ qu@@ i@@ ck@@ setting@@ s.@@ T@@ i@@ le.@@ STATE_@@ AC@@ TI@@ V@@ E : android.@@ service@@ .@@ qu@@ i@@ ck@@ s.@@ T@@ i@@ le.@@ STATE_@@ IN@@ AC@@ TI@@ V@@ E@@ )); get@@ Q@@ s@@ T@@ ile@@ ().@@ set@@ L@@ ab@@ el@@ (get@@ String(@@ tr@@ ac@@ ing@@ O@@ n ? R.@@ str@@ ing.@@ s@@ a@@ ve@@ _@@ and@@ _@@ sh@@ ar@@ e@@ _@@ tr@@ ac@@ e@@ _@@ : R.@@ str@@ ing.@@ re@@ cord@@ _@@ trace@@ _@@ trace@@ _@@ get@@ Q@@ s@@ T@@ ile@@ ().@@ update@@ T@@ ile@@ (); }
public void po@@ l@@ l@@ State@@ (@@ boolean mode@@ m@@ T@@ ri@@ gg@@ er@@ ed@@ ) { m@@ P@@ ol@@ l@@ ing@@ Context = new int@@ [@@ 1@@ ]; m@@ P@@ ol@@ l@@ ing@@ Context@@ [0@@ ] = 0; log@@ (("@@ po@@ l@@ ing mode@@ m@@ T@@ ri@@ gg@@ er@@ ed@@ =@@ " + mode@@ m@@ T@@ ri@@ gg@@ er@@ ed@@ )); switch (m@@ C@@ i@@ .get@@ R@@ ad@@ io@@ State@@ ()) { case R@@ AD@@ IO@@ _@@ UN@@ AV@@ A@@ IL@@ AB@@ L@@ E : m@@ New@@ SS@@ .set@@ State@@ Out@@ Of@@ Service@@ (); m@@ New@@ C@@ ell@@ Loc@@ .set@@ State@@ In@@ valid@@ (); set@@ Sign@@ al@@ Str@@ ength@@ Default@@ Valu@@ es@@ (); m@@ N@@ it@@ z@@ State.@@ handle@@ Network@@ Un@@ ava@@ il@@ able@@ (); po@@ l@@ l@@ State@@ D@@ one@@ (); break@@ ; case R@@ AD@@ IO@@ _@@ O@@ F@@ F : m@@ New@@ SS@@ .set@@ State@@ O@@ ff@@ (); m@@ New@@ C@@ ell@@ Loc@@ .set@@ State@@ In@@ valid@@ (); set@@ Sign@@ al@@ Str@@ ength@@ Default@@ Valu@@ es@@ (); m@@ N@@ it@@ z@@ State.@@ handle@@ Network@@ Un@@ ava@@ il@@ able@@ (); if ((m@@ Device@@ Sh@@ ut@@ ting@@ Do@@ wn@@ ) || ((@@ !@@ mode@@ m@@ T@@ ri@@ gg@@ er@@ ed@@ ) && ((@@ android.@@ telephony.@@ Service@@ State.@@ R@@ AD@@ IO@@ _@@ TE@@ CH@@ NO@@ LO@@ G@@ Y_@@ I@@ W@@ L@@ AN@@ ) != (m@@ SS@@ .get@@ R@@ il@@ Data@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ ()@@ )@@ ))) { po@@ l@@ l@@ State@@ D@@ one@@ (); break@@ ; } default : (m@@ P@@ ol@@ l@@ ing@@ Context@@ [0@@ ]@@ )@@ ++@@ ; mC@@ i@@ .get@@ Oper@@ ator@@ (@@ ob@@ t@@ ain@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ EV@@ ENT_@@ P@@ O@@ L@@ L@@ _@@ STATE_@@ O@@ P@@ ER@@ AT@@ OR@@ , m@@ P@@ ol@@ l@@ ing@@ Context@@ )); (m@@ P@@ ol@@ l@@ ing@@ Context@@ [0@@ ]@@ )@@ ++@@ ; m@@ W@@ w@@ an@@ Reg@@ State@@ Manager.@@ get@@ Network@@ Reg@@ is@@ tr@@ ation@@ State@@ (@@ Network@@ Reg@@ is@@ tr@@ ation@@ State.@@ D@@ O@@ MA@@ IN@@ _P@@ S@@ , ob@@ t@@ ain@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ EV@@ ENT_@@ P@@ O@@ L@@ L@@ _@@ STATE_@@ G@@ P@@ RS@@ , m@@ P@@ ol@@ l@@ ing@@ Context@@ )); (m@@ P@@ ol@@ l@@ ing@@ Context@@ [0@@ ]@@ )@@ ++@@ ; m@@ W@@ w@@ an@@ Reg@@ State@@ Manager.@@ get@@ Network@@ Reg@@ is@@ tr@@ ation@@ State@@ (@@ Network@@ Reg@@ is@@ tr@@ ation@@ State.@@ D@@ O@@ MA@@ IN@@ _C@@ S@@ , ob@@ t@@ ain@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ EV@@ ENT_@@ P@@ O@@ L@@ L@@ _@@ STATE_@@ RE@@ G@@ IS@@ TR@@ AT@@ ION@@ , m@@ P@@ ol@@ l@@ ing@@ Context@@ )); if (m@@ Ph@@ on@@ e.@@ is@@ Phone@@ Type@@ G@@ s@@ m@@ ()) { (m@@ P@@ ol@@ l@@ ing@@ Context@@ [0@@ ]@@ )@@ ++@@ ; mC@@ i@@ .@@ get@@ Network@@ Selection@@ Mod@@ e@@ (@@ ob@@ t@@ ain@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ EV@@ ENT_@@ P@@ O@@ L@@ _@@ STATE_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _S@@ E@@ LE@@ C@@ TION@@ _MOD@@ E, m@@ P@@ ol@@ l@@ ing@@ Context@@ )); } break@@ ; } }
private int get@@ L@@ te@@ E@@ ar@@ fc@@ n@@ (android.os.@@ System@@ C@@ ell@@ Id@@ enti@@ t@@ y cel@@ l@@ Id@@ enti@@ t@@ y@@ ) { int l@@ te@@ E@@ ar@@ fc@@ n = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ IN@@ V@@ AL@@ ID@@ _@@ L@@ T@@ E_@@ E@@ AR@@ F@@ C@@ N@@ ; switch (@@ cel@@ l@@ Id@@ enti@@ ty@@ .get@@ Type@@ ()) { case android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ C@@ ell@@ Info@@ Type.@@ L@@ T@@ E : { l@@ te@@ E@@ ar@@ fc@@ n = ((@@ android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ C@@ ell@@ Info@@ Type.@@ L@@ T@@ E : { l@@ te@@ E@@ ar@@ fc@@ n = ((@@ android.os.@@ C@@ ell@@ Id@@ enti@@ ty@@ L@@ te@@ ) (@@ cel@@ l@@ Id@@ enti@@ ty@@ ))@@ .get@@ E@@ ar@@ fc@@ n@@ (); break@@ ; } default : { break@@ ; } } return l@@ te@@ E@@ ar@@ fc@@ n@@ ; }
private void not@@ if@@ y@@ S@@ ent@@ Message@@ Statu@@ s(@@ java.lang.String handle@@ , com.android.@@ bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ Event@@ Re@@ port.@@ Type statu@@ s) { if (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ M@@ ce@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ M@@ ce@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ send@@ Message@@ : a statu@@ s for " + handle@@ ) + " Statu@@ s = ") + statu@@ s@@ )); } android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent int@@ ent@@ To@@ S@@ en@@ d = null@@ ; java.lang.String short@@ Hand@@ le = hand@@ le.@@ sub@@ string@@ (@@ 2@@ ); if (@@ statu@@ s == (@@ Event@@ Re@@ port.@@ Type.@@ S@@ END@@ ING@@ _@@ FA@@ IL@@ U@@ RE@@ )) || (@@ statu@@ s == (@@ Event@@ Re@@ port.@@ Type@@ .@@ S@@ END@@ ING@@ _S@@ U@@ C@@ CE@@ SS@@ )) { int@@ ent@@ To@@ S@@ en@@ d = mS@@ ent@@ Re@@ ce@@ ip@@ t@@ Requ@@ es@@ ted@@ .@@ remove@@ (m@@ S@@ ent@@ Message@@ Log.@@ get@@ (@@ short@@ Hand@@ le@@ )); } else if (@@ statu@@ s == (@@ Event@@ Re@@ port.@@ Type.@@ DE@@ L@@ I@@ V@@ ER@@ Y@@ _S@@ U@@ C@@ CE@@ SS@@ )) || (@@ statu@@ s == (@@ Event@@ Re@@ port.@@ Type.@@ DE@@ L@@ I@@ V@@ ER@@ Y_@@ FA@@ IL@@ U@@ RE@@ ))) { int@@ ent@@ To@@ S@@ en@@ d = m@@ De@@ li@@ ver@@ y@@ Re@@ ce@@ ip@@ t@@ Requ@@ es@@ ted@@ .@@ remove@@ (m@@ S@@ ent@@ Message@@ Log.@@ get@@ (@@ short@@ Hand@@ le@@ )); } if (@@ int@@ ent@@ To@@ S@@ en@@ d != null@@ ) { try { if (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ M@@ ce@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ M@@ ce@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ S@@ ent@@ Message@@ : " + int@@ ent@@ To@@ S@@ end@@ .@@ send@@ (); } catch (android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent e) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ M@@ ce@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ S@@ ent@@ Message@@ : Requ@@ est Can@@ ce@@ le@@ d " + e@@ )); } } else { android.util.Log.@@ e@@ (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ M@@ ce@@ State@@ M@@ ach@@ in@@ e.@@ TAG, (("@@ S@@ ent@@ Message@@ : a not@@ if@@ ic@@ ation on mess@@ age wit@@ h hand@@ le = " + handle@@ ) + " bu@@ t is NO@@ T fo@@ un@@ d in mS@@ ent@@ Message@@ Log@@ !@@ wh@@ er@@ e d@@ id i@@ t go@@ t ? } }
@java.lang.Override protected java.lang.String get@@ Log@@ R@@ ec@@ String@@ (android.os.@@ Mess@@ age ms@@ g@@ ) { if ((m@@ s@@ g.@@ wh@@ at@@ ) == (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ )) { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent ev@@ ent = ((@@ com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ ) (m@@ s@@ g.@@ ob@@ j@@ )); return ((@@ com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.get@@ Message@@ Name@@ (m@@ s@@ g.@@ wh@@ at@@ )) + "@@ : ") + event@@ ; } else { return ((((@@ com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.get@@ Message@@ Name@@ (m@@ s@@ g.@@ wh@@ at@@ )) + "@@ : arg@@ 1@@ =@@ ") + (m@@ s@@ g.@@ arg@@ 1@@ )) + ", arg@@ 2@@ =@@ ") + (m@@ s@@ g.@@ arg@@ 2@@ ); } }
@@@ android.@@ annotation.@@ NonNull public static android.net.@@ M@@ ac@@ Address create@@ R@@ an@@ do@@ m@@ Un@@ ic@@ ast@@ Addres@@ s() { java.security.@@ Sec@@ ure@@ R@@ an@@ do@@ m@@ s = new java.util.@@ Hash@@ Map@@ <@@ android.net.@@ M@@ ac@@ Address@@ >@@ (android.net.@@ M@@ ac@@ Address@@ .@@ V@@ AL@@ ID@@ _@@ L@@ ON@@ G@@ _M@@ A@@ S@@ K@@ ); add@@ r = add@@ r | (android.net.@@ M@@ ac@@ Addres@@ s.@@ ne@@ t@@ y.@@ M@@ ac@@ Addres@@ s.@@ LO@@ C@@ AL@@ L@@ Y_@@ A@@ SS@@ I@@ G@@ N@@ E@@ D@@ _M@@ A@@ S@@ K@@ ); add@@ r = add@@ r & (android.net.@@ M@@ ac@@ Addres@@ s.@@ M@@ UL@@ T@@ IC@@ A@@ S@@ T@@ _M@@ A@@ S@@ K@@ )); return new android.net.@@ M@@ ac@@ Addres@@ s(@@ add@@ r@@ ); }
public void register@@ For@@ E@@ id@@ Read@@ y@@ (android.os.@@ Handle@@ r h@@ , int wh@@ at@@ , java.lang.Object ob@@ j@@ ) { synchronized@@ (m@@ Lock) { android.os.@@ Reg@@ is@@ tr@@ an@@ t r = new android.os.@@ Reg@@ is@@ tr@@ ant@@ (@@ h@@ , wh@@ at@@ , ob@@ j@@ ); m@@ Sim@@ State@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ add(@@ r@@ ); } }
@java.lang.Override public void on@@ Exception@@ (java.lang.@@ Throw@@ able e) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ log@@ e@@ ("@@ Faile@@ d load@@ ing e@@ id@@ "); }
@java.lang.Override public void on@@ Result@@ (java.lang.String result@@ ) { m@@ E@@ id = result@@ ; m@@ Sim@@ State@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , null@@ )); }
public void un@@ register@@ For@@ E@@ id@@ Read@@ y@@ (android.os.@@ Handle@@ r h@@ ) { m@@ Sim@@ State@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ remove@@ (@@ h@@ ); }
private void load@@ E@@ id@@ And@@ No@@ t@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ () { android.os.@@ Handle@@ r e@@ u@@ ic@@ c@@ M@@ ain@@ Thread@@ Handle@@ r = new android.os.@@ Handler@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <java.lang.String@@ > c@@ ard@@ C@@ b = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ as@@ yn@@ c.@@ As@@ ync@@ Result@@ Callback@@ <java.lang.String@@ >@@ () { @java.lang.Override public void on@@ Result@@ (java.lang.String result@@ ) { m@@ E@@ id = result@@ ; m@@ Sim@@ State@@ Load@@ ed@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , null@@ , null@@ )); } @java.lang.Override public void on@@ Exception@@ (java.lang.@@ Throw@@ able e) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ .@@ log@@ e@@ ("@@ Faile@@ d load@@ ing e@@ id@@ "); } }; get@@ E@@ id@@ (c@@ ard@@ C@@ b@@ , e@@ u@@ ic@@ c@@ M@@ ain@@ Thread@@ Handler@@ ); }
private boolean parse@@ A@@ tr@@ String@@ (java.lang.String at@@ r@@ ) { if (((@@ at@@ r.@@ length@@ ()) % 2@@ ) != 0) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ An@@ sw@@ er@@ To@@ Res@@ et@@ .@@ log@@ e@@ ((@@ ("@@ parse@@ A@@ tr@@ String@@ (java.lang.String at@@ r@@ ) + " is not ev@@ en@@ .@@ ")); return false@@ ; } if ((@@ at@@ r.@@ length@@ ()) < 4@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ An@@ sw@@ er@@ To@@ Res@@ et@@ .@@ log@@ e@@ ("@@ In@@ va@@ li@@ d AT@@ R str@@ ing m@@ us@@ t at le@@ as@@ t contain@@ s T@@ S an@@ d T@@ 0@@ . return false@@ ; } byte@@ [] at@@ r@@ Byte@@ s = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ cc@@ Utils.@@ h@@ ex@@ String@@ To@@ Bytes@@ (@@ at@@ r@@ ); if (@@ at@@ r@@ Byte@@ s == null@@ ) { return false@@ ; } int in@@ dex = parse@@ Con@@ v@@ en@@ tion@@ Byte@@ (@@ at@@ r@@ Bytes@@ , 0); if (in@@ dex == (-1@@ )) { return false@@ ; } in@@ dex = parse@@ Format@@ Byte@@ (@@ at@@ r@@ Bytes@@ , index@@ ); if (in@@ dex == (-1@@ )) { return false@@ ; } in@@ dex = parse@@ Interface@@ Bytes@@ (@@ at@@ r@@ Bytes@@ , index@@ ); if (in@@ dex == (-1@@ )) { return false@@ ; } in@@ dex = parse@@ H@@ ist@@ or@@ ic@@ al@@ Bytes@@ (@@ at@@ r@@ Bytes@@ , index@@ ); if (in@@ dex == (-1@@ )) { return false@@ ; } in@@ dex = parse@@ H@@ ist@@ or@@ ic@@ al@@ Bytes@@ (@@ at@@ r@@ Bytes@@ , index@@ ); if (in@@ dex == (-1@@ )) { return false@@ ; } if (in@@ dex != (@@ at@@ r@@ By@@ t@@ es.@@ length@@ )) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ An@@ sw@@ er@@ To@@ Res@@ et@@ .@@ log@@ e@@ ("@@ In@@ va@@ li@@ d byte@@ s a@@ f@@ ter the ch@@ ec@@ k byte@@ s.@@ "); return false@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ An@@ sw@@ er@@ To@@ Res@@ et@@ .@@ log@@ ((@@ (("@@ In@@ va@@ li@@ d parse@@ d the AT@@ R str@@ ing " + "@@ th@@ at@@ r@@ ) + " int@@ o ") + (@@ toString@@ ()))); check@@ I@@ s@@ E@@ u@@ ic@@ c@@ Sup@@ ported@@ (); return true@@ ; }
void de@@ f@@ le@@ ct@@ (com.android.server.@@ telecom.@@ Cal@@ l call@@ , java.lang.String n@@ umber@@ ) { final java.lang.String call@@ Id = m@@ Call@@ Id@@ M@@ app@@ er.get@@ Call@@ Id@@ (c@@ all@@ ); if ((@@ call@@ Id != null@@ ) && (is@@ Service@@ Valid@@ ("@@ de@@ f@@ le@@ ct@@ "@@ ))) { try { log@@ Out@@ go@@ ing@@ ("@@ de@@ f@@ lec@@ t %@@ s %@@ s@@ ", call@@ Id, n@@ umber@@ ); m@@ Service@@ Interface@@ .@@ de@@ f@@ le@@ ct@@ (c@@ all@@ Id, n@@ umber@@ , android.telecom.@@ Log.@@ get@@ Ex@@ ternal@@ Session@@ ()); } catch (android.os.@@ Remote@@ Exception e) { } } }
@java.lang.Override public void de@@ f@@ le@@ ct@@ Call@@ (java.lang.String call@@ Id, java.lang.String de@@ f@@ le@@ ct@@ Number@@ ) { try { android.telecom.@@ Log.@@ start@@ Session@@ (@@ Log@@ Utils.@@ Session@@ s.@@ IC@@ A@@ _@@ DE@@ F@@ LE@@ C@@ T_@@ C@@ AL@@ L@@ , m@@ O@@ w@@ ner@@ Comp@@ onent@@ Name); long to@@ k@@ e@@ n = android.os.@@ B@@ ind@@ er.@@ clear@@ Call@@ ing@@ Id@@ enti@@ ty@@ (); try { synchronized@@ (m@@ Lock) { android.telecom.@@ Log.@@ i@@ (@@ this@@ , "@@ de@@ f@@ le@@ ct@@ Call@@ (@@ %@@ s@@ ,@@ %@@ s@@ )@@ ", call@@ Id, de@@ f@@ le@@ ct@@ Number@@ ); com.android.server.@@ telecom.@@ Cal@@ l cal@@ l = m@@ Call@@ Id@@ M@@ app@@ er.get@@ Call@@ (c@@ all@@ Id@@ ); if (c@@ al@@ l != null@@ ) { m@@ Call@@ s@@ Manager.@@ de@@ f@@ le@@ ct@@ Call@@ (c@@ all@@ , de@@ f@@ le@@ ct@@ Number@@ ); } else { android.telecom.@@ Log.@@ w@@ (@@ this@@ , "@@ de@@ f@@ le@@ ct@@ Call@@ , un@@ k@@ no@@ w@@ n cal@@ l id@@ : %@@ s@@ ", call@@ Id@@ ); } } final@@ l@@ y { android.os.@@ B@@ ind@@ er.@@ r@@ est@@ ore@@ Call@@ ing@@ Id@@ enti@@ ty@@ (@@ to@@ k@@ en@@ ); } } final@@ l@@ y { android.telecom.@@ Log.@@ end@@ Session@@ (); } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public void de@@ f@@ le@@ ct@@ (java.lang.String n@@ umber@@ ) { if (is@@ R@@ ing@@ ing@@ ing@@ ("@@ de@@ f@@ le@@ ct@@ ")) { if ((m@@ Connection@@ Service@@ ) != null@@ ) { m@@ Connection@@ Service.@@ de@@ f@@ le@@ ct@@ (@@ this@@ , n@@ umber@@ ); } else { android.telecom.@@ Log.@@ e@@ (@@ this@@ , new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ (), "@@ de@@ f@@ lec@@ t cal@@ l fa@@ ile@@ d du@@ e to null C@@ S call@@ Id@@ =@@ %@@ s@@ ", get@@ Id@@ ()); } android.telecom.@@ Log.@@ add@@ Event@@ (@@ this@@ , Log@@ Utils.@@ Event@@ s.@@ RE@@ Q@@ UE@@ ST_@@ DE@@ F@@ LE@@ C@@ T@@ ); } }
public void de@@ f@@ le@@ ct@@ Call@@ (java.lang.String call@@ Id, java.lang.String de@@ f@@ le@@ ct@@ Number@@ ) { try { m@@ Adap@@ ter.@@ de@@ f@@ le@@ ct@@ Call@@ (c@@ all@@ Id, de@@ f@@ le@@ ct@@ Number@@ ); } catch (android.os.@@ Remote@@ Exception e) { } }
@java.lang.Override public void de@@ f@@ le@@ ct@@ (java.lang.String call@@ Id, java.lang.String n@@ umber@@ , android.telecom.@@ Logg@@ ing.@@ Session@@ .@@ Info in@@ fo@@ ) throw@@ s android.os.@@ Remote@@ Exception { }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public void de@@ f@@ le@@ ct@@ Call@@ (com.android.server.@@ telecom.@@ Cal@@ l call@@ , java.lang.String n@@ umber@@ ) { if (!(m@@ Call@@ s.@@ contain@@ s(@@ call@@ ))) { android.telecom.@@ Log.@@ i@@ (@@ this@@ , "@@ Requ@@ est to de@@ f@@ lec@@ t a n@@ on@@ -@@ exist@@ ent cal@@ l %@@ s@@ ", call@@ ); } else { cal@@ l.@@ de@@ f@@ le@@ ct@@ (@@ n@@ umber@@ ); } }
@java.lang.Override public void on@@ De@@ f@@ le@@ ct@@ (java.lang.String n@@ umber@@ ) { com.android.@@ ser@@ vices@@ .@@ telephony.@@ Log.@@ v@@ (@@ this@@ , "@@ on@@ De@@ f@@ le@@ ct@@ "); if ((@@ (m@@ O@@ ri@@ gin@@ al@@ Connection@@ ) != null@@ ) && (is@@ Valid@@ R@@ ing@@ Call@@ ())) { try { m@@ O@@ ri@@ gin@@ al@@ Connection@@ .@@ de@@ f@@ le@@ ct@@ (@@ n@@ umber@@ ); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Call@@ State@@ Exception e) { com.android.@@ ser@@ vices@@ .@@ telephony.@@ Log.@@ e@@ (@@ this@@ , "@@ Faile@@ d to de@@ f@@ lec@@ t cal@@ l.@@ "); } } }
private void de@@ f@@ le@@ ct@@ (java.lang.String call@@ Id, java.lang.String n@@ umber@@ ) { android.telecom.@@ Log.@@ d@@ (@@ this@@ , "@@ de@@ f@@ lec@@ t %@@ s - %@@ s@@ ", call@@ Id, n@@ umber@@ ); find@@ Connection@@ For@@ Action@@ (c@@ all@@ Id, "@@ de@@ f@@ le@@ ct@@ ").@@ on@@ De@@ f@@ le@@ ct@@ (@@ n@@ umber@@ ); }
public void on@@ De@@ f@@ le@@ ct@@ (java.lang.String n@@ umber@@ ) { }
@java.lang.Override public void de@@ f@@ le@@ ct@@ (java.lang.String de@@ f@@ le@@ ct@@ Number@@ ) throw@@ s android.os.@@ Remote@@ Exception { }
public void de@@ f@@ le@@ ct@@ (java.lang.String n@@ umber@@ ) { m@@ In@@ Call@@ Adap@@ ter.@@ de@@ f@@ le@@ ct@@ Call@@ (m@@ Tele@@ com@@ Call@@ Id, n@@ umber@@ ); }
public void de@@ f@@ le@@ ct@@ (java.lang.String n@@ umber@@ ) throw@@ s com.android.@@ im@@ s.@@ Im@@ s@@ Exception { log@@ i@@ ((@@ (("@@ de@@ f@@ lec@@ t :@@ : session@@ =@@ " + (m@@ Session@@ )) + ", n@@ umber@@ =@@ ") + n@@ umber@@ )); synchronized@@ (m@@ Lock@@ Ob@@ j@@ ) { if ((m@@ Session@@ ) == null@@ ) { throw new com.android.@@ im@@ s.@@ Im@@ s@@ Exception@@ ("@@ N@@ o cal@@ l to de@@ f@@ le@@ ct@@ ", Im@@ s@@ Re@@ as@@ on@@ Info.@@ C@@ OD@@ E_@@ LO@@ C@@ AL@@ _C@@ AL@@ L@@ _@@ TER@@ M@@ IN@@ A@@ TE@@ D@@ ); } try { m@@ Session@@ .@@ de@@ f@@ le@@ ct@@ (@@ n@@ umber@@ ); } catch (java.lang.@@ Throw@@ able t@@ ) { log@@ e@@ ("@@ de@@ f@@ lec@@ t :@@ : ", t@@ ); throw new com.android.@@ im@@ s.@@ Im@@ s@@ Exception@@ ("@@ de@@ f@@ le@@ ct@@ ()@@ ", t@@ , 0); } }
@java.lang.Override public void de@@ f@@ le@@ ct@@ (java.lang.String call@@ Id, java.lang.String n@@ umber@@ , android.telecom.@@ Logg@@ ing.@@ Session@@ .@@ Info session@@ Info@@ ) { android.telecom.@@ Log.@@ start@@ Session@@ (s@@ ession@@ Info@@ , android.telecom.@@ Connection@@ Service.@@ SE@@ SS@@ ION@@ _@@ DE@@ F@@ LE@@ C@@ T@@ ); try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ S@@ o@@ me@@ Arg@@ s arg@@ s = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ S@@ o@@ me@@ Arg@@ s.@@ ob@@ t@@ ain@@ (); args.@@ arg@@ 1 = call@@ Id@@ ; args.@@ arg@@ 2 = n@@ umber@@ ; args.@@ arg@@ 3 = android.telecom.@@ Log.@@ create@@ Sub@@ session@@ (); m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (android.@@ telecom.@@ Connection@@ Service.@@ M@@ S@@ G_@@ DE@@ F@@ LE@@ C@@ T@@ , arg@@ s@@ ).@@ send@@ To@@ Target@@ (); } final@@ l@@ y { android.telecom.@@ Log.@@ end@@ Session@@ (); } }
public byte@@ [] get@@ Se@@ le@@ ct@@ Response@@ () { return (m@@ Se@@ le@@ ct@@ Respon@@ s@@ e.@@ length) == null : m@@ Se@@ le@@ ct@@ Response@@ ; }
public void se@@ le@@ ct@@ Default@@ Application@@ () { try { se@@ le@@ ct@@ (@@ null@@ ); } catch (java.util.@@ No@@ Su@@ ch@@ Element@@ Exception e) { if ((@@ get@@ Access@@ Control@@ E@@ n@@ for@@ cer@@ ()) != null@@ ) { try { se@@ le@@ ct@@ (m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.get@@ Default@@ Access@@ Control@@ A@@ id@@ ()); } } catch (java.lang.Exception ign@@ or@@ e) { } } catch (android.os.@@ Remote@@ Exception ign@@ or@@ e) { } }
private void test@@ Tr@@ an@@ sition@@ Selection@@ (@@ boolean test@@ Open@@ , boolean test@@ New@@ Task@@ , boolean bo@@ t@@ to@@ m@@ W@@ all@@ p@@ ap@@ er, boolean to@@ p@@ W@@ all@@ p@@ ap@@ er, boolean to@@ p@@ Trans@@ lu@@ c@@ ent@@ , boolean test@@ S@@ low@@ St@@ op@@ , java.lang.String expected@@ Trans@@ it@@ ) throw@@ s java.lang.Exception { if (is@@ V@@ r@@ He@@ ad@@ set@@ ()) { return@@ ; } java.lang.String bo@@ t@@ to@@ m@@ Start@@ C@@ m@@ d = get@@ A@@ m@@ Start@@ C@@ m@@ d@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ Tr@@ an@@ sition@@ Selection@@ Tests.@@ B@@ O@@ T@@ TO@@ M@@ _@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E); if (@@ bo@@ t@@ to@@ m@@ W@@ all@@ p@@ ap@@ er@@ ) { bo@@ t@@ to@@ m@@ Start@@ C@@ m@@ d +@@ = --@@ e@@ z US@@ E_@@ W@@ AL@@ L@@ P@@ AP@@ E@@ R true } if (test@@ S@@ low@@ St@@ op@@ ) { bo@@ t@@ to@@ m@@ Start@@ C@@ m@@ d +@@ = --@@ e@@ i S@@ TO@@ P@@ _@@ DE@@ LA@@ Y 3@@ 00@@ 0 } exec@@ ute@@ Sh@@ ell@@ Command@@ (@@ bo@@ t@@ to@@ m@@ Start@@ C@@ m@@ d@@ ); final java.lang.String to@@ p@@ Activity@@ Name = (@@ to@@ p@@ Trans@@ lu@@ c@@ ent@@ ) ? android.@@ server.@@ cts.@@ Activity@@ Manager@@ Tr@@ an@@ sition@@ Selection@@ Tests.@@ TR@@ AN@@ S@@ L@@ U@@ C@@ ENT_@@ TO@@ P@@ _@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E : android.@@ server.@@ cts.@@ Activity@@ Manager@@ Tr@@ an@@ sition@@ Selection@@ Tests.@@ TO@@ P@@ _@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E@@ ; final java.lang.String[] bo@@ t@@ to@@ m@@ Activity@@ Ar@@ ra@@ y = new java.lang.String@@ []{ android.@@ server.@@ cts.@@ Activity@@ Manager@@ Tr@@ an@@ sition@@ Selection@@ Tests.@@ B@@ O@@ T@@ TO@@ M@@ _@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E }; final java.lang.String[] to@@ p@@ Activity@@ Ar@@ ra@@ y = new java.lang.String@@ []{ to@@ p@@ Activity@@ Name }; m@@ A@@ m@@ W@@ m@@ State.@@ com@@ pu@@ te@@ State@@ (m@@ Device@@ , bo@@ t@@ to@@ m@@ Activity@@ Array@@ ); java.lang.String to@@ p@@ Start@@ C@@ m@@ d = get@@ A@@ m@@ Start@@ C@@ m@@ d@@ (@@ to@@ p@@ Activity@@ Name); if (test@@ New@@ Task@@ ) { to@@ p@@ Start@@ C@@ m@@ d +@@ = -@@ f 0@@ x@@ 1@@ 8@@ 0000@@ 0@@ 0 } if (@@ to@@ p@@ W@@ all@@ p@@ ap@@ er@@ ) { to@@ p@@ Start@@ C@@ m@@ d +@@ = --@@ e@@ z US@@ E_@@ W@@ AL@@ L@@ P@@ AP@@ E@@ R R R } if (!@@ test@@ Open@@ ) { to@@ p@@ Start@@ C@@ m@@ d +@@ = --@@ e@@ i F@@ IN@@ IS@@ H@@ _@@ DE@@ LA@@ Y 1@@ 00@@ 0 } exec@@ ute@@ Sh@@ ell@@ Command@@ (@@ to@@ p@@ Start@@ C@@ m@@ d@@ ); java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (@@ 5@@ 00@@ 0); if (test@@ Open@@ ) { m@@ A@@ m@@ W@@ m@@ State.@@ com@@ pu@@ te@@ State@@ (m@@ Device@@ , to@@ p@@ Activity@@ Array@@ ); } else { m@@ A@@ m@@ W@@ m@@ State.@@ com@@ pu@@ te@@ State@@ (m@@ Device@@ , bo@@ t@@ to@@ m@@ Activity@@ Array@@ ); } assert@@ Equal@@ s("@@ Ex@@ pec@@ ted w@@ ron@@ g tr@@ an@@ si@@ tion Trans@@ it@@ , m@@ W@@ m@@ Stat@@ e.get@@ W@@ m@@ State@@ ().get@@ L@@ ast@@ Tr@@ an@@ sition@@ ()); }
private void to@@ gg@@ le@@ F@@ on@@ t@@ S@@ c@@ ale@@ () throw@@ s java.lang.@@ Throw@@ able { com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ util.@@ System@@ Util.@@ run@@ Sh@@ ell@@ Command@@ (get@@ In@@ strument@@ ation@@ (), android.@@ app.@@ cts.@@ Application@@ Test.@@ ER@@ A@@ S@@ E_@@ F@@ ON@@ T_@@ S@@ C@@ AL@@ E_@@ C@@ M@@ D@@ ); get@@ In@@ strument@@ ation@@ ().@@ wait@@ For@@ Id@@ le@@ S@@ ync@@ (); com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ util.@@ System@@ Util.@@ run@@ Sh@@ ell@@ Command@@ (get@@ In@@ strument@@ ation@@ (), android.@@ app.@@ cts.@@ Application@@ Test.@@ P@@ U@@ T_@@ F@@ ON@@ T_@@ S@@ C@@ AL@@ E_@@ C@@ M@@ D@@ ); get@@ In@@ strument@@ ation@@ ().@@ wait@@ For@@ Id@@ le@@ S@@ ync@@ (); com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ util.@@ System@@ Util.@@ run@@ Sh@@ ell@@ Command@@ (get@@ In@@ strument@@ ation@@ (), android.@@ app.@@ cts.@@ Application@@ Test.@@ ER@@ A@@ S@@ E_@@ F@@ ON@@ T_@@ S@@ C@@ AL@@ E_@@ C@@ M@@ D@@ ); get@@ In@@ strument@@ ation@@ ().@@ wait@@ For@@ Id@@ le@@ S@@ ync@@ (); }
public void test@@ Application@@ () throw@@ s java.lang.@@ Throw@@ able { final android.@@ app.@@ In@@ strument@@ ation in@@ strument@@ ation = get@@ In@@ strument@@ ation@@ (); final android.content.@@ Context target@@ Context = in@@ strument@@ ation@@ .get@@ Target@@ Context@@ (); final android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (@@ target@@ Context@@ , android.@@ app.@@ st@@ u@@ b@@ s.@@ Mock@@ Application@@ Activity@@ .@@ class@@ ); int@@ ent.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ ); final android.@@ app.@@ Ac@@ tiv@@ it@@ y ac@@ tiv@@ it@@ y = in@@ strument@@ ation.@@ start@@ Activity@@ S@@ ync@@ (@@ int@@ ent@@ ); final android.@@ app.@@ st@@ u@@ b@@ s.@@ Mock@@ Appli@@ c@@ ation mock@@ Ap@@ p = ((@@ android.@@ app.@@ st@@ u@@ b@@ s.@@ Mock@@ Application@@ ) (@@ ac@@ tivity@@ .get@@ Application@@ ())); assert@@ True@@ (m@@ ock@@ Ap@@ p.@@ is@@ Con@@ stru@@ ctor@@ Cal@@ le@@ d@@ ); assert@@ True@@ (m@@ ock@@ Ap@@ p.@@ is@@ On@@ Create@@ Cal@@ le@@ d@@ ); to@@ gg@@ le@@ F@@ on@@ t@@ S@@ cal@@ e@@ (); assert@@ True@@ (m@@ ock@@ Ap@@ p.@@ is@@ On@@ Configuration@@ Changed@@ Cal@@ le@@ d@@ ); }
private static java.lang.String fil@@ ter@@ Hash@@ es@@ (java.lang.String t@@ ) { for (@@ ; ;@@ ) { int in@@ dex = t.@@ index@@ Of@@ ("@@ <@@ 0@@ x@@ "); if (in@@ dex < 0) { break@@ ; } int end@@ In@@ dex = t.@@ index@@ Of@@ ("@@ >@@ ", index@@ ); if (@@ end@@ In@@ dex < 0) { break@@ ; } t = ((@@ t.@@ sub@@ string@@ (@@ 0, (in@@ dex + 1@@ ))) + "@@ H@@ A@@ S@@ H@@ ") + (@@ t.@@ sub@@ string@@ (@@ end@@ Index@@ )); } return t@@ ; }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation@@ () { com.android.@@ ser@@ vices@@ .@@ telephony.@@ Test@@ Telephony@@ Connec@@ tion c = new com.android.@@ ser@@ vices@@ .@@ telephony.@@ Test@@ Telephony@@ Connection@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e phon@@ e = c@@ .get@@ Phone@@ (); c.@@ set@@ O@@ ri@@ gin@@ al@@ Connection@@ (c@@ .get@@ O@@ ri@@ gin@@ al@@ Connection@@ ()); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ android.os.@@ Handler@@ > hand@@ ler@@ Cap@@ tor = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ android.os.@@ Handler@@ .@@ class@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ java.lang.Integ@@ er@@ > message@@ Cap@@ tor = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ java.lang.Integ@@ er@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (@@ phon@@ e@@ ).@@ register@@ For@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation@@ (@@ hand@@ ler@@ Cap@@ t@@ or.@@ c@@ ap@@ t@@ ure@@ (), message@@ Cap@@ t@@ or.@@ c@@ ap@@ t@@ ure@@ (), an@@ y@@ ()); android.os.@@ Handle@@ r handle@@ r = hand@@ ler@@ Cap@@ t@@ or@@ .get@@ Value@@ (); int mess@@ age = message@@ Cap@@ t@@ or@@ .get@@ Value@@ (); android.os.@@ As@@ ync@@ Res@@ ult result = get@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ TYP@@ E@@ _M@@ O@@ , Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation.@@ M@@ O@@ _C@@ OD@@ E_@@ C@@ AL@@ L@@ _@@ F@@ OR@@ W@@ AR@@ DE@@ D@@ ); hand@@ ler.@@ ob@@ t@@ ain@@ Message@@ (m@@ ess@@ age@@ , result@@ ).@@ send@@ To@@ Target@@ (); wait@@ For@@ Handler@@ Action@@ (@@ hand@@ ler@@ , com.android.@@ ser@@ vices@@ .@@ telephony.@@ Telephony@@ Connection@@ Service@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); junit.framework.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ c@@ .get@@ L@@ ast@@ Connection@@ Event@@ (), Telephony@@ Manager.@@ EV@@ ENT_@@ C@@ AL@@ L@@ _@@ F@@ OR@@ W@@ AR@@ DE@@ D@@ ); result = get@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ TYP@@ E@@ _M@@ O@@ , Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation.@@ M@@ O@@ _C@@ OD@@ E_@@ C@@ AL@@ L@@ _@@ IS@@ _@@ W@@ A@@ I@@ T@@ ING@@ ); hand@@ ler.@@ ob@@ t@@ ain@@ Message@@ (m@@ ess@@ age@@ , result@@ ).@@ send@@ To@@ Target@@ (); wait@@ For@@ Handler@@ Action@@ (@@ hand@@ ler@@ , com.android.@@ ser@@ vices@@ .@@ telephony.@@ Telephony@@ Connection@@ Service@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); junit.framework.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ c@@ .get@@ L@@ ast@@ Connection@@ Event@@ (), Telephony@@ Manager.@@ EV@@ ENT_@@ C@@ AL@@ L@@ _@@ IS@@ _@@ W@@ A@@ I@@ T@@ ING@@ ); }
private void handle@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation ss@@ n@@ ) { com.android.@@ ser@@ vices@@ .@@ telephony.@@ Log.@@ i@@ (@@ this@@ , "@@ handle@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation@@ : type@@ =@@ %@@ d@@ , code@@ =@@ %@@ d@@ ", ss@@ n@@ .@@ not@@ if@@ ic@@ ation@@ Type, ss@@ n@@ .@@ code@@ ); if ((@@ ss@@ n@@ .@@ not@@ if@@ ic@@ ation@@ Typ@@ e) == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ TYP@@ E@@ _M@@ O@@ )) { switch (s@@ s@@ n@@ .@@ code@@ ) { case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation.@@ M@@ O@@ _C@@ OD@@ E_@@ C@@ AL@@ L@@ _@@ F@@ OR@@ W@@ AR@@ DE@@ D : send@@ Connection@@ Event@@ (@@ Telephony@@ Manager.@@ EV@@ ENT_@@ C@@ AL@@ L@@ _@@ F@@ OR@@ W@@ AR@@ DE@@ D@@ , null@@ ); break@@ ; case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation.@@ M@@ O@@ _C@@ OD@@ E_@@ C@@ AL@@ L@@ _@@ IS@@ _@@ W@@ A@@ I@@ T@@ IN@@ G : send@@ Connection@@ Event@@ (@@ Telephony@@ Manager.@@ EV@@ ENT_@@ C@@ AL@@ L@@ _@@ IS@@ _@@ W@@ A@@ I@@ T@@ ING@@ , null@@ ); break@@ ; } } else if ((@@ ss@@ n@@ .@@ typ@@ e) == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ Sup@@ p@@ Service@@ No@@ t@@ if@@ ic@@ ation.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ TYP@@ E@@ _M@@ T@@ )) { } }
public java.lang.String get@@ L@@ ast@@ Connection@@ Event@@ () { return m@@ L@@ ast@@ Connection@@ Event@@ ; }
@java.lang.Override public void send@@ Connection@@ Event@@ (java.lang.String event@@ , android.os.@@ Bund@@ le ex@@ tr@@ as@@ ) { m@@ L@@ ast@@ Connection@@ Ev@@ ent = event@@ ; }
public void wait@@ For@@ G@@ c@@ () { try { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (1@@ 0); } catch (java.lang.Exception e) { } java.lang.System.@@ g@@ c@@ (); java.lang.System.@@ run@@ F@@ in@@ aliz@@ ation@@ (); java.lang.System.@@ g@@ c@@ (); } while (is@@ Li@@ ve@@ () ); try { m@@ Q@@ ue@@ u@@ e.@@ remove@@ (); } catch (java.lang.Exception e) { } } res@@ et@@ (); }
public boolean is@@ Up@@ () throw@@ s java.net.@@ Socket@@ Exception { return ((@@ get@@ Flag@@ s()) & (android.@@ system.@@ I@@ F@@ _@@ U@@ P@@ P@@ P@@ ) | (@@ I@@ F@@ _@@ R@@ UN@@ N@@ ING@@ )) != 0; }
protected void set@@ Oper@@ ator@@ I@@ dd@@ (java.lang.String o@@ per@@ ator@@ N@@ um@@ er@@ ic@@ ) { java.lang.String id@@ d = m@@ H@@ b@@ p@@ c@@ d@@ Utils.@@ get@@ I@@ dd@@ By@@ M@@ cc@@ (java.lang.@@ Integ@@ er.@@ parse@@ Int@@ (@@ o@@ per@@ ator@@ N@@ um@@ er@@ ic@@ .@@ sub@@ string@@ (@@ 0, 3@@ ))); if ((@@ id@@ d != null@@ ) && (!(@@ id@@ d.@@ isEmpty@@ ()))) { os.@@ set@@ System@@ Proper@@ ti@@ es.@@ set@@ (@@ Telephony@@ Proper@@ ti@@ es.@@ P@@ RO@@ P@@ E@@ RT@@ Y_@@ O@@ P@@ ER@@ AT@@ OR@@ _@@ ID@@ P@@ _S@@ TR@@ ING@@ , id@@ d@@ ); } else { android.util.@@ S@@ log.@@ set@@ Permission@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ System@@ Proper@@ ti@@ es.@@ set@@ Content@@ Provider@@ (@@ Telephony@@ Proper@@ ti@@ es.@@ P@@ RO@@ P@@ E@@ RT@@ Y_@@ O@@ P@@ ER@@ AT@@ OR@@ _@@ ID@@ P@@ _S@@ TR@@ ING@@ , "@@ +@@ "); } }
static com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e m@@ ake@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Ser@@ vice a@@ 2@@ d@@ p@@ Ser@@ vice , android.content.@@ Context context@@ , com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Native@@ Inter@@ face a@@ 2@@ d@@ p@@ Native@@ Interface@@ , android.os.@@ L@@ oo@@ p@@ er lo@@ o@@ per@@ ) { if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ M@@ ach@@ in@@ e.@@ "); for de@@ vice " + device@@ )); } com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e a@@ 2@@ d@@ p@@ S@@ m = new com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ ine@@ (@@ device@@ , a@@ 2@@ d@@ p@@ Ser@@ vice service@@ , a@@ 2@@ d@@ p@@ Native@@ Interface@@ , lo@@ o@@ per@@ ); a@@ 2@@ d@@ p@@ S@@ m.@@ start@@ (); return a@@ 2@@ d@@ p@@ S@@ m@@ ; }
public void test@@ Network@@ Block@@ ed@@ () throw@@ s java.lang.Exception { assert@@ Equal@@ s@@ (com.android.@@ cts.@@ device@@ and@@ pro@@ file@@ o@@ wn@@ er.@@ V@@ P@@ N@@ _P@@ AC@@ K@@ A@@ G@@ E, m@@ Device@@ Po@@ lic@@ y@@ Manager.@@ get@@ Al@@ w@@ ay@@ s@@ On@@ V@@ p@@ n@@ Package@@ (com.android.@@ cts.@@ device@@ and@@ pro@@ file@@ o@@ wn@@ er.@@ AD@@ M@@ IN@@ _RE@@ CE@@ I@@ V@@ ER@@ _C@@ O@@ M@@ P@@ ON@@ EN@@ T@@ )); for (@@ int i = 0; (@@ i < (@@ MA@@ X@@ _N@@ U@@ M@@ B@@ ER_@@ O@@ F@@ _@@ AT@@ TE@@ M@@ P@@ T@@ )) && (com.android.@@ cts.@@ device@@ and@@ pro@@ file@@ o@@ wn@@ er.@@ v@@ p@@ n@@ .@@ V@@ p@@ n@@ Test@@ Helper.@@ is@@ Network@@ V@@ p@@ n@@ (m@@ Context@@ )); ++@@ i@@ ) { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (1@@ 00@@ 0); } assert@@ False@@ (com.android.@@ cts.@@ device@@ and@@ pro@@ file@@ o@@ wn@@ er.@@ v@@ p@@ n@@ .@@ V@@ p@@ n@@ Test@@ Helper.@@ is@@ Network@@ V@@ p@@ n@@ (m@@ Context@@ )); try { com.android.@@ cts.@@ device@@ pro@@ file@@ o@@ wn@@ er.@@ v@@ p@@ n@@ .@@ V@@ p@@ n@@ Test@@ Hel@@ per@@ .@@ try@@ Po@@ si@@ x@@ Con@@ nect@@ (com.android.@@ cts.@@ device@@ and@@ pro@@ file@@ o@@ wn@@ er.@@ TEST_@@ AD@@ D@@ RE@@ SS@@ ); fail@@ ("@@ expec@@ ted do@@ es@@ n@@ "); throw Exception d@@ ur@@ ing net@@ wor@@ k loc@@ k@@ do@@ w@@ n "); } catch (android.@@ system.@@ Errno@@ Exception e) { assert@@ True@@ ((((@@ e.@@ er@@ rno@@ ) == (android.@@ system.@@ O@@ s@@ Constants.@@ EN@@ E@@ T@@ UN@@ RE@@ AC@@ H@@ )) || ((@@ e.@@ er@@ rno@@ ) == (android.@@ system.@@ O@@ s@@ Constants.@@ E@@ AC@@ CE@@ S@@ )))); } }
public void wait@@ For@@ G@@ c@@ (@@ int n@@ umber@@ Of@@ Ex@@ pec@@ ted@@ F@@ in@@ aliz@@ ation@@ s) { if (@@ n@@ umber@@ Of@@ Ex@@ pec@@ ted@@ F@@ in@@ aliz@@ ation@@ s > (m@@ List.@@ size@@ ())) { throw new java.lang.@@ Illegal@@ Argument@@ Exception@@ ("@@ In@@ va@@ li@@ d con@@ di@@ tion@@ "); } do { java.lang.System.@@ run@@ F@@ in@@ aliz@@ ation@@ (); java.lang.@@ Run@@ tim@@ e.get@@ Runtime@@ ().@@ g@@ c@@ (); try { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (1@@ 0); } catch (java.lang.Exception e) { } } while (is@@ Li@@ ve@@ (@@ n@@ umber@@ Of@@ Ex@@ pec@@ ted@@ F@@ in@@ aliz@@ ation@@ s) { try { while (m@@ Q@@ ue@@ ue@@ .@@ po@@ l@@ l@@ l@@ l@@ l@@ ()) != null@@ ); } catch (java.lang.Exception e) { } m@@ List.@@ cle@@ ar@@ (); }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { android.os.@@ User@@ Hand@@ le user@@ Hand@@ le = int@@ ent.get@@ Par@@ cel@@ able@@ Extra@@ (com.android.@@ cts.@@ device@@ o@@ wn@@ er.@@ EX@@ TR@@ A@@ _@@ US@@ ER_@@ H@@ AN@@ D@@ L@@ E); android.util.Log.d@@ (com.android.@@ cts.@@ device@@ o@@ wn@@ er.@@ Create@@ And@@ Manage@@ User@@ Test.@@ TAG, ((@@ ("@@ on@@ Recei@@ ve@@ r re@@ cei@@ ve@@ d " + int@@ ent@@ ) + " wit@@ h user@@ Hand@@ le ") + user@@ Handle@@ )); m@@ Q@@ ue@@ ue@@ .@@ check@@ (@@ user@@ Handle@@ ); }
public void delet@@ e@@ Pro@@ file@@ (java.lang.String c@@ ard@@ Id, java.lang.String ic@@ c@@ id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ delet@@ e@@ Pro@@ file@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, ic@@ c@@ id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ ID@@ el@@ et@@ e@@ Pro@@ file@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , null@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing delet@@ e@@ Pro@@ fi@@ le ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void dis@@ able@@ Pro@@ file@@ (java.lang.String c@@ ard@@ Id, java.lang.String ic@@ c@@ id, boolean ref@@ res@@ h@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ dis@@ able@@ Pro@@ file@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, ic@@ c@@ id, ref@@ res@@ h@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ ID@@ is@@ able@@ Pro@@ file@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , null@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing dis@@ able@@ Pro@@ fi@@ le ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void request@@ R@@ ul@@ es@@ Au@@ th@@ T@@ able@@ (java.lang.String c@@ ard@@ Id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ R@@ ul@@ es@@ Au@@ th@@ T@@ able@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().get@@ R@@ ul@@ es@@ Au@@ th@@ T@@ able@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ R@@ ul@@ es@@ Au@@ th@@ T@@ able@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ R@@ ul@@ es@@ Au@@ th@@ T@@ able r@@ at@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , r@@ at@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing get@@ R@@ ul@@ es@@ Au@@ th@@ T@@ able@@ ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void request@@ E@@ u@@ ic@@ c@@ Info@@ (java.lang.String c@@ ard@@ Id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().get@@ E@@ u@@ ic@@ c@@ Info@@ 2@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ E@@ u@@ ic@@ c@@ Info@@ 2@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , byte@@ [] in@@ fo@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , in@@ fo@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing get@@ E@@ u@@ ic@@ c@@ Info@@ ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void can@@ cel@@ Session@@ (java.lang.String c@@ ard@@ Id, byte@@ [] trans@@ action@@ Id, @@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Can@@ cel@@ Re@@ as@@ on int re@@ as@@ on@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ can@@ cel@@ Session@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, trans@@ action@@ Id, re@@ as@@ on@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Can@@ cel@@ Session@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , byte@@ [] respon@@ se@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , respon@@ se@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ can@@ cel@@ S@@ es@@ sion e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void request@@ S@@ m@@ d@@ s@@ Address@@ (java.lang.String c@@ ard@@ Id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <java.lang.String@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().get@@ S@@ m@@ d@@ s@@ Address@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ S@@ m@@ d@@ s@@ Address@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , java.lang.String addres@@ s) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , addres@@ s); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing get@@ S@@ m@@ d@@ s@@ Address e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void au@@ th@@ enti@@ cate@@ Server@@ (java.lang.String c@@ ard@@ Id, java.lang.String match@@ ing@@ Id, byte@@ [] ser@@ ver@@ S@@ ig@@ ne@@ d@@ 1, byte@@ [] ser@@ ver@@ Sign@@ ature@@ 1, byte@@ [] e@@ u@@ ic@@ c@@ C@@ i@@ P@@ k@@ Id@@ To@@ B@@ e@@ U@@ sed@@ , byte@@ [] ser@@ ver@@ Cer@@ t@@ if@@ i@@ cat@@ e@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ au@@ th@@ enti@@ cate@@ Server@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, match@@ ing@@ Id, ser@@ ver@@ S@@ ig@@ ne@@ d@@ 1, ser@@ ver@@ Sign@@ ature@@ 1, e@@ u@@ ic@@ c@@ C@@ i@@ P@@ k@@ Id@@ To@@ B@@ e@@ U@@ sed@@ , ser@@ ver@@ Cer@@ t@@ if@@ ic@@ ate@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Au@@ th@@ enti@@ cate@@ Server@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , byte@@ [] respon@@ se@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , respon@@ se@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ au@@ th@@ enti@@ cate@@ Ser@@ ve@@ r ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void request@@ E@@ u@@ ic@@ c@@ Ch@@ all@@ eng@@ e@@ (java.lang.String c@@ ard@@ Id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().get@@ E@@ u@@ ic@@ c@@ Ch@@ all@@ eng@@ e@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ E@@ u@@ ic@@ c@@ Ch@@ all@@ eng@@ e@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , byte@@ [] ch@@ all@@ eng@@ e) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , ch@@ all@@ eng@@ e); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing get@@ E@@ u@@ ic@@ c@@ Ch@@ all@@ eng@@ e ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void remove@@ No@@ t@@ if@@ ic@@ ation@@ From@@ List@@ (java.lang.String c@@ ard@@ Id, int se@@ q@@ N@@ umb@@ er@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ remove@@ No@@ t@@ if@@ ic@@ ation@@ From@@ List@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, se@@ q@@ Number@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Remo@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ From@@ List@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , null@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing remove@@ No@@ t@@ if@@ ic@@ ation@@ From@@ Lis@@ t ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void res@@ et@@ M@@ em@@ or@@ y@@ (java.lang.String c@@ ard@@ Id, @@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Res@@ et@@ O@@ pti@@ on int option@@ s, @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ res@@ et@@ M@@ em@@ or@@ y@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, option@@ s, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Res@@ et@@ M@@ em@@ or@@ y@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , null@@ ); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing res@@ et@@ M@@ em@@ or@@ y ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void set@@ N@@ i@@ ck@@ name@@ (java.lang.String c@@ ard@@ Id, java.lang.String ic@@ c@@ id, java.lang.String n@@ i@@ ck@@ name@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ set@@ N@@ i@@ ck@@ name@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, ic@@ c@@ id, n@@ i@@ ck@@ name@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Set@@ N@@ i@@ ck@@ name@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , null@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing set@@ N@@ i@@ ck@@ name ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void request@@ Pro@@ fi@@ le@@ (java.lang.String c@@ ard@@ Id, java.lang.String ic@@ c@@ id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().get@@ Pro@@ file@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, ic@@ c@@ id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ Pro@@ file@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info pro@@ file@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , pro@@ file@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing get@@ Pro@@ fi@@ le e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void pre@@ par@@ e@@ Do@@ wn@@ load@@ (java.lang.String c@@ ard@@ Id, @@@ android.@@ annotation.@@ Nullable byte@@ [] has@@ h@@ C@@ c@@ , byte@@ [] s@@ m@@ d@@ p@@ S@@ ig@@ ne@@ d@@ 2, byte@@ [] s@@ m@@ d@@ p@@ Sign@@ ature@@ 2, byte@@ [] s@@ m@@ d@@ p@@ Cer@@ t@@ if@@ i@@ cat@@ e@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ pre@@ par@@ e@@ Do@@ wn@@ load@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, has@@ h@@ C@@ c@@ , s@@ m@@ d@@ p@@ S@@ ig@@ ne@@ d@@ 2, s@@ m@@ d@@ p@@ Sign@@ ature@@ 2, s@@ m@@ d@@ p@@ Cer@@ t@@ if@@ ic@@ ate@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Pre@@ par@@ e@@ Do@@ wn@@ load@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , byte@@ [] respon@@ se@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , respon@@ se@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing pre@@ par@@ e@@ Do@@ wn@@ lo@@ ad ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ List@@ (java.lang.String c@@ ard@@ Id, @@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent int event@@ s, @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or exec@@ ut@@ or , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ List@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, event@@ s, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ I@@ R@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ List@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ [] not@@ if@@ ic@@ ation@@ s) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , not@@ if@@ ic@@ ation@@ s); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ Lis@@ t e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void list@@ No@@ t@@ if@@ ic@@ ation@@ s(@@ java.lang.String c@@ ard@@ Id, @@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation.@@ Ev@@ ent int event@@ s, @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ list@@ No@@ t@@ if@@ ic@@ ation@@ s@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, event@@ s, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ List@@ No@@ t@@ if@@ ic@@ ation@@ s@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ [] not@@ if@@ ic@@ ation@@ s) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , not@@ if@@ ic@@ ation@@ s); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ list@@ No@@ t@@ if@@ ic@@ ation@@ s call@@ ing list@@ No@@ t@@ if@@ ic@@ ation@@ s@@ ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ (java.lang.String c@@ ard@@ Id, int se@@ q@@ N@@ umb@@ er@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, se@@ q@@ Number@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ R@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ No@@ t@@ if@@ ic@@ ation not@@ if@@ ic@@ ation@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , not@@ if@@ ic@@ ation@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing r@@ et@@ ri@@ e@@ ve@@ No@@ t@@ if@@ ic@@ ation e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void request@@ Default@@ S@@ m@@ d@@ p@@ Address@@ (java.lang.String c@@ ard@@ Id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <java.lang.String@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().get@@ Default@@ S@@ m@@ d@@ p@@ Address@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ Default@@ S@@ m@@ d@@ p@@ Address@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , java.lang.String addres@@ s) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , addres@@ s); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ request@@ Default@@ S@@ m@@ d@@ p@@ Address e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void load@@ B@@ ound@@ Pro@@ file@@ Package@@ (java.lang.String c@@ ard@@ Id, byte@@ [] bo@@ und@@ Pro@@ file@@ Pack@@ age@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ load@@ B@@ ound@@ Pro@@ file@@ Package@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, bo@@ und@@ Pro@@ file@@ Package@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Load@@ B@@ ound@@ Pro@@ file@@ Package@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , byte@@ [] respon@@ se@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , respon@@ se@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing load@@ B@@ ound@@ Pro@@ file@@ Pack@@ age ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void request@@ E@@ u@@ ic@@ c@@ Info@@ (java.lang.String c@@ ard@@ Id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ byte@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().get@@ E@@ u@@ ic@@ c@@ Info@@ 1@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ E@@ u@@ ic@@ c@@ Info@@ 1@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , byte@@ [] in@@ fo@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , in@@ fo@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing get@@ E@@ u@@ ic@@ c@@ Info@@ ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void request@@ All@@ Pro@@ file@@ (java.lang.String c@@ ard@@ Id@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info@@ []@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().get@@ All@@ Pro@@ fil@@ es@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Get@@ All@@ Pro@@ fil@@ es@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info@@ [] pro@@ fil@@ es) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , pro@@ fil@@ es@@ ); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing get@@ All@@ Pro@@ file@@ s@@ ", e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void set@@ Default@@ S@@ m@@ d@@ p@@ Addres@@ s(@@ java.lang.String c@@ ard@@ Id, java.lang.String default@@ S@@ m@@ d@@ p@@ Address@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ java.lang.@@ V@@ o@@ id@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ().@@ set@@ Default@@ S@@ m@@ d@@ p@@ Address@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, default@@ S@@ m@@ d@@ p@@ Addres@@ s, new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ I@@ Set@@ Default@@ S@@ m@@ d@@ p@@ Address@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , null@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing set@@ Default@@ S@@ m@@ d@@ p@@ Address e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public void switch@@ To@@ Pro@@ file@@ (java.lang.String c@@ ard@@ Id, java.lang.String ic@@ c@@ id, boolean ref@@ res@@ h@@ , @@@ android.@@ annotation.@@ Callback@@ Exec@@ ut@@ or java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ Result@@ Callback@@ <@@ android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info@@ > call@@ back@@ ) { try { get@@ I@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Control@@ ler@@ ()@@ .@@ switch@@ To@@ Pro@@ file@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ (), c@@ ard@@ Id, ic@@ c@@ id, ref@@ res@@ h@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ e@@ u@@ ic@@ c.@@ IS@@ wit@@ ch@@ To@@ Pro@@ file@@ Callback@@ .@@ St@@ u@@ b@@ () { @java.lang.Override public void on@@ Comp@@ let@@ e@@ (@@ int result@@ Code@@ , android.@@ service@@ .@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ Pro@@ file@@ Info pro@@ file@@ ) { exec@@ ut@@ or.@@ exec@@ ute@@ ((@@ ) -@@ > call@@ back@@ .@@ on@@ Comp@@ let@@ e(@@ result@@ Code@@ , pro@@ file@@ )); } }); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ Manager.@@ TAG, "@@ Er@@ ror call@@ ing switch@@ To@@ Pro@@ fi@@ le e); throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } }
public final long get@@ Con@@ nect@@ E@@ l@@ ap@@ sed@@ Time@@ () { return m@@ Connection@@ Start@@ E@@ l@@ ap@@ sed@@ Re@@ al@@ Tim@@ e) != null@@ ; }
private void ve@@ r@@ if@@ y@@ No@@ Connection@@ State@@ Intent@@ (@@ int time@@ out@@ M@@ s, android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int new@@ State@@ , int pre@@ v@@ State@@ ) { android.content.@@ Int@@ ent int@@ ent = wait@@ For@@ No@@ Intent@@ (@@ time@@ out@@ M@@ s, m@@ Connection@@ State@@ Changed@@ Q@@ ue@@ ue@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Null@@ (@@ int@@ ent@@ ); }
private void g@@ ener@@ ate@@ U@@ ne@@ x@@ pec@@ ted@@ Message@@ From@@ Native@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int new@@ Connection@@ State@@ , int old@@ Connection@@ State@@ ) { com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent st@@ ack@@ Ev@@ ent = new com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Stack@@ Event@@ (@@ A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); st@@ ack@@ Ev@@ ent.@@ de@@ vice = device@@ ; st@@ ack@@ Ev@@ ent.@@ value@@ In@@ t = new@@ Connection@@ State@@ ; m@@ A@@ 2@@ d@@ p@@ Service.@@ message@@ From@@ Native@@ (@@ st@@ ack@@ Event@@ ); ve@@ r@@ if@@ y@@ No@@ Connection@@ State@@ Intent@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ , device@@ , new@@ Connection@@ State@@ , old@@ Connection@@ State@@ ); }
void message@@ From@@ Native@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent st@@ ack@@ Event@@ ) { java.util.@@ Object@@ s.@@ requ@@ i@@ re@@ Non@@ Null@@ (@@ st@@ ack@@ Ev@@ ent.@@ device@@ , ("@@ N@@ o sho@@ ul@@ d ne@@ ve@@ r b@@ e null@@ , event@@ : " + st@@ ack@@ Event@@ )); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m = null@@ ; android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = st@@ ack@@ Ev@@ ent.@@ device@@ ; if ((@@ st@@ ack@@ Ev@@ ent.@@ typ@@ e) == (@@ A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ )) { switch (@@ st@@ ack@@ Ev@@ ent.@@ value@@ Int@@ ) { case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D : case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ IN@@ G : if (!(@@ can@@ Con@@ nect@@ To@@ Device@@ (@@ device@@ ))) { android.util.Log.@@ e@@ (com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ In@@ va@@ li@@ d connec@@ t to " + device@@ ) + " : to@@ o man@@ y connec@@ ted device@@ s return@@ ; } s@@ m = get@@ Or@@ Create@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); break@@ ; default : s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); break@@ ; } } if (s@@ m == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ("@@ S@@ : pro@@ ces@@ s st@@ ate m@@ ach@@ ine@@ : " + st@@ ack@@ Event@@ )); return@@ ; } s@@ m.@@ send@@ Message@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , st@@ ack@@ Event@@ ); } }
private void process@@ Connection@@ Event@@ (@@ int state@@ ) { switch (@@ state@@ ) { case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D : android.util.Log.@@ i@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ Tr@@ y f@@ ro@@ m " + (m@@ Device@@ ))); tr@@ an@@ sition@@ To@@ (m@@ Dis@@ connec@@ ted@@ ); break@@ ; case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D : android.util.Log.@@ w@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ process@@ Connection@@ Event@@ : A@@ 2@@ D@@ P C@@ ON@@ N@@ EC@@ TE@@ D event@@ : " + (m@@ Device@@ ))); break@@ ; case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ IN@@ G : android.util.Log.@@ w@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ process@@ Connection@@ Event@@ : A@@ 2@@ D@@ P C@@ ON@@ N@@ EC@@ T@@ IN@@ G event@@ : " + (m@@ Device@@ ))); break@@ ; case A@@ 2@@ d@@ p@@ Stack@@ Ev@@ ent.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ IN@@ G : android.util.Log.@@ i@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ process@@ Connection@@ Event@@ : f@@ ro@@ m " + (m@@ Device@@ ))); tr@@ an@@ sition@@ To@@ (m@@ Dis@@ connect@@ ing@@ ); break@@ ; default : android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ U@@ ne@@ x@@ pec@@ ted State Device@@ : " + (m@@ Device@@ )) + " b@@ ad state@@ : ") + state@@ )); break@@ ; } }
public static android.@@ bluetooth.@@ Bluetooth@@ De@@ vice get@@ Test@@ Device@@ (@@ int id@@ ) { org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ ((@@ id <@@ = 25@@ 5@@ )); android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter bluetooth@@ Adap@@ ter = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (@@ bluetooth@@ Adap@@ ter@@ ); android.@@ bluetooth.@@ Bluetooth@@ De@@ vice test@@ De@@ vice = bluetooth@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ (@@ java.lang.String@@ .@@ for@@ mat@@ ("@@ 00@@ :@@ 0@@ 1@@ :@@ 0@@ 2@@ :@@ 0@@ 3@@ :@@ 0@@ 4@@ :@@ %@@ 0@@ 2@@ X@@ ", id@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (test@@ Device@@ ); return test@@ Device@@ ; }
public boolean connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ("@@ connect@@ (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ O@@ F@@ F@@ F@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ connect@@ () connec@@ t to " + device@@ ) + " : P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ O@@ F@@ F return false@@ ; } if (!@@ (android.@@ bluetooth.@@ Bluetooth@@ U@@ u@@ id@@ .is@@ U@@ u@@ id@@ P@@ res@@ ent@@ (m@@ Adap@@ ter@@ Service@@ .get@@ Remote@@ U@@ u@@ id@@ s(@@ device@@ ), Bluetooth@@ U@@ u@@ id@@ .@@ Au@@ dio@@ S@@ in@@ k@@ ))) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ connect@@ : connec@@ t to " + device@@ ) + " : Remo@@ t@@ e do@@ es not h@@ av@@ e A@@ 2@@ D@@ P S@@ in@@ k U@@ I@@ D return false@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { if (!(@@ can@@ Con@@ nect@@ To@@ Device@@ (@@ device@@ ))) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice connec@@ t to " + device@@ ) + " : to@@ o man@@ y connec@@ ted device@@ s return false@@ ; } com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e s@@ m@@ Connec@@ t = get@@ Or@@ Create@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); if (s@@ m@@ Connec@@ t == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ connect@@ ing connec@@ t to " + device@@ ) + " : n@@ o st@@ ate m@@ ach@@ in@@ e return false@@ ; } s@@ m@@ Connec@@ t.@@ send@@ Message@@ (@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T@@ ); return true@@ ; } }
public java.util.List<@@ java.lang.String> lo@@ ok@@ up@@ Co@@ u@@ n@@ try@@ Code@@ For@@ Zone@@ Id@@ (java.lang.String z@@ one@@ Id@@ ) { java.util.List<@@ java.lang.String> is@@ o@@ Code@@ s = new java.util.ArrayList<@@ >@@ (@@ 2@@ ); for (@@ libcore.@@ util.@@ Co@@ u@@ n@@ try@@ TimeZone@@ s co@@ u@@ n@@ try@@ TimeZone@@ s : co@@ u@@ n@@ try@@ Time@@ Z@@ on@@ es@@ List@@ ) { if (@@ co@@ u@@ n@@ try@@ Time@@ Z@@ on@@ es@@ .get@@ TimeZone@@ Id@@ s@@ ().@@ contain@@ s(@@ z@@ one@@ Id@@ )) { is@@ o@@ Co@@ d@@ es.@@ add(@@ co@@ u@@ n@@ try@@ Time@@ Z@@ on@@ es@@ .get@@ Co@@ u@@ n@@ try@@ I@@ so@@ ()); } } return java.util.Collection@@ s.@@ un@@ mo@@ d@@ if@@ i@@ able@@ List@@ (is@@ o@@ Co@@ des@@ ); }
public libcore.@@ util.@@ TimeZone@@ F@@ in@@ der get@@ Co@@ u@@ n@@ try@@ Z@@ on@@ es@@ L@@ ook@@ up@@ () { libcore.@@ util.@@ TimeZone@@ F@@ ind@@ er.@@ Co@@ u@@ n@@ try@@ Z@@ on@@ es@@ L@@ ook@@ up@@ Ex@@ tr@@ act@@ or ex@@ tr@@ act@@ or = new libcore.@@ util.@@ TimeZone@@ F@@ ind@@ er.@@ Co@@ u@@ n@@ try@@ Z@@ on@@ es@@ L@@ ook@@ up@@ Extra@@ ctor@@ (); try { process@@ Xml@@ (@@ ex@@ tra@@ ctor@@ ); return ex@@ tra@@ ctor@@ .get@@ Co@@ u@@ n@@ try@@ Z@@ on@@ es@@ L@@ ook@@ up@@ (); } catch (@@ org.@@ xml@@ p@@ ul@@ l.@@ v@@ 1.@@ Xml@@ P@@ ull@@ Par@@ ser@@ Exception | java.io.IOException e) { java.lang.System.@@ log@@ W@@ ("@@ Er@@ ror read@@ ing co@@ u@@ n@@ try z@@ one@@ s ", e); return null@@ ; } }
public java.util.List<@@ java.lang.String> get@@ Co@@ u@@ n@@ try@@ I@@ so@@ Co@@ des@@ () { java.util.List<@@ java.lang.String> is@@ o@@ Code@@ s = new java.util.ArrayList<@@ >(); for (@@ libcore.@@ util.@@ Co@@ u@@ n@@ try@@ TimeZone@@ s co@@ u@@ n@@ try@@ TimeZone@@ s : co@@ u@@ n@@ try@@ TimeZone@@ s : co@@ u@@ n@@ try@@ Time@@ Z@@ on@@ es@@ List@@ ) { is@@ o@@ Co@@ d@@ es.@@ add(@@ co@@ u@@ n@@ try@@ Time@@ Z@@ on@@ es@@ .get@@ Co@@ u@@ n@@ try@@ I@@ so@@ ()); } return java.util.Collection@@ s.@@ un@@ mo@@ d@@ if@@ i@@ able@@ List@@ (is@@ o@@ Co@@ des@@ ); }
void assert@@ Cont@@ ain@@ s@@ Su@@ it@@ able@@ Stack@@ On@@ Display@@ (java.lang.String ms@@ g@@ , int dis@@ play@@ Id@@ ) { assert@@ True@@ (m@@ s@@ g@@ , m@@ A@@ m@@ State.@@ contain@@ s@@ Su@@ it@@ able@@ Stack@@ On@@ Display@@ (d@@ is@@ play@@ Id@@ )); }
public void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (); en@@ able@@ As@@ si@@ stan@@ t@@ (); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ LA@@ UN@@ CH@@ _@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ IN@@ TO@@ _@@ STA@@ C@@ K@@ ); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); android.@@ server.@@ cts.@@ Activity@@ Manager@@ State.@@ Activity@@ St@@ ac@@ k as@@ si@@ stan@@ t@@ St@@ ac@@ k = m@@ A@@ m@@ W@@ m@@ Stat@@ e.get@@ A@@ m@@ State@@ ().get@@ Stack@@ By@@ Id@@ (android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ m@@ As@@ si@@ stan@@ t@@ Display@@ Id = 0; remove@@ Stack@@ s(@@ android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); dis@@ able@@ As@@ si@@ stan@@ t@@ (); }
public void test@@ As@@ si@@ stan@@ t@@ Stack@@ Z@@ Or@@ der@@ () throw@@ s java.lang.Exception { if ((@@ (!@@ (s@@ up@@ port@@ s@@ P@@ ip@@ ())) || (!@@ (s@@ up@@ port@@ s@@ S@@ pli@@ t@@ S@@ creen@@ Multi@@ W@@ in@@ do@@ w@@ ()))) || (!(@@ as@@ si@@ stan@@ t@@ Run@@ s@@ On@@ Pri@@ m@@ ary@@ Display@@ ()))) return@@ ; la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ P@@ IP@@ _@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ EX@@ TR@@ A@@ _@@ EN@@ TER@@ _P@@ IP@@ , "@@ true@@ "); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ P@@ IP@@ _@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ P@@ IN@@ N@@ E@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Stack@@ ("@@ M@@ us@@ t cont@@ a@@ in p@@ in@@ ne@@ d st@@ ack@@ .@@ ", android.@@ server.@@ cts.@@ P@@ IN@@ N@@ E@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ ); la@@ unch@@ Activity@@ In@@ D@@ ock@@ Stack@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ D@@ O@@ C@@ KE@@ D_@@ AC@@ TI@@ V@@ I@@ TY@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Su@@ it@@ able@@ Stack@@ On@@ Display@@ ("@@ M@@ us@@ t cont@@ a@@ in f@@ ull@@ s@@ cre@@ e@@ n st@@ ack@@ .@@ ", android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ m@@ As@@ si@@ stan@@ t@@ Display@@ Id@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Stack@@ ("@@ M@@ us@@ t cont@@ a@@ in do@@ ck@@ ed st@@ ack@@ .@@ ", android.@@ server.@@ cts.@@ D@@ O@@ C@@ KE@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); en@@ able@@ As@@ si@@ stan@@ t@@ (); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ LA@@ UN@@ CH@@ _@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ F@@ RO@@ M@@ _S@@ E@@ SS@@ ION@@ ); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ N@@ T_@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); assert@@ As@@ si@@ stan@@ t@@ Stack@@ Ex@@ ist@@ s(); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ ron@@ t@@ Stack@@ ("@@ M@@ is@@ s@@ ing st@@ ac@@ k sho@@ ul@@ d b@@ e on to@@ p@@ . android.@@ server.@@ cts.@@ P@@ IN@@ N@@ E@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ o@@ c@@ u@@ sed@@ Stack@@ ("@@ M@@ ac@@ k sho@@ ul@@ d b@@ e fo@@ c@@ u@@ sed@@ Stack@@ .@@ ", android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); dis@@ able@@ As@@ si@@ stan@@ t@@ (); }
public void test@@ As@@ si@@ stan@@ t@@ Stack@@ F@@ in@@ is@@ h@@ To@@ Pre@@ vi@@ ou@@ s@@ App@@ () throw@@ s java.lang.Exception { la@@ unch@@ Activity@@ On@@ Display@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ m@@ As@@ si@@ stan@@ t@@ Display@@ Id@@ ); en@@ able@@ As@@ si@@ stan@@ t@@ (); la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ LA@@ UN@@ CH@@ _@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ IN@@ TO@@ _@@ STA@@ C@@ K@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ EX@@ TR@@ A@@ _@@ F@@ IN@@ IS@@ H@@ _S@@ E@@ L@@ F@@ , "@@ true@@ "); dis@@ able@@ As@@ si@@ stan@@ t@@ (); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ F@@ UL@@ L@@ S@@ C@@ RE@@ EN@@ _@@ W@@ OR@@ K@@ S@@ P@@ AC@@ E_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Activity@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ State.@@ STATE_@@ RE@@ S@@ U@@ ME@@ D@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ o@@ c@@ u@@ sed@@ Activity@@ ("@@ res@@ ho@@ ul@@ d b@@ e res@@ um@@ ed android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Su@@ it@@ able@@ Stack@@ Cont@@ ain@@ s@@ Ac@@ tiv@@ it@@ y@@ ("@@ g@@ o@@ on a su@@ it@@ able f@@ ull@@ s@@ creen@@ -@@ type st@@ ac@@ k u@@ sed@@ s.@@ ", android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Test@@ s@@ .@@ class@@ ); }
void assert@@ Su@@ it@@ able@@ Stack@@ Cont@@ ain@@ s@@ Activity@@ (java.lang.String ms@@ g@@ , java.lang.String ac@@ tivity@@ Name@@ ) throw@@ s java.lang.Exception { final int st@@ ack@@ Id = m@@ A@@ m@@ Stat@@ e.get@@ Task@@ By@@ Activity@@ Name@@ (@@ ac@@ tivity@@ Name@@ ).@@ m@@ Stack@@ Id@@ ; assert@@ True@@ (m@@ A@@ m@@ State.@@ is@@ Su@@ it@@ able@@ Stack@@ (@@ st@@ ack@@ Id@@ )); assert@@ F@@ ron@@ t@@ Stack@@ (m@@ s@@ g@@ , st@@ ack@@ Id@@ ); assert@@ F@@ o@@ c@@ u@@ sed@@ Stack@@ (m@@ s@@ g@@ , st@@ ack@@ Id@@ ); }
public void test@@ As@@ si@@ stan@@ t@@ Stack@@ L@@ a@@ unch@@ New@@ Task@@ With@@ D@@ ock@@ ed@@ Stack@@ () throw@@ s java.lang.Exception { if ((@@ !@@ (s@@ up@@ port@@ s@@ S@@ pli@@ t@@ S@@ creen@@ Multi@@ W@@ in@@ do@@ w@@ ())) || (!(@@ as@@ si@@ stan@@ t@@ Run@@ s@@ On@@ Pri@@ m@@ ary@@ Display@@ ()))) return@@ ; la@@ unch@@ Activity@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ ); la@@ unch@@ Activity@@ In@@ D@@ ock@@ Stack@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ D@@ O@@ C@@ KE@@ D_@@ AC@@ TI@@ V@@ I@@ TY@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Su@@ it@@ able@@ Stack@@ On@@ Dis@@ pla@@ y@@ ("@@ Th@@ is cont@@ a@@ in f@@ ull@@ s@@ cre@@ e@@ n st@@ ack@@ .@@ ", android.@@ server.@@ ct@@ s@@ .@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ m@@ As@@ si@@ stan@@ t@@ Display@@ Id@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Cont@@ ain@@ s@@ Stack@@ ("@@ Th@@ is cont@@ a@@ in do@@ ck@@ ed st@@ ack@@ .@@ ", android.@@ server.@@ cts.@@ D@@ O@@ C@@ KE@@ D_@@ STA@@ C@@ K@@ _@@ ID@@ ); en@@ able@@ As@@ si@@ stan@@ t@@ (); assert@@ As@@ si@@ stan@@ t@@ Stack@@ Can@@ L@@ a@@ unch@@ And@@ Return@@ From@@ New@@ Task@@ (); dis@@ able@@ As@@ si@@ t@@ (); }
private void assert@@ As@@ si@@ stan@@ t@@ Stack@@ Can@@ L@@ a@@ unch@@ And@@ Return@@ From@@ Task@@ () throw@@ s java.lang.Exception { en@@ able@@ As@@ si@@ stan@@ t@@ (); la@@ unch@@ Activity@@ On@@ Display@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ LA@@ UN@@ CH@@ _@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ IN@@ TO@@ _@@ STA@@ C@@ K@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ m@@ As@@ si@@ stan@@ t@@ Display@@ Id, android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ EX@@ TR@@ A@@ _@@ LA@@ UN@@ CH@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ EX@@ TR@@ A@@ _@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ D@@ IS@@ P@@ LA@@ Y_@@ ID@@ , java.lang.Integ@@ er.@@ toString@@ (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ m@@ As@@ si@@ stan@@ t@@ Display@@ Id@@ )); dis@@ able@@ As@@ si@@ stan@@ t@@ (); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ Valid@@ State@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ , android.@@ server.@@ cts.@@ F@@ UL@@ L@@ S@@ C@@ RE@@ EN@@ _@@ W@@ OR@@ K@@ S@@ P@@ AC@@ E_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ o@@ c@@ u@@ sed@@ Activity@@ ("@@ res@@ sed@@ Activity@@ ("@@ res@@ /@@ android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ Su@@ it@@ able@@ Stack@@ Cont@@ ain@@ s@@ Activity@@ ("@@ res@@ sed@@ Stack@@ "); sho@@ ul@@ d g@@ o on a su@@ it@@ able f@@ ull@@ s@@ creen@@ -@@ type@@ "); st@@ ac@@ k@@ el@@ y = android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ T@@ Y@@ ); exec@@ ute@@ Sh@@ ell@@ Command@@ (("@@ am b@@ road@@ cas@@ t -@@ a " + (android.@@ server.@@ cts.@@ Activity@@ Manager@@ As@@ si@@ stan@@ t@@ Stack@@ Tests.@@ TEST_@@ AC@@ TI@@ V@@ I@@ TY@@ _@@ AC@@ TION@@ _@@ F@@ IN@@ IS@@ H@@ _S@@ E@@ L@@ F@@ ))); m@@ A@@ m@@ W@@ m@@ State.@@ wait@@ For@@ F@@ o@@ c@@ u@@ sed@@ Stack@@ (m@@ Device@@ , android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ ron@@ t@@ Stack@@ ("@@ Th@@ e st@@ ac@@ k sho@@ ul@@ d b@@ e on to@@ p@@ .@@ ", android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); m@@ A@@ m@@ W@@ m@@ State@@ .@@ assert@@ F@@ o@@ c@@ u@@ sed@@ Stack@@ ("@@ Th@@ e st@@ ac@@ k sho@@ ul@@ d b@@ e fo@@ c@@ u@@ sed@@ .@@ ", android.@@ server.@@ cts.@@ A@@ SS@@ I@@ STA@@ N@@ T_@@ STA@@ C@@ K@@ _@@ ID@@ ); }
boolean do@@ B@@ ind@@ () { android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ I@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ class@@ .getName@@ ()); android.content.@@ Comp@@ onent@@ Name com@@ p = int@@ ent.@@ res@@ ol@@ ve@@ System@@ Service@@ (m@@ Contex@@ t.get@@ Package@@ Manager@@ (), 0); int@@ ent.@@ set@@ Comp@@ onent@@ (@@ comp@@ ); if ((@@ com@@ p == null@@ ) || (!(m@@ Context.@@ b@@ ind@@ Service@@ As@@ User@@ (@@ int@@ ent@@ , m@@ Connection@@ , 0, android.os.@@ Pro@@ ces@@ s.@@ my@@ User@@ Handle@@ ()@@ )@@ ))) { android.util.Log.@@ e@@ (android.@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ TAG, ("@@ Co@@ ul@@ d not b@@ in@@ d to B@@ luetoo@@ th He@@ ar@@ ing A@@ id Ser@@ vice wit@@ h " + int@@ ent@@ )); return false@@ ; } return true@@ ; }
public int get@@ D@@ raw@@ able@@ Resource@@ (android.@@ bluetooth.@@ Bluetooth@@ Clas@@ s b@@ t@@ Class@@ ) { return R.@@ d@@ raw@@ ab@@ le.@@ ic@@ _@@ b@@ t@@ _@@ he@@ ad@@ phon@@ es@@ _@@ a@@ 2@@ d@@ p@@ ; }
public boolean connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if ((m@@ Service@@ ) == null@@ ) return false@@ ; java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > s@@ in@@ k@@ s = get@@ Connec@@ ted@@ De@@ vices@@ (); if (s@@ in@@ k@@ s != null@@ ) { for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice s@@ in@@ k : s@@ in@@ k@@ s) { if (s@@ in@@ k.@@ equals(@@ device@@ )) { android.util.Log.@@ w@@ (com.android.@@ setting@@ s@@ lib.@@ bluetooth.@@ He@@ ar@@ ing@@ A@@ id@@ Pro@@ file.@@ TAG, (("@@ Con@@ nect@@ ing to de@@ vice " + device@@ ) + " : dis@@ connec@@ t s@@ k@@ ip@@ p@@ ed@@ ")); continue@@ ; } m@@ Service.@@ dis@@ connect@@ (s@@ in@@ k@@ ); } } return m@@ Service.@@ connect@@ (@@ device@@ ); }
@java.lang.Override public android.net.@@ Network@@ Cap@@ abili@@ ties@@ [] get@@ Default@@ Network@@ Cap@@ abili@@ ties@@ For@@ User@@ (@@ int user@@ Id@@ ) { e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); java.util.@@ Hash@@ Map@@ <@@ android.net.@@ Network@@ , android.net.@@ Network@@ Cap@@ abili@@ ties@@ > result = new java.util.@@ Hash@@ Map@@ <@@ android.net.@@ Network@@ , android.net.@@ Network@@ Cap@@ abili@@ ties@@ >(); com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i = get@@ Default@@ Network@@ (); android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = get@@ Network@@ Cap@@ abili@@ ties@@ In@@ ternal@@ (@@ n@@ a@@ i@@ ); if (@@ n@@ c != null@@ ) { res@@ ult.@@ put@@ (@@ n@@ a@@ i.@@ network@@ , n@@ c@@ ); } synchronized@@ (m@@ V@@ p@@ n@@ s) { if (!(m@@ Loc@@ k@@ do@@ wn@@ Enabled@@ )) { com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n v@@ p@@ n = m@@ V@@ p@@ n@@ s.get@@ (@@ user@@ Id@@ ); if (@@ v@@ p@@ n != null@@ ) { android.net.@@ Network@@ [] network@@ s = v@@ p@@ n@@ .get@@ Un@@ der@@ ly@@ ing@@ Network@@ s(); if (@@ network@@ s != null@@ ) { for (android.net.@@ Net@@ wor@@ k net@@ wor@@ k : network@@ s) { n@@ a@@ i = get@@ Network@@ A@@ g@@ ent@@ Info@@ For@@ Network@@ (@@ network@@ ); n@@ c = get@@ Network@@ Cap@@ abili@@ ties@@ In@@ ternal@@ (@@ n@@ a@@ i@@ ); if (@@ n@@ c != null@@ ) { n@@ c.@@ set@@ U@@ id@@ s@@ (@@ null@@ ); res@@ ult.@@ put@@ (@@ network@@ , n@@ c@@ ); } } } } android.net.@@ Network@@ Cap@@ abili@@ ties@@ [] out = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ [@@ res@@ ult.@@ size@@ ()@@ ]; out = res@@ ult.@@ valu@@ es@@ ().@@ to@@ Array@@ (@@ out); return out@@ ; }
@java.lang.Override public void on@@ A@@ va@@ il@@ able@@ (android.net.@@ Net@@ wor@@ k network@@ , android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.net.@@ Lin@@ k@@ Proper@@ ti@@ es lin@@ k@@ Properties@@ ) { set@@ L@@ ast@@ Callback@@ (com.android.server.@@ Connectivity@@ Service@@ Test.@@ Callback@@ State.@@ AV@@ A@@ IL@@ AB@@ LE@@ , network@@ Cap@@ abili@@ ties@@ ); super@@ .@@ on@@ A@@ va@@ il@@ able@@ (@@ network@@ , network@@ Cap@@ abili@@ ties@@ , lin@@ k@@ Properties@@ ); }
private static void call@@ Callback@@ For@@ Request@@ (com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ ri@@ , com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info network@@ A@@ g@@ ent@@ , int not@@ if@@ ic@@ ation@@ Type, int arg@@ 1@@ ) { if ((@@ n@@ ri@@ .@@ mess@@ eng@@ er@@ ) == null@@ ) { return@@ ; } android.os.@@ Bund@@ le b@@ und@@ le = new android.os.@@ Bund@@ le@@ (); com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Network@@ Request@@ (@@ n@@ ri@@ .@@ request@@ )); android.os.@@ Mess@@ age ms@@ g = android.os.@@ Mess@@ age.@@ ob@@ t@@ ain@@ (); if (@@ not@@ if@@ ic@@ ation@@ Type != (android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ UN@@ AV@@ A@@ IL@@ )) { com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , network@@ A@@ g@@ ent.@@ network@@ ); } switch (@@ not@@ if@@ ic@@ ation@@ Typ@@ e) { case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ LO@@ S@@ IN@@ G : { ms@@ g.@@ arg@@ 1 = arg@@ 1; break@@ ; } case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _C@@ AP@@ _C@@ H@@ AN@@ GE@@ D : { final android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ A@@ g@@ ent.@@ network@@ Cap@@ abili@@ ties@@ ); n@@ c@@ .@@ set@@ U@@ id@@ s@@ (@@ null@@ ); com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , n@@ c@@ ); break@@ ; } case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ IP@@ _C@@ H@@ AN@@ GE@@ D : { com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Lin@@ k@@ Properties@@ (@@ network@@ A@@ g@@ ent.@@ lin@@ k@@ Properties@@ )); break@@ ; } } ms@@ g.@@ wh@@ at = not@@ if@@ ic@@ ation@@ Type@@ ; ms@@ g.@@ set@@ Data@@ (b@@ und@@ le@@ ); try { if (com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) { java.lang.String not@@ if@@ ic@@ ation = android.net.@@ Connectivity@@ Manager.@@ get@@ Callback@@ Name@@ (@@ not@@ if@@ ic@@ ation@@ Type@@ ); com.android.server.@@ Connectivity@@ Service.@@ log@@ ((@@ (("@@ call@@ ing not@@ if@@ ic@@ ation " + not@@ if@@ ic@@ ation@@ ) + " for ") + n@@ ri@@ .@@ request@@ ))); } n@@ ri@@ .@@ mess@@ eng@@ er.@@ send@@ (@@ ms@@ g@@ ); } catch (android.os.@@ Remote@@ Exception e) { com.android.server.@@ Connectivity@@ Service.@@ log@@ e@@ (("@@ call@@ ing c@@ au@@ g@@ h@@ t try@@ ing to s@@ en@@ d a call@@ b@@ ac@@ k ms@@ g@@ " + (@@ n@@ ri@@ .@@ request@@ ))); } }
private static void call@@ Callback@@ For@@ Request@@ (com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ ri@@ , com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info network@@ A@@ g@@ ent@@ , int not@@ if@@ ic@@ ation@@ Type, int arg@@ 1@@ ) { if ((@@ n@@ ri@@ .@@ mess@@ eng@@ er@@ ) == null@@ ) { return@@ ; } android.os.@@ Bund@@ le b@@ und@@ le = new android.os.@@ Bund@@ le@@ (); com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Network@@ Request@@ (@@ n@@ ri@@ .@@ request@@ )); android.os.@@ Mess@@ age ms@@ g = android.os.@@ Mess@@ age.@@ ob@@ t@@ ain@@ (); if (@@ not@@ if@@ ic@@ ation@@ Type != (android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ UN@@ AV@@ A@@ IL@@ )) { com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , network@@ A@@ g@@ ent.@@ network@@ ); } switch (@@ not@@ if@@ ic@@ ation@@ Typ@@ e) { case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ AV@@ A@@ IL@@ AB@@ L@@ E : { com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ A@@ g@@ ent.@@ network@@ Cap@@ abili@@ ties@@ )); com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Lin@@ k@@ Properties@@ (@@ network@@ A@@ g@@ ent.@@ lin@@ k@@ Properties@@ )); break@@ ; } case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ LO@@ S@@ IN@@ G : { ms@@ g.@@ arg@@ 1 = arg@@ 1; break@@ ; } case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _C@@ AP@@ _C@@ H@@ AN@@ GE@@ D : { final android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ A@@ g@@ ent.@@ network@@ Cap@@ abili@@ ties@@ ); n@@ c.@@ set@@ U@@ id@@ s@@ (@@ null@@ ); com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , n@@ c@@ ); break@@ ; } case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ IP@@ _C@@ H@@ AN@@ GE@@ D : { com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.@@ net@@ .@@ Lin@@ k@@ Proper@@ ti@@ es@@ (@@ network@@ A@@ g@@ ent@@ .@@ lin@@ k@@ Proper@@ ti@@ es@@ )); break@@ ; } ms@@ g.@@ wh@@ at = not@@ if@@ ic@@ ation@@ Type@@ ; ms@@ g.@@ set@@ Data@@ (b@@ und@@ le@@ ); try { if (com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) { java.lang.String not@@ if@@ ic@@ ation = android.net.@@ Connectivity@@ Manager@@ .@@ get@@ Name@@ (@@ not@@ if@@ ic@@ ation@@ Type@@ ); com.android.server.@@ Connectivity@@ Service.@@ log@@ ((@@ (("@@ call@@ ing not@@ if@@ ic@@ ation " + not@@ if@@ ic@@ ation@@ ) + " for ") + (@@ n@@ ri@@ .@@ request@@ ))); } n@@ ri@@ .@@ request@@ ))); } n@@ ri@@ .@@ mess@@ eng@@ er.@@ send@@ (@@ ms@@ g@@ ); } catch (android.os.@@ Remote@@ Exception e) { com.android.server.@@ Connectivity@@ Service.@@ log@@ e@@ (("@@ (("@@ call@@ ing c@@ au@@ g@@ h@@ t try@@ ing to s@@ en@@ d a call@@ b@@ ac@@ k ms@@ g@@ " + (@@ n@@ ri@@ .@@ request@@ ))); } }
@org.junit.Test public void test@@ Package@@ Size@@ With@@ Par@@ ti@@ al@@ Package@@ Li@@ te@@ () throw@@ s android.content.@@ p@@ m.@@ Package@@ Par@@ ser.@@ Package@@ Par@@ ser@@ Exception, java.io.IOException { java.io.File b@@ as@@ e = copy@@ Apk@@ To@@ T@@ mp@@ Dir@@ ("@@ in@@ stall@@ _@@ s@@ pli@@ t@@ _@@ b@@ ase@@ ", R.@@ raw@@ .@@ in@@ stall@@ _@@ s@@ pli@@ t@@ _@@ b@@ as@@ e); java.io.File d@@ m = create@@ Dex@@ M@@ et@@ ad@@ ata@@ File@@ ("@@ in@@ stall@@ _@@ s@@ pli@@ t@@ _@@ b@@ ase.@@ ap@@ k@@ "); try (@@ java.io.File@@ Input@@ Stream is = new java.io.File@@ InputStream@@ (b@@ ase@@ )) { android.content.@@ p@@ m.@@ Package@@ Par@@ ser.@@ Apk@@ L@@ it@@ e b@@ ase@@ Ap@@ k = android.content.@@ p@@ m.@@ Package@@ Par@@ ser.@@ parse@@ Apk@@ Li@@ te@@ (i@@ s.get@@ F@@ D@@ (), b@@ as@@ e.get@@ Absolute@@ Path@@ (), 0); android.content.@@ p@@ m.@@ Package@@ Par@@ ser.@@ Package@@ L@@ it@@ e p@@ kg@@ L@@ it@@ e = new android.content.@@ p@@ m.@@ Package@@ Par@@ ser.@@ Package@@ Li@@ te@@ (@@ null@@ , b@@ ase@@ Apk@@ , null@@ , null@@ , null@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ d@@ m.@@ length@@ (), android.content.@@ p@@ m.@@ dex.@@ Dex@@ M@@ et@@ ad@@ ata@@ Hel@@ p@@ er.get@@ Package@@ Dex@@ M@@ et@@ ad@@ ata@@ Size@@ (p@@ kg@@ Li@@ te@@ )); } }
public void add@@ Network@@ Reg@@ is@@ tr@@ ation@@ State@@ (android.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ State reg@@ Stat@@ es) { if (@@ reg@@ State@@ s == null@@ ) return@@ ; synchronized@@ (m@@ Network@@ Reg@@ is@@ tr@@ ation@@ Stat@@ es) { for (@@ int i = 0; i < (m@@ Network@@ Reg@@ is@@ tr@@ ation@@ Stat@@ es.@@ size@@ ()); i++) { android.@@ telephony.@@ Network@@ Reg@@ is@@ tr@@ ation@@ State c@@ ur@@ Reg@@ State@@ s = m@@ Network@@ Reg@@ is@@ tr@@ ation@@ Stat@@ es@@ .get@@ (i@@ ); if (((@@ c@@ ur@@ Reg@@ Stat@@ es@@ .get@@ Trans@@ port@@ Type@@ ()) == (@@ reg@@ Stat@@ es@@ .get@@ Trans@@ port@@ Type@@ ())) && ((@@ c@@ ur@@ Reg@@ Stat@@ es@@ .get@@ Do@@ main@@ ()) == (@@ reg@@ Stat@@ es@@ .get@@ Do@@ main@@ ()))) { m@@ Network@@ Reg@@ is@@ tr@@ ation@@ Stat@@ es.@@ remove@@ (i@@ ); break@@ ; } } m@@ Network@@ Reg@@ is@@ tr@@ ation@@ Stat@@ es.@@ add(@@ reg@@ Stat@@ es@@ ); } }
private void test@@ Ex@@ pli@@ c@@ it@@ Position@@ Match@@ Parent@@ () { do@@ Layout@@ Param@@ Test@@ ((@@ android.@@ view@@ .@@ W@@ in@@ do@@ w@@ Manager.@@ Layout@@ Param@@ s param@@ s) -@@ > { param@@ s.@@ wid@@ th = W@@ in@@ do@@ w@@ Manager.@@ Layout@@ Param@@ s.@@ M@@ AT@@ CH@@ _P@@ AR@@ EN@@ T@@ ; param@@ s.@@ he@@ igh@@ t = W@@ in@@ do@@ w@@ Manager.@@ Layout@@ Param@@ s.@@ M@@ AT@@ CH@@ _P@@ AR@@ EN@@ T@@ ; param@@ s.@@ wid@@ th@@ =@@ (@@ 10@@ 0@@ ) - (m@@ Out@@ set@@ s.@@ le@@ f@@ t@@ )) - (m@@ Out@@ set@@ s.@@ ri@@ g@@ h@@ t@@ )); param@@ s.@@ he@@ igh@@ t = ((@@ 10@@ 0@@ ) - (m@@ Out@@ set@@ s.@@ bo@@ t@@ to@@ m@@ )) - (m@@ Out@@ set@@ s.@@ to@@ p@@ ) - (m@@ Out@@ set@@ s.@@ to@@ p@@ ))); }
protected void on@@ Create@@ (android.os.@@ Bund@@ le ic@@ le@@ ) { super@@ .@@ on@@ Create@@ (@@ ic@@ le@@ ); android.@@ view@@ .@@ Vi@@ e@@ w cont@@ ent = new android.@@ view@@ .@@ View@@ (@@ this@@ ); set@@ Content@@ View@@ (@@ cont@@ ent@@ ); content.@@ set@@ On@@ App@@ ly@@ W@@ in@@ do@@ w@@ In@@ set@@ s@@ Listener@@ (@@ this@@ ); }
private void test@@ Ex@@ pli@@ c@@ it@@ Position@@ Match@@ Parent@@ No@@ Li@@ m@@ it@@ s() { do@@ Layout@@ Param@@ Test@@ ((@@ android.@@ view@@ .@@ W@@ in@@ do@@ w@@ Manager.@@ Layout@@ Param@@ s param@@ s) -@@ > { param@@ s.@@ wid@@ th = W@@ in@@ do@@ w@@ Manager.@@ Layout@@ Param@@ s.@@ M@@ AT@@ CH@@ _P@@ AR@@ EN@@ T@@ ; param@@ s.@@ he@@ igh@@ t = W@@ in@@ do@@ w@@ Manager.@@ Layout@@ Param@@ s.@@ M@@ AT@@ CH@@ _P@@ AR@@ EN@@ T@@ ; param@@ s.@@ g@@ r@@ av@@ it@@ y = (android.@@ view@@ .@@ G@@ r@@ av@@ ity.@@ LE@@ F@@ T@@ ) | (android.@@ view@@ .@@ G@@ r@@ av@@ ity.@@ TO@@ P@@ ); param@@ s.@@ flag@@ s |@@ = W@@ in@@ do@@ w@@ Manager.@@ Layout@@ Param@@ s.@@ F@@ LA@@ G_@@ LA@@ Y@@ O@@ U@@ T_@@ NO@@ _@@ L@@ I@@ M@@ I@@ T@@ S@@ ; param@@ s.@@ wid@@ th@@ = ((@@ 10@@ 0@@ ) - (m@@ Out@@ set@@ s.@@ le@@ f@@ t@@ )) - (m@@ Out@@ set@@ s.@@ ri@@ g@@ h@@ t@@ ))); param@@ s.@@ he@@ igh@@ t = t@@ er.get@@ State@@ (); param@@ s.@@ he@@ igh@@ t@@ t = 10@@ 0@@ ; - (m@@ Out@@ set@@ s.@@ bo@@ t@@ to@@ m@@ )) - (m@@ Out@@ set@@ s.@@ to@@ p@@ ; }); }
@java.lang.Override protected void cle@@ an@@ up@@ () { com.android.@@ bluetooth.@@ p@@ an@@ .@@ P@@ an@@ Service@@ .set@@ P@@ an@@ Service@@ (@@ null@@ ); if (m@@ Native@@ A@@ va@@ il@@ able@@ ) { cle@@ an@@ up@@ Native@@ (); m@@ Native@@ A@@ va@@ il@@ able = false@@ ; } if ((m@@ P@@ an@@ De@@ vices@@ ) != null@@ ) { for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice : m@@ P@@ an@@ De@@ vices@@ .@@ key@@ Set@@ ()) { com.android.@@ bluetooth.@@ p@@ an@@ .@@ P@@ an@@ Service.@@ Bluetooth@@ P@@ an@@ De@@ vice p@@ an@@ De@@ vice = m@@ P@@ an@@ De@@ vices@@ .get@@ (@@ device@@ ); and@@ ro@@ id@@ .@@ uti@@ l@@ Log.@@ d@@ (com.android.bluetooth.@@ p@@ an@@ .@@ P@@ an@@ Service.@@ TAG, ((@@ ("@@ cle@@ an@@ up@@ : " + p@@ an@@ Device@@ ) + " de@@ vice addres@@ s@@ : ") + device@@ )); if ((@@ p@@ an@@ De@@ vice != null@@ ) && ((@@ p@@ an@@ Device@@ .@@ m@@ State@@ ) != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { handle@@ P@@ an@@ Device@@ State@@ Chang@@ e@@ (@@ de@@ vice vice m@@ P@@ an@@ I@@ f@@ Name, Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , p@@ an@@ Device@@ .@@ m@@ Local@@ R@@ o@@ le@@ , p@@ an@@ Device@@ .@@ m@@ Remote@@ R@@ o@@ le@@ ); break@@ ; } } m@@ P@@ an@@ De@@ vices@@ .@@ clear@@ (); } }
private static java.text.@@ Number@@ For@@ ma@@ t get@@ Instance@@ (java.util.@@ Local@@ e des@@ i@@ re@@ d@@ Loc@@ ale@@ , int ch@@ o@@ i@@ ce@@ ) { java.lang.String[] n@@ umber@@ Pat@@ tern@@ s = new java.lang.String@@ [@@ 4@@ ]; libcore.@@ icu@@ .@@ Loc@@ ale@@ Data dat@@ a = libcore.@@ icu@@ .@@ Loc@@ ale@@ Data@@ .get@@ (d@@ es@@ i@@ re@@ d@@ Loc@@ ale@@ ); n@@ umber@@ Pat@@ tern@@ s@@ [@@ java.text.@@ Number@@ Format@@ .@@ N@@ U@@ M@@ B@@ E@@ RS@@ TY@@ LE@@ ] = data@@ .@@ n@@ umber@@ Pat@@ tern@@ ; n@@ umber@@ Pat@@ tern@@ s@@ [@@ java.text.@@ Number@@ Format@@ .@@ C@@ UR@@ R@@ EN@@ C@@ Y@@ S@@ TY@@ LE@@ ] = data@@ .@@ curr@@ enc@@ y@@ Pat@@ tern@@ ; n@@ umber@@ Pat@@ tern@@ s@@ [@@ java.text.@@ Number@@ Format@@ .@@ P@@ ER@@ C@@ EN@@ T@@ S@@ TY@@ LE@@ ] = data@@ .@@ per@@ c@@ ent@@ Pat@@ tern@@ ; n@@ umber@@ Pat@@ tern@@ s@@ [@@ java.text.@@ Number@@ Format@@ .@@ IN@@ TE@@ GE@@ RS@@ TY@@ LE@@ ] = data@@ .@@ int@@ eg@@ er@@ Pat@@ tern@@ ; java.text.@@ Dec@@ imal@@ Format@@ S@@ y@@ m@@ b@@ ol@@ s s@@ y@@ m@@ b@@ ol@@ s = java.text.@@ Dec@@ imal@@ Format@@ S@@ y@@ m@@ b@@ ol@@ s.get@@ Instance@@ (d@@ es@@ i@@ re@@ d@@ Loc@@ ale@@ ); int e@@ n@@ try = (@@ ch@@ o@@ ic@@ e == (@@ java.text.@@ Number@@ Format@@ .@@ IN@@ TE@@ GE@@ RS@@ TY@@ LE@@ )) ? java.text.@@ Number@@ Format@@ .@@ N@@ U@@ M@@ B@@ E@@ RS@@ TY@@ L@@ E : ch@@ o@@ i@@ ce@@ ; java.text.@@ Dec@@ imal@@ For@@ ma@@ t n@@ umber@@ For@@ ma@@ t = new java.text.@@ Dec@@ imal@@ Format@@ (@@ n@@ umber@@ Pat@@ tern@@ s@@ [@@ e@@ n@@ try@@ ]@@ , s@@ y@@ m@@ b@@ ol@@ s); if (@@ ch@@ o@@ ic@@ e@@ I@@ s@@ N@@ um@@ e@@ ed@@ ) == (@@ java.text.@@ Number@@ Format@@ .@@ IN@@ TE@@ GE@@ RS@@ TY@@ LE@@ ) { n@@ umber@@ Format@@ .set@@ Ma@@ x@@ im@@ um@@ F@@ r@@ action@@ Dig@@ it@@ s(@@ 0); n@@ umber@@ Format@@ .set@@ Dec@@ imal@@ Se@@ par@@ ator@@ Al@@ w@@ ay@@ s@@ S@@ ho@@ wn@@ (@@ false@@ ); n@@ umber@@ Format@@ .set@@ Par@@ se@@ Integ@@ er@@ On@@ ly@@ (@@ true@@ ); } else if (@@ ch@@ o@@ ic@@ e == (@@ java.text.@@ Number@@ Format@@ .@@ C@@ UR@@ R@@ EN@@ C@@ Y@@ S@@ TY@@ L@@ E@@ )) { n@@ umber@@ Format@@ .@@ ad@@ j@@ ust@@ For@@ Curr@@ enc@@ y@@ Default@@ F@@ r@@ action@@ Dig@@ it@@ s(); } return n@@ umber@@ For@@ ma@@ t@@ ; }
@java.lang.Override public boolean set@@ Pri@@ or@@ ity@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int p@@ ri@@ or@@ ity@@ ) { com.android.@@ bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Ser@@ vice ser@@ vice = get@@ Service@@ (); if (@@ ser@@ vice == null@@ ) { return false@@ ; } service@@ .set@@ Pri@@ or@@ ity@@ (@@ device@@ , p@@ ri@@ or@@ ity@@ ); return true@@ ; }
@java.lang.Override protected boolean start@@ () { if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ TAG, "@@ start@@ ()@@ "); } if ((m@@ Service@@ St@@ ar@@ ted@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ TAG, "@@ start@@ ()@@ "); } if ((m@@ Reg@@ read@@ y@@ ) != null@@ ) { m@@ Session@@ Statu@@ s@@ Handle@@ r = new com.android.@@ bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ Map@@ Service@@ Message@@ Handler@@ (@@ lo@@ o@@ per@@ ); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ AC@@ CE@@ SS@@ _RE@@ P@@ L@@ Y@@ ); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ Adap@@ ter.@@ AC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _@@ AC@@ L@@ _@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _S@@ D@@ P@@ _RE@@ C@@ OR@@ D@@ ); fil@@ ter.@@ add@@ Action@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ AC@@ TION@@ _S@@ H@@ O@@ W@@ _M@@ AP@@ S@@ _S@@ E@@ T@@ T@@ ING@@ S@@ ); fil@@ ter.@@ add@@ Action@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ US@@ ER@@ _C@@ ON@@ FI@@ R@@ M@@ _@@ TI@@ ME@@ O@@ U@@ T_@@ AC@@ TION@@ ); android.content.@@ Intent@@ Fil@@ ter fil@@ ter@@ Message@@ S@@ ent = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter@@ Message@@ S@@ ent.@@ add@@ Action@@ (@@ Bluetooth@@ Map@@ Content@@ Ob@@ server.@@ AC@@ TION@@ _M@@ E@@ SS@@ A@@ G@@ E_@@ S@@ EN@@ T@@ ); try { fil@@ ter@@ Message@@ S@@ ent.@@ add@@ Data@@ Type@@ ("@@ message@@ /@@ *@@ "); } catch (android.@@ content.@@ Intent@@ Fil@@ ter.@@ M@@ al@@ for@@ m@@ ed@@ M@@ im@@ e@@ Type@@ Exception e) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ TAG, "@@ st@@ ar@@ ted@@ "); m@@ im@@ e type@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@
private synchronized void close@@ Service@@ () { if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ TAG, "@@ close@@ Service@@ ()@@ "); } if ((m@@ Bluetooth@@ M@@ n@@ s@@ Ob@@ ex@@ Client@@ ) != null@@ ) { m@@ Bluetooth@@ M@@ n@@ s@@ Ob@@ ex@@ C@@ li@@ ent.@@ sh@@ u@@ t@@ do@@ wn@@ (); m@@ Bluetooth@@ M@@ n@@ s@@ Ob@@ ex@@ C@@ li@@ ent = null@@ ; } if ((m@@ M@@ as@@ In@@ stan@@ ces@@ .@@ size@@ ()) > 0) { for (@@ int i = 0, c = m@@ M@@ as@@ In@@ stan@@ ces@@ .@@ size@@ (); i < c@@ ; i++) { m@@ M@@ as@@ In@@ stan@@ ces@@ .@@ value@@ At@@ (i@@ ).@@ sh@@ u@@ t@@ do@@ wn@@ (); } m@@ M@@ as@@ In@@ stan@@ ces@@ .@@ clear@@ (); } m@@ I@@ s@@ W@@ ait@@ ing@@ Au@@ th@@ or@@ iz@@ ation = false@@ ; m@@ Per@@ mis@@ sion = android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ AC@@ CE@@ SS@@ _@@ UN@@ K@@ NO@@ W@@ N@@ ; set@@ State@@ (@@ Bluetooth@@ Map@@ .@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); if ((m@@ W@@ ake@@ Lock) != null@@ ) { m@@ W@@ ake@@ Lock@@ .@@ re@@ le@@ ase@@ (); if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ V@@ ER@@ B@@ O@@ SE@@ ) { android.util.Log.@@ v@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ TAG, "@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ I@@ E_@@ W@@ A@@ I@@ I@@ T_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ "); } m@@ W@@ ake@@ Lock@@ .@@ re@@ le@@ ase@@ (); if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ V@@ ER@@ B@@ O@@ SE@@ ) { m@@ W@@ ake@@ Lock@@ .@@ re@@ le@@ ase@@ (); if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ V@@ ER@@ B@@ O@@ SE@@ ) { android.util.Log.@@ v@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ TAG, "@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ E E E W@@ A@@ A@@ A@@ A@@ A@@ A@@ A@@ , m@@ W@@ a@@ i@@ t is "); } m@@ W@@ ake@@ Lock@@ .@@ re@@ le@@ ase@@ (); if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ V@@ ER@@ B@@ O@@ SE@@ ) { m@@ W@@ ake@@ Lock@@ .@@ re@@ le@@ ase@@ (); } m@@ W@@ ake@@ Lock@@ .@@ re@@ le@@ ase@@ (); if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ V@@ ER@@ B@@ O@@ SE@@ ) {
void set@@ Pri@@ or@@ ity@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int p@@ ri@@ or@@ ity@@ ) { Setting@@ s.@@ G@@ lo@@ b@@ al.@@ put@@ Int@@ (get@@ Content@@ Res@@ ol@@ ver@@ (), Setting@@ s.@@ G@@ lo@@ b@@ al@@ .get@@ Bluetooth@@ Map@@ Pri@@ or@@ ity@@ Key@@ (@@ device@@ .get@@ Address@@ ()@@ ), p@@ ri@@ or@@ ity@@ ); if (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ V@@ ER@@ B@@ O@@ SE@@ ) { android.util.Log.@@ v@@ (com.android.bluetooth.@@ m@@ ap.@@ Bluetooth@@ Map@@ Service.@@ TAG, ((@@ ("@@ set@@ Pri@@ or@@ ity@@ () p@@ ri@@ or@@ it@@ y " + device@@ ) + " = ") + p@@ ri@@ or@@ ity@@ )); } }
@java.lang.Override public void on@@ C@@ li@@ ck@@ () { boolean tr@@ ac@@ ing@@ O@@ n = com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ is@@ Tr@@ ac@@ ing@@ On@@ (); android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s pre@@ f@@ s = android.@@ pre@@ ference@@ .@@ Pre@@ ference@@ Manager.@@ get@@ Default@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ (@@ this@@ ); pre@@ fs.@@ ed@@ it@@ ().@@ put@@ Boolean@@ (get@@ String(@@ R.@@ str@@ ing.@@ pre@@ f@@ _@@ key@@ _@@ tr@@ ac@@ ing@@ _@@ on@@ ), (!@@ tr@@ ac@@ ing@@ On@@ )).@@ app@@ ly@@ (); if (@@ tr@@ ac@@ ing@@ On@@ ) { android.@@ widget@@ .@@ To@@ ast.@@ m@@ ake@@ Text@@ (get@@ Application@@ Context@@ (), get@@ String(@@ R.@@ str@@ ing.@@ st@@ op@@ p@@ ing@@ _@@ trace@@ ), To@@ ast.@@ L@@ EN@@ G@@ TH@@ _S@@ H@@ O@@ RT@@ ).@@ sho@@ w@@ (); com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ at@@ r@@ ace@@ D@@ um@@ p@@ And@@ S@@ end@@ In@@ B@@ ack@@ g@@ round@@ (@@ this@@ ); } else { android.@@ widget@@ .@@ To@@ ast.@@ m@@ ake@@ Text@@ (get@@ Application@@ Context@@ (), get@@ String(@@ R.@@ str@@ ing.@@ start@@ ing@@ _@@ trace@@ ), To@@ ast.@@ L@@ EN@@ G@@ TH@@ _S@@ H@@ O@@ RT@@ ).@@ sho@@ w@@ (); } com.android.@@ trace@@ ur@@ .@@ Recei@@ ver@@ .@@ update@@ Tr@@ ac@@ ing@@ (@@ this@@ , true@@ )); com.android.@@ trace@@ ur@@ .@@ Q@@ s@@ Service.@@ request@@ List@@ en@@ ing@@ State@@ (@@ this@@ ); update@@ (); }
@java.lang.Override public boolean on@@ Pre@@ ference@@ C@@ li@@ ck@@ (android.@@ support.@@ v@@ 7@@ .@@ pre@@ ference@@ .@@ Pre@@ feren@@ ce pre@@ ference@@ ) { com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ at@@ r@@ ace@@ D@@ um@@ p@@ And@@ S@@ end@@ In@@ B@@ ack@@ g@@ round@@ (get@@ Context@@ ()); return true@@ ; }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s pre@@ f@@ s = android.@@ pre@@ ference@@ .@@ Pre@@ ference@@ Manager.@@ get@@ Default@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ (@@ context@@ ); if (@@ Int@@ ent.@@ AC@@ TION@@ _@@ B@@ O@@ O@@ O@@ O@@ T_@@ C@@ O@@ M@@ P@@ LE@@ TE@@ D@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ update@@ Tr@@ ac@@ ing@@ (@@ context@@ , false@@ ); com.android.@@ trace@@ ur@@ .@@ Q@@ s@@ Service.@@ request@@ List@@ en@@ ing@@ State@@ (@@ context@@ ); } else if (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ F@@ OR@@ C@@ E_@@ U@@ P@@ D@@ AT@@ E_@@ AC@@ TION@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ update@@ Tr@@ ac@@ ing@@ (@@ context@@ , true@@ ); } else if (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ D@@ U@@ M@@ P@@ _@@ AC@@ TION@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { con@@ text.@@ send@@ B@@ roadcast@@ (@@ new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _C@@ LO@@ S@@ E_@@ S@@ Y@@ S@@ TE@@ M@@ _@@ DI@@ A@@ LO@@ G@@ S@@ )); if (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ is@@ Tr@@ ac@@ ing@@ On@@ ()) { com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ at@@ r@@ ace@@ D@@ um@@ p@@ And@@ S@@ end@@ In@@ B@@ ack@@ g@@ round@@ (@@ context@@ ); } else { con@@ text.@@ start@@ Activity@@ (@@ new android.content.@@ Intent@@ (@@ context@@ , com.android.@@ trace@@ ur@@ .@@ M@@ ain@@ Activity@@ .@@ class@@ ).set@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ )); } } else if (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ O@@ P@@ EN@@ _@@ AC@@ TION@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { con@@ text.@@ send@@ B@@ roadcast@@ (@@ new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _C@@ LO@@ S@@ E_@@ S@@ TE@@ M@@ _@@ DI@@ A@@ LO@@ G@@ S@@ )); con@@ text.@@ start@@ Activity@@ (@@ new android.content.@@ Intent@@ (@@ context@@ , com.android.@@ trace@@ ur@@ .@@ M@@ ain@@ Activity@@ .@@ class@@ ).set@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ )); } }
public static void at@@ r@@ ace@@ D@@ um@@ p@@ And@@ S@@ end@@ In@@ B@@ ack@@ g@@ round@@ (@@ final android.content.@@ Context context@@ ) { new android.os.@@ As@@ ync@@ Task@@ <@@ java.lang.@@ V@@ o@@ id, java.lang.@@ V@@ o@@ id@@ >@@ () { @java.lang.Override protected java.lang.@@ V@@ o@@ id do@@ In@@ B@@ ack@@ g@@ round@@ (java.lang.@@ V@@ o@@ id@@ .@@ . param@@ s) { java.lang.String for@@ ma@@ t = "@@ y@@ -@@ M@@ -@@ dd@@ -@@ H@@ -@@ m@@ -@@ ss@@ "; java.lang.String no@@ w = new java.text.@@ Sim@@ ple@@ Date@@ Format@@ (@@ for@@ mat@@ , java.util.@@ Loc@@ a@@ le.@@ US@@ )@@ .@@ for@@ mat@@ (@@ new java.util.@@ Date@@ ()); java.io.File fi@@ le = new java.io.File@@ (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ TR@@ AC@@ E_@@ DI@@ RE@@ C@@ T@@ OR@@ Y@@ , java.lang.String@@ .@@ for@@ mat@@ ("@@ trace@@ -@@ %@@ s@@ -@@ %@@ s.@@ c@@ trace@@ ", Build@@ .@@ B@@ O@@ AR@@ D@@ , Build@@ .@@ ID@@ , no@@ w@@ )); com.android.@@ trace@@ ur@@ .@@ File@@ S@@ end@@ er.@@ po@@ st@@ Cap@@ t@@ ure@@ No@@ t@@ if@@ ic@@ ation@@ (@@ context@@ , file@@ ); com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ at@@ r@@ ace@@ D@@ um@@ p@@ (file@@ ); com.android.@@ trace@@ ur@@ .@@ File@@ S@@ end@@ er.@@ po@@ st@@ No@@ t@@ if@@ ic@@ ation@@ (@@ context@@ , fi@@ le@@ ); return null@@ ; } }@@ .@@ exec@@ ute@@ (); }
@java.lang.Override protected boolean st@@ op@@ () { if (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ V@@ ER@@ B@@ O@@ SE@@ ) { android.util.Log.@@ v@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ TAG, "@@ st@@ op@@ ()@@ "); } m@@ Session@@ Statu@@ s@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ S@@ H@@ UT@@ D@@ O@@ W@@ N@@ ).@@ send@@ To@@ Target@@ (); m@@ Handler@@ Thread@@ .@@ qu@@ it@@ S@@ a@@ f@@ el@@ y(); if ((m@@ Cont@@ act@@ Chang@@ e@@ Ob@@ ser@@ ver@@ ) == null@@ ) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ TAG, "@@ st@@ op@@ ()@@ "); } m@@ Session@@ Statu@@ s@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ S@@ H@@ UT@@ D@@ O@@ W@@ N@@ ).@@ send@@ To@@ Target@@ (); m@@ Handler@@ Thread@@ .@@ qu@@ it@@ S@@ a@@ f@@ el@@ y(); if ((m@@ Cont@@ act@@ Chang@@ e@@ Ob@@ ser@@ ver@@ ) == null@@ ) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ TAG, "@@ st@@ op@@ ()@@ "); un@@ reg@@ is@@ ter wh@@ e@@ n re@@ cei@@ ve@@ r i@@ t is not register@@ ed@@ "); return true@@ ; } un@@ register@@ Recei@@ ver@@ (m@@ P@@ b@@ ap@@ Recei@@ ver@@ ); get@@ Content@@ Res@@ ol@@ ver@@ ().@@ un@@ register@@ Content@@ Ob@@ ser@@ ver@@ (m@@ Cont@@ act@@ Chang@@ e@@ Ob@@ ser@@ ver@@ ); m@@ Cont@@ act@@ Chang@@ e@@ Ob@@ ser@@ ve@@ r = null@@ ; return true@@ ; }
@@@ android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing void check@@ Or@@ Get@@ Phone@@ b@@ ook@@ Permission@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e state@@ M@@ ach@@ in@@ e) { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = state@@ M@@ ach@@ in@@ e.get@@ Remote@@ Device@@ (); int per@@ mis@@ sion = device@@ .get@@ Phone@@ b@@ ook@@ Access@@ Permission@@ (); if (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ TAG, ("@@ check@@ Or@@ Get@@ Phone@@ b@@ ook@@ Permission@@ () = " + per@@ mission@@ )); } if (@@ per@@ mis@@ sion == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ AC@@ CE@@ SS@@ _@@ AL@@ LO@@ W@@ E@@ D@@ )) { state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e.@@ A@@ UT@@ H@@ OR@@ I@@ Z@@ E@@ D@@ ); } else if (@@ per@@ mis@@ sion == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ AC@@ CE@@ SS@@ _RE@@ J@@ EC@@ TE@@ D@@ )) { state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e.@@ RE@@ J@@ EC@@ TE@@ D@@ ); } else { android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ AC@@ CE@@ SS@@ _RE@@ Q@@ UE@@ S@@ T@@ ); int@@ ent.@@ set@@ Class@@ Name@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ AC@@ CE@@ SS@@ _@@ A@@ UT@@ H@@ OR@@ I@@ TY@@ _P@@ AC@@ K@@ A@@ G@@ E, com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ AC@@ CE@@ SS@@ _@@ A@@ UT@@ H@@ OR@@ I@@ TY@@ _C@@ LA@@ SS@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ AC@@ CE@@ SS@@ _RE@@ Q@@ UE@@ ST_@@ TYP@@ E, Bluetooth@@ Device@@ .@@ RE@@ Q@@ UE@@ ST_@@ TYP@@ E_@@ P@@ H@@ ON@@ E@@ B@@ O@@ O@@ K@@ _@@ AC@@ CE@@ SS@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, device@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _P@@ AC@@ K@@ A@@ G@@ E_@@ N@@ AM@@ E, this@@ .get@@ Package@@ Name@@ ()); this@@ .@@ send@@ Or@@ der@@ ed@@ B@@ roadcast@@ (@@ int@@ ent@@ , com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ ); if (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ V@@ ER@@ B@@ O@@ SE@@ ) { android.util.Log.@@ v@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ TAG, ("@@ check@@ Or@@ der@@ ing for au@@ th@@ or@@ iz@@ ation for connec@@ tion f@@ rom@@ : " + device@@ )); } android.os.@@ Mess@@ age ms@@ g = m@@ Session@@ Statu@@ s@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ US@@ ER_@@ TI@@ ME@@ O@@ UT@@ , state@@ M@@ ach@@ ine@@ ); m@@ Session@@ Statu@@ s@@ Handler.@@ send@@ Message@@ D@@ el@@ ay@@ ed@@ (m@@ s@@ g@@ , com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ US@@ ER@@ _C@@ ON@@ FI@@ R@@ M@@ _@@ TI@@ ME@@ O@@ U@@ T_@@ V@@ AL@@ U@@ T_@@ V@@ AL@@ U@@ T_@@ V@@ AL@@ U@@ E); } }
public boolean is@@ V@@ ide@@ o@@ Telephony@@ A@@ va@@ il@@ able@@ (@@ int sub@@ Id@@ ) { try { return get@@ I@@ Telephony@@ ().@@ is@@ V@@ ide@@ o@@ Telephony@@ A@@ va@@ il@@ able@@ (s@@ u@@ b@@ Id@@ ); } catch (android.os.@@ Remote@@ Exception ex@@ ) { return false@@ ; } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception ex@@ ) { return false@@ ; } }
public boolean is@@ W@@ if@@ i@@ Call@@ ing@@ A@@ va@@ il@@ able@@ () { return is@@ W@@ if@@ i@@ Call@@ ing@@ A@@ va@@ il@@ able@@ (@@ Sub@@ s@@ cription@@ Manager.@@ DE@@ FA@@ UL@@ T_@@ S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _@@ ID@@ ); }
public boolean is@@ W@@ if@@ i@@ Call@@ ing@@ A@@ va@@ il@@ able@@ (@@ int sub@@ Id@@ ) { try { return get@@ I@@ Telephony@@ ().@@ is@@ W@@ if@@ i@@ Call@@ ing@@ A@@ va@@ il@@ able@@ (s@@ u@@ b@@ Id@@ ); } catch (android.os.@@ Remote@@ Exception ex@@ ) { return false@@ ; } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception ex@@ ) { return false@@ ; } }
public boolean is@@ V@@ ol@@ te@@ A@@ va@@ il@@ able@@ () { return is@@ V@@ ol@@ te@@ A@@ va@@ il@@ able@@ (@@ Sub@@ s@@ cription@@ Manager.@@ DE@@ FA@@ UL@@ T_@@ S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _@@ ID@@ ); }
public boolean is@@ Im@@ s@@ Reg@@ ister@@ ed@@ () { return is@@ Im@@ s@@ Reg@@ ister@@ ed@@ (@@ Sub@@ s@@ cription@@ Manager.@@ DE@@ FA@@ UL@@ T_@@ S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _@@ I@@ D@@ ); }
public boolean is@@ V@@ ol@@ te@@ A@@ va@@ il@@ able@@ (@@ int sub@@ Id@@ ) { try { return get@@ I@@ Telephony@@ ().@@ is@@ V@@ ol@@ te@@ A@@ va@@ il@@ able@@ (s@@ u@@ b@@ Id@@ ); } catch (android.os.@@ Remote@@ Exception | java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception ex@@ ) { return false@@ ; } }
public boolean is@@ V@@ ide@@ o@@ Telephony@@ A@@ va@@ il@@ able@@ () { return is@@ V@@ ide@@ o@@ Telephony@@ A@@ va@@ il@@ able@@ (@@ Sub@@ s@@ cription@@ Manager.@@ DE@@ FA@@ UL@@ T_@@ S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _@@ I@@ D@@ ); }
@@@ android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ T@@ ec@@ h public int get@@ Im@@ s@@ Reg@@ T@@ ec@@ h@@ no@@ log@@ y@@ For@@ M@@ m@@ T@@ el@@ (@@ int sub@@ Id@@ ) { try { return get@@ I@@ Telephony@@ ().get@@ Im@@ s@@ Reg@@ T@@ ec@@ h@@ no@@ log@@ y@@ For@@ M@@ m@@ T@@ el@@ (s@@ u@@ b@@ Id@@ ); } catch (android.os.@@ Remote@@ Exception ex@@ ) { return android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ Imp@@ l@@ Bas@@ e.@@ RE@@ G@@ IS@@ TR@@ AT@@ ION@@ _@@ TE@@ CH@@ _N@@ ON@@ E@@ ; } }
@java.lang.Override public void on@@ Call@@ State@@ Changed@@ (@@ int state@@ , java.lang.String in@@ com@@ ing@@ Number@@ ) { if (com.android.@@ phon@@ e.@@ Mo@@ b@@ ile@@ Network@@ Setting@@ s.@@ Mo@@ b@@ ile@@ Network@@ F@@ r@@ ag@@ m@@ ent.@@ D@@ B@@ G) com.android.@@ phon@@ e.@@ Mo@@ b@@ ile@@ Network@@ Setting@@ s.@@ Mo@@ b@@ ile@@ Network@@ F@@ r@@ ag@@ m@@ ent.@@ log@@ (("@@ on@@ Call@@ State@@ Changed@@ : state@@ =@@ " + state@@ )); boolean en@@ able@@ d = ((@@ (m@@ Telephony@@ Manager.@@ get@@ Call@@ State@@ ()) == (android.@@ telephony.@@ Telephony@@ Manager.@@ C@@ AL@@ L@@ _@@ STATE_@@ ID@@ LE@@ )) && (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ is@@ Non@@ T@@ ty@@ Or@@ T@@ ty@@ On@@ V@@ ol@@ te@@ Enabled@@ (get@@ Activity@@ ().get@@ Application@@ Context@@ ())); android.@@ pre@@ ference@@ .@@ Pre@@ feren@@ ce pre@@ f = get@@ Pre@@ ference@@ S@@ creen@@ ().@@ find@@ Pre@@ ference@@ (com.android.@@ phon@@ e.@@ Mo@@ b@@ ile@@ Network@@ Setting@@ s.@@ Mo@@ b@@ ile@@ Network@@ F@@ r@@ ag@@ m@@ ent.@@ B@@ UT@@ T@@ ON@@ _@@ 4@@ G_@@ L@@ T@@ E_@@ KE@@ Y@@ ); if (p@@ re@@ f != null@@ ) pre@@ f@@ .set@@ Enabled@@ ((@@ en@@ able@@ d && (@@ has@@ Ac@@ tive@@ Sub@@ s@@ cription@@ s@@ ()))); update@@ V@@ ide@@ o@@ Call@@ State@@ (); }
private void st@@ op@@ Service@@ () throw@@ s java.util.@@ concurrent.@@ Time@@ out@@ Exception { android.content.@@ Int@@ ent st@@ op@@ Int@@ ent = new android.content.@@ Intent@@ (android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ (), com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ .@@ class@@ ); st@@ op@@ Int@@ ent.@@ put@@ Extra@@ (@@ Adap@@ ter@@ Service.@@ EX@@ TR@@ A@@ _@@ AC@@ TION@@ , Adap@@ ter@@ Service.@@ AC@@ TION@@ _S@@ ER@@ V@@ IC@@ E_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); st@@ op@@ Int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Adap@@ ter.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ F@@ ); m@@ Service@@ R@@ u@@ le.@@ start@@ Service@@ (@@ st@@ op@@ Intent@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ > arg@@ um@@ ent = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Class@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (m@@ Adap@@ ter@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )).@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ arg@@ um@@ ent.@@ c@@ ap@@ t@@ ure@@ (), e@@ q@@ (android.@@ h@@ ardwar@@ e.@@ w@@ if@@ i.@@ sup@@ plican@@ t.@@ V@@ 1@@ _@@ 0.@@ I@@ W@@ if@@ i@@ Statu@@ s.@@ S@@ EN@@ _@@ D@@ IS@@ AB@@ LE@@ D@@ , 0@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ arg@@ um@@ ent.get@@ Value@@ ().get@@ Class@@ ().get@@ Name@@ (), com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ .@@ class@@ .getName@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ arg@@ um@@ ent.get@@ Value@@ ().get@@ m@@ A@@ 2@@ d@@ p@@ Ser@@ vice = com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ .get@@ A@@ 2@@ d@@ p@@ Service@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Null@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ ); }
private void start@@ Service@@ () throw@@ s java.util.@@ concurrent.@@ Time@@ out@@ Exception { android.content.@@ Int@@ ent start@@ Int@@ ent = new android.content.@@ Intent@@ (android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ (), com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ .@@ class@@ ); start@@ Int@@ ent.@@ put@@ Extra@@ (@@ Adap@@ ter@@ Service.@@ EX@@ TR@@ A@@ _@@ AC@@ TION@@ , Adap@@ ter@@ Service.@@ AC@@ TION@@ _S@@ ER@@ V@@ IC@@ E_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); start@@ Int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Adap@@ ter.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ ); m@@ Service@@ R@@ u@@ le.@@ start@@ Service@@ (@@ start@@ Intent@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ > arg@@ um@@ ent = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Class@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (m@@ Adap@@ ter@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )).@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ arg@@ um@@ ent.@@ c@@ ap@@ t@@ ure@@ (), e@@ q@@ (@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ )); m@@ A@@ 2@@ d@@ p@@ Ser@@ vice = com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ .get@@ A@@ 2@@ d@@ p@@ Service@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ arg@@ um@@ ent.get@@ Value@@ (), m@@ A@@ 2@@ d@@ p@@ Service@@ ); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.util.@@ concurrent.@@ Time@@ out@@ Exception { android.content.@@ Int@@ ent st@@ op@@ Int@@ ent = new android.content.@@ Intent@@ (android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ (), com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .@@ class@@ ); st@@ op@@ Int@@ ent.@@ put@@ Extra@@ (@@ Adap@@ ter@@ Service.@@ EX@@ TR@@ A@@ _@@ AC@@ TION@@ , Adap@@ ter@@ Service.@@ AC@@ TION@@ _S@@ ER@@ V@@ IC@@ E_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); st@@ op@@ Int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Adap@@ ter.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ); m@@ Service@@ R@@ u@@ le.@@ start@@ Service@@ (@@ st@@ op@@ Intent@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ > arg@@ um@@ ent = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Class@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ s@@ Adap@@ ter@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ arg@@ um@@ ent.@@ c@@ ap@@ t@@ ure@@ (), e@@ q@@ (@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ arg@@ um@@ ent.get@@ Value@@ (), m@@ He@@ ad@@ set@@ Ser@@ vice = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .get@@ He@@ ad@@ set@@ Service@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Null@@ (m@@ He@@ ad@@ set@@ Service@@ ); res@@ et@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ s@@ Object@@ s@@ Factory@@ , com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ s@@ Adap@@ ter@@ Service@@ ); m@@ Current@@ De@@ vice = null@@ ; }
@org.junit.Test public void test@@ Re@@ pe@@ ated@@ En@@ able@@ Dis@@ able@@ S@@ ing@@ ly@@ () throw@@ s java.util.@@ concurrent.@@ Time@@ out@@ Exception { for (java.lang.@@ Clas@@ s pro@@ fi@@ le : m@@ Pro@@ fil@@ es) { for (@@ int i@@ t = 0; i < 5@@ ; i++) { set@@ Pro@@ file@@ State@@ (pro@@ file@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service@@ > st@@ ar@@ t = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Class@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Adap@@ ter@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service@@ Test.@@ P@@ RO@@ F@@ IL@@ E_@@ START@@ _M@@ IL@@ L@@ IS@@ ).@@ tim@@ es@@ ((@@ i@@ " + 1@@ )); on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ st@@ ar@@ t.@@ c@@ ap@@ t@@ ure@@ (), e@@ q@@ (@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ )); set@@ Pro@@ file@@ State@@ (pro@@ fi@@ le Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service@@ > st@@ o@@ p = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Class@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Adap@@ ter@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Service@@ Test.@@ P@@ RO@@ F@@ IL@@ E_@@ START@@ _M@@ IL@@ L@@ IS@@ ).@@ tim@@ es@@ ((@@ 2 * (@@ i + 1@@ ))@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ st@@ o@@ p.@@ c@@ ap@@ t@@ ure@@ (), e@@ q@@ (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ F@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ st@@ ar@@ t.get@@ Value@@ (), st@@ op@@ .get@@ Value@@ ()); } } }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.util.@@ concurrent.@@ Time@@ out@@ Exception { android.content.@@ Int@@ ent st@@ op@@ Int@@ ent = new android.content.@@ Intent@@ (android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ (), com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .@@ class@@ ); st@@ op@@ Int@@ ent.@@ put@@ Extra@@ (@@ Adap@@ ter@@ Service.@@ EX@@ TR@@ A@@ _@@ AC@@ TION@@ , Adap@@ ter@@ Service.@@ AC@@ TION@@ _S@@ ER@@ V@@ IC@@ E_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); st@@ op@@ Int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Adap@@ ter.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ); m@@ Service@@ R@@ u@@ le.@@ start@@ Service@@ (@@ st@@ op@@ Intent@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ > arg@@ um@@ ent = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Class@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ s@@ Adap@@ ter@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ arg@@ um@@ ent.@@ c@@ ap@@ t@@ ure@@ (), e@@ q@@ (@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ arg@@ um@@ ent.get@@ Value@@ (), m@@ He@@ ad@@ set@@ Ser@@ vice = com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .get@@ He@@ ad@@ set@@ Service@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Null@@ (m@@ He@@ ad@@ set@@ Service@@ ); res@@ et@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ s@@ Object@@ s@@ Factory@@ , com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ s@@ Adap@@ ter@@ Service@@ ); m@@ State@@ M@@ ach@@ in@@ es.@@ clear@@ (); m@@ Current@@ De@@ vice = null@@ ; }
public void remove@@ Pro@@ file@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ file@@ ) { android.os.@@ Mess@@ age m = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ P@@ RO@@ F@@ IL@@ E_@@ S@@ ER@@ V@@ IC@@ E_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ )); m.@@ ob@@ j@@ face@@ .@@ Adap@@ ter = pro@@ file@@ ; m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ service@@ ); }
public void add@@ Pro@@ file@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ file@@ ) { android.os.@@ Mess@@ age m = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ P@@ RO@@ F@@ IL@@ E_@@ S@@ ER@@ V@@ IC@@ E_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ )); m.@@ ob@@ j@@ Log@@ =@@ =@@ =@@ =@@ =@@ =@@ pro@@ file@@ ; m.@@ arg@@ 1 = com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ P@@ RO@@ F@@ IL@@ E_@@ RE@@ G@@ IS@@ TER@@ E@@ D@@ ; m@@ Handler.@@ send@@ Mess@@ age@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ )); }
void st@@ op@@ Pro@@ file@@ Ser@@ vices@@ () { java.lang.@@ Class@@ [] sup@@ ported@@ Pro@@ file@@ Service@@ s = com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Config.@@ get@@ Sup@@ ported@@ Pro@@ fil@@ es@@ (); if ((m@@ Run@@ ning@@ Pro@@ fil@@ es.@@ size@@ ()) > 0) { set@@ All@@ Pro@@ file@@ Service@@ State@@ s(@@ pro@@ file@@ Service@@ State@@ s, (s@@ up@@ ported@@ Pro@@ file@@ Ser@@ vices@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ); } debu@@ g@@ Log@@ ("@@ Pro@@ file@@ s to st@@ o@@ p or al@@ read@@ y st@@ op@@ p@@ ed@@ .@@ "); }
public void on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ )) && (@@ st@@ ate != (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ))) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG, ("@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ : Un@@ handle@@ d " + (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ name@@ For@@ State@@ (@@ state@@ )))); return@@ ; } android.os.@@ Mess@@ age m = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ P@@ RO@@ F@@ IL@@ E_@@ S@@ ER@@ V@@ IC@@ E_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); m.@@ ob@@ j = pro@@ fi@@ le@@ ; m.@@ arg@@ 1 = state@@ ; m@@ Handler.@@ send@@ Message@@ (m@@ ); }
@java.lang.Override protected void dum@@ p@@ (java.io.FileDescriptor fd, java.io.@@ P@@ r@@ int@@ Wri@@ ter wri@@ ter@@ , java.lang.String[] arg@@ s) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ D@@ U@@ M@@ P@@ , com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG@@ ); if ((@@ args.@@ length) == 0) { wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ luetoo@@ th dum@@ p in AP@@ P S@@ ER@@ V@@ IC@@ E@@ S@@ , se@@ e bluetooth@@ _@@ man@@ age@@ r sec@@ tion@@ .@@ "); wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ luetoo@@ th --@@ p@@ r@@ int arg@@ um@@ ent for dum@@ ps@@ y@@ s di@@ re@@ c@@ t f@@ ro@@ m Adap@@ ter@@ Service@@ .@@ "); return@@ ; } ver@@ bo@@ se@@ Log@@ (("@@ B@@ on@@ de@@ d arg@@ ument@@ s, ch@@ ec@@ k for pro@@ to@@ bu@@ f output@@ : " + (android.@@ text.@@ Text@@ Utils.@@ j@@ o@@ in@@ (@@ arg@@ s@@ )))); if (@@ arg@@ s@@ [0@@ ]@@ .@@ start@@ sWith@@ ("@@ --@@ pro@@ to@@ ")) { if (@@ arg@@ s@@ [0@@ ]@@ .@@ equal@@ s("@@ --@@ pro@@ to@@ -@@ b@@ in@@ ")) { dum@@ p@@ M@@ et@@ ri@@ c@@ s(@@ fd@@ ); } else if (@@ arg@@ s@@ [0@@ ]@@ .@@ equal@@ s("@@ --@@ pro@@ to@@ -@@ java@@ -@@ b@@ in@@ ")) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Bluetooth@@ Pro@@ to.@@ Bluetooth@@ Lo@@ g m@@ et@@ ri@@ c@@ s = new com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Bluetooth@@ Pro@@ to.@@ Bluetooth@@ Log@@ (); byte@@ [] m@@ et@@ ri@@ c@@ s@@ Byte@@ s = android.util.@@ B@@ ase@@ 6@@ 4@@ .@@ en@@ code@@ (m@@ et@@ ri@@ c@@ s.@@ to@@ ByteArray@@ (), B@@ ase@@ 6@@ 4@@ .@@ DE@@ FA@@ UL@@ T@@ ); android.util.Log.@@ w@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG, ("@@ B@@ ad dum@@ p@@ , e@@ mp@@ t@@ y m@@ et@@ ri@@ c@@ s siz@@ e is " + (m@@ et@@ ri@@ c@@ s@@ By@@ t@@ es.@@ length@@ ))); try (@@ java.io.File@@ Output@@ Stream pro@@ to@@ O@@ u@@ t = new java.io.File@@ Output@@ Stream@@ (@@ fd@@ )) { pro@@ to@@ O@@ u@@ t.@@ write@@ (m@@ et@@ ri@@ c@@ s@@ Bytes@@ ); } catch (java.io.IOException e) { error@@ Log@@ ("@@ Faile@@ d to wri@@ t@@ e J@@ av@@ a pro@@ to@@ bu@@ f to fi@@ le des@@ criptor@@ . } } return@@ ; } wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ on@@ de@@ vices@@ : for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice : get@@ B@@ ond@@ ed@@ De@@ vices@@ ()) { wri@@ ter.@@ p@@ r@@ int@@ ln@@ ((@@ " + (@@ device@@ .get@@ Address@@ ())) + " [@@ ") + (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ DE@@ V@@ IC@@ E_@@ TYP@@ E_@@ N@@ AM@@ E@@ S@@ [@@ device@@ .get@@ Type@@ ()@@ ]@@ )) + " ") + (@@ device@@ .getName@@ ()))); } java.lang.String@@ Builder s@@ b = new java.lang.String@@ Builder@@ (); for (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ fi@@ le : pro@@ fi@@ le : m@@ Reg@@ ister@@ ed@@ Pro@@ file@@ s) { pro@@ file.@@ dum@@ p@@ (s@@ b@@ ); } wri@@ ter.@@ write@@ (s@@ b.@@ toString@@ ()); wri@@ ter.@@ f@@ lu@@ sh@@ (); dum@@ p@@ Native@@ (@@ fd, arg@@ s); }
void register@@ Server@@ Socket@@ (java.lang.String s@@ ocket@@ Name@@ ) { if ((m@@ Server@@ Socket@@ ) == null@@ ) { int file@@ Des@@ c@@ ; final java.lang.String f@@ ull@@ Socket@@ Name = (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ Z@@ y@@ go@@ te@@ Ser@@ ver.@@ AN@@ D@@ RO@@ ID@@ _S@@ O@@ C@@ KE@@ T_@@ P@@ RE@@ FI@@ X@@ ) + s@@ ocket@@ Name@@ ; try { java.lang.String en@@ v = java.lang.@@ System@@ .get@@ en@@ v@@ (f@@ ull@@ Socket@@ Name); file@@ Des@@ c = java.lang.Integ@@ er.@@ parse@@ Int@@ (@@ en@@ v@@ ); } catch (java.lang.@@ Runtime@@ Exception ex@@ ) { throw new java.lang.@@ RuntimeException@@ ((@@ f@@ ull@@ Socket@@ Name + un@@ set or in@@ va@@ li@@ d ex@@ ); } try { java.io.FileDescriptor f@@ d = new java.io.File@@ Des@@ criptor@@ (); fd@@ .set@@ Int@@ $@@ (file@@ Des@@ c@@ ); m@@ Server@@ S@@ ock@@ et = new android.net.@@ Local@@ Server@@ Socket@@ (@@ fd@@ ); m@@ Clo@@ se@@ Socket@@ F@@ d = true@@ ; } catch (java.io.IOException ex@@ ) { throw new java.lang.@@ RuntimeException@@ ((@@ ("@@ Er@@ ror b@@ ind@@ ing to loc@@ al s@@ ock@@ et '@@ " + file@@ Des@@ c@@ ) + "@@ '@@ "), ex@@ ); } } }
public static final java.lang.@@ Run@@ n@@ able ch@@ ild@@ Z@@ y@@ go@@ te@@ In@@ it@@ (@@ int target@@ Sdk@@ Version@@ , java.lang.String[] arg@@ v@@ , java.lang.@@ Class@@ Load@@ er class@@ Load@@ er@@ ) { final com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ Runtime@@ In@@ it.@@ Argument@@ s arg@@ s = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ Runtime@@ In@@ it.@@ Argument@@ s(@@ arg@@ v@@ ); return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ Runtime@@ In@@ it.@@ find@@ St@@ ati@@ c@@ M@@ ain@@ (@@ args.@@ start@@ Class@@ , args.@@ start@@ Arg@@ s, class@@ Load@@ er@@ ); }
public android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ Ch@@ ild@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s start@@ Ch@@ ild@@ Z@@ y@@ go@@ te@@ (@@ final java.lang.String process@@ Class@@ , final java.lang.String n@@ i@@ ce@@ Name, int u@@ id, int g@@ id, int@@ [] g@@ id@@ s, int run@@ time@@ Flag@@ s, int target@@ Sdk@@ Version@@ , java.lang.String se@@ Info@@ , java.lang.String ab@@ i@@ , java.lang.String in@@ stru@@ c@@ tion@@ Set@@ , java.lang.String invok@@ e@@ With@@ ) { final android.net.@@ Local@@ Socket@@ Address ser@@ ver@@ Address = new android.net.@@ Local@@ Socket@@ Address@@ (((@@ process@@ Clas@@ s + "@@ /@@ ") + (java.util.@@ U@@ U@@ U@@ U@@ ID@@ .@@ r@@ an@@ do@@ m@@ U@@ U@@ U@@ ID@@ ().@@ toString@@ ()))); final java.lang.String[] ex@@ tra@@ Arg@@ s = new java.lang.String@@ []{ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ Z@@ y@@ go@@ te@@ .@@ CH@@ IL@@ D_@@ Z@@ Y@@ G@@ O@@ T@@ E_@@ S@@ O@@ C@@ KE@@ T_@@ N@@ AM@@ E_@@ AR@@ G) + (@@ ser@@ ver@@ Addres@@ s.get@@ Name@@ ()) }; android.os.@@ Pro@@ ces@@ s.@@ Process@@ Start@@ Res@@ ult result@@ ; try { result = start@@ Vi@@ a@@ Z@@ y@@ go@@ te@@ (pro@@ cess@@ Class@@ , n@@ i@@ ce@@ Name, u@@ id, g@@ id@@ s, run@@ time@@ Flag@@ s, 0, target@@ Sdk@@ Version@@ , se@@ Info@@ , ab@@ i@@ , in@@ stru@@ c@@ tion@@ Set@@ , null@@ , invok@@ e@@ With@@ , true@@ , ex@@ tra@@ Arg@@ s); } catch (android.os.@@ Z@@ y@@ go@@ te@@ Start@@ Faile@@ d@@ E@@ x ex@@ ) { throw new java.lang.@@ RuntimeException@@ ("@@ Start@@ ing ch@@ ild@@ -@@ z@@ y@@ g@@ ot@@ e thro@@ u@@ g@@ h Z@@ y@@ g@@ ot@@ e fa@@ ile@@ d@@ ", ex@@ ); } android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s z@@ p = new android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s(@@ ser@@ ver@@ Addres@@ s, null@@ ); return new android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ Ch@@ ild@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s(@@ z@@ p@@ , result@@ ); }
void set@@ Server@@ Socket@@ (android.net.@@ Local@@ Server@@ S@@ ock@@ et s@@ ocket@@ ) { if ((m@@ Server@@ Socket@@ ) != null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ Ser@@ ve@@ r s@@ ock@@ et al@@ read@@ y s@@ pe@@ c@@ if@@ i@@ ed@@ "); } m@@ Server@@ S@@ ock@@ et = s@@ ocket@@ ; m@@ Clo@@ se@@ Socket@@ F@@ d = false@@ ; }
@java.lang.Override public vo@@ g@@ ar.@@ command@@ s.@@ V@@ m@@ Command@@ Builder new@@ V@@ m@@ Command@@ Build@@ er(@@ vo@@ g@@ ar.@@ Ac@@ tion action@@ , java.io.File work@@ ing@@ Directory@@ ) { java.util.List<@@ java.lang.String> vm@@ Com@@ man@@ d = new java.util.ArrayList<@@ java.lang.String@@ >(); com.google.common.collect.@@ I@@ ter@@ ab@@ l@@ es.@@ add@@ All@@ (@@ vm@@ Command@@ , run@@ .@@ invok@@ e@@ With@@ ()); vm@@ Command@@ .@@ add(@@ run@@ .@@ vm@@ Command@@ ); vo@@ g@@ ar.@@ command@@ s.@@ V@@ m@@ Command@@ Builder vm@@ Command@@ Builder = new vo@@ g@@ ar.@@ command@@ s.@@ V@@ m@@ Command@@ Build@@ er(@@ run@@ .@@ log@@ ).@@ en@@ v@@ ("@@ AN@@ D@@ RO@@ ID@@ _@@ DA@@ TA@@ ", run@@ .get@@ Android@@ Data@@ Path@@ ()).@@ work@@ ing@@ Directory@@ (@@ work@@ ing@@ Directory@@ ).@@ vm@@ Command@@ (@@ vm@@ Command@@ ).@@ vm@@ Arg@@ s@@ (("@@ -@@ D@@ us@@ er.@@ ho@@ me@@ =@@ " + (@@ run@@ .@@ device@@ User@@ Ho@@ me@@ ))@@ ).@@ max@@ Length@@ (@@ 4@@ 0@@ 9@@ 6@@ ); if ((@@ run@@ .@@ debu@@ g@@ P@@ ort@@ ) != null@@ ) { vm@@ Command@@ Builder.@@ vm@@ Arg@@ s("@@ -@@ X@@ comp@@ il@@ er@@ -@@ option@@ ", "@@ --@@ debu@@ gg@@ able@@ ", "@@ -@@ X@@ jdw@@ p@@ Provider@@ :@@ int@@ er@@ n@@ al@@ ", (("@@ -@@ X@@ jdw@@ p@@ Option@@ s@@ :@@ trans@@ port@@ =@@ d@@ t@@ _@@ s@@ ocket@@ ,@@ add@@ ress@@ =@@ " + (@@ run@@ .@@ debu@@ g@@ P@@ ort@@ )) + "@@ ,@@ ser@@ ver@@ =@@ y@@ ,@@ su@@ s@@ pend@@ =@@ y@@ ")); } if ((@@ mode@@ Id@@ ) == (@@ vo@@ g@@ ar.@@ Mode@@ Id@@ .@@ AP@@ P@@ _P@@ RO@@ CE@@ SS@@ )) { return vm@@ Command@@ Builder.@@ vm@@ Arg@@ s(@@ action@@ .get@@ User@@ Dir@@ ().get@@ Path@@ ()@@ )@@ .@@ class@@ path@@ Vi@@ a@@ Property@@ (@@ true@@ ); } vm@@ Command@@ Builder.@@ vm@@ Arg@@ s@@ (("@@ -@@ D@@ us@@ er.@@ name@@ =@@ " + (@@ device@@ User@@ Name@@ Sup@@ pli@@ er.get@@ ()@@ ))@@ ).@@ vm@@ Arg@@ s("@@ -@@ D@@ us@@ er.@@ lan@@ gu@@ age@@ =@@ en@@ ").@@ vm@@ Arg@@ s("@@ -@@ D@@ us@@ er.@@ reg@@ i@@ on@@ =@@ US@@ "); if ((@@ !@@ (@@ run@@ .@@ b@@ en@@ ch@@ m@@ ark@@ )) && (@@ run@@ .@@ check@@ J@@ n@@ i@@ )) { vm@@ Command@@ Builder.@@ vm@@ Arg@@ s("@@ -@@ X@@ check@@ :@@ j@@ n@@ i@@ "); } vm@@ Command@@ Builder.@@ vm@@ Arg@@ s("@@ -@@ X@@ j@@ n@@ ig@@ ref@@ li@@ m@@ it@@ :@@ 2@@ 00@@ 0@@ "); return vm@@ Command@@ Builder@@ ; }
public void run@@ In@@ strument@@ () throw@@ s java.lang.Exception { com.android.@@ command@@ s.@@ am@@ .@@ In@@ str@@ um@@ ent in@@ str@@ um@@ ent = new com.android.@@ command@@ s.@@ am@@ .@@ In@@ strument@@ (m@@ A@@ m@@ , m@@ P@@ m@@ ); java.lang.String opt@@ ; while ((@@ op@@ t = next@@ Option@@ ()) != null@@ ) { if (@@ op@@ t.@@ equal@@ s("@@ -@@ p@@ ")) { in@@ str@@ um@@ ent.@@ pro@@ file@@ File = next@@ Arg@@ Requ@@ i@@ re@@ d@@ (); } else if (@@ op@@ t.@@ equal@@ s("@@ -@@ w@@ ")) { in@@ str@@ um@@ ent.@@ w@@ a@@ i@@ t = true@@ ; } else if (@@ op@@ t.@@ equal@@ s("@@ -@@ r@@ ")) { in@@ str@@ um@@ ent.@@ raw@@ Mod@@ e = true@@ ; } else if (@@ op@@ t.@@ equal@@ s("@@ -@@ m@@ ")) { in@@ str@@ um@@ ent.@@ pro@@ to = true@@ ; } else if (@@ op@@ t.@@ equal@@ s("@@ -@@ e@@ ")) { final java.lang.String arg@@ K@@ ey = next@@ Arg@@ Requ@@ i@@ re@@ d@@ (); final java.lang.String arg@@ Value = next@@ Arg@@ Requ@@ i@@ re@@ d@@ (); in@@ str@@ um@@ ent.@@ put@@ String(@@ arg@@ Key@@ , arg@@ Value@@ ); } else if ((@@ op@@ t.@@ equal@@ s("@@ --@@ no@@ _@@ w@@ in@@ do@@ w@@ _@@ an@@ im@@ ation@@ ")) || (@@ op@@ t.@@ equal@@ s("@@ --@@ no@@ -@@ an@@ im@@ ation@@ "@@ ))) { in@@ str@@ um@@ ent.@@ no@@ W@@ in@@ do@@ w@@ An@@ im@@ ation = true@@ ; } else if (@@ op@@ t.@@ equal@@ s@@ ("@@ --@@ no@@ -@@ h@@ id@@ d@@ en@@ -@@ ap@@ i@@ -@@ check@@ s@@ ")) { in@@ str@@ um@@ ent.@@ no@@ H@@ id@@ d@@ en@@ Api@@ Check@@ s = true@@ ; } else if (@@ op@@ t.@@ equal@@ s("@@ --@@ user@@ ")) { in@@ str@@ um@@ ent.@@ user@@ Id = parse@@ User@@ Arg@@ (@@ next@@ Arg@@ Requ@@ i@@ re@@ d@@ ()); } else if (@@ op@@ t.@@ equal@@ s("@@ --@@ ab@@ i@@ ")) { in@@ str@@ um@@ ent.@@ ab@@ i = next@@ Arg@@ Requ@@ i@@ re@@ d@@ (); } else { java.lang.System.@@ er@@ r.@@ p@@ r@@ int@@ ln@@ (("@@ --@@ k@@ no@@ w@@ n option@@ : " + opt@@ )); return@@ ; } } if ((@@ in@@ str@@ um@@ ent.@@ user@@ Id@@ ) == (android.os.@@ User@@ Hand@@ le.@@ US@@ ER_@@ AL@@ L@@ )) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ --@@ -@@ C@@ an st@@ ar@@ t in@@ strument@@ ation wit@@ h u@@ se@@ r '@@ all@@ ' return@@ ; } in@@ str@@ um@@ ent.@@ comp@@ onent@@ Name@@ Ar@@ g = next@@ Arg@@ Requ@@ i@@ re@@ d@@ (); in@@ str@@ um@@ ent.@@ run@@ (); }
final com.android.server.@@ am@@ .@@ Process@@ Re@@ cor@@ d add@@ App@@ Lock@@ ed@@ (android.@@ content.@@ p@@ m.@@ Application@@ Info in@@ fo@@ , java.lang.String c@@ ust@@ om@@ Pro@@ ces@@ s, boolean is@@ ol@@ ated@@ , boolean no@@ H@@ id@@ d@@ en@@ Api@@ Check@@ s, java.lang.String ab@@ i@@ O@@ verrid@@ e) { com.android.server.@@ am@@ .@@ Process@@ Re@@ cor@@ d app@@ ; if (!@@ is@@ ol@@ ated@@ ) { ap@@ p = get@@ Process@@ Record@@ Lock@@ ed@@ ((@@ c@@ ust@@ om@@ Pro@@ ces@@ s != null ? c@@ ust@@ om@@ Pro@@ ces@@ s : in@@ f@@ o.@@ process@@ Name@@ ), in@@ f@@ o.@@ u@@ id, true@@ ); } else { ap@@ p = null@@ ; } if (@@ ap@@ p == null@@ ) { ap@@ p = new@@ Process@@ Record@@ Lock@@ ed@@ (in@@ fo@@ , c@@ ust@@ om@@ Pro@@ ces@@ s, is@@ ol@@ ated@@ , 0); update@@ L@@ r@@ u@@ Process@@ Lock@@ ed@@ (@@ app@@ , false@@ , null@@ ); update@@ O@@ om@@ Ad@@ j@@ Lock@@ ed@@ (); } try { android.@@ app.@@ App@@ G@@ lo@@ b@@ al@@ s.get@@ Package@@ Manager@@ ().@@ set@@ Package@@ St@@ op@@ p@@ ed@@ State@@ (in@@ fo@@ .@@ package@@ Name, false@@ , android.os.@@ User@@ Handle@@ .get@@ User@@ Id@@ (@@ app.@@ u@@ id@@ )); } catch (android.os.@@ Remote@@ Exception e) { } catch (java.lang.@@ Illegal@@ Argument@@ Exception e) { android.util.@@ S@@ log.@@ w@@ (com.android.server.@@ am@@ .@@ Activity@@ Manager@@ Service.@@ TAG, ((@@ ("@@ Faile@@ d try@@ ing to un@@ st@@ o@@ p package " + (in@@ fo@@ .@@ package@@ Name@@ )) + "@@ : ") + e@@ )); } if ((@@ (in@@ f@@ o.@@ flag@@ s) & (com.android.server.@@ am@@ .@@ Activity@@ Manager@@ Service.@@ P@@ E@@ RS@@ IS@@ T@@ EN@@ T@@ _M@@ A@@ S@@ K@@ )) == (com.android.server.@@ am@@ .@@ Activity@@ Manager@@ Service.@@ P@@ E@@ RS@@ IS@@ T@@ EN@@ T@@ _M@@ A@@ S@@ K@@ )) { app.@@ per@@ si@@ st@@ ent = true@@ ; app.@@ max@@ Ad@@ j = Process@@ List.@@ P@@ E@@ RS@@ IS@@ T@@ ENT_@@ P@@ RO@@ C@@ _@@ AD@@ J@@ ; } if (((@@ app.@@ th@@ read@@ ) == null@@ ) && ((m@@ Per@@ si@@ st@@ ent@@ Start@@ ing@@ Process@@ es.@@ index@@ Of@@ (@@ app@@ )) < 0@@ )) { m@@ Per@@ si@@ st@@ ent@@ Start@@ ing@@ Process@@ es.@@ add(@@ app@@ ); start@@ Process@@ Lock@@ ed@@ (@@ app@@ , "@@ ad@@ de@@ d app@@ li@@ cation@@ ", (c@@ ust@@ om@@ Pro@@ ces@@ s != null ? c@@ ust@@ om@@ Pro@@ ces@@ s : app.@@ process@@ Name@@ ), ab@@ i@@ O@@ verrid@@ e@@ , null@@ , null@@ ); } return app@@ ; }
private final void start@@ Process@@ Lock@@ ed@@ (com.android.server.@@ am@@ .@@ Process@@ Re@@ cor@@ d app@@ , java.lang.String ho@@ st@@ ing@@ Type, java.lang.String ho@@ st@@ ing@@ Name@@ Str@@ ) { start@@ Process@@ Lock@@ ed@@ (@@ app@@ , ho@@ st@@ ing@@ Type, ho@@ st@@ ing@@ Name@@ String@@ , null@@ , null@@ ); }
@java.lang.Override public void handle@@ Set@@ List@@ en@@ ing@@ (@@ boolean list@@ en@@ ing@@ ) { if ((@@ get@@ Adap@@ ter@@ ()) == null@@ ) return@@ ; if (@@ list@@ en@@ ing@@ ) { m@@ Control@@ ler.@@ add@@ Callback@@ (m@@ Sign@@ al@@ Callback@@ ); } else { m@@ Control@@ ler.@@ remove@@ Callback@@ (m@@ Sign@@ al@@ Callback@@ ); } }
private void log@@ e@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, (("@@ [@@ G@@ s@@ mC@@ d@@ ma@@ Phone@@ ]@@ [@@ " + (get@@ Phone@@ Id@@ ())) + " s@@ )); }
private void log@@ e@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, ((@@ ("@@ [@@ Im@@ s@@ Phone@@ ]@@ [@@ " + (get@@ Phone@@ Id@@ ())) + "@@ ] ") + s@@ )); }
public void on@@ M@@ ID@@ one@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ M@@ m@@ i@@ Co@@ de m@@ i@@ ) { log@@ d@@ (("@@ on@@ M@@ ID@@ one@@ : m@@ m@@ i@@ =@@ " + m@@ m@@ i@@ )); if ((m@@ P@@ end@@ ing@@ M@@ M@@ I@@ s.@@ remove@@ (m@@ m@@ i@@ )) || (m@@ m@@ i.@@ is@@ U@@ ss@@ d@@ Request@@ ())) { android.os.@@ Result@@ Recei@@ ve@@ r re@@ cei@@ ver@@ Call@@ b@@ ac@@ k = m@@ i@@ .get@@ U@@ ss@@ d@@ Callback@@ Recei@@ ver@@ (); if (re@@ cei@@ ver@@ Call@@ b@@ ac@@ k != null@@ ) { int return@@ Co@@ de = ((m@@ m@@ i@@ .get@@ State@@ ()) == (@@ M@@ m@@ i@@ Co@@ d@@ e.@@ State.@@ C@@ O@@ M@@ P@@ LE@@ TE@@ )) ? android.@@ telephony.@@ Telephony@@ Manager.@@ U@@ SS@@ D_@@ RE@@ T@@ UR@@ N@@ _S@@ U@@ C@@ CE@@ S@@ S : and@@ ro@@ id@@ .@@ telephon@@ y@@ .get@@ Telephony@@ Manager.@@ U@@ SS@@ D_@@ RE@@ T@@ UR@@ N@@ _@@ FA@@ IL@@ U@@ RE@@ ; send@@ U@@ ss@@ d@@ Response@@ (m@@ m@@ i@@ .get@@ Di@@ al@@ String@@ (), m@@ m@@ i@@ .get@@ Message@@ (), return@@ Code@@ , re@@ cei@@ ver@@ Callback@@ ); } else { log@@ v@@ ("@@ on@@ M@@ M@@ ID@@ one@@ : not@@ if@@ y@@ Reg@@ is@@ tr@@ ant@@ s m@@ M@@ m@@ i@@ Comp@@ let@@ e@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new@@ Instance@@ ), m@@ it@@ Request@@ , null@@ , m@@ Handler@@ ); } }
private void log@@ d@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, ((@@ ("@@ [@@ Im@@ s@@ Phone@@ ]@@ [@@ " + (get@@ Phone@@ Id@@ ())) + "@@ ] ") + s@@ )); }
private com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ Exception get@@ Command@@ Exception@@ (@@ int code@@ , java.lang.String error@@ String@@ ) { log@@ d@@ ((@@ (("@@ get@@ Command@@ Exception@@ : " + code@@ ) + " error@@ String@@ =@@ ") + error@@ String@@ )); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ Exception@@ .@@ Er@@ ror er@@ ror = Command@@ Exception@@ .@@ G@@ EN@@ ER@@ IC@@ _@@ FA@@ IL@@ U@@ RE@@ ; switch (@@ code@@ ) { case com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info.@@ C@@ OD@@ E_@@ U@@ T_@@ NO@@ T_@@ S@@ U@@ P@@ P@@ O@@ RT@@ E@@ D : er@@ ror = Command@@ Exception@@ .@@ RE@@ Q@@ UE@@ ST_@@ NO@@ T_@@ S@@ U@@ P@@ P@@ P@@ O@@ RT@@ E@@ D@@ ; break@@ ; case com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info.@@ C@@ OD@@ E_@@ U@@ T_@@ C@@ B@@ _P@@ A@@ SS@@ W@@ OR@@ D@@ _M@@ IS@@ M@@ AT@@ C@@ H : er@@ ror = Command@@ Exception@@ .@@ P@@ A@@ SS@@ W@@ OR@@ D_@@ IN@@ C@@ OR@@ RE@@ C@@ T@@ ; break@@ ; case com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info.@@ C@@ OD@@ E_@@ U@@ T_@@ S@@ ER@@ V@@ IC@@ E_@@ UN@@ AV@@ A@@ IL@@ AB@@ L@@ E : er@@ ror = Command@@ Exception@@ .@@ R@@ AD@@ IO@@ _N@@ O@@ T_@@ AV@@ A@@ IL@@ AB@@ LE@@ ; break@@ ; case com.android.@@ im@@ s.@@ Im@@ s@@ Re@@ as@@ on@@ Info.@@ C@@ OD@@ E_@@ F@@ D@@ N@@ _@@ B@@ LO@@ C@@ KE@@ D : er@@ ror = Command@@ Exception@@ .@@ F@@ D@@ N@@ _C@@ H@@ EC@@ K@@ _@@ FA@@ IL@@ U@@ RE@@ ; default : break@@ ; } return new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ Exception(@@ er@@ ror error@@ String@@ , error@@ String@@ ); }
public void get@@ Call@@ B@@ ar@@ r@@ ing@@ (java.lang.String fa@@ c@@ ili@@ ty@@ , android.os.@@ Mess@@ age on@@ Comp@@ let@@ e) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ D@@ B@@ G) log@@ d@@ (("@@ get@@ Call@@ B@@ ar@@ r@@ ing@@ : fa@@ c@@ ili@@ ty@@ =@@ " + fa@@ c@@ ili@@ ty@@ )); android.os.@@ Mess@@ age res@@ p@@ ; res@@ p = ob@@ t@@ ain@@ Message@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ EV@@ ENT_@@ GE@@ T_@@ C@@ AL@@ L@@ _@@ B@@ AR@@ R@@ ING@@ _@@ D@@ ON@@ E, on@@ Comp@@ let@@ e); try { com.android.@@ im@@ s.@@ Im@@ s@@ U@@ t@@ Inter@@ face u@@ t = mC@@ T@@ .get@@ U@@ t@@ Interface@@ (); u@@ t.@@ qu@@ er@@ y@@ Call@@ B@@ ar@@ r@@ ing@@ (get@@ C@@ B@@ Type@@ From@@ F@@ ac@@ ili@@ ty@@ (@@ fa@@ c@@ ili@@ ty@@ ), res@@ p@@ ); } catch (com.android.@@ im@@ s.@@ Im@@ s@@ Exception e) { send@@ Error@@ Response@@ (@@ on@@ Comp@@ let@@ e@@ , e); } }
private void log@@ i@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, ((@@ ("@@ [@@ Im@@ s@@ Phone@@ ]@@ [@@ " + (get@@ Phone@@ Id@@ ())) + "@@ ] ") + s@@ )); }
public void set@@ Call@@ B@@ ar@@ r@@ ing@@ (java.lang.String fa@@ c@@ ili@@ ty@@ , boolean lock@@ State@@ , java.lang.String p@@ ass@@ wor@@ d@@ , android.os.@@ Mess@@ age on@@ Comp@@ let@@ e) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ D@@ B@@ G) log@@ d@@ ((@@ (("@@ set@@ Call@@ B@@ ar@@ r@@ ing@@ : fa@@ c@@ ili@@ ty@@ =@@ " + lock@@ State@@ )); android.os.@@ Mess@@ age res@@ p@@ ; res@@ p = ob@@ t@@ ain@@ Mess@@ age@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ .@@ EV@@ ENT_@@ SE@@ T_@@ C@@ AL@@ L@@ _@@ B@@ AR@@ R@@ ING@@ _@@ D@@ ON@@ E, on@@ Comp@@ let@@ e); int action@@ ; if (@@ lock@@ State@@ ) { ac@@ tion = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ s@@ Interface@@ .@@ C@@ F@@ _@@ AC@@ TION@@ _@@ EN@@ AB@@ LE@@ ; } else { ac@@ tion = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Command@@ s@@ Interface@@ .@@ C@@ F@@ _@@ AC@@ TION@@ _@@ D@@ IS@@ AB@@ LE@@ ; } try { com.android.@@ im@@ s.@@ Im@@ s@@ U@@ t@@ Inter@@ face u@@ t = mC@@ T@@ .get@@ U@@ t@@ Interface@@ (); u@@ t.@@ update@@ Call@@ B@@ ar@@ r@@ ing@@ (get@@ C@@ B@@ Type@@ From@@ F@@ ac@@ ili@@ ty@@ (@@ fa@@ c@@ ili@@ ty@@ ), action@@ , res@@ p@@ , null@@ ); } catch (com.android.@@ im@@ s.@@ Im@@ s@@ Exception e) { send@@ Error@@ Response@@ (@@ on@@ Comp@@ let@@ e@@ , e); } }
@java.lang.Override public boolean handle@@ U@@ ss@@ d@@ Request@@ (java.lang.String u@@ ss@@ d@@ Request@@ , android.os.@@ Result@@ Recei@@ ve@@ r w@@ r@@ app@@ ed@@ Callback@@ ) throw@@ s com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Call@@ State@@ Exception { if ((m@@ P@@ end@@ ing@@ M@@ M@@ I@@ s.@@ size@@ ()) > 0) { log@@ i@@ (("@@ handle@@ U@@ ss@@ d@@ Request@@ () q@@ ue@@ u@@ e f@@ ull@@ : " + (android.@@ telephony.@@ R@@ log.@@ pi@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, "@@ U@@ ss@@ d@@ Response@@ : u@@ ss@@ d@@ Request@@ , null@@ , Telephony@@ Manager.@@ U@@ SS@@ D_@@ RE@@ T@@ UR@@ N@@ _@@ FA@@ IL@@ U@@ RE@@ , w@@ r@@ app@@ ed@@ Callback@@ ); return true@@ ; } try { di@@ al@@ In@@ ternal@@ (@@ u@@ ss@@ d@@ Request@@ , V@@ ide@@ o@@ Pro@@ file.@@ STATE_@@ A@@ U@@ D@@ IO@@ _@@ ON@@ L@@ Y@@ , null@@ , w@@ r@@ app@@ ed@@ Callback@@ ); } catch (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Call@@ State@@ Exception c@@ se@@ ) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ C@@ S_@@ F@@ AL@@ L@@ B@@ AC@@ K@@ .@@ equals(@@ c@@ s@@ e.get@@ Message@@ ())) { throw c@@ se@@ ; } else { android.@@ telephony.@@ R@@ log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, ("@@ S@@ ho@@ ul@@ d not exec@@ ut@@ e U@@ SS@@ D " + c@@ se@@ )); send@@ U@@ ss@@ d@@ Response@@ (@@ u@@ ss@@ d@@ Request@@ , null@@ , Telephony@@ Manager.@@ U@@ SS@@ D_@@ RE@@ T@@ UR@@ N@@ _@@ FA@@ IL@@ U@@ RE@@ , w@@ r@@ app@@ ed@@ Callback@@ ); } } catch (java.lang.Exception e) { android.@@ telephony.@@ R@@ log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, ("@@ S@@ ho@@ ul@@ d not exec@@ ut@@ e U@@ SS@@ D " + e@@ )); send@@ U@@ ss@@ d@@ Response@@ (@@ u@@ ss@@ d@@ Request@@ , null@@ , Telephony@@ Manager.@@ U@@ SS@@ D_@@ RE@@ T@@ UR@@ N@@ _@@ FA@@ IL@@ U@@ RE@@ , w@@ r@@ app@@ ed@@ Callback@@ ); return false@@ ; } return true@@ ; }
private void log@@ v@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ v@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, ((@@ ("@@ [@@ Im@@ s@@ Phone@@ ]@@ [@@ " + (get@@ Phone@@ Id@@ ())) + "@@ ] ") + s@@ )); }
protected void log@@ e@@ (java.lang.String ms@@ g@@ ) { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, (("@@ [@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er@@ ]@@ [@@ " + (m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ ())) + " ") + ms@@ g@@ )); }
@java.lang.Override protected void log@@ (java.lang.String ms@@ g@@ ) { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, (("@@ [@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er@@ ]@@ [@@ " + (m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ ())) + " ") + ms@@ g@@ )); }
private void log@@ d@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, (("@@ [@@ G@@ s@@ mC@@ d@@ ma@@ Phone@@ ]@@ [@@ " + (get@@ Phone@@ Id@@ ())) + " s@@ )); }
private void log@@ i@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Ph@@ on@@ e.@@ LO@@ G_@@ TAG, (("@@ [@@ G@@ s@@ mC@@ d@@ ma@@ Phone@@ ]@@ [@@ " + (get@@ Phone@@ Id@@ ())) + " s@@ )); }
protected void log@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, ((@@ ("@@ [@@ Service@@ State@@ Tr@@ ack@@ er@@ ]@@ [@@ " + (m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ ())) + " ") + s@@ )); }
protected void log@@ e@@ (java.lang.String s) { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, ((@@ ("@@ [@@ Service@@ State@@ Tr@@ ack@@ er@@ ]@@ [@@ " + (m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ ())) + " ") + s@@ )); }
private void update@@ R@@ o@@ am@@ ing@@ State@@ (@@ boolean new@@ R@@ o@@ am@@ ing@@ ) { if ((m@@ C@@ T@@ .get@@ State@@ ()) == (@@ Phone@@ Constants.@@ State.@@ ID@@ LE@@ )) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ D@@ B@@ G) log@@ d@@ (("@@ update@@ R@@ o@@ am@@ ing@@ State@@ : no@@ w@@ : " + new@@ R@@ o@@ am@@ ing@@ )); m@@ R@@ o@@ am@@ ing = new@@ R@@ o@@ am@@ ing@@ ; com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ set@@ W@@ fc@@ Mode@@ (m@@ Context@@ , com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ get@@ W@@ fc@@ Mode@@ (m@@ Context@@ , new@@ R@@ o@@ am@@ ing@@ ), new@@ R@@ o@@ am@@ ing@@ ); } else { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ D@@ B@@ G) log@@ d@@ (("@@ update@@ R@@ o@@ am@@ ing@@ State@@ : po@@ st@@ pon@@ ed@@ : " + new@@ R@@ o@@ am@@ ing@@ )); mC@@ T@@ .@@ register@@ For@@ V@@ o@@ i@@ ce@@ Call@@ En@@ d@@ ed@@ (@@ this@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Ph@@ on@@ e.@@ EV@@ ENT_@@ V@@ O@@ IC@@ E_@@ C@@ AL@@ L@@ _@@ END@@ E@@ D@@ , null@@ ); } }
@java.lang.Override protected void log@@ (java.lang.String ms@@ g@@ ) { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ G@@ s@@ mC@@ d@@ ma@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, (("@@ [@@ G@@ s@@ mC@@ d@@ ma@@ Call@@ Tr@@ ack@@ er@@ ]@@ [@@ " + (m@@ Ph@@ on@@ e.get@@ Phone@@ Id@@ ())) + " ") + ms@@ g@@ )); }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s pre@@ f@@ s = android.@@ pre@@ ference@@ .@@ Pre@@ ference@@ Manager.@@ get@@ Default@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ (@@ context@@ ); if (@@ Int@@ ent.@@ AC@@ TION@@ _@@ B@@ O@@ O@@ O@@ O@@ T_@@ C@@ O@@ M@@ P@@ LE@@ TE@@ D@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { boolean is@@ Tr@@ ac@@ ing@@ Pre@@ f@@ O@@ n = pre@@ f@@ s.get@@ Boolean@@ (@@ con@@ tex@@ t.get@@ String(@@ R.@@ str@@ ing.@@ pre@@ f@@ _@@ key@@ _@@ tr@@ ac@@ ing@@ _@@ on@@ ), false@@ ); com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ update@@ Tr@@ ac@@ ing@@ (@@ con@@ tex@@ t@@ ); com.android.@@ trace@@ ur@@ .@@ Q@@ s@@ Service.@@ request@@ List@@ en@@ ing@@ State@@ (@@ context@@ ); } else if (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ D@@ U@@ M@@ P@@ _@@ AC@@ TION@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { con@@ text.@@ send@@ B@@ roadcast@@ (@@ new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _C@@ LO@@ S@@ E_@@ S@@ Y@@ S@@ TE@@ M@@ _@@ DI@@ A@@ LO@@ G@@ S@@ )); if (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ is@@ Tr@@ ac@@ ing@@ On@@ ()) { com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ at@@ r@@ ace@@ D@@ um@@ p@@ And@@ S@@ end@@ (@@ context@@ ); } else { con@@ text.@@ start@@ Activity@@ (@@ new android.content.@@ Intent@@ (@@ con@@ tex@@ t.get@@ , com.android.@@ trace@@ ur@@ .@@ M@@ ain@@ Activity@@ .@@ class@@ ).set@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ )); } } else if (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver@@ .@@ O@@ P@@ EN@@ _@@ AC@@ T@@ IO@@ N@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { con@@ text.@@ send@@ B@@ roadcast@@ (@@ new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _C@@ LO@@ S@@ E_@@ S@@ TE@@ M@@ _@@ DI@@ A@@ LO@@ G@@ S@@ )); con@@ text.@@ start@@ Activity@@ (@@ new android.content.@@ Int@@ ent@@ (@@ context@@ , com.android.@@ trace@@ ur@@ .@@ M@@ ain@@ Activity@@ .@@ class@@ ).set@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ )); } }
public static java.lang.String get@@ Ac@@ tive@@ Un@@ ava@@ il@@ able@@ T@@ ag@@ s(@@ android.content.@@ Context context@@ , android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s pre@@ f@@ s) { java.util.@@ Set@@ <java.lang.String@@ > t@@ ag@@ s = pre@@ f@@ s.get@@ String@@ Set@@ (@@ con@@ tex@@ t.get@@ String(@@ R.@@ str@@ ing.@@ pre@@ f@@ _@@ key@@ _@@ t@@ ag@@ s@@ ), com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ get@@ Default@@ T@@ ag@@ List@@ ()); java.lang.String@@ Builder s@@ b = new java.lang.String@@ Builder@@ ((@@ 1@@ 0 * (@@ t@@ ag@@ s.@@ size@@ ()))); java.util.@@ T@@ ree@@ Map@@ <java.lang.String, java.lang.String> ava@@ il@@ able = com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ r@@ ace@@ List@@ C@@ ate@@ gor@@ ies@@ (); for (java.lang.String s : t@@ ag@@ s) { if (@@ ava@@ il@@ ab@@ le.@@ contain@@ s@@ Key@@ (s@@ )) continue@@ ; if ((@@ sb.@@ length@@ ()) > 0) { sb.@@ append@@ ("@@ ); } java.lang.String s = sb.@@ toString@@ (); com.android.@@ trace@@ u@@ r@@ .@@ Log.@@ v@@ (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ TAG, (("@@ Ac@@ tiv@@ it@@ y " + s) + "@@ \"@@ ")); return s; }
public static java.lang.String get@@ Ac@@ tive@@ T@@ ag@@ s(@@ android.content.@@ Context context@@ , android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s pre@@ f@@ s, boolean on@@ ly@@ A@@ va@@ il@@ able@@ ) { java.util.@@ Set@@ <java.lang.String@@ > t@@ ag@@ s = pre@@ f@@ s.get@@ String@@ Set@@ (@@ con@@ tex@@ t.get@@ String(@@ R.@@ str@@ ing.@@ pre@@ f@@ _@@ key@@ _@@ t@@ ag@@ s@@ ), com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ get@@ Default@@ T@@ ag@@ List@@ ()); java.lang.String@@ Builder s@@ b = new java.lang.String@@ Builder@@ ((@@ 1@@ 0 * (@@ t@@ ag@@ s.@@ size@@ ()))); java.util.@@ T@@ ree@@ Map@@ <java.lang.String, java.lang.String> ava@@ il@@ able = (@@ on@@ ly@@ A@@ va@@ il@@ able@@ ) ? com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ at@@ r@@ ace@@ List@@ C@@ ate@@ gor@@ ies@@ () : null@@ ; for (java.lang.String s : t@@ ag@@ s) { if (@@ on@@ ly@@ A@@ va@@ il@@ able && (!(@@ ava@@ il@@ ab@@ le.@@ contain@@ s@@ Key@@ (s@@ )@@ ))) continue@@ ; if ((@@ sb.@@ length@@ ()) > 0) { sb.@@ append@@ ("@@ : "); } sb.@@ append@@ (s@@ ); } java.lang.String s = sb.@@ toString@@ (); com.android.@@ trace@@ u@@ r@@ .@@ Log.@@ v@@ (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ TAG, ((@@ (("@@ get@@ Ac@@ tive@@ T@@ ag@@ s(@@ on@@ ly@@ A@@ va@@ il@@ able@@ =@@ " + on@@ ly@@ A@@ va@@ il@@ able@@ ) + " = ") + s) + "@@ \"@@ ")); return s; }
public static android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s get@@ Process@@ () { synchronized@@ (android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Lock) { if ((@@ android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Z@@ y@@ go@@ te@@ ) != null@@ ) return android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Z@@ y@@ g@@ ot@@ e@@ ; android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ connect@@ To@@ Z@@ y@@ go@@ te@@ I@@ f@@ N@@ e@@ ed@@ ed@@ Lock@@ ed@@ (); return android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Z@@ y@@ g@@ ot@@ e@@ ; } }
public static void on@@ W@@ eb@@ View@@ Provider@@ Changed@@ (android.@@ content.@@ p@@ m.@@ Package@@ Info package@@ Info@@ , java.lang.String c@@ ach@@ e@@ Key@@ ) { synchronized@@ (android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Lock) { android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Pack@@ age = package@@ Info@@ ; android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Package@@ Cach@@ e@@ K@@ ey = c@@ ach@@ e@@ Key@@ ; if (!@@ (android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Multi@@ process@@ Enabled@@ )) { return@@ ; } android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Multi@@ process@@ Enabled@@ (); } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ G@@ u@@ ard@@ ed@@ By@@ ("@@ s@@ Lock@@ ") private static void st@@ op@@ Z@@ y@@ go@@ te@@ Lock@@ ed@@ () { if ((@@ android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Z@@ y@@ g@@ ot@@ e) { android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Z@@ y@@ go@@ te@@ .@@ z@@ y@@ go@@ te@@ .@@ close@@ (); java.lang.@@ Pro@@ ces@@ s k@@ il@@ l@@ Pro@@ ces@@ s = (android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Z@@ y@@ g@@ ot@@ e@@ .@@ start@@ Res@@ ources@@ (); try { android.@@ w@@ eb@@ k@@ it.@@ W@@ eb@@ View@@ Z@@ y@@ go@@ te@@ .@@ s@@ Z@@ y@@ g@@ ot@@ e = null@@ ; } catch (java.lang.@@ Illegal@@ Argument@@ Exception e) { throw new java.lang.@@ Asser@@ tion@@ Error@@ ("@@ Faile@@ d to fin@@ d to g@@ ot@@ e p@@ id not fin@@ d to g@@ ot@@ e u@@ p p@@ it@@ !@@ ", e); } }
@@@ com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ r@@ p@@ c.@@ R@@ p@@ c@@ (d@@ es@@ cri@@ pti@@ on = "@@ G@@ et private D@@ N@@ S s@@ pe@@ c@@ if@@ ier@@ ", return@@ s = "@@ D@@ N@@ S ho@@ st@@ name set in str@@ ic@@ t mode@@ ") public java.lang.String get@@ P@@ riv@@ ate@@ D@@ n@@ s@@ S@@ pe@@ c@@ if@@ ier@@ () { if ((@@ get@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Mode@@ ()) != (@@ Connectivity@@ Constants.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Mode@@ Str@@ i@@ ct@@ )) return null@@ ; return android.@@ provider.@@ Setting@@ s.@@ G@@ lo@@ b@@ al@@ .get@@ String@@ (m@@ Service@@ .get@@ Content@@ Res@@ ol@@ ver@@ (), android.@@ provider.@@ Setting@@ s.@@ G@@ lo@@ b@@ al.@@ P@@ R@@ I@@ V@@ AT@@ E_@@ D@@ N@@ S@@ _S@@ P@@ EC@@ I@@ FI@@ ER@@ ); }
public static void clear@@ S@@ av@@ ed@@ Tr@@ a@@ ces@@ () { java.lang.String c@@ m@@ d = ("@@ r@@ m " + (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ TR@@ AC@@ E_@@ DI@@ RE@@ C@@ T@@ OR@@ Y@@ )) + "@@ trace@@ -@@ *@@ .@@ c@@ trace@@ "; android.util.Log.@@ v@@ (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ TAG, ("@@ C@@ le@@ ar@@ ing tr@@ ac@@ e di@@ re@@ ctory@@ : " + c@@ m@@ d@@ )); try { java.lang.@@ Pro@@ ces@@ s r@@ m = com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ exec@@ (c@@ m@@ d@@ ); if ((@@ r@@ m.@@ wait@@ For@@ ()) != 0) { android.util.Log.@@ e@@ (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ TAG, ("@@ clear@@ S@@ av@@ ed@@ Trace@@ s fa@@ ile@@ d w@@ ith@@ : " + (@@ r@@ m.@@ ex@@ it@@ Value@@ ()))); } } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } }
@@@ android.@@ annotation.@@ Nullable public static android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ S@@ es@@ sion create@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , int sub@@ s@@ cription@@ Id, @@@ android.@@ annotation.@@ NonNull java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , @@@ android.@@ annotation.@@ Nullable final android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ Call@@ b@@ ac@@ k call@@ b@@ ac@@ k ) { if (!@@ (android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed.@@ com@@ par@@ e@@ And@@ Set@@ (@@ false@@ , true@@ ))) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ S@@ es@@ sion h@@ av@@ e t@@ w@@ o ac@@ tiv@@ e instance@@ s@@ "); } android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ S@@ es@@ sion s@@ es@@ sion = new android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ (@@ context@@ , call@@ back@@ , sub@@ s@@ cription@@ Id, exec@@ ut@@ or@@ ); int result = session@@ .@@ b@@ ind@@ And@@ In@@ iti@@ aliz@@ e@@ (); if (@@ result != (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed@@ .set@@ (@@ false@@ ); exec@@ ut@@ or.@@ exec@@ ute@@ (@@ new java.lang.@@ Run@@ n@@ able@@ () { @java.lang.Override public void run() { call@@ back@@ .@@ on@@ Error@@ (@@ result@@ , null@@ ); } }); return null@@ ; } return s@@ es@@ sion = new android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed@@ (); }
@@@ android.@@ annotation.@@ Nullable public static android.@@ telephony.@@ M@@ b@@ ms@@ Stream@@ ing@@ S@@ es@@ sion create@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , int sub@@ s@@ cription@@ Id, @@@ android.@@ annotation.@@ NonNull java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Stream@@ ing@@ Session@@ Call@@ b@@ ac@@ k call@@ b@@ ac@@ k call@@ b@@ ac@@ k )@@ ) { if (!@@ (android.@@ telephony.@@ M@@ b@@ ms@@ Stream@@ ing@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed.@@ com@@ par@@ e@@ And@@ Set@@ (@@ false@@ , true@@ ))) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ S@@ es@@ sion cre@@ ate t@@ w@@ o instance@@ s of M@@ b@@ ms@@ Stream@@ ing@@ S@@ es@@ sion "); } android.@@ telephony.@@ M@@ b@@ ms@@ Stream@@ ing@@ S@@ es@@ sion s@@ es@@ sion = new android.@@ telephony.@@ M@@ b@@ ms@@ Stream@@ ing@@ Session@@ (@@ context@@ , call@@ back@@ , sub@@ s@@ cription@@ Id, exec@@ ut@@ or@@ ); int result = session@@ .@@ b@@ ind@@ And@@ In@@ iti@@ aliz@@ e@@ (); if (@@ result != (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { android.@@ telephony.@@ M@@ b@@ ms@@ Stream@@ ing@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed@@ .set@@ (@@ false@@ ); exec@@ ut@@ or.@@ exec@@ ute@@ (@@ new java.lang.@@ Run@@ n@@ able@@ () { @java.lang.Override public void run() { call@@ back@@ .@@ on@@ Error@@ (@@ result@@ , null@@ ); } }); return null@@ ; }
public static android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ S@@ es@@ sion create@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , @@@ android.@@ annotation.@@ NonNull android.@@ annotation.@@ Nullable java.lang.String exec@@ ut@@ or@@ , @@@ android.@@ annotation.@@ NonNull android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ Call@@ b@@ ac@@ k call@@ b@@ ac@@ k { return android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ .@@ create@@ (@@ context@@ , android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ get@@ Default@@ Sub@@ s@@ cription@@ Id@@ (), exec@@ ut@@ or@@ , call@@ b@@ ac@@ k ); }
public static android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est.@@ Builder f@@ rom@@ Do@@ wn@@ load@@ Request@@ (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est oth@@ er@@ ) { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est.@@ Builder result = new android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est.@@ Build@@ er(@@ oth@@ er.@@ source@@ U@@ ri@@ ).set@@ Service@@ Id@@ (@@ oth@@ er.@@ file@@ Service@@ Id@@ ).set@@ Sub@@ s@@ cription@@ Id@@ (@@ oth@@ er.@@ sub@@ s@@ cription@@ Id@@ ); res@@ ult.@@ app@@ Int@@ ent = oth@@ er.@@ ser@@ i@@ aliz@@ ed@@ Result@@ Intent@@ For@@ App@@ ; return result@@ ; }
public static android.@@ telephony.@@ M@@ b@@ ms@@ Stream@@ ing@@ S@@ es@@ sion create@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , @@@ android.@@ annotation.@@ NonNull android.@@ annotation.@@ Nullable android.@@ annotation.@@ NonNull android.@@ telephony.@@ Exec@@ ut@@ or@@ ) { return android.@@ telephony.@@ M@@ b@@ ms@@ Stream@@ ing@@ Session@@ .@@ create@@ (@@ context@@ , android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ get@@ Default@@ Sub@@ s@@ cription@@ Id@@ (), exec@@ ut@@ or@@ , call@@ b@@ ac@@ k call@@ back@@ ); }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { if (@@ int@@ ent.get@@ Action@@ ().@@ equals(@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ AC@@ TION@@ _C@@ AR@@ R@@ I@@ ER@@ _C@@ ON@@ FI@@ G@@ _C@@ H@@ AN@@ GE@@ D@@ )) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ V@@ D@@ B@@ G) log@@ ("@@ on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ "); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ D@@ B@@ G) log@@ ("@@ on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { if (@@ int@@ ent.get@@ Action@@ ().@@ equals(@@ Int@@ ent.@@ AC@@ TION@@ _@@ LO@@ C@@ AL@@ E_@@ CH@@ AN@@ GE@@ D@@ )) { update@@ S@@ p@@ n@@ Display@@ (); } else if (@@ int@@ ent.get@@ Action@@ ().@@ equals(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ AC@@ TION@@ _@@ R@@ AD@@ IO@@ _@@ O@@ F@@ )) { m@@ Al@@ ar@@ mS@@ wit@@ ch = false@@ ; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ data@@ connection@@ .@@ D@@ c@@ Tr@@ ack@@ er d@@ c@@ Tr@@ ack@@ er = m@@ Ph@@ on@@ e.@@ m@@ D@@ c@@ Tr@@ ack@@ er@@ ; po@@ w@@ er@@ O@@ ff@@ R@@ ad@@ io@@ S@@ a@@ f@@ el@@ y@@ (d@@ c@@ Tr@@ ack@@ er@@ ); } }
public void add@@ Pro@@ file@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ file@@ ) { android.os.@@ Mess@@ age m = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ P@@ RO@@ F@@ IL@@ E_@@ S@@ ER@@ V@@ IC@@ E_@@ RE@@ G@@ IS@@ TER@@ E@@ D@@ , pro@@ file@@ ); m@@ Handler.@@ send@@ Message@@ (m@@ ); }
public void remove@@ Pro@@ file@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ file@@ ) { android.os.@@ Mess@@ age m = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ P@@ RO@@ F@@ IL@@ E_@@ S@@ ER@@ V@@ IC@@ E_@@ UN@@ RE@@ G@@ IS@@ TER@@ E@@ D@@ , pro@@ file@@ ); m@@ Handler.@@ send@@ Message@@ (m@@ ); }
public com.@@ android@@ .@@ do@@ c@@ ument@@ su@@ i.@@ b@@ ase.@@ Root@@ Info get@@ Root@@ On@@ es@@ ho@@ t@@ (java.lang.String au@@ th@@ or@@ ity@@ , java.lang.String ro@@ ot@@ Id, boolean for@@ ce@@ Ref@@ res@@ h@@ ) { synchronized@@ (m@@ Lock) { com.@@ android@@ .@@ do@@ c@@ ument@@ su@@ i.@@ b@@ ase.@@ Root@@ Info ro@@ o@@ t = (@@ for@@ ce@@ Ref@@ res@@ h@@ ) ? null : get@@ Root@@ Lock@@ ed@@ (@@ au@@ th@@ or@@ ity@@ , ro@@ ot@@ Id@@ ); if (@@ ro@@ o@@ t == null@@ ) { m@@ R@@ oo@@ ts@@ .@@ remove@@ All@@ (@@ au@@ th@@ or@@ ity@@ ); m@@ R@@ oo@@ ts@@ .@@ put@@ All@@ (@@ au@@ th@@ or@@ ity@@ , load@@ R@@ oo@@ ts@@ For@@ Au@@ th@@ or@@ ity@@ (m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (), au@@ th@@ or@@ ity@@ , for@@ ce@@ Ref@@ res@@ h@@ )); ro@@ o@@ t = get@@ Root@@ Lock@@ ed@@ (@@ au@@ th@@ or@@ ity@@ , ro@@ ot@@ Id@@ ); } return ro@@ ot@@ ; } }
public boolean is@@ Al@@ low@@ ed@@ To@@ U@@ se@@ H@@ id@@ d@@ en@@ Api@@ () { return is@@ System@@ App@@ (@@ this@@ )) || (com.android.server.@@ System@@ Config.@@ get@@ Instance@@ ().get@@ H@@ id@@ d@@ en@@ Api@@ W@@ h@@ ite@@ li@@ s@@ ted@@ Ap@@ ps@@ ().@@ contain@@ s@@ (@@ package@@ Name@@ )); }
public static java.lang.@@ invok@@ e.@@ Method@@ Hand@@ le va@@ r@@ Handle@@ Ex@@ act@@ In@@ vok@@ er@@ (java.lang.@@ invok@@ e.@@ Var@@ Hand@@ le.@@ Access@@ Mod@@ e ac@@ cess@@ Mode@@ , java.lang.@@ invok@@ e.@@ Method@@ Type typ@@ e) { return java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es@@ .@@ va@@ r@@ Handle@@ In@@ vok@@ er(@@ ac@@ cess@@ Mode@@ , type@@ ); }
public static java.lang.@@ invok@@ e.@@ Method@@ Hand@@ le va@@ r@@ Handle@@ In@@ vok@@ er@@ (java.lang.@@ invok@@ e.@@ Var@@ Hand@@ le.@@ Access@@ Mod@@ e ac@@ cess@@ Mode@@ , java.lang.@@ invok@@ e.@@ Method@@ Type typ@@ e) { java.lang.@@ invok@@ e.@@ Method@@ Type method@@ ; try { m@@ ethod = ref@@ c@@ .get@@ Dec@@ lar@@ ed@@ Method@@ (@@ ac@@ cess@@ Mod@@ e.@@ method@@ Name@@ (), java.lang.Ob@@ ject@@ []@@ .@@ class@@ ); } catch (java.lang.@@ No@@ Su@@ ch@@ Method@@ Exception e) { throw new java.lang.Illegal@@ State@@ Exception@@ (("@@ In@@ va@@ li@@ d m@@ ethod for Access@@ Mod@@ e " + ac@@ cess@@ Mode@@ ), e); } java.lang.@@ invok@@ e.@@ Method@@ Type method@@ Type = typ@@ e.@@ in@@ ser@@ t@@ Parameter@@ Typ@@ es@@ (@@ 0, java.lang.@@ invok@@ e.@@ Var@@ Handle@@ .@@ class@@ ); return new java.lang.@@ invok@@ e.@@ Method@@ Handle@@ Imp@@ l@@ (m@@ ethod@@ .get@@ Ar@@ t@@ Method@@ (), IN@@ V@@ O@@ K@@ E_@@ V@@ AR@@ _@@ H@@ AN@@ D@@ LE@@ , method@@ Typ@@ e); }
void to@@ gg@@ le@@ M@@ ute@@ () { if (m@@ Call@@ s@@ Manager.@@ has@@ E@@ merg@@ enc@@ y@@ Call@@ ()) { android.telecom.@@ Log.@@ v@@ (@@ this@@ , to@@ gg@@ le@@ M@@ ut@@ e for e@@ merg@@ enc@@ y cal@@ l return@@ ; } m@@ Call@@ Au@@ dio@@ R@@ ou@@ te@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ With@@ Session@@ Info@@ (@@ Call@@ Au@@ dio@@ R@@ ou@@ te@@ State@@ M@@ ach@@ in@@ e.@@ TO@@ G@@ LE@@ _M@@ UT@@ E); }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public boolean on@@ Media@@ B@@ utton@@ (@@ int typ@@ e) { if (@@ has@@ An@@ y@@ Call@@ s()) { com.android.server.@@ telecom.@@ Cal@@ l r@@ ing@@ ing@@ ing@@ Cal@@ l = get@@ Fi@@ rst@@ Call@@ With@@ State@@ (@@ Call@@ State.@@ R@@ ING@@ ING@@ ING@@ ING@@ ); if ((@@ He@@ ad@@ set@@ Media@@ B@@ utton@@ .@@ S@@ H@@ O@@ RT@@ _P@@ RE@@ SS@@ ) == typ@@ e) { if (@@ r@@ ing@@ ing@@ Cal@@ l == null@@ ) { com.android.server.@@ telecom.@@ Cal@@ l call@@ To@@ H@@ ang@@ u@@ p = get@@ Fi@@ rst@@ Call@@ With@@ State@@ (@@ Call@@ State.@@ R@@ ING@@ ING@@ ING@@ , Call@@ State.@@ DI@@ AL@@ ING@@ , Call@@ State.@@ P@@ UL@@ L@@ ING@@ , Call@@ State.@@ AC@@ TI@@ V@@ E, Call@@ State.@@ ON@@ _@@ H@@ O@@ L@@ D@@ ); android.telecom.@@ Log.@@ add@@ Event@@ (c@@ all@@ To@@ H@@ ang@@ up@@ , Log@@ Utils.@@ Event@@ s.@@ IN@@ F@@ O@@ , b@@ t@@ n short p@@ res@@ s - en@@ d call@@ .@@ "); if (c@@ all@@ To@@ H@@ ang@@ u@@ p != null@@ ) { dis@@ connect@@ Call@@ (c@@ all@@ To@@ H@@ ang@@ up@@ ); return true@@ ; } } else { r@@ ing@@ Cal@@ l.@@ an@@ sw@@ er(@@ V@@ ide@@ o@@ Pro@@ file.@@ STATE_@@ A@@ U@@ D@@ IO@@ _@@ ON@@ L@@ Y@@ ); return true@@ ; } } else if ((@@ He@@ ad@@ set@@ Media@@ B@@ utton@@ .@@ L@@ ON@@ G@@ _P@@ RE@@ SS@@ ) == typ@@ e) { if (@@ r@@ ing@@ ing@@ ing@@ Cal@@ l != null@@ ) { android.telecom.@@ Log.@@ add@@ Event@@ (get@@ For@@ eg@@ round@@ Call@@ (), Log@@ Utils.@@ Event@@ s.@@ IN@@ F@@ O@@ , "@@ medi@@ a re@@ ject r@@ ing@@ ing@@ ing@@ ing@@ ing@@ Cal@@ l.@@ re@@ ject@@ (@@ false@@ , null@@ ); } else { android.telecom.@@ Log.@@ add@@ Event@@ (get@@ For@@ eg@@ round@@ Call@@ (), Log@@ Utils.@@ Event@@ s.@@ IN@@ F@@ O@@ , "@@ medi@@ ate b@@ t@@ n long p@@ res@@ s - m@@ ut@@ e m@@ Call@@ Au@@ dio@@ Manager.@@ to@@ gg@@ le@@ M@@ ute@@ (); } return true@@ ; } } return false@@ ; }
private java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Config@@ > create@@ V@@ 3@@ S@@ ig@@ ner@@ Config@@ (@@ boolean ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ ) throw@@ s java.security.@@ In@@ valid@@ Key@@ Exception { return create@@ Sign@@ ing@@ B@@ Lock@@ S@@ ig@@ ner@@ Config@@ s(@@ ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ , Apk@@ Sign@@ ing@@ Block@@ Utils.@@ V@@ E@@ RS@@ ION@@ _@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 3@@ ); }
public com.android.@@ ap@@ k@@ si@@ g.@@ Default@@ Apk@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Config.@@ Builder set@@ Apk@@ S@@ ig@@ ner@@ Line@@ age@@ (com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ S@@ ig@@ ner@@ Line@@ age ap@@ k@@ S@@ ig@@ ner@@ Line@@ age@@ ) { throw new s@@ un@@ .@@ ref@@ lect.@@ g@@ ener@@ ic@@ s.@@ ref@@ lec@@ tive@@ Object@@ s.@@ Not@@ Imp@@ lem@@ en@@ ted@@ Exception@@ (); }
public com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ Sign@@ er.@@ Builder set@@ O@@ l@@ d@@ S@@ ig@@ ner@@ Config@@ (com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ Sign@@ er.@@ S@@ ig@@ ner@@ Con@@ fi@@ g old@@ S@@ ig@@ ner@@ ) { check@@ In@@ iti@@ aliz@@ ed@@ With@@ out@@ En@@ g@@ ine@@ (); if (!(m@@ V@@ 3@@ Sign@@ ing@@ Enabled@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ A@@ n ol@@ d si@@ g@@ ne@@ r c@@ an on@@ l@@ y b@@ e s@@ pe@@ c@@ if@@ i@@ ed wh@@ e@@ n us@@ ing " + "@@ AP@@ K Sign@@ at@@ ur@@ e S@@ ch@@ em@@ e v@@ 3@@ . P@@ le@@ as@@ e en@@ able th@@ at fi@@ rst@@ ")); } m@@ O@@ l@@ d@@ S@@ ig@@ ner@@ Con@@ fi@@ g = old@@ S@@ ig@@ ner@@ ; return this@@ ; }
public com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ Sign@@ er.@@ S@@ ig@@ ner@@ Con@@ fi@@ g build@@ () { return new com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ Sign@@ er.@@ S@@ ig@@ ner@@ Config@@ (m@@ Name, m@@ P@@ riv@@ ate@@ Key@@ , m@@ Cer@@ t@@ if@@ ic@@ ate@@ s, m@@ Min@@ Sdk@@ Version@@ , m@@ Ma@@ x@@ Sdk@@ Version@@ , m@@ Apk@@ S@@ ig@@ ner@@ Line@@ age@@ ); }
public com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ Sign@@ er.@@ Builder set@@ V@@ 3@@ Sign@@ ing@@ Enabled@@ (@@ boolean en@@ abled@@ ) { check@@ In@@ iti@@ aliz@@ ed@@ With@@ out@@ En@@ g@@ ine@@ (); if ((@@ en@@ able@@ d && ((m@@ S@@ ig@@ ner@@ Config@@ s) != null@@ )) && ((m@@ S@@ ig@@ ner@@ Config@@ s.@@ size@@ ()) > 1@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ AP@@ K Sign@@ at@@ ur@@ e S@@ ch@@ em@@ e v@@ 3 can@@ not b@@ e u@@ se@@ d wit@@ h " + "@@ m@@ ulti@@ p@@ le si@@ g@@ ner@@ s.@@ ")); } m@@ V@@ 3@@ Sign@@ ing@@ En@@ able@@ d = en@@ abled@@ ; return this@@ ; }
private static byte@@ [] g@@ ener@@ ate@@ Add@@ i@@ tion@@ al@@ At@@ tri@@ b@@ ut@@ es@@ (com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Con@@ fi@@ g si@@ g@@ ner@@ Config@@ ) { if ((@@ si@@ g@@ ner@@ Config.@@ ap@@ k@@ S@@ ig@@ ner@@ Line@@ age@@ ) == null@@ ) { return new byte@@ [0@@ ]; } throw new s@@ un@@ .@@ ref@@ lect.@@ g@@ ener@@ ic@@ s.@@ ref@@ lec@@ tive@@ Object@@ s.@@ Not@@ Imp@@ lem@@ en@@ ted@@ Exception@@ (); }
public com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ S@@ ig@@ ne@@ r build@@ () { return new com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ S@@ ig@@ ner@@ (m@@ S@@ ig@@ ner@@ Config@@ s, m@@ O@@ l@@ d@@ S@@ ig@@ ner@@ Config@@ , m@@ Min@@ Sdk@@ Version@@ , m@@ V@@ 1@@ Sign@@ ing@@ Enabled@@ , m@@ V@@ 2@@ Sign@@ ing@@ En@@ able@@ d@@ , m@@ V@@ 3@@ Sign@@ ing@@ En@@ able@@ d@@ , m@@ Debugg@@ able@@ Apk@@ Per@@ m@@ it@@ ted@@ , m@@ O@@ th@@ er@@ S@@ ig@@ ner@@ s@@ Sign@@ at@@ ur@@ es@@ P@@ res@@ er@@ v@@ ed@@ , m@@ Cre@@ ated@@ By@@ , mS@@ ig@@ ner@@ En@@ g@@ ine@@ , m@@ Input@@ Apk@@ File@@ , m@@ Input@@ Apk@@ Data@@ Source@@ , m@@ Output@@ Apk@@ File@@ , m@@ Output@@ Apk@@ Data@@ S@@ in@@ k@@ , m@@ Output@@ Apk@@ Data@@ Source@@ ); }
public com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ S@@ ig@@ ner@@ Line@@ age build@@ () { return new com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ S@@ ig@@ ner@@ Line@@ age@@ (); }
private static com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pair@@ <@@ byte@@ []@@ , java.lang.Integ@@ er@@ > g@@ ener@@ ate@@ Apk@@ Sign@@ ature@@ S@@ ch@@ e@@ me@@ V@@ 3@@ Block@@ (@@ java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Config@@ > si@@ g@@ ner@@ Config@@ s, java.util.Map@@ <@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Content@@ Dig@@ est@@ Al@@ gorithm@@ , byte@@ []@@ > cont@@ ent@@ Dig@@ est@@ s) throw@@ s java.security.@@ In@@ valid@@ Key@@ Exception, java.security.@@ No@@ Su@@ ch@@ Al@@ gorithm@@ Exception, java.security.@@ Sign@@ ature@@ Exception { if ((@@ si@@ g@@ ner@@ Config@@ s.@@ size@@ ()) > 1@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ AP@@ K Sign@@ at@@ ur@@ e S@@ ch@@ em@@ e v@@ 3 can@@ not b@@ e u@@ se@@ d wit@@ h " + "@@ m@@ ulti@@ p@@ le si@@ g@@ ner@@ s@@ ")); } java.util.@@ List@@ <@@ byte@@ []@@ > si@@ g@@ ner@@ Block@@ s = new java.util.Array@@ List@@ (@@ si@@ g@@ ner@@ Config@@ s.@@ size@@ ()); int si@@ g@@ ner@@ N@@ umb@@ er = 0; for (com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Con@@ fi@@ g si@@ g@@ ner@@ Con@@ fi@@ g : si@@ g@@ ner@@ Config@@ s) { si@@ g@@ ner@@ Number@@ ++@@ ; byte@@ [] si@@ g@@ ner@@ Block@@ ; try { si@@ g@@ ner@@ B@@ loc@@ k = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ S@@ ch@@ e@@ me@@ Sign@@ er.@@ g@@ ener@@ ate@@ S@@ ig@@ ner@@ Block@@ (@@ si@@ g@@ ner@@ Config@@ , cont@@ ent@@ Dig@@ est@@ s); } catch (@@ java.security.@@ In@@ valid@@ Key@@ Exception e) { throw new java.security.@@ In@@ valid@@ Key@@ Exception@@ ((@@ ("@@ S@@ ig@@ ne@@ r #@@ " + si@@ g@@ ner@@ Number@@ ) + " fa@@ ile@@ d@@ "), e); } catch (@@ java.security.@@ Sign@@ ature@@ Exception e) { throw new java.security.@@ Sign@@ ature@@ Exception@@ ((@@ ("@@ S@@ ig@@ ne@@ r #@@ " + si@@ g@@ ner@@ Number@@ ) + " fa@@ ile@@ d@@ "), e); } si@@ g@@ ner@@ Block@@ s.@@ add(@@ si@@ g@@ ner@@ Block@@ ); } return com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pa@@ ir.@@ o@@ f@@ (com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ en@@ code@@ As@@ Se@@ qu@@ en@@ ce@@ Of@@ Length@@ Pre@@ fix@@ ed@@ Element@@ s@@ (@@ new byte@@ []@@ []{ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ en@@ code@@ As@@ Se@@ qu@@ en@@ ce@@ Of@@ Length@@ Pre@@ fix@@ ed@@ Element@@ s(@@ si@@ g@@ ner@@ Block@@ s) }@@ ), com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ S@@ ch@@ e@@ me@@ Sign@@ er.@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 3@@ _@@ B@@ LO@@ C@@ K@@ _@@ ID@@ ); }
private static com.android.@@ ap@@ k@@ si@@ g.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Con@@ fi@@ g create@@ Sign@@ ing@@ B@@ Lock@@ S@@ ig@@ ner@@ Config@@ (com.android.@@ ap@@ k@@ si@@ g.@@ Default@@ Apk@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Con@@ fi@@ g si@@ g@@ ner@@ Config@@ , boolean ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ , int s@@ ch@@ e@@ me@@ Id@@ ) throw@@ s java.security.@@ In@@ valid@@ Key@@ Exception { java.util.List<@@ java.security.@@ cert.@@ X509@@ Cer@@ t@@ if@@ ic@@ ate@@ > cer@@ t@@ if@@ ic@@ ate@@ s = si@@ g@@ ner@@ Config.@@ get@@ Cer@@ t@@ if@@ i@@ cat@@ es@@ (); java.security.@@ P@@ u@@ bli@@ c@@ K@@ ey public@@ K@@ ey = cer@@ t@@ if@@ i@@ cat@@ es@@ .get@@ (0@@ )@@ .get@@ P@@ u@@ bli@@ c@@ Key@@ (); com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Con@@ fi@@ g new@@ S@@ ig@@ ner@@ Con@@ fi@@ g = new com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Config@@ (); new@@ S@@ ig@@ ner@@ Config@@ .@@ private@@ K@@ ey = si@@ g@@ ner@@ Config.@@ get@@ P@@ riv@@ ate@@ Key@@ (); new@@ S@@ ig@@ ner@@ Config.@@ cer@@ t@@ if@@ ic@@ ate@@ s = cer@@ t@@ if@@ i@@ cat@@ es@@ ; new@@ S@@ ig@@ ner@@ Config.@@ min@@ Sdk@@ Ver@@ sion = si@@ g@@ ner@@ Config.@@ get@@ Min@@ Sdk@@ Version@@ (); new@@ S@@ ig@@ ner@@ Config.@@ max@@ Sdk@@ Ver@@ sion = si@@ g@@ ner@@ Config.@@ get@@ Ma@@ x@@ Sdk@@ Version@@ (); new@@ S@@ ig@@ ner@@ Config.@@ ap@@ k@@ S@@ ig@@ ner@@ Line@@ age = si@@ g@@ ner@@ Config.@@ get@@ Apk@@ S@@ ig@@ ner@@ Line@@ age@@ (); switch (s@@ ch@@ e@@ me@@ Id@@ ) { case com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ V@@ E@@ RS@@ ION@@ _@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 2 : new@@ S@@ ig@@ ner@@ Config.@@ sign@@ ature@@ Al@@ gorithm@@ s = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 2.@@ V@@ 2@@ S@@ ch@@ e@@ me@@ Sign@@ er.get@@ Su@@ gg@@ es@@ ted@@ Sign@@ ature@@ Al@@ gorith@@ ms@@ (@@ public@@ Key@@ , m@@ Min@@ Sdk@@ Version@@ , ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ ); break@@ ; case com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ V@@ E@@ RS@@ ION@@ _@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 3 : new@@ S@@ ig@@ ner@@ Config.@@ sign@@ ature@@ Al@@ gorithm@@ s = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ S@@ ch@@ e@@ me@@ Sign@@ er.get@@ Su@@ gg@@ es@@ ted@@ Sign@@ ature@@ Al@@ gorith@@ ms@@ (@@ public@@ Key@@ , m@@ Min@@ Sdk@@ Version@@ , ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ ); break@@ ; default : throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Un@@ k@@ no@@ w@@ n AP@@ K Sign@@ at@@ ur@@ e S@@ ch@@ em@@ e I@@ D requ@@ es@@ ted@@ "); } return new@@ S@@ ig@@ ner@@ Config@@ ; }
private void check@@ Sign@@ ing@@ Block@@ D@@ one@@ I@@ f@@ En@@ able@@ d@@ () { if (!(m@@ V@@ 3@@ Sign@@ ature@@ P@@ end@@ ing@@ )) { return@@ ; } if ((m@@ Add@@ Sign@@ ing@@ Block@@ Requ@@ est@@ ) == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ In@@ va@@ li@@ d AP@@ K Sign@@ ing@@ "); } if (!(m@@ V@@ 3@@ Sign@@ ature@@ P@@ end@@ ing@@ )) { return@@ ; } if ((m@@ Add@@ Sign@@ ing@@ Block@@ s) == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ In@@ va@@ li@@ d AP@@ K Sign@@ ing@@ "); } if (!(m@@ V@@ 3@@ Sign@@ ature@@ P@@ end@@ ing@@ )) { m@@ V@@ 3@@ Sign@@ ature@@ P@@ end@@ ing = false@@ ; } m@@ Add@@ Sign@@ ing@@ Block@@ Requ@@ est.@@ in@@ iti@@ aliz@@ ed@@ (); }
public com.android.@@ ap@@ k@@ si@@ g.@@ Default@@ Apk@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Con@@ fi@@ g build@@ () { return new com.android.@@ ap@@ k@@ si@@ g.@@ Default@@ Apk@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Config@@ (m@@ Name, m@@ P@@ riv@@ ate@@ Key@@ , m@@ Cer@@ t@@ if@@ ic@@ ate@@ s, m@@ Min@@ Sdk@@ Version@@ , m@@ Ma@@ x@@ Sdk@@ Version@@ , m@@ Apk@@ S@@ ig@@ ner@@ Line@@ ); }
private java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Config@@ > create@@ V@@ 2@@ S@@ ig@@ ner@@ Config@@ s@@ (@@ boolean ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ ) throw@@ s java.security.@@ In@@ valid@@ Key@@ Exception { if ((m@@ O@@ l@@ d@@ S@@ ig@@ ner@@ Config@@ ) != null@@ ) { java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Config@@ > si@@ g@@ ner@@ Con@@ fi@@ g = new java.util.ArrayList<@@ >@@ (@@ ); si@@ g@@ ner@@ Con@@ fi@@ g.@@ ad@@ d@@ (@@ create@@ Sign@@ ing@@ B@@ Lock@@ S@@ ig@@ ner@@ Config@@ (m@@ O@@ l@@ d@@ S@@ ig@@ ner@@ Config@@ , ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ , Apk@@ Sign@@ ing@@ Block@@ Utils.@@ V@@ E@@ RS@@ ION@@ _@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 2@@ )); return@@ ; } si@@ g@@ ner@@ Con@@ fi@@ g = new java.util.ArrayList<@@ >@@ (@@ ); si@@ g@@ ner@@ Con@@ fi@@ g.@@ create@@ Sign@@ ing@@ B@@ Lock@@ S@@ ig@@ ner@@ Config@@ s(@@ ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ , Apk@@ Sign@@ ing@@ Block@@ Uti@@ l@@ s@@ .@@ V@@ E@@ RS@@ ION@@ _@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 2@@ ); } }
private java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Config@@ > create@@ Sign@@ ing@@ B@@ Lock@@ S@@ ig@@ ner@@ Config@@ s@@ (@@ boolean ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ , int s@@ ch@@ e@@ me@@ Id@@ ) throw@@ s java.security.@@ In@@ valid@@ Key@@ Exception { java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Config@@ > si@@ g@@ ner@@ Config@@ s = new java.util.ArrayList<@@ >@@ (m@@ S@@ ig@@ ner@@ Config@@ s.@@ size@@ ()); for (@@ int i = 0; i < (m@@ S@@ ig@@ ner@@ Config@@ s.@@ size@@ ()); i++) { com.android.@@ ap@@ k@@ si@@ g.@@ Default@@ Apk@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Con@@ fi@@ g si@@ g@@ ner@@ Con@@ fi@@ g = mS@@ ig@@ ner@@ Config@@ s.get@@ (i@@ ); si@@ g@@ ner@@ Config@@ s.@@ add(@@ create@@ Sign@@ ing@@ B@@ Lock@@ S@@ ig@@ ner@@ Config@@ (@@ si@@ g@@ ner@@ Config@@ , ap@@ k@@ Sign@@ ing@@ Block@@ P@@ add@@ ing@@ Sup@@ ported@@ , s@@ ch@@ e@@ me@@ Id@@ )); } return si@@ g@@ ner@@ Config@@ s; }
private synchronized void ms@@ g@@ Get@@ Play@@ Statu@@ s@@ Native@@ () { if (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ D@@ B@@ G) android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ TAG, "@@ ms@@ g@@ Get@@ Play@@ Statu@@ s@@ Native@@ "); if ((m@@ A@@ 2@@ d@@ p@@ Device@@ ) == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ TAG, "@@ dis@@ connec@@ ted ign@@ or@@ ing@@ .@@ "); return@@ ; } m@@ Av@@ rc@@ p@@ C@@ tr@@ l@@ S@@ r@@ v@@ c@@ .get@@ Play@@ back@@ State@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ , false@@ ); }
@java.lang.Override public synchronized void on@@ Load@@ Ch@@ ild@@ r@@ en@@ (@@ final java.lang.String parent@@ Media@@ Id, final com.android.@@ bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ Result@@ <@@ java.util.List<@@ android.@@ media.@@ b@@ row@@ s@@ e.@@ Media@@ B@@ row@@ ser.@@ Media@@ Item@@ >@@ > result@@ ) { if ((m@@ Av@@ rc@@ p@@ C@@ tr@@ l@@ S@@ r@@ v@@ c@@ ) == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ TAG, "@@ B@@ row@@ ser@@ Ser@@ vice not y@@ et connec@@ ted@@ .@@ "); res@@ ult.@@ send@@ Result@@ (java.util.@@ Collection@@ s.@@ e@@ mpty@@ List@@ ()); return@@ ; } if (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ D@@ B@@ G) android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ TAG, ("@@ go@@ ing parent@@ Media@@ Id@@ =@@ " + parent@@ Media@@ Id@@ )); if (!(m@@ Av@@ rc@@ p@@ C@@ tr@@ l@@ S@@ r@@ v@@ c@@ .get@@ Ch@@ ild@@ r@@ en@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ , parent@@ Media@@ Id, 0, 25@@ 5@@ ))) { res@@ ult.@@ send@@ Result@@ (java.util.@@ Collection@@ s.@@ e@@ mpty@@ List@@ ()); return@@ ; } synchronized@@ (@@ this@@ ) { m@@ Parent@@ Id@@ To@@ Request@@ Map@@ .@@ put@@ (@@ parent@@ Media@@ Id, result@@ ); } res@@ ult.@@ d@@ et@@ ach@@ (); }
private synchronized void ms@@ g@@ P@@ ass@@ Th@@ r@@ u@@ (@@ int c@@ m@@ d@@ ) { if (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ D@@ B@@ G) android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ TAG, ("@@ S@@ k@@ ip@@ p@@ ing " + c@@ m@@ d@@ )); if ((m@@ A@@ 2@@ d@@ p@@ Device@@ ) == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ ps@@ in@@ k.@@ m@@ b@@ s.@@ A@@ 2@@ d@@ p@@ Media@@ B@@ row@@ ser@@ Service.@@ TAG, "@@ S@@ k@@ ip@@ p@@ ing dis@@ connec@@ ted ign@@ or@@ ing@@ .@@ "); return@@ ; } m@@ Av@@ rc@@ p@@ C@@ tr@@ l@@ S@@ r@@ v@@ c.@@ send@@ P@@ ass@@ Th@@ ro@@ u@@ g@@ h@@ C@@ m@@ d@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ , c@@ m@@ d@@ , Av@@ rc@@ p@@ Control@@ ler@@ Service.@@ KE@@ Y_@@ STATE_@@ P@@ RE@@ SS@@ E@@ D@@ ); m@@ Av@@ rc@@ p@@ C@@ tr@@ l@@ S@@ r@@ v@@ c.@@ send@@ P@@ ass@@ Th@@ ro@@ u@@ g@@ h@@ C@@ m@@ d@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ , c@@ m@@ d@@ , Av@@ rc@@ p@@ Control@@ ler@@ Service.@@ KE@@ Y_@@ STATE_@@ RE@@ LE@@ A@@ SE@@ D@@ ); }
private void clear@@ Im@@ s@@ U@@ ce@@ Service@@ () { synchronized@@ (m@@ S@@ ync@@ Ob@@ j@@ ) { try { if ((m@@ Stack@@ Service@@ ) != null@@ ) { m@@ Stack@@ Service.@@ d@@ est@@ ro@@ y@@ P@@ res@@ en@@ ce@@ Service@@ (m@@ Stack@@ P@@ res@@ en@@ ce@@ Service@@ Handle@@ ); } } catch (android.os.@@ Remote@@ Exception e) { logg@@ er.@@ war@@ n@@ ("@@ Co@@ ul@@ d@@ n@@ 't Co@@ ul@@ d@@ n@@ 't cle@@ an u@@ p st@@ ac@@ k ser@@ vice }@@ ", m@@ Im@@ s@@ U@@ ce@@ Manager = null@@ ; m@@ Stack@@ Ser@@ vice = null@@ ; m@@ Stack@@ P@@ res@@ Ser@@ vice = null@@ ; } } }
private void update@@ Bluetooth@@ En@@ able@@ Av@@ d@@ t@@ p@@ D@@ el@@ ay@@ Re@@ port@@ Option@@ s() { update@@ S@@ wit@@ ch@@ Pre@@ ference@@ (m@@ Bluetooth@@ En@@ able@@ Av@@ d@@ t@@ p@@ D@@ el@@ ay@@ Re@@ port@@ , android.os.@@ System@@ Properties@@ .get@@ Boolean@@ (com.android.@@ setting@@ s.@@ de@@ ve@@ lo@@ p@@ m@@ ent.@@ De@@ ve@@ lo@@ p@@ ment@@ Setting@@ s.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ EN@@ AB@@ L@@ E_@@ AV@@ D@@ T@@ P@@ _@@ DE@@ LA@@ Y@@ _RE@@ P@@ O@@ RT@@ S@@ , false@@ )); }
private void write@@ Bluetooth@@ En@@ able@@ Av@@ d@@ t@@ p@@ D@@ el@@ ay@@ Re@@ port@@ Option@@ s() { android.os.@@ System@@ Proper@@ ti@@ es.@@ set@@ (com.android.@@ setting@@ s.@@ de@@ ve@@ lo@@ p@@ m@@ ent.@@ De@@ ve@@ lo@@ p@@ ment@@ Setting@@ s.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ EN@@ AB@@ L@@ E_@@ AV@@ D@@ T@@ P@@ _@@ DE@@ LA@@ Y@@ _RE@@ P@@ O@@ RT@@ S@@ , (m@@ Bluetooth@@ En@@ able@@ Av@@ d@@ t@@ p@@ D@@ el@@ ay@@ Re@@ port.@@ is@@ Check@@ ed@@ () ? "@@ true@@ " : "@@ false@@ ")); }
@java.lang.Override public void run() { m@@ Callback@@ Handle@@ r = new android.os.@@ Handler@@ (m@@ L@@ oo@@ per@@ , this@@ ); while (@@ true@@ ) { try { list@@ en@@ To@@ Socket@@ (); } catch (java.lang.Exception e) { log@@ e@@ (("@@ Un@@ able in Native@@ D@@ a@@ e@@ mon@@ Con@@ nect@@ or@@ : " + e@@ )); android.os.@@ System@@ C@@ lock@@ .@@ s@@ le@@ e@@ p@@ (@@ 5@@ 00@@ 0); } java.lang.String sh@@ u@@ t@@ do@@ wn@@ Ac@@ t = android.os.@@ System@@ Properties@@ .get@@ (@@ Sh@@ u@@ t@@ do@@ wn@@ Thread@@ .@@ S@@ H@@ UT@@ D@@ O@@ W@@ N@@ _@@ AC@@ TION@@ _P@@ RO@@ P@@ E@@ RT@@ Y@@ , "@@ "); if ((@@ sh@@ u@@ t@@ do@@ wn@@ Ac@@ t != null@@ ) && ((@@ sh@@ u@@ t@@ do@@ wn@@ Ac@@ t.@@ length@@ ()) > 0@@ )) { break@@ ; } } }
@java.lang.Override public void connection@@ Un@@ ava@@ il@@ able@@ () { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Im@@ s@@ S@@ ms@@ Dis@@ p@@ atch@@ er.@@ TAG, "@@ U@@ se@@ r connec@@ tion un@@ ava@@ il@@ able@@ .@@ "); m@@ I@@ s@@ Im@@ s@@ Service@@ U@@ p = false@@ ; }
public void dis@@ connect@@ () { remove@@ Mess@@ ag@@ es@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ Con@@ nect@@ or.@@ EV@@ ENT_@@ GE@@ T_@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E); synchronized@@ (m@@ Lock) { if ((m@@ Im@@ s@@ Manager@@ ) != null@@ ) { m@@ Im@@ s@@ Manager.@@ remove@@ No@@ t@@ if@@ y@@ Statu@@ s@@ Changed@@ Callback@@ (m@@ No@@ t@@ if@@ y@@ Statu@@ s@@ Changed@@ Callback@@ ); } } not@@ if@@ y@@ Not@@ Read@@ y(); }
public void connect@@ () { m@@ R@@ e@@ try@@ Coun@@ t = 0; send@@ Empty@@ Message@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ Con@@ nect@@ or.@@ EV@@ ENT_@@ GE@@ T_@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E); }
private void r@@ e@@ try@@ Get@@ Im@@ s@@ Service@@ () { synchronized@@ (m@@ Lock) { m@@ Im@@ s@@ Manager.@@ remove@@ No@@ t@@ if@@ y@@ Statu@@ s@@ Changed@@ Callback@@ (m@@ No@@ t@@ if@@ y@@ Statu@@ s@@ Changed@@ Callback@@ ); m@@ Im@@ s@@ Manager = null@@ ; } com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ log@@ e@@ ("@@ Con@@ nect@@ or@@ : R@@ e@@ try@@ ing get@@ t@@ ing Im@@ s@@ Service.@@ .@@ "); remove@@ Mess@@ ag@@ es@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ Con@@ nect@@ or.@@ EV@@ ENT_@@ GE@@ T_@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E); send@@ Empty@@ Message@@ D@@ el@@ ay@@ ed@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ Con@@ nect@@ or.@@ EV@@ ENT_@@ GE@@ T_@@ I@@ M@@ S@@ _S@@ ER@@ V@@ IC@@ E, m@@ R@@ e@@ try@@ Time@@ ou@@ t.get@@ ()); }
@java.lang.Override public void connection@@ Read@@ y@@ (com.android.@@ im@@ s@@ .@@ Im@@ s@@ Manager manag@@ er@@ ) throw@@ s com.android.@@ im@@ s@@ .@@ Im@@ s@@ Exception { android.@@ telephony.@@ R@@ log@@ .@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Im@@ s@@ Manager.@@ Im@@ s@@ S@@ ms@@ Dis@@ p@@ atch@@ er.@@ TAG, "@@ Error@@ : connec@@ tion@@ "); read@@ y@@ Listener@@ s(); set@@ Listener@@ s(); m@@ I@@ s@@ Im@@ s@@ Service@@ U@@ p@@ (); m@@ I@@ s@@ Im@@ s@@ Service@@ U@@ p@@ ; true@@ ; }
@org.junit.Test public void di@@ alo@@ g@@ As@@ k@@ s@@ For@@ Pair@@ Code@@ On@@ User@@ E@@ n@@ try@@ Variant@@ () { when@@ (@@ cont@@ ro@@ l@@ l@@ er.get@@ Di@@ alo@@ g@@ Type@@ ()).@@ thenReturn@@ (@@ Bluetooth@@ Pair@@ ing@@ Control@@ ler.@@ US@@ ER_@@ EN@@ TR@@ Y_@@ DI@@ A@@ LO@@ G@@ ); when@@ (@@ cont@@ ro@@ l@@ l@@ er.get@@ Device@@ Variant@@ Message@@ Id@@ ()).@@ thenReturn@@ (@@ Bluetooth@@ Pair@@ ing@@ Control@@ ler.@@ IN@@ V@@ AL@@ ID@@ _@@ DI@@ A@@ LO@@ G_@@ TYP@@ E); when@@ (@@ cont@@ ro@@ l@@ l@@ er.get@@ Device@@ Variant@@ Message@@ H@@ int@@ Id@@ ()).@@ thenReturn@@ (@@ Bluetooth@@ Pair@@ ing@@ Control@@ ler.@@ IN@@ V@@ AL@@ ID@@ _@@ DI@@ A@@ LO@@ G_@@ TYP@@ E); android.content.@@ Context con@@ tex@@ t = s@@ p@@ y@@ (@@ org.@@ ro@@ bo@@ lec@@ tr@@ ic@@ .@@ sh@@ a@@ do@@ w@@ s.@@ Sh@@ a@@ do@@ w@@ Application@@ .get@@ Instance@@ ().get@@ Application@@ Context@@ ()); android.@@ view@@ .@@ input@@ method@@ .@@ Input@@ Method@@ Manager im@@ m = mock@@ (android.@@ view@@ .@@ input@@ method@@ .@@ Input@@ Method@@ Manager@@ .@@ class@@ ); do@@ Return@@ (@@ im@@ m@@ ).@@ when@@ (@@ context@@ )@@ .get@@ System@@ Service@@ (@@ Context.@@ Context.@@ INPUT@@ _M@@ E@@ TH@@ OD@@ _S@@ ER@@ V@@ IC@@ E); com.android.@@ setting@@ s.@@ bluetooth.@@ Bluetooth@@ Pair@@ ing@@ Di@@ alo@@ g@@ F@@ r@@ ag@@ m@@ ent f@@ ra@@ g = s@@ p@@ y@@ (@@ new com.android.@@ setting@@ s.@@ bluetooth.@@ Bluetooth@@ Pair@@ ing@@ Di@@ alo@@ g@@ F@@ r@@ ag@@ ment@@ ()); when@@ (f@@ ra@@ g.@@ get@@ Context@@ ()).@@ thenReturn@@ (@@ context@@ ); set@@ up@@ F@@ r@@ ag@@ ment@@ (f@@ r@@ ag@@ ); android.@@ app.@@ Al@@ er@@ t@@ Di@@ alo@@ g al@@ er@@ t@@ Di@@ alo@@ g = f@@ ra@@ g.@@ get@@ m@@ Di@@ alo@@ g@@ (); android.@@ view@@ .@@ Vi@@ e@@ w vi@@ e@@ w = al@@ er@@ t@@ Di@@ alo@@ g.@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ text@@ ); assert@@ Th@@ at@@ (@@ view@@ .get@@ Vi@@ si@@ b@@ ili@@ ty@@ ()).@@ is@@ Equal@@ To@@ (@@ View@@ .@@ V@@ I@@ SI@@ B@@ L@@ E); assert@@ Th@@ at@@ (@@ view@@ .is@@ F@@ o@@ c@@ u@@ sed@@ ()).@@ is@@ True@@ (); assert@@ Th@@ at@@ (@@ im@@ m.@@ is@@ Ac@@ tive@@ ()) < 0) ? "@@ " : ") + (m@@ C@@ ar@@ ri@@ er@@ t@@ Input@@ Method@@ Manager.@@ S@@ H@@ O@@ W@@ _@@ I@@ M@@ P@@ L@@ IC@@ I@@ T@@ ); }
@org.junit.Test public void test@@ S@@ ho@@ w@@ B@@ oth@@ E@@ s@@ ti@@ mat@@ es@@ _@@ s@@ um@@ m@@ ar@@ ies@@ A@@ re@@ B@@ oth@@ Mo@@ d@@ if@@ i@@ ed@@ () { do@@ Return@@ (@@ new android.@@ widget@@ .@@ Text@@ View@@ (m@@ Re@@ al@@ Context@@ )).@@ when@@ (m@@ B@@ at@@ ter@@ y@@ Layout@@ Pre@@ f@@ ).@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ s@@ um@@ m@@ ary@@ 2@@ ); do@@ Return@@ (@@ new android.@@ widget@@ .@@ Text@@ View@@ (m@@ Re@@ al@@ Context@@ )).@@ when@@ (m@@ B@@ at@@ ter@@ y@@ Layout@@ Pre@@ f@@ ).@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ s@@ um@@ m@@ ary@@ 1); m@@ F@@ r@@ ag@@ m@@ ent.@@ on@@ Long@@ C@@ li@@ ck@@ (@@ new android.@@ view@@ .@@ View@@ (m@@ Re@@ al@@ Context@@ )); android.@@ widget@@ .@@ Text@@ Vi@@ e@@ w s@@ um@@ m@@ ary@@ 1 = m@@ F@@ r@@ ag@@ m@@ ent.@@ m@@ B@@ at@@ ter@@ y@@ Layout@@ Pre@@ f.@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ s@@ um@@ m@@ ary@@ 1); android.@@ widget@@ .@@ Text@@ Vi@@ e@@ w s@@ um@@ m@@ ary@@ 2 = m@@ F@@ r@@ ag@@ m@@ ent.@@ m@@ B@@ at@@ ter@@ y@@ Layout@@ Pre@@ f.@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ s@@ um@@ m@@ ary@@ 2@@ ); org.@@ ro@@ bo@@ lec@@ tr@@ ic@@ .@@ R@@ ob@@ o@@ lec@@ tr@@ ic@@ .@@ f@@ lu@@ sh@@ B@@ ack@@ g@@ round@@ Thread@@ S@@ ch@@ ed@@ ul@@ er@@ (); assert@@ Th@@ at@@ (s@@ um@@ m@@ ary@@ 2@@ .get@@ Text@@ ().@@ toString@@ ()@@ ), java.lang.Integ@@ er.@@ toString@@ (@@ R.@@ id@@ .@@ s@@ (com.android.@@ setting@@ s.@@ f@@ ue@@ l@@ g@@ au@@ g@@ e.@@ Po@@ w@@ er@@ U@@ s@@ age@@ S@@ um@@ m@@ ary@@ Test.@@ N@@ E@@ W@@ _M@@ L@@ _@@ E@@ ST_@@ S@@ U@@ F@@ FI@@ X@@ ); assert@@ Th@@ at@@ (s@@ um@@ m@@ ary@@ 1@@ .get@@ Text@@ ().@@ toString@@ ()@@ ), m@@ ary@@ 1@@ .get@@ Text@@ ().@@ toString@@ ()); }
@com.android.@@ setting@@ s.@@ app@@ lic@@ ations.@@ I@@ gn@@ ore@@ ("@@ b@@ /@@ 7@@ 3@@ 8@@ 9@@ 25@@ 5@@ ") @org.junit.Test public void test@@ Co@@ lle@@ ct@@ P@@ ip@@ Ap@@ ps@@ () { android.content.@@ p@@ m.@@ Package@@ Info p@@ ri@@ m@@ ary@@ P@@ 1 = create@@ Package@@ ("@@ Cal@@ c@@ ul@@ ator@@ ", true@@ ); android.content.@@ p@@ m.@@ Package@@ Info p@@ ri@@ m@@ ary@@ P@@ 2 = create@@ Package@@ ("@@ C@@ lock@@ ", false@@ ); android.content.@@ p@@ m.@@ Package@@ Info pro@@ file@@ P@@ 1 = create@@ Package@@ ("@@ Cal@@ c@@ ul@@ ator@@ ", false@@ ); android.content.@@ p@@ m.@@ Package@@ Info pro@@ file@@ P@@ 2 = create@@ Package@@ ("@@ C@@ lock@@ ", true@@ ); m@@ Pri@@ m@@ ary@@ User@@ Pack@@ ag@@ es.@@ add@@ (p@@ ri@@ m@@ ary@@ P@@ 1); m@@ Pri@@ m@@ ary@@ User@@ Pack@@ ag@@ es.@@ add@@ (p@@ ri@@ m@@ ary@@ P@@ 2@@ ); m@@ Pro@@ file@@ User@@ Pack@@ ag@@ es.@@ add(@@ pro@@ file@@ P@@ 1); m@@ Pro@@ file@@ User@@ Pack@@ ag@@ es.@@ add(@@ pro@@ file@@ P@@ 2@@ ); java.util.ArrayList<@@ android.util.@@ Pair@@ <@@ android.content.@@ p@@ m.@@ Application@@ Info@@ , java.lang.Integ@@ er@@ >@@ > app@@ s = m@@ F@@ r@@ ag@@ m@@ ent.@@ co@@ lle@@ ct@@ P@@ ip@@ Ap@@ ps@@ (com.android.@@ setting@@ s.@@ app@@ lic@@ ations.@@ P@@ i@@ ct@@ ure@@ In@@ P@@ i@@ ct@@ ure@@ Setting@@ s@@ Test.@@ P@@ R@@ I@@ M@@ AR@@ Y_@@ US@@ ER_@@ ID@@ ); assert@@ Th@@ at@@ (@@ contain@@ s@@ Pack@@ ag@@ es@@ (@@ ap@@ ps@@ , p@@ ri@@ m@@ ary@@ P@@ 1, pro@@ file@@ P@@ 2@@ )).@@ is@@ True@@ (); assert@@ Th@@ at@@ (@@ contain@@ s@@ Pack@@ ag@@ es@@ (@@ ap@@ ps@@ , p@@ ri@@ m@@ ary@@ P@@ 2, pro@@ file@@ P@@ 1@@ )).@@ is@@ False@@ (); }
void e@@ n@@ for@@ ce@@ Valid@@ Connection@@ State@@ Tr@@ an@@ sition@@ () { boolean result = false@@ ; if (@@ this@@ ) == (m@@ W@@ ait@@ ing@@ For@@ Au@@ th@@ )) { result = ((@@ (m@@ Pre@@ v@@ State@@ ) == null@@ ) || ((m@@ Pre@@ v@@ State@@ ) == (m@@ F@@ in@@ is@@ h@@ ed@@ ))) || ((m@@ Pre@@ v@@ State@@ ) == (m@@ Connec@@ ted@@ )); } else if (@@ this@@ ) == (m@@ F@@ in@@ is@@ h@@ ed@@ )) { result = (m@@ Pre@@ v@@ State@@ ) == (m@@ Connec@@ ted@@ ); } else if (@@ this@@ ) == (m@@ Connec@@ ted@@ )) { result = (m@@ Pre@@ v@@ State@@ ) == (m@@ F@@ in@@ is@@ h@@ ed@@ ); } if (!@@ result@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ((((@@ (("@@ In@@ va@@ li@@ d st@@ ate tr@@ an@@ si@@ tion f@@ ro@@ m " + (m@@ Pre@@ v@@ State@@ )) + " to ") + (@@ this@@ )) + " for de@@ vice ") + (m@@ Remote@@ Device@@ ))); } }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ S@@ end@@ Im@@ s@@ C@@ d@@ ma@@ Test@@ () throw@@ s java.lang.Exception { switch@@ Im@@ s@@ S@@ ms@@ Format@@ (@@ Phone@@ Constants.@@ P@@ H@@ ON@@ E_@@ TYP@@ E_@@ C@@ D@@ MA@@ ); m@@ Im@@ s@@ S@@ ms@@ Dis@@ p@@ atch@@ er.@@ send@@ Text@@ ("@@ 1@@ 1@@ 1@@ ", "@@ 2@@ 2@@ ", com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ TAG, null@@ , null@@ , null@@ , false@@ , (-1@@ ), false@@ , (-1@@ )); ve@@ r@@ if@@ y@@ (m@@ Sim@@ ul@@ ated@@ Command@@ s@@ V@@ er@@ if@@ ier@@ ).@@ send@@ Im@@ s@@ C@@ d@@ ma@@ S@@ ms@@ ((@@ (@@ byte@@ []@@ ) (@@ an@@ y@@ ()@@ )), e@@ q@@ (0@@ ), an@@ y@@ (android.os.@@ Message@@ .@@ class@@ )); }
@java.lang.Override protected com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ S@@ ms@@ Tr@@ ack@@ er get@@ New@@ Sub@@ m@@ it@@ P@@ du@@ Tr@@ ack@@ er@@ (java.lang.String d@@ est@@ in@@ ation@@ Addres@@ s, java.lang.String sc@@ Addres@@ s, java.lang.String message@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ S@@ ms@@ He@@ ad@@ er s@@ ms@@ He@@ ad@@ er, int en@@ cod@@ ing@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent s@@ ent@@ Intent@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent de@@ li@@ ver@@ y@@ Intent@@ , boolean las@@ t@@ Par@@ t@@ , java.util.@@ concurrent.@@ at@@ om@@ ic@@ .@@ A@@ to@@ m@@ ic@@ Integ@@ er un@@ s@@ ent@@ Par@@ t@@ Count@@ , java.util.@@ concurrent.@@ at@@ om@@ ic@@ .@@ A@@ to@@ m@@ ic@@ Boole@@ an an@@ y@@ Par@@ t@@ Faile@@ d@@ , android.net.@@ Ur@@ i message@@ U@@ ri@@ , java.lang.String f@@ ull@@ Message@@ T@@ ex@@ t@@ , int p@@ ri@@ or@@ ity@@ , boolean exp@@ ect@@ M@@ ore@@ , int valid@@ ity@@ Per@@ io@@ d@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ S@@ ms@@ Mess@@ age.@@ Sub@@ m@@ it@@ P@@ d@@ u p@@ d@@ u = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ S@@ ms@@ Mess@@ ag@@ e.get@@ Sub@@ m@@ it@@ P@@ du@@ (s@@ c@@ Addres@@ s, d@@ est@@ in@@ ation@@ Addres@@ s, message@@ , (@@ de@@ li@@ ver@@ y@@ Int@@ ent != null@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ S@@ ms@@ He@@ ad@@ er.@@ to@@ ByteArray@@ (s@@ ms@@ He@@ ader@@ ), en@@ cod@@ ing@@ , s@@ ms@@ He@@ ad@@ er.@@ lan@@ gu@@ age@@ T@@ able@@ , s@@ ms@@ He@@ ad@@ er.@@ lan@@ gu@@ age@@ S@@ h@@ if@@ t@@ T@@ able@@ , valid@@ ity@@ Per@@ io@@ d@@ ); if (p@@ d@@ u != null@@ ) { java.util.@@ Hash@@ Ma@@ p ma@@ p = get@@ S@@ ms@@ Tr@@ ack@@ er@@ Map@@ (d@@ est@@ in@@ ation@@ Addres@@ s, sc@@ Addres@@ s, message@@ , p@@ du@@ ); return get@@ S@@ ms@@ Tr@@ ack@@ er@@ (m@@ ap@@ , s@@ ent@@ Intent@@ , de@@ li@@ ver@@ y@@ Intent@@ , get@@ Format@@ (), un@@ s@@ ent@@ Par@@ t@@ Count@@ , an@@ y@@ Par@@ t@@ Faile@@ d@@ , message@@ U@@ ri@@ , s@@ ms@@ He@@ ad@@ er, las@@ t@@ Par@@ t@@ , true@@ , false@@ , p@@ ri@@ or@@ ity@@ Per@@ io@@ d@@ ); } else { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ G@@ s@@ mS@@ M@@ S@@ Dis@@ p@@ atch@@ er.@@ TAG, get@@ Sub@@ m@@ it@@ P@@ du@@ () return@@ ed null return null@@ ; } }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ S@@ end@@ Im@@ s@@ G@@ ms@@ Test@@ With@@ Out@@ Des@@ Add@@ r@@ () throw@@ s java.lang.Exception { switch@@ Im@@ s@@ S@@ ms@@ Format@@ (@@ Phone@@ Constants.@@ P@@ H@@ ON@@ E_@@ TYP@@ E_@@ G@@ S@@ M@@ ); m@@ Im@@ s@@ S@@ ms@@ Dis@@ p@@ atch@@ er.@@ send@@ Text@@ (@@ null@@ , "@@ 2@@ 2@@ 2@@ ", com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ TAG, null@@ , null@@ , false@@ , (-1@@ ), false@@ , (-1@@ ); ve@@ r@@ if@@ y@@ (m@@ Sim@@ ul@@ ated@@ Command@@ s@@ V@@ er@@ if@@ ier@@ , tim@@ es@@ (0@@ )).@@ send@@ Im@@ s@@ G@@ s@@ mS@@ m@@ s(@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ (), an@@ y@@ (android.os.@@ Message@@ .@@ class@@ )); }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing @java.lang.Override public void send@@ Text@@ (java.lang.String d@@ est@@ Add@@ r@@ , java.lang.String sc@@ Add@@ r@@ , java.lang.String text@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent s@@ ent@@ Intent@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent de@@ li@@ ver@@ y@@ Intent@@ , android.net.@@ Ur@@ i message@@ U@@ ri@@ , java.lang.String call@@ ing@@ P@@ kg@@ , boolean per@@ si@@ st@@ Mess@@ age@@ , int p@@ ri@@ or@@ ity@@ , boolean exp@@ ect@@ M@@ ore@@ , int valid@@ ity@@ Per@@ io@@ d@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ S@@ ms@@ Mess@@ age.@@ Sub@@ m@@ it@@ P@@ d@@ u p@@ d@@ u = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ S@@ ms@@ Mess@@ ag@@ e.get@@ Sub@@ m@@ it@@ P@@ du@@ (s@@ c@@ Add@@ r@@ , d@@ est@@ Add@@ r@@ , text@@ , (@@ de@@ li@@ ver@@ y@@ Int@@ ent != null@@ ) , valid@@ ity@@ Per@@ io@@ d@@ ); if (p@@ d@@ u != null@@ ) { java.util.@@ Hash@@ Ma@@ p ma@@ p = get@@ S@@ ms@@ Tr@@ ack@@ er@@ Map@@ (d@@ est@@ Add@@ r@@ , sc@@ Add@@ r@@ , text@@ , p@@ du@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ S@@ ms@@ Tr@@ ack@@ er tr@@ ack@@ er = get@@ S@@ ms@@ Tr@@ ack@@ er@@ (m@@ ap@@ , s@@ ent@@ Intent@@ , de@@ li@@ ver@@ y@@ Intent@@ , get@@ Format@@ (), message@@ U@@ ri@@ , false@@ , true@@ , per@@ si@@ st@@ Mess@@ age@@ , p@@ ri@@ or@@ ity@@ , valid@@ ity@@ Per@@ io@@ d@@ ); java.lang.String c@@ ar@@ ri@@ er@@ Pack@@ age = get@@ C@@ ar@@ ri@@ er@@ App@@ Package@@ Name@@ (); if (c@@ ar@@ ri@@ er@@ Pack@@ age != null@@ ) { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ G@@ s@@ mS@@ M@@ S@@ Dis@@ p@@ atch@@ er.@@ TAG, "@@ S@@ ms@@ S@@ ms@@ er c@@ ar@@ ri@@ er package@@ . com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ Text@@ S@@ ms@@ S@@ en@@ der s@@ ms@@ S@@ en@@ der = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ Text@@ S@@ ms@@ S@@ ender@@ (@@ tr@@ ack@@ er@@ ); s@@ ms@@ S@@ end@@ er.@@ send@@ S@@ ms@@ By@@ C@@ ar@@ ri@@ er@@ App@@ (c@@ ar@@ ri@@ er@@ Package@@ , new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ S@@ ms@@ S@@ ender@@ )); } else { android.@@ telephony.@@ R@@ log.@@ v@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ G@@ s@@ mS@@ M@@ S@@ Dis@@ p@@ atch@@ er.@@ TAG, "@@ S@@ ms@@ "); send@@ R@@ aw@@ P@@ du@@ (@@ tr@@ ack@@ er@@ ); } } else { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ g@@ s@@ m.@@ G@@ s@@ mS@@ M@@ S@@ Dis@@ p@@ atch@@ er.@@ TAG, get@@ Sub@@ m@@ it@@ P@@ du@@ () return@@ ed null } }
@java.lang.Override protected com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ c@@ d@@ m@@ a.@@ S@@ ms@@ Tr@@ ack@@ er get@@ New@@ Sub@@ m@@ it@@ P@@ du@@ Tr@@ ack@@ er@@ (java.lang.String d@@ est@@ in@@ ation@@ Addres@@ s, java.lang.String sc@@ Addres@@ s, java.lang.String message@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ S@@ ms@@ He@@ ad@@ er s@@ ms@@ He@@ ad@@ er, int en@@ cod@@ ing@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent s@@ ent@@ Intent@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent de@@ li@@ ver@@ y@@ Intent@@ , boolean las@@ t@@ Par@@ t@@ , java.util.@@ concurrent.@@ at@@ om@@ ic@@ .@@ A@@ to@@ m@@ ic@@ Integ@@ er un@@ s@@ ent@@ Par@@ t@@ Count@@ , java.util.@@ concurrent.@@ at@@ om@@ ic@@ .@@ A@@ to@@ m@@ ic@@ Boole@@ an an@@ y@@ Par@@ t@@ Faile@@ d@@ , android.net.@@ Ur@@ i message@@ U@@ ri@@ , java.lang.String f@@ ull@@ Message@@ T@@ ex@@ t@@ , int p@@ ri@@ or@@ ity@@ , boolean exp@@ ect@@ M@@ ore@@ , int valid@@ ity@@ Per@@ io@@ d@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ c@@ d@@ m@@ a.@@ s@@ m@@ s.@@ User@@ Data u@@ Data = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ c@@ d@@ m@@ a.@@ s@@ m@@ s.@@ User@@ Data@@ (); u@@ Data.@@ p@@ ay@@ load@@ St@@ r = message@@ ; u@@ Data.@@ user@@ Data@@ He@@ ad@@ er = s@@ ms@@ He@@ ader@@ ; if (@@ en@@ cod@@ ing == (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ S@@ ms@@ Constants.@@ EN@@ C@@ OD@@ ING@@ _@@ 7@@ B@@ I@@ T@@ )) { u@@ Data.@@ ms@@ g@@ En@@ cod@@ ing = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ c@@ d@@ m@@ a.@@ s@@ m@@ s.@@ User@@ Data.@@ EN@@ C@@ OD@@ ING@@ _@@ G@@ S@@ M@@ _@@ 7@@ B@@ I@@ T_@@ AL@@ P@@ H@@ AB@@ E@@ T@@ ; } else { u@@ Data.@@ ms@@ g@@ En@@ cod@@ ing = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ c@@ d@@ m@@ a.@@ s@@ m@@ s.@@ User@@ Data.@@ EN@@ C@@ OD@@ ING@@ _@@ UN@@ IC@@ OD@@ E_@@ 16@@ ; } u@@ Data.@@ ms@@ g@@ En@@ cod@@ ing@@ Se@@ t = true@@ ; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ c@@ d@@ m@@ a.@@ S@@ ms@@ Mess@@ age.@@ Sub@@ m@@ it@@ P@@ d@@ u sub@@ m@@ it@@ P@@ d@@ u = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ c@@ d@@ m@@ a.@@ S@@ ms@@ Mess@@ ag@@ e.get@@ Sub@@ m@@ it@@ P@@ du@@ (d@@ est@@ in@@ ation@@ Addres@@ s, u@@ Data@@ , ((@@ de@@ li@@ ver@@ y@@ Int@@ ent != null@@ ) && las@@ t@@ Par@@ t@@ , p@@ ri@@ or@@ it@@ y@@ ); java.util.@@ Hash@@ Ma@@ p ma@@ p = get@@ S@@ ms@@ Tr@@ ack@@ er@@ Map@@ (d@@ est@@ in@@ ation@@ Addres@@ s, sc@@ Addres@@ s, message@@ , sub@@ m@@ it@@ P@@ du@@ ); return get@@ S@@ ms@@ Tr@@ ack@@ er@@ (m@@ ap@@ , s@@ ent@@ Intent@@ , de@@ li@@ ver@@ y@@ Intent@@ , get@@ Format@@ (), un@@ s@@ ent@@ Par@@ t@@ Count@@ , message@@ U@@ ri@@ , s@@ ms@@ He@@ ad@@ er, ((@@ !@@ las@@ t@@ Par@@ t@@ Par@@ t@@ ) || exp@@ ect@@ M@@ or@@ e) || exp@@ ect@@ M@@ or@@ e); }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test @@@ android.@@ test.@@ F@@ la@@ k@@ y@@ Test @org.junit.@@ I@@ gn@@ or@@ e public void test@@ S@@ end@@ Im@@ s@@ G@@ ms@@ Test@@ () throw@@ s java.lang.Exception { switch@@ Im@@ s@@ S@@ ms@@ Format@@ (@@ Phone@@ Constants.@@ P@@ H@@ ON@@ E_@@ TYP@@ E_@@ G@@ S@@ M@@ ); m@@ Im@@ s@@ S@@ ms@@ Dis@@ p@@ atch@@ er.@@ send@@ Text@@ ("@@ 1@@ 1@@ ", "@@ 2@@ 2@@ ", com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ TAG, null@@ , null@@ , null@@ , null@@ , false@@ , (-1@@ ), false@@ , (-1@@ )); ve@@ r@@ if@@ y@@ (m@@ Sim@@ ul@@ ated@@ Command@@ s@@ V@@ er@@ if@@ ier@@ ).@@ send@@ Im@@ s@@ G@@ s@@ mS@@ m@@ s(@@ e@@ q@@ ("@@ 0@@ 3@@ 8@@ 12@@ 2@@ f@@ 2@@ "), e@@ q@@ ("@@ 0@@ 1@@ 00@@ 0@@ 3@@ 8@@ 1@@ 1@@ 1@@ 1@@ 0000@@ 1@@ 4@@ c@@ 9@@ f@@ 6@@ 7@@ c@@ da@@ 9@@ c@@ 12@@ d@@ 3@@ 7@@ 8@@ 9@@ 8@@ 3@@ e@@ 4@@ 6@@ 9@@ 7@@ e@@ 5@@ d@@ 4@@ f@@ 2@@ 9@@ c@@ 0@@ e@@ "), e@@ q@@ (0@@ ), an@@ y@@ (android.os.@@ Message@@ .@@ class@@ )); }
public void send@@ Stor@@ ed@@ Text@@ (java.lang.String call@@ ing@@ P@@ kg@@ , android.net.@@ Ur@@ i message@@ U@@ ri@@ , java.lang.String sc@@ Addres@@ s, android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent s@@ ent@@ Intent@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent de@@ li@@ ver@@ y@@ Intent@@ ) { m@@ Ph@@ on@@ e.get@@ Context@@ ().@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Permission@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ S@@ END@@ _S@@ M@@ S@@ , S@@ M@@ S mess@@ age if (android.@@ telephony.@@ R@@ log.@@ is@@ Logg@@ able@@ ("@@ S@@ M@@ S@@ ", Log.@@ V@@ ER@@ B@@ O@@ SE@@ )) { log@@ ((((@@ ((@@ (("@@ S@@ M@@ S@@ : sc@@ Add@@ r@@ =@@ " + sc@@ Addres@@ s) + " message@@ U@@ ri@@ =@@ ") + message@@ U@@ ri@@ ) + " s@@ ent@@ Intent@@ =@@ ") + s@@ ent@@ Intent@@ ) + " de@@ li@@ ver@@ y@@ Intent@@ =@@ ") + de@@ li@@ ver@@ y@@ Intent@@ )); } if ((m@@ App@@ Op@@ s.@@ no@@ te@@ Op@@ (@@ App@@ O@@ ps@@ Manager.@@ O@@ P@@ _S@@ END@@ _S@@ M@@ S@@ , android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (), call@@ ing@@ P@@ kg@@ )) != (android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ M@@ OD@@ E_@@ AL@@ LO@@ W@@ E@@ D@@ )) { return@@ ; } final android.content.@@ Content@@ Res@@ ol@@ ve@@ r res@@ ol@@ ve@@ r = m@@ Ph@@ on@@ e.get@@ Context@@ ().get@@ Content@@ Res@@ ol@@ ver@@ (); if (!(@@ is@@ Faile@@ d@@ Or@@ D@@ ra@@ f@@ t@@ (@@ res@@ ol@@ ver@@ , message@@ U@@ ri@@ ))) { android.util.Log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ S@@ ms@@ Interface@@ Manager.@@ LO@@ G_@@ TAG, "@@ S@@ ms@@ : not FA@@ IL@@ E@@ D@@ R@@ A@@ F@@ T mess@@ age return@@ Un@@ s@@ pe@@ c@@ if@@ i@@ ed@@ Fail@@ ure@@ (s@@ ent@@ Intent@@ ); return@@ ; } final java.lang.String[] text@@ And@@ Address = load@@ Text@@ And@@ Addres@@ s(@@ res@@ ol@@ ver@@ , message@@ U@@ ri@@ ); if (@@ text@@ And@@ Address == null@@ ) { android.util.Log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ S@@ ms@@ Interface@@ Manager.@@ LO@@ G_@@ TAG, "@@ S@@ ms@@ ing c@@ an not lo@@ ad tex@@ t return@@ Un@@ s@@ pe@@ c@@ if@@ i@@ ed@@ Fail@@ ure@@ (s@@ ent@@ Intent@@ ); return@@ ; } text@@ And@@ Address@@ [@@ 1@@ ] = fil@@ ter@@ D@@ est@@ Addres@@ s(@@ text@@ And@@ Address@@ [@@ 1@@ ]@@ ); m@@ Dis@@ p@@ atch@@ er.@@ send@@ Text@@ (@@ text@@ And@@ Address@@ [@@ 1@@ ]@@ , sc@@ Addres@@ s, text@@ And@@ Address@@ [0@@ ]@@ , s@@ ent@@ Intent@@ , de@@ li@@ ver@@ y@@ Intent@@ , message@@ U@@ ri@@ , call@@ ing@@ P@@ kg@@ , true@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ S@@ ms@@ Interface@@ Manager.@@ S@@ M@@ S@@ _M@@ E@@ SS@@ A@@ G@@ E_@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _N@@ O@@ T_@@ S@@ P@@ EC@@ I@@ FI@@ E@@ D@@ , false@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ S@@ ms@@ Interface@@ Manager.@@ S@@ M@@ S@@ _M@@ E@@ SS@@ A@@ G@@ E_@@ P@@ ER@@ I@@ FI@@ E@@ D@@ ); }
public void send@@ Multi@@ par@@ t@@ Text@@ (java.lang.String call@@ ing@@ Package@@ , java.lang.String d@@ est@@ Add@@ r@@ , java.lang.String sc@@ Add@@ r@@ , java.util.List<@@ java.lang.String> par@@ t@@ s, java.util.List<@@ android.@@ app.@@ P@@ end@@ ing@@ Intent@@ > s@@ ent@@ Intent@@ s, java.util.List<@@ android.@@ app.@@ P@@ end@@ ing@@ Intent@@ > de@@ li@@ ver@@ y@@ Intent@@ s, boolean per@@ si@@ st@@ Message@@ For@@ Non@@ Default@@ S@@ ms@@ App@@ ) { send@@ Multi@@ par@@ t@@ Text@@ With@@ Option@@ s(@@ call@@ ing@@ Pack@@ age@@ , d@@ est@@ Add@@ r@@ , d@@ est@@ Add@@ r@@ , d@@ est@@ Add@@ r@@ , d@@ est@@ Add@@ r@@ , par@@ t@@ s, message@@ Intent@@ s, de@@ li@@ ver@@ y@@ Intent@@ s, per@@ si@@ st@@ Message@@ For@@ Non@@ Default@@ S@@ ms@@ Ap@@ p@@ Ap@@ p@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ S@@ ms@@ Interface@@ Manager.@@ S@@ M@@ S@@ _M@@ E@@ SS@@ A@@ G@@ E_@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _N@@ O@@ T_@@ S@@ P@@ EC@@ I@@ FI@@ E@@ D@@ , false@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ cc@@ S@@ ms@@ Interface@@ Manager.@@ S@@ M@@ S@@ _M@@ E@@ SS@@ A@@ G@@ E_@@ P@@ ER@@ I@@ OD@@ _N@@ O@@ T_@@ S@@ P@@ EC@@ I@@ FI@@ E@@ D@@ ); }
private void send@@ Text@@ In@@ ternal@@ (java.lang.String call@@ ing@@ Package@@ , java.lang.String d@@ est@@ Add@@ r@@ , java.lang.String sc@@ Add@@ r@@ , java.lang.String text@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent s@@ ent@@ Intent@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent de@@ li@@ ver@@ y@@ Intent@@ , boolean per@@ si@@ st@@ Message@@ For@@ Non@@ Default@@ S@@ ms@@ Ap@@ p@@ , int p@@ ri@@ or@@ ity@@ , boolean exp@@ ect@@ M@@ ore@@ , int valid@@ ity@@ Per@@ io@@ d@@ ) { if (android.@@ telephony.@@ R@@ log.@@ is@@ Logg@@ able@@ ("@@ S@@ M@@ S@@ ", Log.@@ V@@ ER@@ B@@ O@@ SE@@ )) { log@@ ((((@@ ((@@ (((@@ (((@@ (((@@ d@@ est@@ Add@@ r@@ =@@ " + d@@ est@@ Add@@ r@@ ) + " sc@@ Add@@ r@@ =@@ ") + sc@@ Add@@ r@@ ) + " text@@ =@@ ") + text@@ ) + " s@@ ent@@ Intent@@ =@@ ") + s@@ ent@@ Intent@@ ) + " de@@ li@@ ver@@ y@@ Intent@@ =@@ ") + de@@ li@@ ver@@ y@@ Int@@ ent@@ ) + " p@@ ri@@ or@@ ity@@ =@@ ") + p@@ ri@@ or@@ ity@@ ) + " exp@@ ect@@ M@@ ore@@ =@@ ") + exp@@ ect@@ M@@ or@@ e) + " valid@@ ity@@ Per@@ io@@ d@@ =@@ ") + valid@@ ity@@ Per@@ io@@ d@@ )); } if ((m@@ App@@ Op@@ s.@@ no@@ te@@ Op@@ (@@ App@@ O@@ ps@@ Manager.@@ O@@ P@@ _S@@ END@@ _S@@ M@@ S@@ , android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (), call@@ ing@@ Package@@ )) != (android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ M@@ OD@@ E_@@ AL@@ LO@@ W@@ E@@ D@@ )) { return@@ ; } if (!@@ per@@ si@@ st@@ Message@@ For@@ Non@@ Default@@ S@@ ms@@ App@@ ) { e@@ n@@ for@@ ce@@ Pri@@ vi@@ le@@ g@@ ed@@ App@@ Permission@@ s(); } d@@ est@@ Add@@ r = fil@@ ter@@ D@@ est@@ Addres@@ s(@@ d@@ est@@ Add@@ r@@ ); m@@ Dis@@ p@@ atch@@ er.@@ send@@ Text@@ (d@@ est@@ Add@@ r@@ , sc@@ Add@@ r@@ , text@@ , s@@ ent@@ Intent@@ , de@@ li@@ ver@@ y@@ Intent@@ , null@@ , call@@ ing@@ Package@@ , per@@ si@@ st@@ Message@@ For@@ Non@@ Default@@ S@@ ms@@ Ap@@ p@@ ri@@ or@@ ity@@ , exp@@ ect@@ M@@ ore@@ , valid@@ ity@@ Per@@ io@@ d@@ ); }
protected abstract void send@@ Text@@ (java.lang.String d@@ est@@ Add@@ r@@ , java.lang.String sc@@ Add@@ r@@ , java.lang.String text@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent s@@ ent@@ Intent@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent de@@ li@@ ver@@ y@@ Intent@@ , android.net.@@ Ur@@ i message@@ U@@ ri@@ , java.lang.String call@@ ing@@ P@@ kg@@ , boolean per@@ si@@ st@@ Mess@@ age@@ , int p@@ ri@@ or@@ ity@@ , boolean exp@@ ect@@ M@@ ore@@ , int valid@@ ity@@ Per@@ io@@ d@@ );
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s pre@@ f@@ s = android.@@ pre@@ ference@@ .@@ Pre@@ ference@@ Manager.@@ get@@ Default@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ (@@ context@@ ); if (@@ Int@@ ent.@@ AC@@ TION@@ _@@ B@@ O@@ O@@ O@@ O@@ T_@@ C@@ O@@ M@@ P@@ LE@@ TE@@ D@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ update@@ Tr@@ ac@@ ing@@ (@@ context@@ ); } else if (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ S@@ TO@@ P@@ _@@ AC@@ TION@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { pre@@ fs.@@ ed@@ it@@ ().@@ put@@ Boolean@@ (@@ con@@ tex@@ t.get@@ String(@@ R.@@ str@@ ing.@@ pre@@ f@@ _@@ key@@ _@@ tr@@ ac@@ ing@@ _@@ on@@ ), false@@ ).@@ app@@ ly@@ (); com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ update@@ Tr@@ ac@@ ing@@ (@@ context@@ ); } else if (com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ O@@ P@@ EN@@ _@@ AC@@ TION@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { con@@ text.@@ send@@ B@@ roadcast@@ (@@ new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _C@@ LO@@ S@@ E_@@ S@@ Y@@ S@@ TE@@ M@@ _@@ DI@@ A@@ LO@@ G@@ S@@ )); con@@ text.@@ start@@ Activity@@ (@@ new android.content.@@ Intent@@ (@@ context@@ , com.android.@@ trace@@ ur@@ .@@ M@@ ain@@ Activity@@ .@@ class@@ ).set@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ )); } }
@java.lang.Override public java.lang.String toString@@ () { return ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ (("@@ Data@@ Pro@@ file@@ =@@ " + (m@@ Pro@@ file@@ Id@@ )) + "@@ /@@ ") + (m@@ Pro@@ to@@ col@@ )) + "@@ /@@ ") + (m@@ Au@@ th@@ Type@@ )) + "@@ /@@ ") + ("@@ user@@ ".@@ equals(@@ Build@@ .@@ TYP@@ E@@ ) ? "@@ *@@ *@@ *@@ /@@ *@@ *@@ *@@ *@@ *@@ *@@ " : (((@@ (m@@ Ap@@ n@@ ) + "@@ /@@ ") + (m@@ User@@ Name@@ )) + "@@ /@@ ") + (m@@ P@@ ass@@ wor@@ d@@ )) + "@@ /@@ ") + (m@@ Type@@ )) + "@@ /@@ ") + (m@@ Ma@@ x@@ Con@@ n@@ s@@ Time@@ )) + "@@ /@@ ") + (m@@ Ma@@ x@@ Con@@ n@@ s@@ )) + "@@ /@@ ") + (m@@ W@@ ait@@ Time@@ )) + "@@ /@@ ") + (m@@ Enabled@@ )) + "@@ /@@ ") + (m@@ Sup@@ ported@@ Ap@@ n@@ Typ@@ es@@ Bit@@ m@@ ap@@ )) + "@@ /@@ ") + (m@@ R@@ o@@ am@@ ing@@ Pro@@ to@@ col@@ )) + "@@ /@@ ") + (m@@ B@@ e@@ ar@@ er@@ Bit@@ m@@ ap@@ )) + "@@ /@@ ") + (m@@ M@@ t@@ u@@ )) + "@@ /@@ ") + (m@@ M@@ v@@ no@@ Type@@ )) + "@@ /@@ ") + (m@@ M@@ v@@ no@@ Match@@ Data@@ )) + "@@ /@@ ") + (m@@ Mode@@ m@@ Co@@ gn@@ iti@@ ve@@ ); }
public final void on@@ S@@ ms@@ Statu@@ s@@ Re@@ port@@ Recei@@ v@@ ed@@ (@@ int to@@ k@@ en@@ , int message@@ Ref@@ , java.lang.String for@@ mat@@ , byte@@ [] p@@ du@@ ) throw@@ s java.lang.@@ Runtime@@ Exception { synchronized@@ (m@@ Lock) { if ((m@@ Listener@@ ) == null@@ ) { throw new java.lang.@@ RuntimeException@@ ("@@ S@@ ms@@ Statu@@ s@@ : not read@@ y@@ .@@ "); } try { m@@ List@@ en@@ er.@@ on@@ S@@ ms@@ Statu@@ s@@ Re@@ port@@ Recei@@ v@@ ed@@ (@@ to@@ k@@ en@@ , message@@ Ref@@ , for@@ mat@@ , p@@ du@@ ); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ S@@ ms@@ Imp@@ l@@ Bas@@ e.@@ LO@@ G_@@ TAG, ("@@ Co@@ ul@@ d not pro@@ ces@@ s s@@ m@@ s re@@ port@@ : " + (@@ e.get@@ Message@@ ()))); ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ ms@@ Re@@ port@@ (@@ to@@ k@@ en@@ , message@@ Ref@@ , android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ STAT@@ US@@ _RE@@ P@@ O@@ RT@@ _@@ STAT@@ US@@ _@@ ER@@ RO@@ R@@ ); } } }
public final void on@@ S@@ ms@@ Recei@@ v@@ ed@@ (@@ int to@@ k@@ en@@ , java.lang.String for@@ mat@@ , byte@@ [] p@@ du@@ ) throw@@ s java.lang.@@ Runtime@@ Exception { synchronized@@ (m@@ Lock) { if ((m@@ Listener@@ ) == null@@ ) { throw new java.lang.@@ RuntimeException@@ ("@@ S@@ ms@@ : not read@@ y@@ .@@ "); } try { m@@ List@@ en@@ er.@@ on@@ S@@ ms@@ Recei@@ v@@ ed@@ (@@ to@@ k@@ en@@ , for@@ mat@@ , p@@ du@@ ); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ Im@@ s@@ S@@ ms@@ Imp@@ l@@ Bas@@ e.@@ LO@@ G_@@ TAG, ("@@ Co@@ ul@@ d not de@@ li@@ ve@@ r s@@ ms@@ : " + (@@ e.get@@ Message@@ ()))); ack@@ no@@ w@@ le@@ d@@ g@@ e@@ S@@ m@@ s(@@ to@@ k@@ en@@ , 0, android.@@ telephony.@@ im@@ s.@@ st@@ u@@ b.@@ DE@@ L@@ I@@ V@@ ER_@@ STAT@@ US@@ _@@ ER@@ RO@@ R@@ _@@ G@@ EN@@ ER@@ I@@ C@@ ); } } }
private static byte@@ [] read@@ With@@ Li@@ m@@ it@@ (@@ java.io.@@ Input@@ Stream in@@ ) throw@@ s java.io.IOException { java.io.@@ ByteArray@@ Output@@ Stream byte@@ s = new java.io.@@ ByteArray@@ Output@@ Stream@@ (); byte@@ [] buff@@ er = new byte@@ [@@ 10@@ 24@@ ]; int byte@@ s@@ Re@@ ad = 0; int count@@ ; while ((@@ coun@@ t = in@@ .@@ read@@ (@@ buff@@ er@@ )) != (-1@@ )) { byte@@ s.@@ write@@ (@@ buff@@ er, 0, count@@ ); byte@@ s@@ Re@@ ad +@@ = count@@ ; if (@@ byte@@ s@@ Re@@ ad >@@ = (com.android.@@ cer@@ t@@ in@@ stall@@ er.@@ Cer@@ t@@ In@@ stall@@ er@@ Main.@@ MA@@ X@@ I@@ M@@ U@@ M@@ _C@@ E@@ RT@@ _@@ SIZ@@ E@@ )) { throw new java.io.IO@@ Exception@@ ("@@ Cer@@ t@@ if@@ i@@ cat@@ e fi@@ le ex@@ ce@@ ed@@ ed max@@ im@@ u@@ m siz@@ e.@@ "); } } return byte@@ s.@@ to@@ ByteArray@@ (); }
@java.lang.Override protected void dum@@ p@@ (java.io.FileDescriptor fd, java.io.@@ P@@ r@@ int@@ Wri@@ ter wri@@ ter@@ , java.lang.String[] arg@@ s) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ D@@ U@@ M@@ P@@ , com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG@@ ); if ((@@ args.@@ length) == 0) { wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ luetoo@@ th dum@@ p in AP@@ P S@@ ER@@ V@@ IC@@ E@@ S@@ , se@@ e bluetooth@@ _@@ man@@ age@@ r sec@@ tion@@ .@@ "); wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ luetoo@@ th --@@ p@@ r@@ int arg@@ um@@ ent for dum@@ ps@@ y@@ s di@@ re@@ c@@ t f@@ ro@@ m Adap@@ ter@@ Service@@ .@@ "); return@@ ; } ver@@ bo@@ se@@ Log@@ (("@@ B@@ on@@ de@@ d arg@@ ument@@ s, ch@@ ec@@ k for pro@@ to@@ bu@@ f output@@ : " + (android.@@ text.@@ Text@@ Utils.@@ j@@ o@@ in@@ (@@ arg@@ s@@ [0@@ ]@@ .@@ equal@@ s("@@ --@@ pro@@ to@@ -@@ b@@ in@@ ")) { dum@@ p@@ M@@ et@@ ri@@ c@@ s(@@ fd@@ ); return@@ ; } wri@@ ter.@@ p@@ r@@ int@@ ln@@ ("@@ B@@ on@@ de@@ d "); wri@@ ter.@@ p@@ r@@ int@@ ln@@ ((((@@ " + (get@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ ()))); wri@@ ter.@@ p@@ r@@ int@@ ln@@ (@@ de@@ vices@@ : for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice : get@@ B@@ ond@@ ed@@ De@@ vices@@ ()) { wri@@ ter.@@ p@@ r@@ int@@ ln@@ ((@@ " " " + (@@ device@@ .get@@ Address@@ ())) + " [@@ ") + (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ DE@@ V@@ IC@@ E_@@ TYP@@ E_@@ N@@ AM@@ E@@ S@@ [@@ device@@ .get@@ Type@@ ()@@ ]@@ )) + " (@@ device@@ .getName@@ ()))); } java.lang.String@@ Builder s@@ b = new java.lang.String@@ Builder@@ (); for (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ fi@@ le : m@@ Reg@@ ister@@ ed@@ Pro@@ fil@@ es) { pro@@ file.@@ dum@@ p@@ (s@@ b@@ ); } wri@@ ter.@@ write@@ (s@@ b.@@ toString@@ ()); wri@@ ter.@@ f@@ lu@@ sh@@ (); dum@@ p@@ Native@@ (@@ fd, arg@@ s); }
@java.lang.Override public void run() { log@@ Wri@@ ter.@@ p@@ r@@ int@@ ln@@ (("@@ in@@ va@@ li@@ d st@@ ar@@ ted@@ : " + (@@ name@@ ))); try { java.lang.String lin@@ e = "@@ "; while (!(@@ do@@ Ex@@ i@@ t@@ )) || (b@@ r.@@ read@@ y@@ ())) { try { lin@@ e = b@@ r.@@ read@@ Line@@ (); if (@@ lin@@ e == null@@ ) break@@ ; log@@ Wri@@ ter.@@ p@@ r@@ int@@ ln@@ ((((@@ name@@ ) + " line@@ )); } catch (java.lang.@@ Illegal@@ State@@ Exception e) { } log@@ Wri@@ ter.@@ p@@ r@@ int@@ ln@@ (("@@ in@@ va@@ li@@ d comp@@ let@@ ed@@ : " + (@@ name@@ ))); } catch (java.io.IOException e) { log@@ Wri@@ ter.@@ p@@ r@@ int@@ Error@@ (@@ e); } }
private static java.util.@@ List@@ <@@ libcore.@@ util.@@ TimeZone@@ F@@ ind@@ er.@@ Co@@ u@@ n@@ try@@ Time@@ Z@@ on@@ es.@@ TimeZone@@ M@@ app@@ ing@@ > time@@ Zone@@ M@@ app@@ ing@@ s);
private static java.lang.@@ Boole@@ an parse@@ Boolean@@ Attribute@@ (java.lang.String at@@ tribute@@ Value@@ ) { if (@@ at@@ tribute@@ Value == null@@ ) { return null@@ ; } boolean is@@ Tr@@ u@@ e = libcore.@@ util.@@ TimeZone@@ F@@ ind@@ er.@@ TR@@ U@@ E_@@ AT@@ TR@@ I@@ B@@ UT@@ E_@@ V@@ AL@@ UE@@ .@@ equals(@@ at@@ tribute@@ Value@@ ); if (!(@@ is@@ Tr@@ u@@ e || (@@ libcore.@@ util.@@ TimeZone@@ F@@ ind@@ er.@@ F@@ AL@@ S@@ E_@@ AT@@ TR@@ I@@ B@@ UT@@ E_@@ V@@ AL@@ UE@@ .@@ equals(@@ at@@ tribute@@ Value@@ )@@ ))) { return null@@ ; } return is@@ True@@ ; }
private int parse@@ Id@@ From@@ In@@ ser@@ ted@@ U@@ ri@@ (android.net.@@ Ur@@ i ur@@ i@@ ) throw@@ s java.lang.@@ Number@@ Format@@ Exception { int id = java.lang.Integ@@ er.@@ parse@@ Int@@ (@@ ur@@ i@@ .get@@ L@@ ast@@ Path@@ Se@@ g@@ ment@@ ()); }
public static byte@@ [] en@@ code@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ (@@ java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node@@ > sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ ) { java.util.@@ List@@ <@@ byte@@ []@@ > no@@ de@@ s = new java.util.ArrayList<@@ >(); for (com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node no@@ de : sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ ) { no@@ d@@ es.@@ add@@ (com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ en@@ code@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node@@ (@@ no@@ de@@ )); } byte@@ [] en@@ cod@@ ed@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ en@@ code@@ As@@ Se@@ qu@@ en@@ ce@@ Of@@ Length@@ Pre@@ fix@@ ed@@ Element@@ s(@@ no@@ des@@ ); return com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ en@@ code@@ As@@ Length@@ Pre@@ fix@@ ed@@ Element@@ (@@ en@@ cod@@ ed@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ ); }
public static byte@@ [] en@@ code@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node@@ (com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node no@@ de@@ ) { int parent@@ S@@ ig@@ Al@@ gorithm@@ Id = 0; if ((@@ no@@ d@@ e.@@ parent@@ S@@ ig@@ Al@@ gorithm@@ ) != null@@ ) { parent@@ S@@ ig@@ Al@@ gorithm@@ Id = no@@ d@@ e.@@ parent@@ S@@ ig@@ Al@@ gorithm@@ .get@@ Id@@ (); } int si@@ g@@ Al@@ gorithm@@ Id = 0; if ((@@ no@@ d@@ e.@@ si@@ g@@ Al@@ gorithm@@ ) != null@@ ) { si@@ g@@ Al@@ gorithm@@ Id = no@@ d@@ e.@@ si@@ g@@ Al@@ gorithm@@ .get@@ Id@@ (); } byte@@ [] pre@@ fix@@ ed@@ S@@ ig@@ ne@@ d@@ Data = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ en@@ code@@ S@@ ig@@ ne@@ d@@ Data@@ (@@ no@@ d@@ e.@@ sign@@ ing@@ Cer@@ t@@ , parent@@ S@@ ig@@ Al@@ gorithm@@ Id@@ ); byte@@ [] pre@@ fix@@ ed@@ Sign@@ at@@ ur@@ e = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ en@@ code@@ As@@ Length@@ Pre@@ fix@@ ed@@ Element@@ (@@ no@@ d@@ e.@@ sign@@ ature@@ ); int p@@ ay@@ load@@ Siz@@ e = ((@@ pre@@ fix@@ ed@@ S@@ ig@@ ne@@ d@@ Data.@@ length) + 4@@ ) + (p@@ re@@ fix@@ ed@@ Sign@@ ature@@ .@@ length); java.nio.Byte@@ Buffer result = java.nio.Byte@@ Buff@@ er.@@ al@@ loc@@ ate@@ (p@@ ay@@ load@@ Siz@@ e); res@@ ult.@@ or@@ der@@ (@@ java.nio.Byte@@ Or@@ d@@ er.@@ L@@ I@@ T@@ T@@ L@@ E_@@ END@@ I@@ AN@@ ); res@@ ult.@@ put@@ (p@@ re@@ fix@@ ed@@ S@@ ig@@ ne@@ d@@ Data@@ ); res@@ ult.@@ put@@ Int@@ (@@ si@@ g@@ Al@@ gorithm@@ Id@@ ); res@@ ult.@@ put@@ (p@@ re@@ fix@@ ed@@ Sign@@ ature@@ ); return res@@ ult.@@ array@@ (); }
public com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age build@@ () throw@@ s java.io.IOException { return new com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ (m@@ Input@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ , m@@ Min@@ im@@ um@@ Sdk@@ Version@@ ); }
public void s@@ p@@ aw@@ n@@ Fi@@ rst@@ Des@@ c@@ end@@ ant@@ (com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ S@@ ig@@ ner@@ Con@@ fi@@ g parent@@ , int flag@@ s) { if ((m@@ Line@@ age@@ ) == null@@ ) { m@@ Line@@ age = new java.util.Array@@ List@@ (); } if ((m@@ Line@@ age.@@ size@@ ()) > 0) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age al@@ read@@ y h@@ a@@ s it@@ s fi@@ rs@@ t no@@ de@@ "); } com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node fi@@ rst@@ Node = new com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node@@ (@@ par@@ ent.get@@ Cer@@ t@@ if@@ ic@@ ate@@ (), null@@ , new byte@@ [0@@ ]@@ , flag@@ s); m@@ Line@@ age.@@ add(@@ fi@@ rst@@ Node@@ ); }
public void s@@ p@@ aw@@ n@@ Des@@ c@@ end@@ ant@@ (com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ S@@ ig@@ ner@@ Con@@ fi@@ g parent@@ , com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ S@@ ig@@ ner@@ Con@@ fi@@ g ch@@ ild@@ ) throw@@ s java.security.@@ In@@ valid@@ Key@@ Exception, java.security.@@ No@@ Su@@ ch@@ Al@@ gorithm@@ Exception, java.security.@@ Sign@@ ature@@ Exception, java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ En@@ cod@@ ing@@ Exception { int flag@@ s = cal@@ c@@ ul@@ ate@@ Default@@ Flag@@ s(); s@@ p@@ aw@@ n@@ Des@@ c@@ end@@ ant@@ (@@ parent@@ , flag@@ s, ch@@ ild@@ , flag@@ s); }
private java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node@@ > read@@ (@@ java.nio.Byte@@ Buffer input@@ Byte@@ Buffer@@ , int version@@ ) throw@@ s java.io.IOException { switch (@@ version@@ ) { case com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ FI@@ RS@@ T_@@ V@@ E@@ RS@@ ION@@ N : m@@ Ver@@ sion = com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ FI@@ RS@@ T_@@ V@@ E@@ RS@@ ION@@ ; return com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ read@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ (input@@ Byte@@ Buffer@@ ); default : throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Im@@ pro@@ p@@ er Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age for@@ mat@@ : un@@ re@@ co@@ gn@@ iz@@ ed version@@ .@@ "); } }
public com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Builder set@@ Min@@ im@@ um@@ Sdk@@ Version@@ (@@ int min@@ im@@ um@@ Sdk@@ Version@@ ) { m@@ Min@@ im@@ um@@ Sdk@@ Ver@@ sion = min@@ im@@ um@@ Sdk@@ Version@@ ; return this@@ ; }
private int get@@ c@@ ul@@ ate@@ Default@@ Flag@@ s() { throw new java.lang.@@ Un@@ sup@@ ported@@ Oper@@ ation@@ Exception@@ ("@@ De@@ fa@@ ult f@@ la@@ g value@@ s not y@@ et im@@ p@@ lem@@ en@@ ted@@ "); }
public java.nio.Byte@@ Buffer write@@ () { byte@@ [] en@@ cod@@ ed@@ Line@@ age = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ en@@ code@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ (m@@ Sign@@ ing@@ Line@@ age@@ ); int p@@ ay@@ load@@ Siz@@ e = (@@ 4 + 4@@ ) + (@@ en@@ cod@@ ed@@ Line@@ age.@@ length); java.nio.Byte@@ Buffer result = java.nio.Byte@@ Buff@@ er.@@ al@@ loc@@ ate@@ (p@@ ay@@ load@@ Siz@@ e); res@@ ult.@@ or@@ der@@ (@@ java.nio.Byte@@ Or@@ d@@ er.@@ L@@ I@@ T@@ T@@ T@@ L@@ E_@@ END@@ I@@ AN@@ ); res@@ ult.@@ put@@ Int@@ (com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ MA@@ G@@ IC@@ ); res@@ ult.@@ put@@ Int@@ (m@@ Version@@ ); res@@ ult.@@ put@@ (@@ en@@ cod@@ ed@@ Line@@ age@@ ); return result@@ ; }
private static byte@@ [] g@@ ener@@ ate@@ Add@@ i@@ tion@@ al@@ At@@ tri@@ b@@ ut@@ es@@ (@@ S@@ ig@@ ner@@ Con@@ fi@@ g si@@ g@@ ner@@ Config@@ ) { if ((@@ si@@ g@@ ner@@ Config.@@ m@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ ) == null@@ ) { return new byte@@ [0@@ ]; } byte@@ []@@ [] po@@ r@@ ; = si@@ g@@ ner@@ Con@@ fi@@ g = si@@ g@@ ner@@ Config.@@ m@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ .@@ g@@ ener@@ ate@@ V@@ 3@@ S@@ ig@@ ner@@ At@@ tri@@ b@@ ut@@ e@@ (); return com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ en@@ code@@ As@@ Length@@ Pre@@ fix@@ ed@@ Element@@ (@@ por@@ ); }
private java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g.@@ util.@@ M@@ ac@@ ter@@ Map@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node@@ > read@@ (@@ java.nio.Byte@@ Buffer input@@ Byte@@ Buffer@@ ) throw@@ s java.io.IOException { com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ check@@ Byte@@ Or@@ der@@ L@@ it@@ t@@ le@@ En@@ di@@ an@@ (input@@ Byte@@ Buffer@@ ); if ((@@ input@@ Byte@@ Buff@@ er.@@ re@@ main@@ ing@@ ()) < 8@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Im@@ pro@@ p@@ er Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age for@@ mat@@ : in@@ su@@ f@@ fi@@ c@@ i@@ ent dat@@ a for he@@ ad@@ er.@@ "); } if ((@@ input@@ Byte@@ Buff@@ er.get@@ Int@@ ()) != (com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ MA@@ G@@ IC@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Im@@ pro@@ p@@ er Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age for@@ mat@@ : MA@@ G@@ I@@ C he@@ ad@@ er mis@@ match@@ .@@ "); } return read@@ (input@@ Byte@@ Buffer@@ , input@@ Byte@@ Buff@@ er.get@@ Int@@ ()); }
public com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Builder set@@ Input@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ (@@ java.nio.Byte@@ Buffer input@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ ) { m@@ Input@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age = input@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ ; return this@@ ; }
private boolean sho@@ ul@@ d@@ Number@@ B@@ e@@ P@@ la@@ ce@@ d@@ On@@ Im@@ s@@ (@@ boolean is@@ E@@ merg@@ enc@@ y@@ , java.lang.String n@@ umber@@ ) { int process@@ Call@@ Result@@ ; try { if ((m@@ Im@@ s@@ Manager@@ ) != null@@ ) { process@@ Call@@ Res@@ ult = m@@ Im@@ s@@ Manager.@@ sho@@ ul@@ d@@ Process@@ Call@@ (is@@ E@@ merg@@ enc@@ y@@ , new java.lang.String@@ []{ n@@ umb@@ er }); android.@@ telephony.@@ R@@ log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, ((@@ ("@@ sho@@ ul@@ d@@ Process@@ Call@@ : n@@ umber@@ : " + (android.@@ telephony.@@ R@@ log.@@ pi@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, n@@ umber@@ ))) + ", result@@ : ") + process@@ Call@@ Result@@ )); } else { android.@@ telephony.@@ R@@ log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, "@@ Im@@ s@@ Manager un@@ ava@@ il@@ able@@ , sho@@ ul@@ d@@ Process@@ Cal@@ l return@@ ing false@@ .@@ "); return false@@ ; } } catch (com.android.@@ im@@ s.@@ Im@@ s@@ Exception e) { android.@@ telephony.@@ R@@ log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, "@@ Im@@ s@@ Ser@@ vice un@@ ava@@ il@@ able@@ , sho@@ ul@@ d@@ Process@@ Cal@@ l return@@ ing false@@ .@@ "); return false@@ ; } if (pro@@ cess@@ Call@@ Res@@ ult == (android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ M@@ m@@ T@@ el@@ F@@ e@@ ature@@ .@@ P@@ RO@@ CE@@ SS@@ _C@@ AL@@ L@@ _@@ I@@ M@@ S@@ )) { return true@@ ; } else if (pro@@ cess@@ Call@@ Res@@ ult == (android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ M@@ m@@ T@@ el@@ F@@ e@@ ature@@ .@@ P@@ RO@@ CE@@ SS@@ _C@@ AL@@ L@@ _C@@ S@@ F@@ B@@ )) { android.@@ telephony.@@ R@@ log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, "@@ sho@@ ul@@ d@@ Process@@ Call@@ : p@@ l@@ ac@@ e o@@ ve@@ r C@@ S@@ F@@ B in@@ s@@ te@@ ad@@ .@@ "); return false@@ ; } else { android.@@ telephony.@@ R@@ log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s@@ phon@@ e.@@ Im@@ s@@ Phone@@ Call@@ Tr@@ ack@@ er.@@ LO@@ G_@@ TAG, "@@ sho@@ ul@@ d@@ Process@@ Cal@@ l return@@ ed un@@ k@@ no@@ w@@ n res@@ ult.@@ "); return false@@ ; } }
@java.lang.Override public android.net.@@ Network@@ Cap@@ abili@@ ti@@ es create@@ From@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l in@@ ) { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es net@@ C@@ a@@ p = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); net@@ C@@ ap.@@ m@@ Network@@ Cap@@ abili@@ ti@@ es = in@@ .@@ read@@ Long@@ (); net@@ C@@ ap.@@ m@@ Trans@@ port@@ Type@@ s = in@@ .@@ read@@ Long@@ (); net@@ C@@ ap.@@ m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ p@@ s = in@@ .@@ read@@ Int@@ (); net@@ C@@ ap.@@ m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ p@@ s = in@@ .@@ read@@ Int@@ (); net@@ C@@ ap.@@ m@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er = in@@ .@@ read@@ Par@@ cel@@ able@@ (@@ null@@ ); net@@ C@@ ap.@@ m@@ Sign@@ al@@ Str@@ eng@@ th = in@@ .@@ read@@ Int@@ (); net@@ C@@ ap.@@ m@@ U@@ id@@ s = ((@@ android.util.@@ Array@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ >@@ ) (in@@ .@@ read@@ Array@@ Set@@ (@@ null@@ ))); net@@ C@@ ap.@@ m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ti@@ es = in@@ .@@ read@@ Long@@ (); return net@@ Cap@@ ; }
public android.net.@@ Network@@ Cap@@ abili@@ ti@@ es add@@ Cap@@ abili@@ ty@@ (@@ @@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ Net@@ Cap@@ abili@@ t@@ y int c@@ ap@@ abili@@ ty@@ ) { if ((@@ c@@ ap@@ abili@@ t@@ y < (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ M@@ IN@@ _N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ )) || (c@@ ap@@ abili@@ t@@ y > (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ MA@@ X@@ _N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ ))) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ In@@ va@@ li@@ d out of r@@ ang@@ e } m@@ Network@@ Cap@@ abili@@ ti@@ es |@@ = 1 <@@ < c@@ ap@@ abili@@ ty@@ ; remove@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (c@@ ap@@ abili@@ ty@@ ); return this@@ ; }
private boolean s@@ ati@@ s@@ fi@@ ed@@ By@@ Cap@@ abili@@ ties@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ , boolean on@@ ly@@ Im@@ m@@ ut@@ able@@ ) { long network@@ Cap@@ abili@@ ti@@ es = this@@ .@@ m@@ Network@@ Cap@@ abili@@ ties@@ ; if (@@ on@@ ly@@ Im@@ m@@ ut@@ able@@ ) { network@@ Cap@@ abili@@ ti@@ es = network@@ Cap@@ abili@@ ti@@ es & (@@ ~@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ M@@ U@@ TA@@ B@@ L@@ E_@@ C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S@@ )); } if ((@@ (m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ ) & (@@ n@@ c.@@ m@@ Network@@ Cap@@ abili@@ ties@@ )) > 0) { return false@@ ; } return ((@@ n@@ c.@@ m@@ Network@@ Cap@@ abili@@ ties@@ ) & network@@ Cap@@ abili@@ ties@@ ) == network@@ Cap@@ abili@@ ties@@ ; }
@java.lang.Override public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l d@@ est@@ , int flag@@ s) { d@@ est.@@ write@@ Long@@ (m@@ Network@@ Cap@@ abili@@ ties@@ ); d@@ est.@@ write@@ Long@@ (m@@ Trans@@ port@@ Typ@@ es@@ ); d@@ est.@@ write@@ Int@@ (m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ); d@@ est.@@ write@@ Int@@ (m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ); d@@ est.@@ write@@ Par@@ cel@@ able@@ ((@@ (android.os.@@ Par@@ cel@@ able@@ ) (m@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ )), flag@@ s); d@@ est.@@ write@@ Int@@ (m@@ Sign@@ al@@ Str@@ ength@@ ); d@@ est.@@ write@@ Array@@ Set@@ (m@@ U@@ id@@ s); d@@ est.@@ write@@ Long@@ (m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ ); }
@java.lang.Override public boolean equals(@@ java.lang.Object ob@@ j@@ ) { if ((@@ ob@@ j == null@@ ) || ((@@ ob@@ j instanceof android.net.@@ Network@@ Cap@@ abili@@ ties@@ ) == false@@ )) return false@@ ; android.net.@@ Network@@ Cap@@ abili@@ ti@@ es th@@ at = ((@@ android.net.@@ Network@@ Cap@@ abili@@ ties@@ ) (@@ ob@@ j@@ )); return ((((@@ ("@@ Un@@ k@@ no@@ w@@ n equal@@ s@@ Net@@ Cap@@ abili@@ ties@@ (@@ th@@ at@@ )) && (@@ equal@@ s@@ Trans@@ port@@ Typ@@ es@@ (@@ th@@ at@@ ))) && (@@ equal@@ s@@ Lin@@ k@@ B@@ and@@ wid@@ th@@ s(@@ th@@ at@@ ))) && (@@ equal@@ s@@ Sign@@ al@@ Str@@ ength@@ (@@ th@@ at@@ ))) && (@@ equal@@ s@@ S@@ pe@@ c@@ if@@ i@@ er(@@ th@@ at@@ ))) && (@@ equal@@ s@@ U@@ id@@ s(@@ th@@ at@@ ))) && (java.util.@@ Object@@ s.@@ equal@@ s@@ (m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ , th@@ at@@ .@@ m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ )); }
public void clear@@ All@@ () { m@@ Network@@ Cap@@ abili@@ ti@@ es = m@@ Trans@@ port@@ Type@@ s = 0; m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ p@@ s = m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ p@@ s = android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ L@@ IN@@ K@@ _@@ B@@ AN@@ D@@ W@@ ID@@ TH@@ _@@ UN@@ S@@ P@@ EC@@ I@@ FI@@ E@@ D@@ ; m@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er = null@@ ; m@@ Sign@@ al@@ Str@@ eng@@ th = android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ _@@ UN@@ S@@ P@@ EC@@ I@@ FI@@ E@@ D@@ ; m@@ U@@ id@@ s = null@@ ; m@@ E@@ st@@ a@@ bli@@ sh@@ ing@@ V@@ p@@ n@@ App@@ U@@ id = android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ IN@@ V@@ AL@@ ID@@ _@@ U@@ ID@@ ; m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ti@@ es = 0; }
@java.lang.Override public int has@@ h@@ Code@@ () { return java.util.@@ Object@@ s.@@ has@@ h@@ (m@@ Network@@ Cap@@ abili@@ ties@@ , m@@ Trans@@ port@@ Typ@@ es@@ , m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ , m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ , m@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ m@@ Sign@@ al@@ Str@@ ength@@ , m@@ U@@ id@@ s, m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ti@@ es@@ ); }
@org.junit.Test public void test@@ O@@ em@@ Pa@@ id@@ () { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); n@@ c.@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ); android.net.@@ Network@@ Cap@@ abili@@ ti@@ es requ@@ est = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); assert@@ True@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ n@@ c@@ )); n@@ c.@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ O@@ E@@ M@@ _P@@ A@@ ID@@ ); assert@@ False@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ n@@ c@@ )); requ@@ est.@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ O@@ E@@ M@@ _P@@ A@@ ID@@ ); assert@@ True@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ n@@ c@@ )); }
@org.junit.Test public final void test@@ T@@ ap@@ Lin@@ k@@ _@@ ch@@ ang@@ e@@ O@@ ri@@ ent@@ ation@@ Th@@ en@@ T@@ ap@@ B@@ ack@@ () throw@@ s java.lang.Exception { s@@ U@@ i@@ B@@ o@@ t.@@ set@@ S@@ creen@@ O@@ ri@@ ent@@ ation@@ (@@ U@@ i@@ B@@ o@@ t.@@ P@@ O@@ RT@@ R@@ A@@ I@@ T@@ ); try { android.@@ a@@ ut@@ o@@ fil@@ l@@ service@@ .@@ cts.@@ Helper.@@ run@@ Sh@@ ell@@ Command@@ ("@@ s@@ it@@ y 4@@ 2@@ 0 s@@ a@@ ve@@ U@@ i@@ R@@ est@@ or@@ ed@@ A@@ f@@ ter@@ T@@ app@@ ing@@ Lin@@ k@@ Test@@ (android.@@ a@@ ut@@ o@@ fil@@ l@@ service@@ .@@ cts.@@ C@@ ust@@ om@@ Des@@ cription@@ With@@ Lin@@ k@@ Test@@ C@@ ase.@@ Po@@ st@@ S@@ a@@ ve@@ Lin@@ k@@ T@@ app@@ ed@@ Action@@ .@@ RO@@ TA@@ T@@ E_@@ TH@@ EN@@ _@@ TA@@ P@@ _@@ B@@ AC@@ K@@ _@@ B@@ UT@@ T@@ ON@@ ); } final@@ l@@ y { android.@@ a@@ ut@@ o@@ fil@@ l@@ service@@ .@@ cts.@@ Helper.@@ run@@ Sh@@ ell@@ Command@@ ("@@ s@@ it@@ y res@@ et res@@ et s@@ U@@ i@@ B@@ o@@ t.@@ set@@ S@@ creen@@ O@@ ri@@ ent@@ ation@@ (@@ U@@ i@@ B@@ o@@ t.@@ P@@ O@@ RT@@ R@@ A@@ I@@ T@@ ); } }
@java.lang.Override protected synchronized boolean start@@ () { if (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service.@@ TAG, "@@ start@@ ()@@ "); } com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ Native@@ Interface@@ .@@ in@@ iti@@ aliz@@ e@@ Native@@ (); m@@ Au@@ dio@@ Manager = ((@@ android.@@ media.@@ Au@@ dio@@ Manager@@ ) (get@@ System@@ Service@@ (@@ Context.@@ A@@ U@@ D@@ IO@@ _S@@ ER@@ V@@ IC@@ E@@ ))); mS@@ m@@ Fa@@ ctor@@ y = new com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ State@@ M@@ ach@@ ine@@ Factory@@ (); m@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ clear@@ (); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (android.@@ media.@@ Au@@ dio@@ Manager.@@ V@@ O@@ L@@ U@@ M@@ E_@@ CH@@ AN@@ GE@@ D_@@ AC@@ TION@@ ); try { register@@ Recei@@ ver@@ (m@@ B@@ roadcast@@ Recei@@ ver@@ , fil@@ ter@@ ); } catch (java.lang.Exception e) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service.@@ TAG, "@@ Un@@ able to reg@@ is@@ ter b@@ road@@ c@@ at re@@ cei@@ ve@@ r ", e); } m@@ Native@@ Inter@@ face = new com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ Native@@ Interface@@ (); android.content.@@ Int@@ ent start@@ Int@@ ent = new android.content.@@ Intent@@ (@@ this@@ , com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ con@@ n@@ ser@@ v@@ .@@ H@@ f@@ p@@ Client@@ Connection@@ Service@@ .@@ class@@ ); start@@ Service@@ (@@ start@@ Intent@@ ); mS@@ m@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ He@@ ad@@ set@@ C@@ li@@ ent.@@ S@@ M@@ "); mS@@ m@@ Thread@@ .@@ start@@ (); com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service@@ .set@@ He@@ ad@@ set@@ Client@@ Service@@ (@@ this@@ ); return true@@ ; }
public void current@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ s@@ (@@ int ind@@ ic@@ ation@@ Type, java.util.ArrayList<@@ android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ > config@@ s) { java.util.List<@@ android.@@ telephony.@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ > respon@@ se = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ con@@ ver@@ t@@ H@@ al@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ s(@@ config@@ s); m@@ R@@ i@@ l.@@ m@@ Ph@@ y@@ si@@ cal@@ Channel@@ Configuration@@ Reg@@ is@@ tr@@ an@@ ts.@@ not@@ if@@ y@@ Reg@@ is@@ tr@@ an@@ ts@@ (@@ new android.os.@@ As@@ ync@@ Result@@ (@@ null@@ , respon@@ se@@ , null@@ )); }
public void not@@ if@@ y@@ Ph@@ y@@ si@@ cal@@ Channel@@ Configuration@@ For@@ Sub@@ s@@ cri@@ b@@ er@@ (@@ int sub@@ Id, java.util.List<@@ android.@@ telephony.@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ > config@@ s) { if (!(@@ check@@ No@@ t@@ if@@ y@@ Permission@@ ("@@ not@@ if@@ y@@ Ph@@ y@@ si@@ cal@@ Channel@@ Configuration@@ ()@@ "@@ ))) { return@@ ; } if (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ V@@ D@@ B@@ G) { com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ log@@ ((@@ (("@@ not@@ if@@ y@@ Ph@@ y@@ si@@ cal@@ Channel@@ Configuration@@ : sub@@ Id@@ =@@ " + sub@@ Id@@ ) + " config@@ s@@ =@@ ") + config@@ s@@ )); } synchronized@@ (m@@ Record@@ s) { int phon@@ e@@ Id = android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ get@@ Phone@@ Id@@ (s@@ u@@ b@@ Id@@ ); if (@@ valid@@ ate@@ Phone@@ Id@@ (@@ phon@@ e@@ Id@@ )) { m@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ s.@@ set@@ (@@ phon@@ e@@ Id, config@@ s); for (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ Re@@ cor@@ d r : m@@ Record@@ s) { if ((@@ r.@@ match@@ Phone@@ State@@ Listener@@ Event@@ (@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _P@@ H@@ Y@@ SI@@ C@@ AL@@ _C@@ H@@ AN@@ N@@ E@@ L@@ _C@@ ON@@ FI@@ G@@ UR@@ AT@@ ION@@ )) && (@@ id@@ Match@@ (@@ r.@@ sub@@ Id, sub@@ Id, phon@@ e@@ Id@@ ))) { try { if (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ D@@ B@@ G_@@ LO@@ C@@ ) { com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ log@@ ((@@ (("@@ not@@ if@@ y@@ Ph@@ y@@ si@@ cal@@ Channel@@ Configuration@@ : m@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ u@@ =@@ " + config@@ s) + " r@@ =@@ ") + r@@ )); } r.@@ call@@ back@@ .@@ on@@ Ph@@ y@@ si@@ cal@@ Channel@@ Configuration@@ Changed@@ (@@ config@@ s); } catch (android.os.@@ Remote@@ Exception ex@@ ) { m@@ Remo@@ ve@@ List.@@ add(@@ r.@@ b@@ in@@ der@@ ); } } } handle@@ Remo@@ ve@@ List@@ Lock@@ ed@@ (); }
static java.util.List<@@ android.@@ telephony.@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ > con@@ ver@@ t@@ H@@ al@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ s(@@ java.util.List<@@ android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ > re@@ cord@@ s) { java.util.List<@@ android.@@ telephony.@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ > config@@ s = new java.util.ArrayList<@@ >(); for (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Ph@@ y@@ si@@ cal@@ Channel@@ Con@@ fi@@ g r : re@@ cord@@ s) { config@@ s.@@ add@@ (@@ new android.@@ telephony.@@ Ph@@ y@@ si@@ cal@@ Channel@@ Config@@ (@@ r.@@ statu@@ s, r.@@ cel@@ l@@ B@@ and@@ wid@@ th@@ Do@@ wn@@ lin@@ k@@ )); } return config@@ s; }
@java.lang.Override public java.lang.String toString@@ () { int@@ [] type@@ s = get@@ Trans@@ port@@ Typ@@ es@@ (); java.lang.String trans@@ port@@ s = ((@@ typ@@ es.@@ length) > 0) ? Trans@@ port@@ s@@ : " + (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ trans@@ port@@ Nam@@ es@@ Of@@ (@@ typ@@ es@@ )) : "@@ "; type@@ s = get@@ Cap@@ abili@@ ties@@ (); java.lang.String c@@ ap@@ abili@@ ti@@ es = ((@@ typ@@ es.@@ length) > 0) ? Cap@@ abili@@ ties@@ : "@@ "; for (@@ int i = 0; i < (@@ typ@@ es.@@ length@@ )@@ ;@@ ) { c@@ ap@@ abili@@ ti@@ es +@@ = android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ c@@ ap@@ abili@@ ty@@ Name@@ Of@@ (@@ typ@@ es@@ [i@@ ]@@ ); if ((@@ ++@@ i@@ ) < (@@ typ@@ es.@@ length@@ )) c@@ ap@@ abili@@ ti@@ es +@@ = "@@ &@@ "; } java.lang.String up@@ B@@ an@@ d = ((m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ) > 0) ? ("@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ >@@ = " + (m@@ Lin@@ k@@ Up@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ )) + "@@ K@@ b@@ ps@@ " : "@@ "; java.lang.String d@@ n@@ B@@ an@@ d = ((m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ ) > 0) ? ("@@ Lin@@ k@@ D@@ n@@ B@@ and@@ wid@@ th@@ >@@ = " + (m@@ Lin@@ k@@ Do@@ wn@@ B@@ and@@ wid@@ th@@ K@@ b@@ ps@@ )) + "@@ K@@ b@@ ps@@ " : "@@ "; java.lang.String s@@ pe@@ c@@ if@@ i@@ er = ((m@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ ) == null@@ ) ? "@@ " : ("@@ " : S@@ pe@@ c@@ if@@ ier@@ : < " + (m@@ Network@@ S@@ pe@@ c@@ if@@ ier@@ )) + "@@ >@@ "; java.lang.String sign@@ al@@ Str@@ eng@@ th = (@@ has@@ Sign@@ al@@ Str@@ ength@@ ()) ? Sign@@ al@@ Str@@ ength@@ : " + (m@@ Sign@@ al@@ Str@@ ength@@ ) : "@@ "; final java.lang.String u@@ id@@ s; if (@@ null == (m@@ U@@ id@@ s@@ )) { u@@ id@@ s = "@@ "; } else if ((@@ 1 == (m@@ U@@ id@@ s.@@ size@@ ())) && (m@@ U@@ id@@ s.@@ value@@ At@@ (0@@ ).@@ is@@ S@@ ing@@ le@@ U@@ id@@ ())) { u@@ id@@ s = U@@ id@@ s.@@ value@@ At@@ (0@@ ).@@ start@@ ); } else { u@@ id@@ s = ("@@ U@@ id@@ s@@ : < " + (m@@ U@@ id@@ s@@ )) + "@@ >@@ "; } java.lang.String est@@ a@@ bli@@ sh@@ ing@@ App@@ U@@ id = ("@@ _@@ > (m@@ E@@ st@@ a@@ bli@@ sh@@ ing@@ V@@ p@@ n@@ App@@ U@@ id@@ )) ? "@@ " : E@@ st@@ a@@ bli@@ sh@@ ing@@ App@@ U@@ id@@ : " : " + (m@@ E@@ st@@ a@@ bli@@ sh@@ ing@@ App@@ U@@ id@@ ))); return ((((@@ ((@@ (("@@ [@@ " + trans@@ port@@ s) + " c@@ ap@@ abili@@ ties@@ ) + " up@@ B@@ and@@ ) + " s@@ pe@@ c@@ if@@ ier@@ : ") + sign@@ al@@ Str@@ ength@@ ) + " u@@ id@@ s) + " u@@ id@@ s@@ pe@@ c@@ if@@ ier@@ : ") + u@@ id@@ s) + " u@@ id@@ s@@ )@@ ")); }
public boolean is@@ S@@ ing@@ le@@ U@@ id@@ () { return (@@ start@@ ) == (@@ st@@ op@@ ); }
public static java.lang.String for@@ mat@@ Date@@ R@@ ang@@ e@@ (android.@@ icu@@ .@@ util.@@ U@@ Local@@ e icu@@ Loc@@ ale@@ , android.@@ icu@@ .@@ util.@@ Time@@ Z@@ on@@ e icu@@ TimeZone@@ , long start@@ M@@ s, long end@@ M@@ s, int flag@@ s) { android.@@ icu@@ .@@ util.@@ Calend@@ ar start@@ Calend@@ ar = libcore.@@ icu@@ .@@ Date@@ Uti@@ l@@ s@@ B@@ rid@@ g@@ e.@@ create@@ I@@ c@@ u@@ Calend@@ ar@@ (@@ icu@@ TimeZone@@ , icu@@ Loc@@ ale@@ , start@@ M@@ s); android.@@ icu@@ .@@ util.@@ Calend@@ ar end@@ Calend@@ ar@@ ; if (@@ start@@ M@@ s == end@@ M@@ s) { end@@ Calend@@ ar = start@@ Calend@@ ar@@ ; } else { end@@ Calend@@ ar = libcore.@@ icu@@ .@@ Date@@ Uti@@ l@@ s@@ B@@ rid@@ g@@ e.@@ create@@ I@@ c@@ u@@ Calend@@ ar@@ (@@ icu@@ TimeZone@@ , icu@@ Loc@@ ale@@ , end@@ M@@ s); } boolean start@@ s@@ At@@ M@@ id@@ n@@ igh@@ t = libcore.@@ icu@@ .@@ Date@@ Inter@@ val@@ Format@@ .is@@ M@@ id@@ n@@ ight@@ (@@ start@@ Calend@@ ar@@ ); boolean end@@ s@@ At@@ M@@ id@@ n@@ igh@@ t = libcore.@@ icu@@ .@@ Date@@ Inter@@ val@@ Format@@ .is@@ M@@ id@@ n@@ ight@@ (@@ end@@ Calend@@ ar@@ ); boolean sho@@ w@@ Tim@@ e = (@@ flag@@ s & (@@ Date@@ Uti@@ l@@ s@@ B@@ rid@@ g@@ e.@@ F@@ OR@@ M@@ AT_@@ S@@ H@@ O@@ W@@ _@@ TI@@ ME@@ )) != 0; boolean end@@ s@@ D@@ ay@@ A@@ f@@ ter@@ St@@ ar@@ t = (@@ libcore.@@ icu@@ .@@ Date@@ Uti@@ l@@ s@@ B@@ rid@@ g@@ e.@@ d@@ ay@@ Di@@ stance@@ (@@ start@@ Calend@@ ar@@ , end@@ Calend@@ ar@@ )) == 1; if (((@@ start@@ M@@ s != end@@ M@@ s) && end@@ s@@ At@@ M@@ id@@ n@@ ight@@ ) && (!(@@ sho@@ w@@ Tim@@ e.@@ isEmpty@@ ())) || (@@ end@@ s@@ D@@ ay@@ A@@ f@@ ter@@ St@@ ar@@ t && (!@@ start@@ s@@ At@@ M@@ id@@ n@@ ight@@ ))) { end@@ Calend@@ ar.@@ add(@@ Calend@@ ar.@@ DA@@ Y_@@ O@@ F@@ _M@@ ON@@ TH@@ , (-1@@ )); } java.lang.String s@@ k@@ el@@ et@@ on = libcore.@@ icu@@ .@@ Date@@ Uti@@ l@@ s@@ B@@ rid@@ g@@ e.@@ to@@ S@@ k@@ el@@ et@@ on@@ (@@ start@@ Calend@@ ar@@ , flag@@ s); synchronized@@ (@@ libcore.@@ icu@@ .@@ Date@@ Uti@@ l@@ s@@ B@@ rid@@ g@@ e.@@ C@@ AC@@ H@@ E@@ D_@@ F@@ OR@@ M@@ AT@@ TE@@ RS@@ ) { android.@@ icu@@ .@@ text.@@ Date@@ Inter@@ val@@ For@@ ma@@ t for@@ mat@@ ter = libcore.@@ icu@@ .@@ Date@@ Inter@@ val@@ Format@@ .get@@ Format@@ ter@@ (s@@ k@@ el@@ et@@ on@@ , icu@@ Loc@@ ale@@ ); return for@@ mat@@ ter@@ .@@ for@@ mat@@ (@@ start@@ Calend@@ ar@@ , end@@ Calend@@ ar@@ , new java.lang.String@@ Buffer@@ (), new java.text.@@ Field@@ Position@@ (0@@ )).@@ toString@@ (); } }
private void init@@ Bluetooth@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ Pre@@ ference@@ () { java.lang.@@ Char@@ Se@@ qu@@ en@@ ce@@ [] en@@ tri@@ es = m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .get@@ En@@ tri@@ es@@ (); java.lang.String[] en@@ tri@@ es@@ With@@ De@@ fa@@ ult = get@@ Res@@ ources@@ ().get@@ String@@ Array@@ (@@ R.@@ ar@@ ra@@ y.@@ bluetooth@@ _@@ max@@ _@@ connec@@ ted@@ _@@ au@@ dio@@ _@@ de@@ vices@@ _@@ w@@ ith@@ _@@ default@@ ); if ((@@ en@@ tri@@ es.@@ length) != (@@ en@@ tri@@ es@@ With@@ De@@ fa@@ ult.@@ length@@ )) { throw new java.lang.Illegal@@ State@@ Exception@@ ((@@ (("@@ bluetooth@@ _@@ max@@ _@@ connec@@ ted@@ _@@ au@@ dio@@ _@@ de@@ vices@@ .@@ length@@ =@@ " + (@@ en@@ tri@@ es.@@ length@@ )) + " != bluetooth@@ _@@ max@@ _@@ connec@@ ted@@ _@@ au@@ dio@@ _@@ de@@ vices@@ _@@ w@@ ith@@ _@@ default@@ .@@ length@@ =@@ ") + (@@ en@@ tri@@ es@@ With@@ De@@ fa@@ ult.@@ length@@ ))); } java.lang.String default@@ Value = java.lang.String.@@ value@@ Of@@ (get@@ Res@@ ources@@ ().get@@ Integ@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R@@ .@@ int@@ eg@@ er.@@ config@@ _@@ bluetooth@@ _@@ connec@@ ted@@ _@@ au@@ dio@@ _@@ de@@ vices@@ )); int default@@ In@@ dex = m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .@@ find@@ Index@@ Of@@ Value@@ (@@ default@@ Value@@ ); if (@@ default@@ In@@ dex < 0) { throw new java.lang.Illegal@@ State@@ Exception@@ ((@@ ("@@ Can@@ not fin@@ d default@@ Value " + default@@ Value@@ ) + " in bluetooth@@ _@@ max@@ _@@ connec@@ ted@@ _@@ au@@ dio@@ _@@ device@@ s array@@ ")); } en@@ tri@@ es@@ [@@ default@@ Index@@ ] = en@@ tri@@ es@@ With@@ Default@@ [@@ default@@ Index@@ ]; m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .set@@ En@@ tri@@ es@@ (@@ en@@ tri@@ es@@ ); java.lang.String o@@ ver@@ lay@@ ed@@ Value = android.os.@@ System@@ Properties@@ .get@@ (com.android.@@ setting@@ s.@@ de@@ ve@@ lo@@ p@@ m@@ ent.@@ De@@ ve@@ lo@@ p@@ ment@@ Setting@@ s.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _M@@ A@@ X@@ _C@@ ON@@ N@@ EC@@ TE@@ D_@@ A@@ U@@ D@@ IO@@ _@@ DE@@ V@@ IC@@ E@@ S@@ _P@@ RO@@ P@@ E@@ RT@@ Y@@ , default@@ Value@@ ); int o@@ ver@@ lay@@ ed@@ In@@ dex = m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .@@ find@@ Index@@ Of@@ Value@@ (@@ o@@ ver@@ lay@@ ed@@ Value@@ ); m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .set@@ Value@@ (@@ o@@ ver@@ lay@@ ed@@ Index@@ ); m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .set@@ S@@ um@@ m@@ ary@@ (@@ en@@ tri@@ es@@ [@@ o@@ ver@@ lay@@ ed@@ Index@@ ]@@ ); }
private void write@@ Bluetooth@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ (@@ java.lang.Object new@@ Value@@ Ob@@ j@@ ) { java.lang.String new@@ Value = new@@ Value@@ Ob@@ j.@@ toString@@ (); int in@@ dex = m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .@@ find@@ Index@@ Of@@ Value@@ (@@ new@@ Value@@ ); if (in@@ dex < 0) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ((@@ (("@@ write@@ Bluetooth@@ Ma@@ x@@ Connec@@ ted " + new@@ Value@@ ) + " not fo@@ un@@ d in B@@ luetoo@@ th ma@@ x ") + connec@@ ted au@@ di@@ o device@@ s pre@@ feren@@ ce }@@ ") + android.os.@@ System@@ Proper@@ ti@@ es.@@ set@@ (com.android.@@ setting@@ s.@@ de@@ ve@@ lo@@ p@@ m@@ ent.@@ De@@ ve@@ lo@@ p@@ ment@@ Setting@@ s.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _M@@ A@@ X@@ _C@@ ON@@ N@@ EC@@ TE@@ D_@@ A@@ U@@ D@@ IO@@ _@@ DE@@ V@@ IC@@ E@@ S@@ _P@@ RO@@ P@@ E@@ RT@@ Y@@ , new@@ Value@@ ); m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .set@@ Value@@ Index@@ (in@@ dex@@ ); java.lang.@@ Char@@ Se@@ qu@@ en@@ ce@@ [] en@@ tri@@ es@@ ; = m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .get@@ En@@ tri@@ es@@ (); m@@ Bluetooth@@ Se@@ le@@ ct@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ .set@@ S@@ um@@ m@@ ary@@ (@@ en@@ tri@@ es@@ [@@ index@@ ]@@ ); }
private void res@@ et@@ D@@ ang@@ er@@ ou@@ s@@ Option@@ s() { m@@ D@@ on@@ t@@ Po@@ k@@ e@@ Proper@@ ti@@ es = true@@ ; for (@@ int i = 0; i < (m@@ Res@@ et@@ S@@ wit@@ ch@@ Pre@@ fs.@@ size@@ ()); i++) { android.@@ support.@@ v@@ 1@@ 4@@ .@@ pre@@ ference@@ .@@ S@@ wit@@ ch@@ Pre@@ feren@@ ce c@@ b = m@@ Res@@ et@@ S@@ wit@@ ch@@ Pre@@ f@@ s.get@@ (i@@ ); if (c@@ b.@@ is@@ Check@@ ed@@ ()) { c@@ b.@@ set@@ Check@@ ed@@ (@@ false@@ ); on@@ Pre@@ ference@@ T@@ ree@@ C@@ li@@ ck@@ (c@@ b@@ ); } } m@@ Bu@@ g@@ Re@@ port@@ In@@ Po@@ w@@ er@@ Control@@ ler.@@ res@@ et@@ Pre@@ ference@@ (); m@@ En@@ able@@ Adb@@ Control@@ ler.@@ res@@ et@@ Pre@@ ference@@ (); com.android.@@ setting@@ s.@@ de@@ ve@@ lo@@ p@@ m@@ ent.@@ De@@ ve@@ lo@@ p@@ ment@@ Setting@@ s.@@ res@@ et@@ Debugg@@ er@@ Option@@ s(); write@@ Log@@ per@@ si@@ st@@ Option@@ (@@ null@@ , true@@ ); write@@ Log@@ d@@ Size@@ Option@@ (@@ null@@ ); write@@ An@@ im@@ ation@@ S@@ c@@ ale@@ Option@@ (@@ 0, m@@ W@@ in@@ do@@ w@@ An@@ im@@ ation@@ S@@ c@@ ale@@ , null@@ ); write@@ An@@ im@@ ation@@ S@@ c@@ ale@@ Option@@ (1@@ , m@@ Tr@@ an@@ sition@@ An@@ im@@ ation@@ S@@ c@@ ale@@ , null@@ ); write@@ An@@ im@@ ation@@ S@@ c@@ ale@@ Option@@ (@@ 2, m@@ An@@ im@@ ator@@ D@@ ur@@ ation@@ S@@ c@@ ale@@ , null@@ ); if (@@ us@@ ing@@ De@@ ve@@ lo@@ p@@ ment@@ Col@@ or@@ S@@ p@@ ace@@ ()) { write@@ Sim@@ ul@@ ate@@ Col@@ or@@ S@@ p@@ ace@@ ((@@ -1@@ )); } write@@ O@@ ver@@ lay@@ Display@@ De@@ vices@@ Option@@ s@@ (@@ null@@ ); write@@ App@@ Process@@ Li@@ m@@ it@@ Option@@ s@@ (@@ null@@ ); java.lang.String default@@ Bluetooth@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ Device@@ s = java.lang.String.@@ value@@ Of@@ (get@@ Res@@ ources@@ ().get@@ Integ@@ er(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R@@ .@@ int@@ eg@@ er.@@ config@@ _@@ bluetooth@@ _@@ max@@ _@@ connec@@ ted@@ _@@ au@@ dio@@ _@@ de@@ vices@@ )); write@@ Bluetooth@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ (@@ default@@ Bluetooth@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ ); m@@ H@@ a@@ ve@@ Debu@@ g@@ Setting@@ s = false@@ ; update@@ All@@ Option@@ s(); m@@ D@@ on@@ t@@ Po@@ k@@ e@@ Proper@@ ti@@ es = false@@ ; po@@ k@@ e@@ System@@ Properties@@ (); }
private static boolean is@@ Location@@ Mode@@ Enabled@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , @@@ android.@@ annotation.@@ User@@ Id@@ In@@ t int user@@ Id@@ ) { int loc@@ ation@@ Mod@@ e = Setting@@ s.@@ Sec@@ ure@@ .get@@ Int@@ For@@ User@@ (@@ con@@ tex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (), Setting@@ s.@@ Sec@@ ure@@ .@@ LO@@ C@@ AT@@ ION@@ _MOD@@ E, Setting@@ s.@@ Sec@@ ure@@ .@@ LO@@ C@@ AT@@ ION@@ _MOD@@ E_@@ O@@ F@@ , user@@ Id@@ ); return loc@@ ation@@ Mod@@ e != (@@ Setting@@ s.@@ Sec@@ ure@@ .@@ LO@@ C@@ AT@@ ION@@ _MOD@@ E_@@ O@@ F@@ F@@ ); }
public static boolean can@@ Access@@ C@@ ell@@ Location@@ (@@ @@@ android.@@ annotation.@@ NonNull android.content.@@ Context context@@ , @@@ android.@@ annotation.@@ NonNull java.lang.String p@@ kg@@ Name, int u@@ id, int p@@ id@@ ) throw@@ s java.lang.@@ Sec@@ ur@@ ity@@ Exception { android.os.@@ Trace@@ .@@ b@@ e@@ gin@@ Sec@@ tion@@ ("@@ Telephony@@ Location@@ Check@@ "); try { if (@@ u@@ id == (@@ P@@ H@@ ON@@ E_@@ U@@ ID@@ )) { return true@@ ; } if ((@@ con@@ text.@@ check@@ Permission@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ , p@@ id, u@@ id@@ )) == (android.@@ content.@@ p@@ m.@@ Package@@ Manager.@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ _@@ D@@ EN@@ I@@ E@@ D@@ )) { return false@@ ; } final int op@@ Co@@ de = android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ per@@ mission@@ To@@ Op@@ Code@@ (@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ ); if ((@@ op@@ Co@@ de != (android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ O@@ P@@ _N@@ ON@@ E@@ )) && ((@@ con@@ tex@@ t.get@@ System@@ Service@@ (android.@@ app.@@ App@@ O@@ ps@@ Manager@@ .@@ class@@ ).@@ no@@ te@@ Op@@ (@@ op@@ Code@@ , u@@ id, p@@ kg@@ Name@@ )) != (android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ M@@ OD@@ E_@@ AL@@ LO@@ W@@ E@@ D@@ ))) { return false@@ ; } if (!@@ (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y.@@ is@@ Location@@ Mode@@ Enabled@@ (@@ context@@ , android.os.@@ User@@ Handle@@ .get@@ User@@ Id@@ (@@ u@@ id@@ )@@ ))) { return false@@ ; } return (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y@@ .@@ is@@ Current@@ Pro@@ file@@ (@@ context@@ , u@@ id@@ )) (android.@@ telephony.@@ Location@@ Access@@ Po@@ lic@@ y.@@ check@@ Inter@@ act@@ Ac@@ ro@@ ss@@ User@@ s@@ F@@ ull@@ (@@ context@@ )); } final@@ l@@ y { android.os.@@ Trace@@ .@@ end@@ Sec@@ tion@@ (); } }
@java.lang.Override public int com@@ par@@ e@@ (android.net.@@ I@@ p@@ Pre@@ fi@@ x pre@@ fix@@ 1, android.net.@@ I@@ p@@ Pre@@ fi@@ x pre@@ fix@@ 2@@ ) { final int p@@ 1@@ le@@ n = pre@@ fix@@ 1@@ .get@@ Pre@@ fix@@ Length@@ (); final int p@@ 2@@ le@@ n = pre@@ fix@@ 2@@ .get@@ Pre@@ fix@@ Length@@ (); if (p@@ 1@@ le@@ n < p@@ 2@@ l@@ en@@ ) return -1@@ ; if (p@@ 2@@ le@@ n < p@@ 1@@ l@@ en@@ ) return 1; final byte@@ [] a@@ 1 = pre@@ fix@@ 1.@@ add@@ ress@@ ; final byte@@ [] a@@ 2 = pre@@ fix@@ 2.@@ add@@ ress@@ ; final int le@@ n = ((@@ a@@ 1.@@ length) < (@@ a@@ 2.@@ length@@ )) ? a@@ 1.@@ l@@ eng@@ th : a@@ 2.@@ length@@ ; for (@@ int i = 0; i < l@@ en@@ ; ++@@ i@@ ) { if ((@@ a@@ 1@@ [i@@ ]@@ ) < (@@ a@@ 2@@ [i@@ ]@@ )) return -1@@ ; if ((@@ a@@ 1@@ [i@@ ]@@ ) > (@@ a@@ 2@@ [i@@ ]@@ )) return 1; } if ((@@ a@@ 2.@@ length) < l@@ en@@ ) return 1; if ((@@ a@@ 1.@@ length) < l@@ en@@ ) return -1@@ ; return 0; }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing static boolean provid@@ es@@ R@@ out@@ es@@ To@@ Mo@@ st@@ D@@ est@@ in@@ ation@@ s(@@ android.net.@@ Lin@@ k@@ Proper@@ ti@@ es l@@ p@@ ) { final java.util.@@ Comp@@ ar@@ ator@@ <@@ android.net.@@ I@@ p@@ Pre@@ fix@@ > pre@@ fix@@ Length@@ Comp@@ ar@@ at@@ or = android.net.@@ I@@ p@@ Pre@@ fi@@ x.@@ length@@ Comp@@ ar@@ ator@@ (); java.util.@@ T@@ ree@@ Set@@ <@@ android.net.@@ I@@ p@@ Pre@@ fix@@ > ip@@ V@@ 4@@ Pre@@ fix@@ es = new java.util.@@ T@@ ree@@ Set@@ (p@@ re@@ fix@@ Length@@ Comp@@ ar@@ ator@@ ); java.util.@@ T@@ ree@@ Set@@ <@@ android.net.@@ I@@ p@@ Pre@@ fix@@ > ip@@ V@@ 6@@ Pre@@ fix@@ es = new java.util.@@ T@@ ree@@ Set@@ (p@@ re@@ fix@@ Length@@ Comp@@ ar@@ ator@@ ); for (@@ final android.net.@@ R@@ ou@@ te@@ Info ro@@ ut@@ e : l@@ p@@ .get@@ All@@ R@@ out@@ es@@ ()) { android.net.@@ I@@ p@@ Pre@@ fi@@ x d@@ est@@ in@@ ation = ro@@ ute@@ .get@@ D@@ est@@ in@@ ation@@ (); if (d@@ est@@ in@@ ation.@@ is@@ IP@@ v@@ 4@@ ()) { ip@@ V@@ 4@@ Pre@@ fix@@ es.@@ add(@@ d@@ est@@ in@@ ation@@ ); } else { ip@@ V@@ 6@@ Pre@@ fix@@ es.@@ add(@@ d@@ est@@ in@@ ation@@ ); } } if ((@@ android.net.@@ Network@@ Utils.@@ ro@@ u@@ ted@@ IP@@ v@@ 4@@ Address@@ Count@@ (@@ ip@@ V@@ 4@@ Pre@@ fix@@ es@@ )) > (com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ M@@ O@@ ST_@@ IP@@ V@@ 4@@ _@@ AD@@ D@@ RE@@ SS@@ E@@ S@@ _C@@ O@@ UN@@ T@@ )) { return true@@ ; } return (android.net.@@ Network@@ Utils.@@ ro@@ u@@ ted@@ IP@@ v@@ 6@@ Address@@ Count@@ (@@ ip@@ V@@ 6@@ Pre@@ fix@@ es@@ ).@@ com@@ par@@ e@@ To@@ (com.android.server.@@ connec@@ tivity.@@ V@@ p@@ n@@ .@@ M@@ O@@ ST_@@ IP@@ V@@ 6@@ _@@ AD@@ D@@ RE@@ SS@@ E@@ S@@ _C@@ O@@ UN@@ T@@ )) >@@ = 0; }
public static java.@@ m@@ ath.@@ B@@ ig@@ Integ@@ er ro@@ u@@ ted@@ IP@@ v@@ 6@@ Address@@ Count@@ (@@ final java.util.@@ T@@ ree@@ Set@@ <@@ android.net.@@ I@@ p@@ Pre@@ fix@@ > pre@@ fix@@ es) { java.@@ m@@ ath.@@ B@@ ig@@ Integ@@ er ro@@ u@@ ted@@ IP@@ Coun@@ t = java.@@ m@@ ath.@@ B@@ ig@@ Integ@@ er.@@ Z@@ ER@@ O@@ ; for (@@ final android.net.@@ I@@ p@@ Pre@@ fi@@ x pre@@ fi@@ x : android.net.@@ Network@@ Utils.@@ d@@ ed@@ up@@ lic@@ ate@@ Pre@@ fix@@ Set@@ (p@@ re@@ fix@@ es@@ )) { int r@@ an@@ k = 12@@ 8 - (p@@ re@@ fix@@ .get@@ Pre@@ fix@@ Length@@ ()); ro@@ u@@ ted@@ IP@@ Coun@@ t = ro@@ u@@ ted@@ IP@@ Coun@@ t.@@ add(@@ java.@@ m@@ ath.@@ B@@ ig@@ Integ@@ er.@@ ON@@ E@@ .@@ s@@ h@@ if@@ t@@ Le@@ f@@ t@@ (@@ r@@ an@@ k@@ )); } return ro@@ u@@ ted@@ IP@@ Count@@ ; }
public static long ro@@ u@@ ted@@ IP@@ v@@ 4@@ Address@@ Count@@ (@@ final java.util.@@ T@@ ree@@ Set@@ <@@ android.net.@@ I@@ p@@ Pre@@ fix@@ > pre@@ fix@@ es) { long ro@@ u@@ ted@@ IP@@ Coun@@ t = 0; for (@@ final android.net.@@ I@@ p@@ Pre@@ fi@@ x pre@@ fi@@ x : android.net.@@ Network@@ Utils.@@ d@@ ed@@ up@@ lic@@ ate@@ Pre@@ fix@@ Set@@ (p@@ re@@ fix@@ es@@ )) { int r@@ an@@ k = 3@@ 2 - (p@@ re@@ fix@@ .get@@ Pre@@ fix@@ Length@@ ()); ro@@ u@@ ted@@ IP@@ Coun@@ t +@@ = 1@@ L <@@ < r@@ an@@ k@@ ; } return ro@@ u@@ ted@@ IP@@ Count@@ ; }
public static java.util.@@ Comp@@ ar@@ ator@@ <@@ android.net.@@ I@@ p@@ Pre@@ fix@@ > length@@ Comp@@ ar@@ ator@@ () { return new java.util.@@ Comp@@ ar@@ ator@@ <@@ android.net.@@ I@@ p@@ Pre@@ fix@@ >@@ () { @java.lang.Override public int com@@ par@@ e@@ (android.net.@@ I@@ p@@ Pre@@ fi@@ x pre@@ fix@@ 1, android.net.@@ I@@ p@@ Pre@@ fi@@ x pre@@ fix@@ 2@@ ) { final int p@@ 1@@ le@@ n = pre@@ fix@@ 1@@ .get@@ Pre@@ fix@@ Length@@ (); final int p@@ 2@@ le@@ n = pre@@ fix@@ 2@@ .get@@ Pre@@ fix@@ Length@@ (); if (p@@ 1@@ le@@ n < p@@ 2@@ l@@ en@@ ) return -1@@ ; if (p@@ 2@@ le@@ n < p@@ 1@@ l@@ en@@ ) return 1; final byte@@ [] a@@ 1 = pre@@ fix@@ 1.@@ add@@ ress@@ ; final byte@@ [] a@@ 2 = pre@@ fix@@ 2.@@ add@@ ress@@ ; final int le@@ n = ((@@ a@@ 1.@@ length) < (@@ a@@ 2.@@ length@@ )) ? a@@ 1.@@ l@@ eng@@ th : a@@ 2.@@ length@@ ; for (@@ int i = 0; i < l@@ en@@ ; ++@@ i@@ ) { if ((@@ a@@ 1@@ [i@@ ]@@ ) < (@@ a@@ 2@@ [i@@ ]@@ )) return -1@@ ; if ((@@ a@@ 1@@ [i@@ ]@@ ) > (@@ a@@ 2@@ [i@@ ]@@ )) return 1; } if ((@@ a@@ 2.@@ length) < l@@ en@@ ) return 1; if ((@@ a@@ 1.@@ length) < l@@ en@@ ) return -1@@ ; return 0; } }; }
@java.lang.Override public void pend@@ ing@@ List@@ en@@ For@@ Network@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent o@@ per@@ ation@@ ) { check@@ NotNull@@ (@@ o@@ per@@ ation@@ , "@@ N@@ e@@ ed can@@ not b@@ e null@@ .@@ "); if (!(@@ has@@ W@@ if@@ i@@ Network@@ List@@ en@@ Permission@@ (@@ network@@ Cap@@ abili@@ ties@@ ))) { e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); } en@@ su@@ re@@ Valid@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ network@@ Cap@@ abili@@ ties@@ ); final android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); res@@ tri@@ ct@@ Request@@ U@@ id@@ s@@ To@@ Set@@ Ac@@ ces@@ si@@ ble@@ To@@ Call@@ er@@ (@@ n@@ c@@ ); android.net.@@ Network@@ Requ@@ est network@@ Requ@@ est = new android.net.@@ Network@@ Request@@ (@@ n@@ c@@ , TYP@@ E_@@ N@@ ON@@ E, next@@ Network@@ Request@@ Id@@ (), Network@@ Requ@@ est.@@ Type.@@ L@@ IS@@ T@@ EN@@ ); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (@@ network@@ Request@@ , o@@ per@@ ation@@ ); if (com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ null for " + n@@ ri@@ )); m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ RE@@ G@@ IS@@ TER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ L@@ IS@@ T@@ EN@@ ER@@ , n@@ ri@@ )); }
@java.lang.Override public android.net.@@ Network@@ Requ@@ est pend@@ ing@@ Request@@ For@@ Network@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent o@@ per@@ ation@@ ) { check@@ NotNull@@ (@@ o@@ per@@ ation@@ , "@@ null can@@ not b@@ e null@@ .@@ "); network@@ Cap@@ abili@@ ti@@ es = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); e@@ n@@ for@@ ce@@ Network@@ Request@@ Permission@@ s(@@ network@@ Cap@@ abili@@ ties@@ ); e@@ n@@ for@@ ce@@ M@@ eter@@ ed@@ Ap@@ n@@ Po@@ lic@@ y@@ (@@ network@@ Cap@@ abili@@ ties@@ ); en@@ su@@ re@@ Request@@ able@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); en@@ su@@ re@@ Valid@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ network@@ Cap@@ abili@@ ties@@ ); res@@ tri@@ ct@@ Request@@ U@@ id@@ s@@ To@@ Set@@ Ac@@ ces@@ si@@ ble@@ To@@ Call@@ er(@@ network@@ Cap@@ abili@@ ti@@ es@@ ); android.net.@@ Network@@ Requ@@ est network@@ Requ@@ est = new android.net.@@ Network@@ Request@@ (@@ network@@ Cap@@ abili@@ ties@@ , TYP@@ E_@@ N@@ ON@@ E, next@@ Network@@ Request@@ Id@@ (), Network@@ Requ@@ est.@@ Type.@@ RE@@ Q@@ UE@@ S@@ T@@ ); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (@@ network@@ Request@@ , o@@ per@@ ation@@ ); if (com.android.server.@@ Connectivity@@ Service.@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ N@@ e@@ n for " + n@@ ri@@ )); m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ RE@@ G@@ IS@@ TER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _RE@@ Q@@ UE@@ ST_@@ WI@@ TH@@ _@@ IN@@ T@@ EN@@ T@@ , n@@ ri@@ )); return network@@ Request@@ ; }
private void call@@ Callback@@ For@@ Request@@ (com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ ri@@ , com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info network@@ A@@ g@@ ent@@ , int not@@ if@@ ic@@ ation@@ Type, int arg@@ 1@@ ) { if ((@@ n@@ ri@@ .@@ mess@@ eng@@ er@@ ) == null@@ ) { return@@ ; } android.os.@@ Bund@@ le b@@ und@@ le = new android.os.@@ Bund@@ le@@ (); com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Network@@ Request@@ (@@ n@@ ri@@ .@@ request@@ )); android.os.@@ Mess@@ age ms@@ g = android.os.@@ Mess@@ age.@@ ob@@ t@@ ain@@ (); if (@@ not@@ if@@ ic@@ ation@@ Type != (android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ UN@@ AV@@ A@@ IL@@ )) { com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , network@@ A@@ g@@ ent.@@ network@@ ); } switch (@@ not@@ if@@ ic@@ ation@@ Typ@@ e) { case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ AV@@ A@@ IL@@ AB@@ L@@ E : { com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ A@@ g@@ ent.@@ network@@ Cap@@ abili@@ ties@@ )); com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Lin@@ k@@ Properties@@ (@@ network@@ A@@ g@@ ent.@@ lin@@ k@@ Properties@@ )); break@@ ; } case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ LO@@ S@@ IN@@ G : { ms@@ g.@@ arg@@ 1 = arg@@ 1; break@@ ; } case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _C@@ AP@@ _C@@ H@@ AN@@ GE@@ D : { final android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = network@@ Cap@@ abili@@ ties@@ With@@ out@@ U@@ id@@ s@@ Un@@ l@@ ess@@ Al@@ low@@ ed@@ (@@ network@@ A@@ g@@ ent.@@ network@@ Cap@@ abili@@ ties@@ ); com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , n@@ c@@ ); break@@ ; } case android.net.@@ Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ IP@@ _C@@ H@@ AN@@ GE@@ D : { com.android.server.@@ Connectivity@@ Service.@@ put@@ Par@@ cel@@ able@@ (b@@ und@@ le@@ , new android.net.@@ Lin@@ k@@ Properties@@ (@@ network@@ A@@ g@@ ent.@@ lin@@ k@@ Properties@@ )); break@@ ; } ms@@ g.@@ wh@@ at = not@@ if@@ ic@@ ation@@ Type@@ ; ms@@ g.@@ set@@ Data@@ (b@@ und@@ le@@ ); try { if (com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) { java.lang.String not@@ if@@ ic@@ ation = android.net.@@ Connectivity@@ Manager.@@ get@@ Callback@@ Name@@ (@@ not@@ if@@ ic@@ ation@@ Type@@ ); com.android.server.@@ Connectivity@@ Service.@@ log@@ ((@@ (("@@ call@@ ing not@@ if@@ ic@@ ation " + not@@ if@@ ic@@ ation@@ ) + " for ") + (@@ n@@ ri@@ .@@ request@@ ))); } n@@ ri@@ .@@ mess@@ eng@@ er.@@ send@@ (m@@ s@@ g@@ ); } catch (android.os.@@ Remote@@ Exception e) { com.android.server.@@ Connectivity@@ Service.@@ log@@ e@@ (("@@ call@@ ing c@@ au@@ g@@ h@@ t try@@ ing to s@@ en@@ d a call@@ b@@ ac@@ k ms@@ g for " + (@@ n@@ ri@@ .@@ request@@ ))); } }
@java.lang.Override public android.net.@@ Network@@ Requ@@ est request@@ Network@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.os.@@ Mess@@ eng@@ er mess@@ eng@@ er, int time@@ out@@ M@@ s, android.os.@@ I@@ B@@ in@@ der b@@ in@@ der@@ , int le@@ g@@ ac@@ y@@ Typ@@ e) { final android.net.@@ Network@@ Requ@@ est.@@ Type type = (@@ network@@ Cap@@ abili@@ ti@@ es == null@@ ) ? Network@@ Requ@@ est.@@ Type.@@ TR@@ AC@@ K@@ _@@ DE@@ FA@@ UL@@ T : Network@@ Requ@@ est.@@ Type.@@ RE@@ Q@@ UE@@ S@@ T@@ ; if (@@ type == (@@ Network@@ Requ@@ est.@@ Type.@@ TR@@ AC@@ K@@ _@@ DE@@ FA@@ UL@@ T@@ )) { network@@ Cap@@ abili@@ ti@@ es = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (m@@ Default@@ Requ@@ est.@@ network@@ Cap@@ abili@@ ties@@ ); network@@ Cap@@ abili@@ ti@@ es.@@ remove@@ Cap@@ abili@@ ty@@ (com.android.server.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ V@@ P@@ N@@ ); e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); } else { network@@ Cap@@ abili@@ ti@@ es = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); e@@ n@@ for@@ ce@@ Network@@ Request@@ Permission@@ s(@@ network@@ Cap@@ abili@@ ties@@ ); e@@ n@@ for@@ ce@@ M@@ eter@@ ed@@ Ap@@ n@@ Po@@ lic@@ y@@ (@@ network@@ Cap@@ abili@@ ties@@ ); } en@@ su@@ re@@ Request@@ able@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); res@@ tri@@ ct@@ Request@@ U@@ id@@ s@@ To@@ Set@@ Ac@@ ces@@ si@@ ble@@ To@@ Call@@ er(@@ network@@ Cap@@ abili@@ ti@@ es@@ ); if (@@ time@@ out@@ M@@ s < 0) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ B@@ ad time@@ out s@@ pe@@ c@@ if@@ i@@ ed@@ "); } en@@ su@@ re@@ Valid@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ network@@ Cap@@ abili@@ ties@@ ); android.net.@@ Network@@ Requ@@ est network@@ Requ@@ est = new android.net.@@ Network@@ Request@@ (@@ network@@ Cap@@ abili@@ ties@@ , le@@ g@@ ac@@ y@@ Type, next@@ Network@@ Request@@ Id@@ (), typ@@ e); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (m@@ ess@@ eng@@ er, network@@ Request@@ , b@@ in@@ der@@ ); if (com.android.server.@@ Connectivity@@ Service.@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ request@@ ing for " + n@@ ri@@ )); m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ RE@@ G@@ IS@@ TER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _RE@@ Q@@ UE@@ S@@ T@@ , n@@ ri@@ )); if (@@ time@@ out@@ M@@ s > 0) { m@@ Handler.@@ send@@ Message@@ D@@ el@@ ay@@ ed@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ TI@@ ME@@ O@@ U@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _RE@@ Q@@ UE@@ S@@ T@@ , n@@ ri@@ ), time@@ out@@ M@@ s); } return network@@ Request@@ ; }
private android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ With@@ out@@ U@@ id@@ s@@ Un@@ l@@ ess@@ Al@@ low@@ ed@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { if (@@ check@@ Setting@@ s@@ Permission@@ ()) return n@@ c@@ ; return new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ n@@ c@@ ).set@@ U@@ id@@ s@@ (@@ null@@ ); }
private android.net.@@ Network@@ Cap@@ abili@@ ti@@ es get@@ Network@@ Cap@@ abili@@ ties@@ In@@ ternal@@ (com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i@@ ) { if (@@ n@@ a@@ i != null@@ ) { synchronized@@ (@@ n@@ a@@ i@@ ) { if ((@@ n@@ a@@ i.@@ network@@ Cap@@ abili@@ ties@@ ) != null@@ ) { return network@@ Cap@@ abili@@ ties@@ With@@ out@@ U@@ id@@ s@@ Un@@ l@@ ess@@ Al@@ low@@ ed@@ (@@ n@@ a@@ i.@@ network@@ Cap@@ abili@@ ties@@ ); } } return null@@ ; }
@java.lang.Override public android.net.@@ Network@@ Requ@@ est list@@ en@@ For@@ Network@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.os.@@ Mess@@ eng@@ er mess@@ eng@@ er, android.os.@@ I@@ B@@ in@@ der b@@ in@@ der@@ ) { if (!(@@ has@@ W@@ if@@ i@@ Network@@ List@@ en@@ Permission@@ (@@ network@@ Cap@@ abili@@ ties@@ ))) { e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); } android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); res@@ tri@@ ct@@ Request@@ U@@ id@@ s@@ To@@ Set@@ Ac@@ ces@@ si@@ ble@@ To@@ Call@@ er(@@ n@@ c@@ ); if (!@@ (android.net.@@ Connectivity@@ Manager.@@ check@@ Chang@@ e@@ Permission@@ (m@@ Context@@ ))) { n@@ c.@@ add@@ Cap@@ abili@@ ty@@ (com.android.server.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D@@ ); } en@@ su@@ re@@ Valid@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ network@@ Cap@@ abili@@ ties@@ ); android.net.@@ Network@@ Requ@@ est network@@ Requ@@ est = new android.net.@@ Network@@ Request@@ (@@ n@@ c@@ , TYP@@ E_@@ N@@ ON@@ E, next@@ Network@@ Request@@ Id@@ (), Network@@ Requ@@ est.@@ Type.@@ L@@ IS@@ T@@ EN@@ ); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (m@@ ess@@ eng@@ er, network@@ Request@@ , b@@ in@@ der@@ ); if (com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ N@@ e@@ ed for " + n@@ ri@@ )); m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ RE@@ G@@ IS@@ TER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ L@@ IS@@ T@@ EN@@ ER@@ , n@@ ri@@ )); return network@@ Request@@ ; }
private void res@@ tri@@ ct@@ Request@@ U@@ id@@ s@@ To@@ Set@@ Ac@@ ces@@ si@@ ble@@ To@@ Call@@ er@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { if (@@ check@@ Setting@@ s@@ Permission@@ ()) { n@@ c.@@ set@@ U@@ id@@ s@@ (@@ new android.util.@@ Array@@ Set@@ <@@ android.net.@@ U@@ id@@ R@@ ang@@ e@@ >@@ ()); } else { n@@ c.@@ set@@ S@@ ing@@ le@@ U@@ id@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); } }
public void com@@ b@@ ine@@ Cap@@ abili@@ ties@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { com@@ b@@ ine@@ Net@@ Cap@@ abili@@ ti@@ es@@ (@@ n@@ c@@ ); com@@ b@@ ine@@ Un@@ w@@ an@@ ted@@ Net@@ Cap@@ abili@@ ti@@ es@@ (@@ n@@ c@@ ); com@@ b@@ ine@@ Trans@@ port@@ Typ@@ es@@ (@@ n@@ c@@ ); com@@ b@@ ine@@ Lin@@ k@@ B@@ and@@ wid@@ th@@ s(@@ n@@ c@@ ); com@@ b@@ ine@@ S@@ pe@@ c@@ if@@ ier@@ s(@@ n@@ c@@ ); com@@ b@@ ine@@ Sign@@ al@@ Str@@ ength@@ (@@ n@@ c@@ ); com@@ b@@ ine@@ U@@ id@@ s(@@ n@@ c@@ ); }
private void check@@ Cap@@ abili@@ ty@@ R@@ ang@@ e(@@ @@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ Net@@ Cap@@ abili@@ t@@ y int c@@ ap@@ abili@@ ty@@ ) { if ((@@ c@@ ap@@ abili@@ t@@ y < (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ M@@ IN@@ _N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ )) || (c@@ ap@@ abili@@ t@@ y > (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ MA@@ X@@ _N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ ))) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Network@@ Cap@@ abili@@ t@@ y out of r@@ ang@@ e@@ "); } }
public void add@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (@@ @@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ Net@@ Cap@@ abili@@ t@@ y int c@@ ap@@ abili@@ ty@@ ) { check@@ Cap@@ abili@@ ty@@ R@@ ang@@ e@@ (c@@ ap@@ abili@@ ty@@ ); m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ti@@ es |@@ = 1 <@@ < c@@ ap@@ abili@@ ty@@ ; remove@@ Cap@@ abili@@ ty@@ (c@@ ap@@ abili@@ ty@@ ); }
@java.lang.Override public boolean equals(@@ java.lang.Object ob@@ j@@ ) { if ((@@ ob@@ j == null@@ ) || ((@@ ob@@ j instanceof android.net.@@ Network@@ Cap@@ abili@@ ties@@ ) == false@@ )) return false@@ ; android.net.@@ Network@@ Cap@@ abili@@ ti@@ es th@@ at = ((@@ android.net.@@ Network@@ Cap@@ abili@@ ties@@ ) (@@ ob@@ j@@ )); return ((((@@ ("@@ Un@@ k@@ no@@ w@@ n equal@@ s@@ Net@@ Cap@@ abili@@ ties@@ (@@ th@@ at@@ )) && (@@ equal@@ s@@ Un@@ w@@ an@@ ted@@ Net@@ Cap@@ abili@@ ties@@ (@@ th@@ at@@ ))) && (@@ equal@@ s@@ Trans@@ port@@ Typ@@ es@@ (@@ th@@ at@@ ))) && (@@ equal@@ s@@ Lin@@ k@@ B@@ and@@ wid@@ th@@ s(@@ th@@ at@@ ))) && (@@ equal@@ s@@ Sign@@ al@@ Str@@ ength@@ (@@ th@@ at@@ ))) && (@@ equal@@ s@@ S@@ pe@@ c@@ if@@ i@@ er(@@ th@@ at@@ ))) && (@@ equal@@ s@@ U@@ id@@ s(@@ th@@ at@@ )); }
public void remove@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (@@ @@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ Net@@ Cap@@ abili@@ t@@ y int c@@ ap@@ abili@@ ty@@ ) { check@@ Cap@@ abili@@ ty@@ R@@ ang@@ e@@ (c@@ ap@@ abili@@ ty@@ ); m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ti@@ es &@@ = ~@@ (@@ 1 <@@ < c@@ ap@@ abili@@ ty@@ ); }
private boolean s@@ ati@@ s@@ fi@@ ed@@ By@@ Cap@@ abili@@ ties@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ , boolean on@@ ly@@ Im@@ m@@ ut@@ able@@ ) { long requ@@ es@@ ted@@ Cap@@ abili@@ ti@@ es = m@@ Network@@ Cap@@ abili@@ ties@@ ; long requ@@ es@@ ted@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ti@@ es = m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ ; long provid@@ ed@@ Cap@@ abili@@ ti@@ es = n@@ c@@ .@@ m@@ Network@@ Cap@@ abili@@ ties@@ ; if (@@ on@@ ly@@ Im@@ m@@ ut@@ able@@ ) { requ@@ es@@ ted@@ Cap@@ abili@@ ti@@ es = ~@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ M@@ U@@ TA@@ B@@ L@@ E_@@ C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S@@ ); requ@@ es@@ ted@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ti@@ es &@@ = ~@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ M@@ U@@ TA@@ B@@ L@@ E_@@ C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S@@ ); provid@@ ed@@ Cap@@ abili@@ ti@@ es &@@ = ~@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ M@@ U@@ TA@@ B@@ L@@ E_@@ C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S@@ ); } return (@@ provid@@ ed@@ Cap@@ abili@@ ti@@ es.@@ requ@@ es@@ ted@@ Cap@@ abili@@ ti@@ es.@@ Cap@@ abili@@ ti@@ es.@@ ) == requ@@ es@@ ted@@ Cap@@ abili@@ ties@@ ) && ((@@ requ@@ es@@ ted@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ti@@ es & provid@@ ed@@ Cap@@ abili@@ ties@@ ) == 0@@ )); }
private void com@@ b@@ ine@@ Un@@ w@@ an@@ ted@@ Net@@ Cap@@ abili@@ ties@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { this@@ .@@ m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ti@@ es |@@ = n@@ c.@@ m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ ; }
public android.net.@@ Network@@ Cap@@ abili@@ ti@@ es remove@@ Cap@@ abili@@ ty@@ (@@ @@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ Net@@ Cap@@ abili@@ t@@ y int c@@ ap@@ abili@@ ty@@ ) { check@@ Cap@@ abili@@ ty@@ R@@ ang@@ e@@ (c@@ ap@@ abili@@ ty@@ ); m@@ Network@@ Cap@@ abili@@ ti@@ es &@@ = ~@@ (@@ 1 <@@ < c@@ ap@@ abili@@ ty@@ ); return this@@ ; }
public android.net.@@ Network@@ Cap@@ abili@@ ti@@ es add@@ Cap@@ abili@@ ty@@ (@@ @@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ Net@@ Cap@@ abili@@ t@@ y int c@@ ap@@ abili@@ ty@@ ) { check@@ Cap@@ abili@@ ty@@ R@@ ang@@ e@@ (c@@ ap@@ abili@@ ty@@ ); m@@ Network@@ Cap@@ abili@@ ti@@ es |@@ = 1 <@@ < c@@ ap@@ abili@@ ty@@ ; remove@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (c@@ ap@@ abili@@ ty@@ ); return this@@ ; }
@org.junit.Test public void test@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ties@@ () { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es net@@ wor@@ k = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); android.net.@@ Network@@ Cap@@ abili@@ ti@@ es requ@@ est = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); assert@@ True@@ ((@@ (("@@ Request@@ : " + request@@ ) + ", Network@@ :@@ ") + network@@ ), requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); requ@@ est.@@ add@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ WI@@ FI@@ _P@@ 2@@ P@@ ); requ@@ est.@@ add@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T@@ _M@@ E@@ D@@ ); assert@@ True@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); assert@@ True@@ (@@ network@@ .@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); requ@@ est.@@ add@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); assert@@ False@@ (@@ requ@@ est.@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); assert@@ False@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); network@@ .@@ remove@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); assert@@ True@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); requ@@ est.@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); assert@@ False@@ (@@ requ@@ est.@@ has@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); assert@@ False@@ (@@ requ@@ est.@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); network@@ .@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); assert@@ True@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); }
private boolean equal@@ s@@ Un@@ w@@ an@@ ted@@ Net@@ Cap@@ abili@@ ties@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { return (@@ n@@ c.@@ m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ ) == (@@ this@@ .@@ m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ ); }
public boolean has@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (@@ @@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ Net@@ Cap@@ abili@@ t@@ y int c@@ ap@@ abili@@ ty@@ ) { if ((@@ c@@ ap@@ abili@@ t@@ y < (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ M@@ IN@@ _N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ )) || (c@@ ap@@ abili@@ t@@ y > (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ MA@@ X@@ _N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ ))) { return false@@ ; } return ((m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ ) & (@@ 1 <@@ < c@@ ap@@ abili@@ ty@@ )) != 0; }
public void set@@ Cap@@ abili@@ ties@@ (@@ @@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ Net@@ Cap@@ abili@@ t@@ y int@@ [] c@@ ap@@ abili@@ ties@@ ) { m@@ Network@@ Cap@@ abili@@ ti@@ es = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Bit@@ Utils.@@ pack@@ Bit@@ s(@@ c@@ ap@@ abili@@ ties@@ ); m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ti@@ es &@@ = ~@@ ((m@@ Network@@ Cap@@ abili@@ ties@@ ) & (m@@ Un@@ w@@ an@@ ted@@ Network@@ Cap@@ abili@@ ties@@ )); }
@java.lang.Override public java.lang.String toString@@ () { return new java.lang.String@@ Builder@@ ().@@ append@@ ("@@ {@@ do@@ wn@@ lin@@ k@@ B@@ and@@ wid@@ th@@ =@@ ").@@ append@@ (@@ do@@ wn@@ lin@@ k@@ B@@ and@@ wid@@ th@@ ).@@ append@@ ("@@ , up@@ lin@@ k@@ B@@ and@@ wid@@ th@@ =@@ ").@@ append(@@ up@@ lin@@ k@@ B@@ and@@ wid@@ th@@ ).@@ append@@ ("@@ , con@@ f@@ id@@ en@@ ce@@ =@@ ").@@ append(@@ con@@ f@@ id@@ en@@ ce@@ ).@@ append@@ ("@@ , statu@@ s@@ =@@ ").@@ append(@@ statu@@ s@@ ).@@ toString@@ (); }
private static void write@@ To@@ Par@@ cel@@ For@@ C@@ d@@ ma@@ (android.os.@@ Par@@ ce@@ l p@@ , int n@@ i@@ , int si@@ , int b@@ si@@ , int lat@@ , java.lang.String al@@ , java.lang.String as@@ , int d@@ b@@ m@@ , int ec@@ io@@ , int e@@ D@@ b@@ m@@ , int e@@ E@@ c@@ io@@ , int e@@ S@@ n@@ r@@ ) { new android.@@ telephony.@@ C@@ ell@@ Info@@ C@@ d@@ m@@ a@@ (@@ new java.lang.@@ String(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ell@@ Info@@ C@@ d@@ m@@ a@@ In@@ Milli@@ s@@ ())); }
private void register@@ B@@ roadcast@@ Recei@@ ver@@ () { if ((m@@ B@@ roadcast@@ Recei@@ ver@@ ) == null@@ ) { m@@ B@@ roadcast@@ Recei@@ ve@@ r = new android.content.@@ B@@ roadcast@@ Recei@@ ver@@ () { @java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { if (@@ Int@@ ent.@@ AC@@ TION@@ _@@ LO@@ C@@ AL@@ E_@@ CH@@ AN@@ GE@@ D@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { android.os.@@ Mess@@ age mess@@ age = m@@ Service@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (); mess@@ age.@@ arg@@ 1 = com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ O@@ P@@ _@@ LO@@ C@@ AL@@ E_@@ CH@@ AN@@ GE@@ D@@ ; m@@ Service@@ Handler.@@ send@@ Message@@ (m@@ ess@@ age@@ ); } } }; register@@ Recei@@ ver@@ (m@@ B@@ roadcast@@ Recei@@ ver@@ , new android.content.@@ Intent@@ Filter@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _@@ LO@@ C@@ AL@@ E_@@ CH@@ AN@@ GE@@ D@@ )); } }
@java.lang.Override public void on@@ D@@ est@@ ro@@ y@@ () { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ LO@@ G_@@ TAG, "@@ on@@ D@@ est@@ ro@@ y@@ ()@@ "); un@@ register@@ Process@@ Ob@@ ser@@ ver@@ (); un@@ register@@ B@@ roadcast@@ Recei@@ ver@@ (); com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ s@@ In@@ stan@@ ce = null@@ ; wait@@ For@@ L@@ oo@@ per@@ (); m@@ Service@@ L@@ oo@@ per.@@ qu@@ it@@ (); }
private void un@@ register@@ Event@@ (@@ int event@@ , int s@@ lo@@ t@@ Id@@ ) { switch (@@ event@@ ) { case ID@@ L@@ E_@@ S@@ C@@ RE@@ EN@@ _@@ AV@@ A@@ IL@@ AB@@ L@@ E_@@ EV@@ EN@@ T : un@@ register@@ Process@@ Ob@@ ser@@ ver@@ (@@ App@@ Interface@@ .@@ Command@@ Type.@@ SE@@ T_@@ U@@ P@@ _@@ EV@@ ENT_@@ L@@ IS@@ T@@ , s@@ lo@@ t@@ Id@@ ); break@@ ; case L@@ AN@@ G@@ U@@ A@@ G@@ E_@@ SE@@ LE@@ C@@ TION@@ _@@ EV@@ EN@@ T : un@@ register@@ B@@ roadcast@@ Recei@@ ver@@ (); break@@ ; default : break@@ ; } }
private void un@@ register@@ B@@ roadcast@@ Recei@@ ver@@ () { if ((m@@ B@@ roadcast@@ Recei@@ ver@@ ) != null@@ ) { un@@ register@@ Recei@@ ver@@ (m@@ B@@ roadcast@@ Recei@@ ver@@ ); m@@ B@@ roadcast@@ Recei@@ ve@@ r = null@@ ; }
private void register@@ Event@@ s@@ (@@ int s@@ lo@@ t@@ Index@@ ) { if ((m@@ St@@ k@@ Context@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ m@@ Set@@ up@@ Event@@ List@@ Setting@@ s) == null@@ ) { return@@ ; } for (@@ int ev@@ ent : m@@ St@@ k@@ Context@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ m@@ Set@@ up@@ Event@@ List@@ Setting@@ s.@@ event@@ List@@ ) { switch (@@ event@@ ) { case ID@@ L@@ E_@@ S@@ C@@ RE@@ EN@@ _@@ AV@@ A@@ IL@@ AB@@ L@@ E_@@ EV@@ EN@@ T : register@@ Process@@ Ob@@ ser@@ ver@@ (); break@@ ; case L@@ AN@@ G@@ U@@ A@@ G@@ E_@@ SE@@ LE@@ C@@ TION@@ _@@ EV@@ EN@@ T : register@@ B@@ roadcast@@ Recei@@ ver@@ (); break@@ ; default : break@@ ; } }
public static void main@@ (@@ java.lang.String[] param@@ s) throw@@ s java.lang.Exception { if ((((@@ param@@ s.@@ length) == 0) || ("@@ --@@ hel@@ p@@ ".@@ equals(@@ param@@ s@@ [0@@ ]@@ ))) || ("@@ -@@ h@@ ".@@ equals(@@ param@@ s@@ [0@@ ]@@ ))) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ p@@ r@@ int@@ U@@ s@@ age@@ (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ H@@ E@@ L@@ P@@ _P@@ A@@ G@@ E_@@ G@@ EN@@ ER@@ AL@@ ); return@@ ; } else if ("@@ --@@ version@@ ".@@ equals(@@ param@@ s@@ [0@@ ]@@ )) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ V@@ E@@ RS@@ ION@@ ); return@@ ; } java.lang.String c@@ m@@ d = param@@ s@@ [0@@ ]; try { if ("@@ sign@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ sign@@ (@@ java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ param@@ s, 1, param@@ s.@@ length@@ )); return@@ ; } else if ("@@ ve@@ r@@ if@@ y@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ ve@@ r@@ if@@ y@@ (@@ java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ param@@ s, 1, param@@ s.@@ length@@ )); return@@ ; } else if ("@@ ro@@ t@@ ate@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ ro@@ t@@ ate@@ (@@ java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ param@@ s, 1, param@@ s.@@ length@@ )); } else if (@@ "@@ hel@@ p@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ p@@ r@@ int@@ U@@ s@@ age@@ (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ H@@ E@@ L@@ P@@ _P@@ A@@ G@@ E_@@ G@@ EN@@ ER@@ AL@@ ); return@@ ; } else if ("@@ version@@ ".@@ equals(@@ c@@ m@@ d@@ )) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ V@@ E@@ RS@@ ION@@ ); return@@ ; } else { throw new com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ Parameter@@ Exception@@ ((@@ ("@@ --@@ hel@@ p command@@ : " + c@@ m@@ d@@ ) + " Se@@ e --@@ hel@@ p for sup@@ por@@ ted command@@ s "); } } catch (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ Parameter@@ Exception | com.android.@@ ap@@ k@@ sign@@ er.@@ Option@@ s@@ Par@@ se@@ r e) { java.lang.System.@@ er@@ r.@@ p@@ r@@ int@@ ln@@ (@@ e.get@@ Message@@ ()); java.lang.System.@@ ex@@ it@@ (1@@ ); return@@ ; } } }
public java.lang.String put@@ Option@@ () { m@@ In@@ dex = m@@ P@@ ut@@ B@@ ack@@ Index@@ ; m@@ L@@ ast@@ Option@@ O@@ ri@@ gin@@ al@@ For@@ m = m@@ P@@ ut@@ B@@ ack@@ L@@ ast@@ Option@@ O@@ ri@@ gin@@ al@@ For@@ m@@ ; m@@ L@@ ast@@ Option@@ Value = m@@ P@@ ut@@ B@@ ack@@ L@@ ast@@ Option@@ Value@@ ; }
private com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ ent@@ if@@ i@@ er.@@ C@@ ar@@ ri@@ er@@ Match@@ ing@@ R@@ ul@@ e m@@ ake@@ C@@ ar@@ ri@@ er@@ Match@@ ing@@ R@@ ule@@ (android.@@ dat@@ ab@@ ase.@@ C@@ ur@@ s@@ or c@@ ur@@ s@@ or@@ ) { return new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ ent@@ if@@ i@@ er.@@ C@@ ar@@ ri@@ er@@ Match@@ ing@@ R@@ ule@@ (c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ I@@ M@@ SI@@ _P@@ RE@@ FI@@ X@@ _@@ X@@ P@@ AT@@ TER@@ N@@ )), c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ G@@ ID@@ 1@@ )), c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ G@@ ID@@ 2@@ )), c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ P@@ L@@ M@@ N@@ )), c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ S@@ P@@ N@@ )), c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ S@@ P@@ N@@ )), c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ )), c@@ ur@@ s@@ or@@ .get@@ String@@ (c@@ ur@@ s@@ or@@ .get@@ Col@@ um@@ n@@ Index@@ Or@@ Throw@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E@@ ))); }
private int update@@ Dat@@ ab@@ ase@@ From@@ P@@ b@@ (android.@@ dat@@ ab@@ ase.@@ s@@ q@@ li@@ te@@ .@@ S@@ Q@@ Li@@ te@@ Dat@@ ab@@ as@@ e d@@ b@@ ) { android.util.Log.d@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ TAG, "@@ update@@ Dat@@ ab@@ ase@@ From@@ P@@ b@@ m dat@@ ab@@ as@@ e f@@ ro@@ m p@@ b fi@@ le int row@@ s = 0; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ n@@ an@@ o.@@ C@@ ar@@ ri@@ er@@ Id@@ Pro@@ to.@@ C@@ ar@@ ri@@ er@@ Lis@@ t c@@ ar@@ ri@@ er@@ Lis@@ t = get@@ Up@@ date@@ C@@ ar@@ ri@@ er@@ List@@ (); if (c@@ ar@@ ri@@ er@@ Lis@@ t == null@@ ) return row@@ s; android.content.@@ Content@@ Value@@ s c@@ v@@ ; java.util.List<@@ android.content.@@ Content@@ Valu@@ es@@ > c@@ v@@ s; try { d@@ b.@@ b@@ e@@ gin@@ Trans@@ action@@ (); d@@ b.@@ delet@@ e@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ _@@ TA@@ B@@ LE@@ , null@@ , null@@ ); for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ n@@ an@@ o.@@ C@@ ar@@ ri@@ er@@ Id@@ Pro@@ to.@@ C@@ ar@@ ri@@ er@@ Id id : c@@ ar@@ ri@@ er@@ List.@@ c@@ ar@@ ri@@ er@@ Id@@ ) { for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ n@@ an@@ o.@@ C@@ ar@@ ri@@ er@@ Id@@ Pro@@ to.@@ C@@ ar@@ ri@@ er@@ At@@ tri@@ b@@ ut@@ e att@@ r : id@@ .@@ c@@ ar@@ ri@@ er@@ Attribute@@ ) { c@@ v = new android.content.@@ Content@@ Valu@@ es@@ (); c@@ v@@ .@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ , id@@ .@@ can@@ on@@ ic@@ al@@ Id@@ ); c@@ v@@ .@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E, id@@ .@@ c@@ ar@@ ri@@ er@@ Name); c@@ v@@ s = new java.util.Array@@ List@@ (); con@@ ver@@ t@@ C@@ ar@@ ri@@ er@@ At@@ tr@@ To@@ Content@@ Valu@@ es@@ (c@@ v@@ , c@@ v@@ , 0); for (android.@@ content.@@ Content@@ Value@@ s cont@@ ent@@ V@@ al : c@@ v@@ s) { if ((@@ d@@ b.@@ in@@ ser@@ t@@ With@@ On@@ Con@@ f@@ li@@ ct@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ _@@ TA@@ B@@ LE@@ , null@@ , cont@@ ent@@ Val@@ , S@@ Q@@ Li@@ te@@ Dat@@ ab@@ ase.@@ C@@ ON@@ F@@ L@@ IC@@ T_@@ I@@ G@@ NO@@ RE@@ )) > 0) { row@@ s@@ ++@@ ; } else { android.util.Log.@@ e@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ TAG, ((@@ ("@@ update@@ Dat@@ ab@@ ase@@ From@@ P@@ b@@ m in@@ ser@@ tion fail@@ ure@@ , row@@ s) + " id@@ : ") + (@@ id@@ .@@ can@@ on@@ ic@@ al@@ Id@@ ))); } } } android.util.Log.d@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ TAG, ("@@ update@@ Dat@@ ab@@ ase@@ From@@ P@@ b@@ e dat@@ ab@@ as@@ e f@@ ro@@ m p@@ b@@ . in@@ ser@@ ted row@@ s = " + row@@ s@@ )); if (@@ row@@ s > 0) { get@@ Context@@ ().get@@ Content@@ Res@@ ol@@ ver@@ ().@@ not@@ if@@ y@@ Chang@@ e@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , null@@ ); } set@@ Appli@@ ed@@ Version@@ (c@@ ar@@ ri@@ er@@ List.@@ version@@ ); d@@ b.@@ end@@ Trans@@ action@@ Su@@ c@@ cess@@ f@@ ul@@ (); } return row@@ s; }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public static java.lang.String get@@ String@@ For@@ C@@ ar@@ ri@@ er@@ Id@@ T@@ able@@ Cre@@ ation@@ (java.lang.String t@@ able@@ Name@@ ) { return ((((@@ ((((@@ ((((@@ ((((@@ ((@@ (("@@ get@@ TA@@ B@@ L@@ E " + t@@ able@@ Name@@ ) + " IN@@ TE@@ GE@@ R P@@ R@@ I@@ M@@ AR@@ Y KE@@ Y@@ , ") + (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ M@@ C@@ C@@ N@@ C@@ )) + " TE@@ X@@ T N@@ UL@@ L@@ , ") + (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ ())) + " to ") + (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ G@@ ID@@ 1@@ )) + " TE@@ X@@ T@@ , ") + (android.@@ text.@@ Text@@ Utils.@@ j@@ o@@ in@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ P@@ L@@ M@@ N@@ )) + " TE@@ X@@ T@@ ,@@ ") + (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ I@@ M@@ SI@@ _P@@ RE@@ FI@@ X@@ _@@ X@@ P@@ AT@@ TER@@ N@@ )) + " TE@@ X@@ T@@ ,@@ ") + (android.@@ provider.@@ Telephony@@ .@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ S@@ P@@ N@@ )) + " TE@@ X@@ T@@ ,@@ ") + (android.@@ provider.@@ Telephony@@ .@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ )) + " TE@@ X@@ T@@ ,@@ ") + (android.@@ provider.@@ Telephony@@ .@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E@@ )) + " TE@@ X@@ T@@ ,@@ ") + (android.@@ provider.@@ Telephony@@ .@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ )) + " IN@@ TE@@ GE@@ R DE@@ FA@@ UL@@ T -1@@ , ") + (android.@@ text.@@ Text@@ Utils.@@ j@@ o@@ in@@ ("@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ C@@ AR@@ R@@ I@@ E@@ RS@@ _@@ ID@@ _@@ UN@@ I@@ Q@@ U@@ E_@@ FI@@ E@@ L@@ D@@ S@@ ))) + "@@ ))@@ ;@@ "; }
private int update@@ C@@ ar@@ ri@@ er@@ Id@@ For@@ Current@@ Sub@@ s@@ cription@@ (android.net.@@ Ur@@ i ur@@ i@@ , android.content.@@ Content@@ Value@@ s c@@ v@@ ) { int sub@@ Id@@ ; try { sub@@ Id = java.lang.Integ@@ er.@@ parse@@ Int@@ (@@ ur@@ i@@ .get@@ L@@ ast@@ Path@@ Se@@ g@@ ment@@ ()); } catch (java.lang.@@ Number@@ Format@@ Exception e) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ In@@ va@@ li@@ d sub@@ id in provid@@ ed ur@@ i " + ur@@ i@@ )); } android.util.Log.d@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ TAG, ("@@ N@@ e@@ ed " + sub@@ Id@@ )); if (s@@ u@@ b@@ Id == (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ DE@@ FA@@ UL@@ T_@@ S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _@@ ID@@ )) { sub@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ Default@@ Sub@@ Id@@ (); } if (!(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Instance@@ ().@@ is@@ Ac@@ tive@@ Sub@@ Id@@ (s@@ u@@ b@@ Id@@ ))) { final java.util.@@ Lis@@ t ac@@ tive@@ Sub@@ s@@ cription@@ s = java.util.Arrays.@@ as@@ List@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ Ac@@ tive@@ Sub@@ Id@@ List@@ ()); int coun@@ t = 0; for (@@ int sub@@ s@@ cri@@ pti@@ on : m@@ Current@@ Sub@@ s@@ cription@@ Map@@ .@@ key@@ Set@@ ()) { if (!(@@ ac@@ tive@@ Sub@@ s@@ cription@@ s.@@ contain@@ s(@@ sub@@ s@@ cription@@ ))) { count@@ ++@@ ; android.util.Log.d@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ TAG, ("@@ N@@ e@@ ed " + sub@@ s@@ cription@@ )); m@@ Current@@ Sub@@ s@@ cription@@ Map@@ .@@ remove@@ (s@@ u@@ b@@ s@@ cription@@ ); get@@ Context@@ ().get@@ Content@@ Res@@ ol@@ ver@@ ().@@ not@@ if@@ y@@ Chang@@ e@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , null@@ ); } } return count@@ ; } else { m@@ Current@@ Sub@@ s@@ cription@@ Map@@ .@@ put@@ (s@@ u@@ b@@ Id, new android.util.@@ Pair@@ (c@@ v@@ .get@@ As@@ Integ@@ er@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ I@@ D@@ ), c@@ v@@ .get@@ As@@ String@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E@@ ))); get@@ Context@@ ().get@@ Content@@ Res@@ ol@@ ver@@ ().@@ not@@ if@@ y@@ Chang@@ e@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , null@@ ); return 1; } }
private static android.content.@@ Content@@ Value@@ s create@@ C@@ ar@@ ri@@ er@@ Info@@ In@@ ternal@@ () { android.content.@@ Content@@ Value@@ s cont@@ ent@@ Value@@ s = new android.content.@@ Content@@ Valu@@ es@@ (); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ M@@ C@@ M@@ N@@ C@@ , com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ m@@ cc@@ m@@ n@@ c@@ ); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ G@@ ID@@ 1, com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ g@@ id@@ 1); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ G@@ ID@@ 2, com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ g@@ id@@ 2@@ ); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ P@@ L@@ M@@ N@@ , com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ p@@ l@@ m@@ n@@ ); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ I@@ M@@ SI@@ _P@@ RE@@ FI@@ X@@ _@@ X@@ _@@ X@@ P@@ AT@@ TER@@ N@@ , com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ im@@ si@@ _@@ pre@@ fix@@ ); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ S@@ P@@ N@@ , com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ s@@ p@@ n@@ ); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ S@@ P@@ N@@ , com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ ap@@ n@@ ); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ IC@@ C@@ ID@@ _P@@ RE@@ FI@@ X@@ , com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ ic@@ c@@ id@@ _@@ pre@@ fix@@ ); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E, com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ name@@ ); cont@@ ent@@ Valu@@ es.@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ I@@ D@@ , com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ c@@ id@@ ); return cont@@ ent@@ Valu@@ es@@ ; }
@org.junit.@@ Test@@ (@@ expec@@ ted = java.lang.Illegal@@ Argument@@ Exception@@ .@@ class@@ ) public void test@@ Up@@ date@@ Current@@ Sub@@ s@@ cription@@ _@@ W@@ ron@@ g@@ UR@@ I@@ () { try { android.content.@@ Content@@ Value@@ s c@@ v = new android.content.@@ Content@@ Valu@@ es@@ (); c@@ v@@ .@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ , com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ c@@ id@@ ); c@@ v@@ .@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E, com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provider@@ Test.@@ dum@@ my@@ _@@ name@@ ); do@@ Return@@ (1@@ ).@@ when@@ (m@@ Sub@@ Control@@ ler@@ )@@ .get@@ Default@@ Sub@@ Id@@ (); do@@ Return@@ (@@ true@@ ).@@ when@@ (m@@ Sub@@ Control@@ ler@@ ).@@ is@@ Ac@@ tive@@ Sub@@ Id@@ (@@ e@@ q@@ (1@@ )); m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ ().@@ update@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , c@@ v@@ , null@@ ); org.@@ junit.@@ Assert.@@ fail@@ ("@@ sho@@ ul@@ d throw an excepti@@ on for w@@ ron@@ g ur@@ i "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception ex@@ ) { assert@@ False@@ (m@@ Content@@ Ob@@ server.@@ ch@@ ang@@ ed@@ ); } }
private android.@@ dat@@ ab@@ ase.@@ C@@ ur@@ s@@ or qu@@ er@@ y@@ C@@ ar@@ ri@@ er@@ Id@@ For@@ Current@@ Sub@@ s@@ cription@@ (android.net.@@ Ur@@ i ur@@ i@@ , java.lang.String[] pro@@ jec@@ tion@@ In@@ ) { int sub@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ Default@@ Sub@@ Id@@ (); if (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ ur@@ i@@ .get@@ L@@ ast@@ Path@@ Se@@ g@@ ment@@ ()))) { try { sub@@ Id = java.lang.Integ@@ er.@@ parse@@ Int@@ (@@ ur@@ i@@ .get@@ L@@ ast@@ Path@@ Se@@ g@@ ment@@ ()); } catch (java.lang.@@ Number@@ Format@@ Exception e) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ In@@ va@@ li@@ d sub@@ id in provid@@ ed ur@@ i " + ur@@ i@@ )); } } android.util.Log.d@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ Provid@@ er.@@ TAG, ("@@ sub@@ Id@@ : " + sub@@ Id@@ )); if (s@@ u@@ b@@ Id == (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ DE@@ FA@@ UL@@ T_@@ S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _@@ ID@@ )) { sub@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ Default@@ Sub@@ Id@@ (); } if (!(m@@ Current@@ Sub@@ s@@ cription@@ Map@@ .@@ contain@@ s@@ Key@@ (s@@ u@@ b@@ Id@@ ))) { return new android.@@ dat@@ ab@@ ase.@@ M@@ at@@ ri@@ x@@ C@@ ur@@ s@@ or@@ (pro@@ jec@@ tion@@ In@@ , 0); } final android.@@ dat@@ ab@@ ase.@@ M@@ at@@ ri@@ x@@ C@@ ur@@ s@@ or c = new android.@@ dat@@ ab@@ ase.@@ M@@ at@@ ri@@ x@@ C@@ ur@@ s@@ or@@ (pro@@ jec@@ tion@@ In@@ , 1); final android.@@ dat@@ ab@@ ase.@@ M@@ at@@ ri@@ x@@ C@@ ur@@ s@@ or.@@ R@@ o@@ w@@ Builder ro@@ w = c@@ .@@ new@@ R@@ o@@ w@@ (); for (@@ int i = 0; i < (c@@ .get@@ Col@@ um@@ n@@ Count@@ ()); i++) { final java.lang.String col@@ um@@ n@@ Name = c@@ .get@@ Col@@ um@@ n@@ Name@@ (i@@ ); if ((@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ .@@ equals(@@ col@@ um@@ n@@ Name@@ )) { row@@ .@@ add@@ (m@@ Current@@ Sub@@ s@@ cription@@ Map@@ .get@@ (s@@ u@@ b@@ Id@@ ).@@ fi@@ rst@@ ); } else if (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E@@ .@@ equals(@@ col@@ um@@ n@@ Name@@ )) { row@@ .@@ add@@ (m@@ Current@@ Sub@@ s@@ cription@@ Map@@ .get@@ (s@@ u@@ b@@ Id@@ ).@@ sec@@ ond@@ ); } else { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ In@@ va@@ li@@ d col@@ um@@ n " + (pro@@ jec@@ tion@@ In@@ [i@@ ]@@ ))); } } return c@@ ; }
@org.junit.@@ Test@@ (@@ expec@@ ted = java.lang.Illegal@@ Argument@@ Exception@@ .@@ class@@ ) public void test@@ Q@@ u@@ er@@ y@@ With@@ W@@ ron@@ g@@ UR@@ I@@ () { try { m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ ().@@ qu@@ er@@ y@@ (android.net.@@ U@@ ri@@ .@@ w@@ ith@@ Ap@@ pend@@ ed@@ Path@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , "@@ in@@ valid@@ "), new java.lang.String@@ []{ android.@@ provider.@@ Telephony@@ .@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ , android.@@ provider.@@ Telephony@@ .@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E }@@ , null@@ , null@@ ); org.@@ junit.@@ Assert.@@ fail@@ ("@@ expec@@ ted throw an excepti@@ on for w@@ ron@@ g ur@@ i "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception ex@@ ) { } }
@org.junit.@@ Test@@ (@@ expec@@ ted = java.lang.Illegal@@ Argument@@ Exception@@ .@@ class@@ ) public void test@@ Q@@ u@@ er@@ y@@ Curr@@ r@@ ent@@ Sub@@ s@@ cription@@ _@@ w@@ ron@@ g@@ Pro@@ jec@@ tion@@ () { m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ ().@@ qu@@ er@@ y@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , new java.lang.String@@ []{ android.@@ provider.@@ Telephony@@ .@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ I@@ D@@ , android.@@ provider.@@ Telephony@@ .@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E, C@@ ar@@ ri@@ er@@ Id@@ .@@ Al@@ l.@@ M@@ C@@ M@@ N@@ C }@@ , null@@ ); }
private void update@@ C@@ ar@@ ri@@ er@@ Id@@ And@@ Name@@ (@@ int c@@ id, java.lang.String name@@ ) { boolean up@@ d@@ ate = false@@ ; if (!(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ ent@@ if@@ i@@ er.@@ equals(@@ name@@ , mC@@ ar@@ ri@@ er@@ Name, true@@ ))) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ ent@@ if@@ i@@ er.@@ log@@ d@@ ((@@ (("@@ update@@ C@@ ar@@ ri@@ er@@ Id@@ And@@ Name@@ : " + (m@@ C@@ ar@@ ri@@ er@@ Name@@ )) + " to@@ : ") + name@@ )); mC@@ ar@@ ri@@ er@@ Name = name@@ ; up@@ d@@ ate = true@@ ; } if (c@@ id != (m@@ C@@ ar@@ ri@@ er@@ Id@@ )) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Id@@ ent@@ if@@ i@@ er.@@ log@@ d@@ ((@@ (("@@ update@@ C@@ ar@@ ri@@ er@@ Id@@ : " + (m@@ C@@ ar@@ ri@@ er@@ Id@@ )) + " to@@ : ") + c@@ id@@ )); mC@@ ar@@ ri@@ er@@ Id = c@@ id@@ ; up@@ d@@ ate = true@@ ; } if (@@ update@@ ) { mC@@ ar@@ ri@@ er@@ Id@@ Local@@ Log.@@ log@@ ((@@ (("@@ update@@ C@@ ar@@ ri@@ er@@ : c@@ id@@ : " + (m@@ C@@ ar@@ ri@@ er@@ Id@@ )) + " name@@ : ") + (m@@ C@@ ar@@ ri@@ er@@ Name@@ ))); final android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ telephony.@@ Telephony@@ Manager.@@ AC@@ TION@@ _S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _C@@ AR@@ R@@ I@@ ER_@@ ID@@ EN@@ TI@@ TY@@ _C@@ H@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Telephony@@ Manager.@@ EX@@ TR@@ A@@ _C@@ AR@@ R@@ I@@ ER_@@ ID@@ , mC@@ ar@@ ri@@ er@@ Id@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Telephony@@ Manager.@@ EX@@ TR@@ A@@ _C@@ AR@@ R@@ I@@ ER@@ _N@@ AM@@ E, mC@@ ar@@ ri@@ er@@ Name); int@@ ent.@@ put@@ Extra@@ (@@ Telephony@@ Manager.@@ EX@@ TR@@ A@@ _S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _@@ ID@@ , m@@ Ph@@ on@@ e.get@@ Sub@@ Id@@ ()); m@@ Context.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ ); android.content.@@ Content@@ Value@@ s c@@ v = new android.content.@@ Content@@ Valu@@ es@@ (); c@@ v@@ .@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ AR@@ R@@ I@@ ER_@@ ID@@ , mC@@ ar@@ ri@@ er@@ Id@@ ); c@@ v@@ .@@ put@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ N@@ AM@@ E, mC@@ ar@@ ri@@ er@@ Name); m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ ().@@ update@@ (android.net.@@ U@@ ri@@ .@@ w@@ ith@@ Ap@@ pend@@ ed@@ Path@@ (@@ C@@ ar@@ ri@@ er@@ Id@@ .@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , java.lang.Integ@@ er.@@ toString@@ (m@@ Ph@@ on@@ e.get@@ Sub@@ Id@@ ()@@ )), c@@ v@@ , null@@ ); } }
private boolean check@@ Listener@@ Permission@@ (@@ int event@@ s, java.lang.String call@@ ing@@ Package@@ , java.lang.String message@@ ) { if ((@@ event@@ s & (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _C@@ E@@ L@@ L@@ _@@ LO@@ C@@ AT@@ ION@@ )) != 0) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ , null@@ ); if ((m@@ App@@ Op@@ s.@@ no@@ te@@ Op@@ (@@ App@@ O@@ ps@@ Manager.@@ O@@ P@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ , android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (), call@@ ing@@ Package@@ )) != (android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ M@@ OD@@ E_@@ AL@@ LO@@ W@@ E@@ D@@ )) { return false@@ ; } if ((@@ event@@ s & (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _C@@ E@@ L@@ _@@ IN@@ F@@ O@@ )) != 0) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ , null@@ ); if ((m@@ App@@ Op@@ s.@@ no@@ te@@ Op@@ (@@ App@@ O@@ ps@@ Manager.@@ O@@ P@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ , android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (), call@@ ing@@ Package@@ )) != (android.@@ app.@@ App@@ O@@ ps@@ Manager.@@ M@@ OD@@ E_@@ AL@@ LO@@ W@@ E@@ D@@ )) { return false@@ ; } } if ((@@ event@@ s & (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ EN@@ F@@ OR@@ C@@ E_@@ P@@ H@@ ON@@ E_@@ STATE_@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ _M@@ A@@ S@@ K@@ )) != 0) { if (!(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Telephony@@ Permission@@ s.@@ check@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Read@@ Phone@@ State@@ (m@@ Context@@ , call@@ ing@@ Package@@ , message@@ ))) { return false@@ ; } } if ((@@ event@@ s & (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ P@@ RE@@ C@@ IS@@ E_@@ P@@ H@@ ON@@ E_@@ STATE_@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ _M@@ A@@ S@@ K@@ )) != 0) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ RE@@ C@@ IS@@ E_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ , null@@ ); } return true@@ ; }
@org.junit.Test public void test@@ Q@@ u@@ er@@ y@@ D@@ eta@@ il@@ s@@ _@@ No@@ Sub@@ s@@ cri@@ b@@ er@@ Id@@ () throw@@ s android.os.@@ Remote@@ Exception { final long start@@ Tim@@ e = 1; final long end@@ Tim@@ e = 1@@ 00@@ ; final int u@@ id@@ 1 = 1@@ 00@@ 0@@ 1; final int u@@ id@@ 2 = 1@@ 00@@ 0@@ 2@@ ; android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y e@@ mpty@@ H@@ ist@@ or@@ y = new android.net.@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y@@ (1@@ 0, 0); when@@ (m@@ Service.@@ open@@ Session@@ For@@ U@@ s@@ age@@ Stat@@ s(@@ an@@ y@@ Int@@ (), an@@ y@@ String@@ ()@@ )).@@ thenReturn@@ (m@@ Stat@@ s@@ Session@@ ); when@@ (m@@ Stat@@ s@@ Session@@ .get@@ Re@@ le@@ v@@ ant@@ U@@ id@@ s@@ ()).@@ thenReturn@@ (@@ new int@@ []{ u@@ id@@ 1, u@@ id@@ 2 }); when@@ (m@@ Stat@@ s@@ Session@@ .get@@ H@@ ist@@ or@@ y@@ Inter@@ val@@ For@@ U@@ id@@ (@@ an@@ y@@ (android.net.@@ Network@@ Temp@@ l@@ ate@@ .@@ class@@ ), an@@ y@@ Int@@ (), e@@ q@@ (android.@@ app.@@ us@@ age.@@ android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ ), e@@ q@@ (android.@@ app.@@ us@@ age.@@ android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ ), e@@ q@@ (@@ Network@@ Stat@@ s@@ H@@ ist@@ or@@ y.@@ FI@@ E@@ L@@ D_@@ AL@@ L@@ ), e@@ q@@ (@@ start@@ Time@@ ), e@@ q@@ (@@ end@@ Time@@ ))@@ ).@@ then@@ Boolean@@ (@@ org.@@ mock@@ it@@ o.@@ in@@ vo@@ c@@ ation.@@ In@@ vo@@ cation@@ On@@ Mo@@ c@@ k in@@ v@@ ) -@@ > { android.net.@@ Network@@ Temp@@ l@@ ate te@@ mp@@ l@@ ate = in@@ v@@ .get@@ Argument@@ (@@ 0); assert@@ Equal@@ s(@@ Network@@ Temp@@ lat@@ e.@@ M@@ AT@@ CH@@ _M@@ O@@ B@@ IL@@ E_@@ W@@ IL@@ D@@ C@@ AR@@ D@@ , te@@ mp@@ lat@@ e.get@@ Match@@ R@@ ule@@ ()); return e@@ mpty@@ H@@ ist@@ or@@ y@@ ; }); android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s st@@ at@@ s = m@@ Manager.@@ qu@@ er@@ y@@ D@@ eta@@ il@@ s(@@ Connectivity@@ Manager.@@ TYP@@ E@@ _M@@ O@@ B@@ IL@@ E, null@@ , start@@ Time@@ , end@@ Time@@ ); junit.framework.@@ Asser@@ t@@ .@@ assert@@ False@@ (@@ st@@ at@@ s.@@ has@@ Next@@ Bu@@ ck@@ et@@ ()); }
public android.@@ g@@ rap@@ h@@ ic@@ s.@@ Bit@@ ma@@ p t@@ ake@@ S@@ creen@@ sho@@ t@@ (android.os.@@ cts.@@ test@@ in@@ f@@ r@@ as@@ tr@@ u@@ ct@@ ure@@ .@@ Activity@@ Test@@ Bas@@ e.@@ Test@@ Position@@ Info@@ ) { android.@@ g@@ rap@@ h@@ ic@@ s.@@ Bit@@ ma@@ p s@@ our@@ ce = get@@ In@@ strument@@ ation@@ ().get@@ U@@ i@@ A@@ ut@@ om@@ ation@@ ().@@ t@@ ake@@ S@@ creen@@ sho@@ t@@ (); return android.@@ g@@ rap@@ h@@ ic@@ s.@@ Bit@@ m@@ ap.@@ create@@ Bit@@ m@@ ap@@ (s@@ creen@@ O@@ ff@@ set@@ .@@ x@@ , test@@ Position@@ Info.@@ s@@ creen@@ O@@ ff@@ set@@ .@@ y@@ , android.@@ ui@@ render@@ ing.@@ cts.@@ test@@ in@@ f@@ r@@ as@@ tr@@ u@@ ct@@ ure@@ .@@ Activity@@ Test@@ Bas@@ e.@@ TEST_@@ W@@ ID@@ TH@@ , android.@@ ui@@ render@@ ing.@@ cts.@@ test@@ in@@ f@@ r@@ as@@ tr@@ u@@ ct@@ ure@@ .@@ Activity@@ Test@@ Bas@@ e.@@ TEST_@@ H@@ E@@ I@@ G@@ H@@ T@@ ); }
@java.lang.Override public java.lang.String toString@@ () { return ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ((((@@ ("@@ Sign@@ al@@ Str@@ ength@@ :@@ " + " ") + (m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ )) + " ") + (m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ )) + " ") + (m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ )) + " ") + (m@@ C@@ d@@ ma@@ E@@ c@@ io@@ )) + " ") + (m@@ E@@ v@@ do@@ D@@ b@@ m@@ )) + " ") + (m@@ E@@ v@@ do@@ E@@ c@@ io@@ )) + " ") + (m@@ E@@ v@@ do@@ S@@ n@@ r@@ )) + " ") + (m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ )) + " ") + (m@@ L@@ te@@ Rs@@ r@@ p@@ )) + " ") + (m@@ L@@ te@@ Rs@@ r@@ q@@ )) + " ") + (m@@ L@@ te@@ R@@ ss@@ n@@ r@@ )) + " ") + (m@@ L@@ te@@ C@@ q@@ i@@ )) + " ") + (m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ )) + " ") + (m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ )) + " ") + (is@@ G@@ s@@ m ? "@@ g@@ s@@ m@@ |@@ l@@ te@@ " : "@@ c@@ d@@ ma@@ ")) + " ") + (m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l ? "@@ u@@ se@@ _@@ on@@ ly@@ _@@ rs@@ r@@ p@@ _@@ for@@ _@@ l@@ te@@ _@@ le@@ vel@@ " : "@@ u@@ se@@ _@@ rs@@ r@@ p@@ _@@ and@@ _@@ r@@ ss@@ n@@ r@@ _@@ for@@ _@@ l@@ te@@ _@@ le@@ vel@@ "), java.util.Arrays.@@ toString@@ (m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s@@ ))); }
public void set@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s@@ (@@ int@@ [] um@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s) { if ((@@ um@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s == null@@ ) || ((@@ um@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s.@@ length) != (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ U@@ M@@ T@@ S_@@ RS@@ C@@ P@@ _@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ S@@ _N@@ U@@ M@@ ))) { android.util.Log.@@ w@@ t@@ f@@ (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ LO@@ G_@@ TAG, "@@ set@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s - um@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s is in@@ valid@@ .@@ "); return@@ ; } java.lang.System.@@ array@@ copy@@ (@@ um@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s, 0, m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s, 0, android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ U@@ M@@ T@@ S_@@ RS@@ C@@ P@@ _@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ S@@ _N@@ U@@ M@@ ); }
public void in@@ iti@@ aliz@@ e@@ (@@ int g@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ , int g@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ , int c@@ d@@ ma@@ D@@ b@@ m@@ , int c@@ d@@ ma@@ E@@ c@@ io@@ , int e@@ v@@ do@@ D@@ b@@ m@@ , int e@@ v@@ do@@ E@@ c@@ io@@ , int e@@ v@@ do@@ S@@ n@@ r@@ , boolean g@@ s@@ m@@ ) { in@@ iti@@ aliz@@ e(@@ g@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ , g@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , c@@ d@@ ma@@ D@@ b@@ m@@ , c@@ d@@ ma@@ E@@ c@@ io@@ , e@@ v@@ do@@ D@@ b@@ m@@ , e@@ v@@ do@@ E@@ c@@ io@@ , e@@ v@@ do@@ S@@ n@@ r@@ , 99@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ , 0, g@@ s@@ m@@ , false@@ ); }
public void write@@ To@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l out, int flag@@ s) { out.@@ write@@ Int@@ (m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ); out.@@ write@@ Int@@ (m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ); out.@@ write@@ Int@@ (m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ ); out.@@ write@@ Int@@ ((@@ mC@@ d@@ ma@@ D@@ b@@ m@@ ); out.@@ write@@ Int@@ (m@@ C@@ d@@ ma@@ E@@ c@@ io@@ ); out.@@ write@@ Int@@ (m@@ E@@ v@@ do@@ D@@ b@@ m@@ ); out.@@ write@@ Int@@ (m@@ E@@ v@@ do@@ E@@ c@@ io@@ ); out.@@ write@@ Int@@ (m@@ E@@ v@@ do@@ S@@ n@@ r@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ Rs@@ r@@ p@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ Rs@@ r@@ q@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ C@@ q@@ i@@ ); out.@@ write@@ Int@@ (m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ); out.@@ write@@ Int@@ (m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ); out.@@ write@@ Int@@ ((@@ is@@ G@@ s@@ m ? 1 : 0@@ )); out.@@ write@@ Int@@ ((m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l ? 1 : 0@@ )); for (@@ int i = 0; i < (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ U@@ M@@ T@@ S_@@ RS@@ C@@ P@@ _@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ S@@ _N@@ U@@ M@@ ); i++) { out.@@ write@@ Int@@ (m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s@@ [i@@ ]@@ ); }
public static android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th m@@ ake@@ Sign@@ al@@ Str@@ ength@@ From@@ R@@ il@@ Par@@ cel@@ (android.os.@@ Par@@ ce@@ l in@@ ) { if (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ D@@ B@@ G) android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ log@@ (("@@ Dis@@ p@@ ing of sign@@ al@@ str@@ eng@@ th par@@ cel@@ : " + (in@@ .@@ data@@ Size@@ ()))); android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th s@@ s = new android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ (); s@@ s.@@ m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ eng@@ th = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate = in@@ .@@ read@@ Int@@ (); ss@@ .@@ m@@ U@@ m@@ ts@@ R@@ sc@@ p = in@@ .@@ read@@ Int@@ (); if ((@@ mC@@ d@@ ma@@ D@@ b@@ m == in@@ .@@ read@@ Int@@ (); s@@ s.@@ mC@@ d@@ ma@@ E@@ c@@ i@@ o = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ E@@ v@@ do@@ D@@ b@@ m = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ E@@ v@@ do@@ E@@ c@@ i@@ o = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ E@@ v@@ do@@ S@@ n@@ r = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ L@@ te@@ Sign@@ al@@ Str@@ eng@@ th = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ L@@ te@@ Rs@@ r@@ p = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ L@@ te@@ Rs@@ r@@ q = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ L@@ te@@ R@@ ss@@ n@@ r = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ L@@ te@@ C@@ q@@ i = in@@ .@@ read@@ Int@@ (); s@@ s.@@ m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p = in@@ .@@ read@@ Int@@ (); for (@@ int i = 0; i < (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ U@@ M@@ T@@ S_@@ RS@@ C@@ P@@ _@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ S@@ _N@@ U@@ M@@ ); i++) { s@@ s.@@ m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s@@ [i@@ ] = in@@ .@@ read@@ Int@@ (); } return ss@@ ; }
public void in@@ iti@@ aliz@@ e@@ (@@ int g@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ , int g@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ , int um@@ ts@@ R@@ sc@@ p@@ , int c@@ d@@ ma@@ D@@ b@@ m@@ , int c@@ d@@ ma@@ E@@ c@@ io@@ , int e@@ v@@ do@@ D@@ b@@ m@@ , int e@@ v@@ do@@ E@@ c@@ io@@ , int e@@ v@@ do@@ S@@ n@@ r@@ , int l@@ te@@ Sign@@ al@@ Str@@ ength@@ , int l@@ te@@ Rs@@ r@@ p@@ , int l@@ te@@ Rs@@ r@@ q@@ , int l@@ te@@ R@@ ss@@ n@@ r@@ , int l@@ te@@ C@@ q@@ i@@ , int l@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ , boolean g@@ s@@ m@@ , boolean u@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ ) { m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ eng@@ th = g@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ; m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate = g@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ; m@@ U@@ m@@ ts@@ R@@ sc@@ p = um@@ ts@@ R@@ sc@@ p@@ ; mC@@ d@@ ma@@ D@@ b@@ m = c@@ d@@ ma@@ D@@ b@@ m@@ ; mC@@ d@@ ma@@ E@@ c@@ i@@ o = c@@ d@@ ma@@ E@@ c@@ io@@ ; m@@ E@@ v@@ do@@ D@@ b@@ m = e@@ v@@ do@@ D@@ b@@ m@@ ; m@@ E@@ v@@ do@@ E@@ c@@ i@@ o = e@@ v@@ do@@ E@@ c@@ i@@ o = e@@ v@@ do@@ E@@ c@@ io@@ ; m@@ E@@ v@@ do@@ S@@ n@@ r = e@@ v@@ do@@ S@@ n@@ r@@ ; m@@ L@@ te@@ Sign@@ al@@ Str@@ eng@@ th = l@@ te@@ Sign@@ al@@ Str@@ ength@@ ; m@@ L@@ te@@ Rs@@ r@@ p = l@@ te@@ Rs@@ r@@ p@@ ; m@@ L@@ te@@ Rs@@ r@@ q = l@@ te@@ Rs@@ r@@ q@@ ; m@@ L@@ te@@ R@@ ss@@ n@@ r = l@@ te@@ R@@ ss@@ n@@ r@@ ; m@@ L@@ te@@ C@@ q@@ i = l@@ te@@ C@@ q@@ i@@ ; m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ s@@ t = l@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ; m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p = android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ IN@@ V@@ AL@@ ID@@ ; is@@ G@@ s@@ m = g@@ s@@ m@@ ; m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l = u@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ ; set@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s(@@ get@@ De@@ fa@@ u@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s()); if (android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ D@@ B@@ G) android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ .@@ log@@ (("@@ in@@ iti@@ aliz@@ e@@ (("@@ in@@ iti@@ aliz@@ e@@ : " + (@@ toString@@ ()))); }
static android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th con@@ ver@@ t@@ H@@ al@@ Sign@@ al@@ Str@@ ength@@ _@@ 1@@ _@@ 2@@ (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Sign@@ al@@ Str@@ eng@@ th sign@@ al@@ Str@@ ength@@ ) { return new android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ (@@ sign@@ al@@ Str@@ ength@@ .@@ g@@ w@@ .@@ g@@ w@@ .@@ sign@@ al@@ Str@@ ength@@ , sign@@ al@@ Str@@ ength@@ .@@ g@@ w@@ .@@ b@@ it@@ Error@@ R@@ ate@@ , sign@@ al@@ Str@@ ength@@ .@@ g@@ w@@ .@@ r@@ sc@@ p@@ , sign@@ al@@ Str@@ ength@@ .@@ c@@ d@@ b@@ m@@ , sign@@ al@@ Str@@ ength@@ .@@ c@@ d@@ m@@ a.@@ ec@@ io@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ d@@ b@@ m@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ ec@@ io@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ sign@@ al@@ No@@ is@@ e@@ R@@ ati@@ o@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ sign@@ al@@ Str@@ ength@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ rs@@ r@@ p@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ rs@@ r@@ q@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ r@@ ss@@ n@@ r@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ c@@ q@@ i@@ , sign@@ al@@ Str@@ ength@@ .@@ t@@ d@@ S@@ c@@ d@@ m@@ a.@@ r@@ sc@@ p@@ , false@@ ); }
private void respon@@ se@@ Sign@@ al@@ Str@@ ength@@ _@@ 1@@ _@@ 2@@ (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ R@@ ad@@ io@@ Response@@ Info respon@@ se@@ Info@@ , android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Sign@@ al@@ Str@@ eng@@ th si@@ g@@ Str@@ ength@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Requ@@ est r@@ r = m@@ R@@ i@@ l.@@ process@@ Response@@ (@@ respon@@ se@@ Info@@ ); if (@@ r@@ r != null@@ ) { android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th re@@ t = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ con@@ ver@@ t@@ H@@ al@@ Sign@@ al@@ Str@@ ength@@ _@@ 1@@ _@@ 2@@ (@@ si@@ g@@ Str@@ ength@@ ); if ((@@ respon@@ se@@ Info.@@ error@@ ) == (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ R@@ ad@@ io@@ Error@@ .@@ N@@ ON@@ E@@ )) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ ad@@ io@@ Respon@@ s@@ e.@@ send@@ Message@@ Response@@ (@@ r@@ r.@@ m@@ Result@@ , r@@ et@@ ); } m@@ R@@ i@@ l.@@ process@@ Response@@ D@@ one@@ (@@ r@@ r@@ , respon@@ se@@ Info@@ , r@@ et@@ ); } }
public void get@@ Sign@@ al@@ Str@@ ength@@ Response@@ _@@ 1@@ _@@ 2@@ (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ R@@ ad@@ io@@ Response@@ Info respon@@ se@@ Info@@ , android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Sign@@ al@@ Str@@ eng@@ th si@@ g@@ Str@@ ength@@ ) { respon@@ se@@ Sign@@ al@@ Str@@ ength@@ _@@ 1@@ _@@ 2@@ (@@ respon@@ se@@ Info@@ , si@@ g@@ Str@@ ength@@ ); }
protected void copy@@ From@@ (android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th s) { m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ eng@@ th = s.@@ m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ; m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate = s.@@ m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ; m@@ U@@ m@@ ts@@ R@@ sc@@ p = s.@@ m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ ; mC@@ d@@ ma@@ D@@ b@@ m = s.@@ mC@@ d@@ ma@@ D@@ b@@ m@@ ; mC@@ d@@ ma@@ E@@ c@@ i@@ o = s.@@ mC@@ d@@ ma@@ E@@ c@@ io@@ ; m@@ E@@ v@@ do@@ D@@ b@@ m = s.@@ m@@ E@@ v@@ do@@ D@@ b@@ m@@ ; m@@ E@@ v@@ do@@ E@@ c@@ i@@ o = s.@@ m@@ E@@ v@@ do@@ E@@ c@@ io@@ ; m@@ E@@ v@@ do@@ S@@ n@@ r = s.@@ m@@ E@@ v@@ do@@ S@@ n@@ r@@ ; m@@ L@@ te@@ Sign@@ al@@ Str@@ eng@@ th = s.@@ m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ; m@@ L@@ te@@ Rs@@ r@@ p = s.@@ m@@ L@@ te@@ Rs@@ r@@ p@@ ; m@@ L@@ te@@ Rs@@ r@@ q = s.@@ m@@ L@@ te@@ Rs@@ r@@ q@@ ; m@@ L@@ te@@ R@@ ss@@ n@@ r = s.@@ m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ; m@@ L@@ te@@ C@@ q@@ i = s.@@ m@@ L@@ te@@ C@@ q@@ i@@ ; m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ s@@ t = s.@@ m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ; m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p = s.@@ m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ; is@@ G@@ s@@ m = s.@@ is@@ G@@ s@@ m@@ ; m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l = s.@@ m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Level@@ ; set@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s(@@ s.@@ m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s); }
private int get@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s() { return get@@ C@@ ar@@ ri@@ er@@ Config@@ ().get@@ Int@@ Array@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y_@@ U@@ M@@ T@@ S_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ S_@@ IN@@ T_@@ AR@@ R@@ A@@ Y@@ ); }
private int@@ [] get@@ De@@ fa@@ u@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s() { return android.@@ telephony.@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ get@@ Default@@ Config@@ ().get@@ Int@@ Array@@ (@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y_@@ U@@ M@@ T@@ S_@@ RS@@ C@@ P@@ _@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ S_@@ IN@@ T_@@ AR@@ R@@ A@@ Y@@ ); }
@java.lang.Override public int has@@ h@@ Code@@ () { int p@@ ri@@ me@@ N@@ u@@ m = 3@@ 1; return ((((@@ ((((@@ ((((@@ ((((@@ ((@@ (m@@ G@@ s@@ m@@ Sign@@ al@@ Str@@ ength@@ ) * p@@ ri@@ me@@ N@@ um@@ ) + ((m@@ G@@ s@@ m@@ Bit@@ Error@@ R@@ ate@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ C@@ d@@ ma@@ D@@ b@@ m@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ C@@ d@@ ma@@ E@@ c@@ io@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ E@@ v@@ do@@ D@@ b@@ m@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ E@@ v@@ do@@ E@@ c@@ io@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ E@@ v@@ do@@ S@@ n@@ r@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Sign@@ al@@ Str@@ ength@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Rs@@ r@@ p@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Rs@@ r@@ p@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Rs@@ r@@ q@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ R@@ ss@@ n@@ r@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ C@@ q@@ i@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ L@@ te@@ Rs@@ r@@ p@@ B@@ oo@@ st@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + ((m@@ T@@ d@@ S@@ c@@ d@@ ma@@ R@@ sc@@ p@@ ) * p@@ ri@@ me@@ N@@ um@@ )) + (is@@ G@@ s@@ m ? 1 : 0@@ )) + (m@@ U@@ se@@ On@@ ly@@ Rs@@ r@@ p@@ For@@ L@@ te@@ Leve@@ l ? 1 : 0@@ ))); java.util.Arrays.@@ has@@ h@@ Code@@ (m@@ U@@ m@@ ts@@ R@@ sc@@ p@@ Th@@ res@@ ho@@ l@@ d@@ s@@ ))); }
@java.lang.Override void test@@ () { if ((@@ statu@@ s) == (@@ RE@@ AD@@ Y@@ )) { com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.get@@ Instance@@ ().@@ request@@ Listener@@ H@@ int@@ s(@@ Mock@@ List@@ en@@ er.@@ H@@ IN@@ T_@@ H@@ O@@ ST_@@ D@@ IS@@ AB@@ L@@ E_@@ C@@ AL@@ L@@ _@@ E@@ F@@ EC@@ T@@ S@@ ); statu@@ s = RE@@ TE@@ S@@ T@@ ; } else { int result = com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.get@@ Instance@@ ().get@@ Current@@ Listener@@ H@@ int@@ s(); if (@@ result == (com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.@@ H@@ IN@@ T_@@ H@@ O@@ ST_@@ D@@ IS@@ AB@@ L@@ E_@@ C@@ AL@@ L@@ _@@ E@@ F@@ EC@@ T@@ S@@ )) { statu@@ s = P@@ A@@ SS@@ ; next@@ (); } else { log@@ Fail@@ (); } } }
@java.lang.Override void test@@ () { if ((@@ statu@@ s) == (@@ RE@@ AD@@ Y@@ )) { com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.get@@ Instance@@ ().@@ request@@ Un@@ b@@ ind@@ (); statu@@ s = RE@@ TE@@ S@@ T@@ ; } else { if ((@@ (m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ()) == null@@ ) && (!@@ (com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ Mock@@ List@@ en@@ er.@@ Mock@@ List@@ en@@ er.get@@ Instance@@ ().@@ is@@ Connec@@ ted@@ ))) { statu@@ s = P@@ A@@ SS@@ ; } else { if ((@@ --@@ (m@@ R@@ et@@ ri@@ es@@ )) > 0) { statu@@ s = RE@@ TE@@ S@@ T@@ ; } else { log@@ Fail@@ (); statu@@ s = FA@@ IL@@ ; } } next@@ (); }
@java.lang.Override void test@@ () { if ((m@@ N@@ m@@ .get@@ E@@ ff@@ ect@@ s@@ Sup@@ p@@ ress@@ or@@ ()) == null@@ ) { statu@@ s = P@@ A@@ SS@@ ; } else { statu@@ s = FA@@ IL@@ ; } }
@java.lang.Override void set@@ Up@@ () { m@@ N@@ m.@@ set@@ Inter@@ r@@ u@@ ption@@ Filter@@ (@@ No@@ t@@ if@@ ic@@ ation@@ Manager.@@ IN@@ TER@@ R@@ U@@ P@@ TION@@ _@@ F@@ IL@@ TER@@ _P@@ R@@ IO@@ R@@ I@@ TY@@ ); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager.@@ Po@@ lic@@ y po@@ lic@@ y = m@@ N@@ m@@ .get@@ No@@ t@@ if@@ ic@@ ation@@ Po@@ lic@@ y(); po@@ lic@@ y = new android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager.@@ Po@@ lic@@ y@@ (@@ po@@ lic@@ y.@@ p@@ ri@@ or@@ ity@@ C@@ ate@@ gor@@ ies@@ , po@@ lic@@ y.@@ p@@ ri@@ or@@ ity@@ Call@@ S@@ ender@@ s, No@@ t@@ if@@ ic@@ ation@@ Manager.@@ Po@@ lic@@ y.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _S@@ END@@ E@@ RS@@ _@@ STA@@ R@@ RE@@ D@@ ); m@@ N@@ m.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ Po@@ lic@@ y@@ (@@ po@@ lic@@ y@@ ); create@@ Channel@@ s(); send@@ No@@ t@@ if@@ ic@@ ation@@ s@@ (com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ not@@ if@@ ic@@ ations.@@ At@@ t@@ en@@ tion@@ Manage@@ ment@@ V@@ er@@ if@@ ier@@ Ac@@ tivity.@@ M@@ OD@@ E_@@ UR@@ I@@ , false@@ , false@@ ); statu@@ s = RE@@ AD@@ Y@@ ; }
private void dum@@ p@@ M@@ et@@ ri@@ c@@ s(@@ java.io.FileDescriptor fd@@ ) { com.android.@@ bluetooth@@ .@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Log.@@ Builder m@@ et@@ ri@@ c@@ s@@ Builder = Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Log@@ .@@ new@@ Builder@@ (); m@@ et@@ ri@@ c@@ s@@ Builder.@@ set@@ N@@ um@@ B@@ ond@@ ed@@ De@@ vices@@ (get@@ B@@ ond@@ ed@@ De@@ vices@@ ().@@ length); for (com.android.@@ bluetooth@@ .@@ Pro@@ file@@ Ser@@ vice pro@@ fi@@ le : m@@ Reg@@ ister@@ ed@@ Pro@@ fil@@ es) { pro@@ file.@@ dum@@ p@@ Pro@@ to@@ (m@@ et@@ ri@@ c@@ s@@ Builder@@ ); } byte@@ [] native@@ M@@ et@@ ri@@ c@@ s@@ Byte@@ s = dum@@ p@@ M@@ et@@ ri@@ c@@ s@@ Native@@ (); debu@@ g@@ Log@@ (("@@ N@@ o native m@@ et@@ ri@@ c@@ s siz@@ e is " + (@@ native@@ M@@ et@@ ri@@ c@@ s@@ By@@ t@@ es.@@ length@@ ))); if (@@ native@@ M@@ et@@ ri@@ c@@ s@@ By@@ t@@ es.@@ length) > 0) { try { m@@ et@@ ri@@ c@@ s@@ Builder@@ .@@ merg@@ e@@ From@@ (@@ native@@ M@@ et@@ ri@@ c@@ s@@ Bytes@@ ); } catch (@@ com.google.@@ pro@@ to@@ bu@@ f@@ .@@ In@@ valid@@ Pro@@ to@@ col@@ Buffer@@ Exception@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ TAG, ("@@ Er@@ ror pro@@ ble@@ m par@@ s@@ ing m@@ et@@ ri@@ c@@ s pro@@ to@@ bu@@ f@@ , " + (@@ ex@@ .get@@ Message@@ ()))); return@@ ; } } byte@@ [] m@@ et@@ ri@@ c@@ s@@ Byte@@ s = android.util.@@ B@@ ase@@ 6@@ 4@@ .@@ en@@ code@@ (m@@ et@@ ri@@ c@@ s@@ Builder.@@ build@@ ().@@ to@@ ByteArray@@ (), B@@ ase@@ 6@@ 4@@ .@@ DE@@ FA@@ UL@@ T@@ ); debu@@ g@@ Log@@ (("@@ S@@ k@@ ip@@ p@@ ing com@@ b@@ ine@@ d m@@ et@@ ri@@ c@@ s siz@@ e is " + (m@@ et@@ ri@@ c@@ s@@ By@@ t@@ es.@@ length@@ ))); try (@@ java.io.File@@ Output@@ Stream pro@@ to@@ O@@ u@@ t = new java.io.File@@ Output@@ Stream@@ (@@ fd@@ )) { pro@@ to@@ O@@ u@@ t.@@ write@@ (m@@ et@@ ri@@ c@@ s@@ Bytes@@ ); } catch (java.io.IOException e) { error@@ Log@@ (("@@ Er@@ ror wri@@ t@@ ing com@@ b@@ ine@@ d pro@@ to@@ bu@@ f to fd, " + (@@ e.get@@ Message@@ ()))); } }
synchronized void re@@ cord@@ Scan@@ Start@@ (android.@@ bluetooth.@@ le.@@ Scan@@ Setting@@ s setting@@ s, boolean fil@@ ter@@ ed@@ , int scan@@ ner@@ Id@@ ) { com.android.@@ bluetooth.@@ g@@ at@@ t.@@ App@@ Scan@@ Stat@@ s.@@ L@@ ast@@ S@@ c@@ an exist@@ ing@@ S@@ c@@ an = get@@ Scan@@ From@@ Scan@@ ner@@ Id@@ (s@@ can@@ ner@@ Id@@ ); if (@@ exist@@ ing@@ S@@ c@@ an != null@@ ) { return@@ ; } (@@ this@@ .@@ m@@ Scan@@ s@@ St@@ ar@@ ted@@ )@@ ++@@ ; start@@ Tim@@ e = android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (); com.android.@@ bluetooth.@@ g@@ at@@ t.@@ App@@ Scan@@ Stat@@ s.@@ L@@ ast@@ S@@ c@@ an sc@@ an = new com.android.@@ bluetooth.@@ g@@ at@@ t.@@ App@@ Scan@@ Stat@@ s.@@ L@@ ast@@ Scan@@ (@@ start@@ Time@@ , 0, false@@ , fil@@ ter@@ ed@@ , scan@@ ner@@ Id@@ ); if (@@ setting@@ s != null@@ ) { scan@@ .@@ op@@ port@@ un@@ is@@ ti@@ c = (@@ setting@@ s.get@@ Scan@@ Mode@@ ()) == (android.@@ bluetooth.@@ le.@@ Scan@@ Setting@@ s.@@ S@@ C@@ AN@@ _MOD@@ E_@@ O@@ P@@ P@@ O@@ RT@@ UN@@ IS@@ T@@ IC@@ ); scan@@ .@@ back@@ g@@ ro@@ un@@ d = ((@@ setting@@ s.get@@ Callback@@ Type@@ ()) & (android.@@ bluetooth.@@ le.@@ Scan@@ Setting@@ s.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ TYP@@ E_@@ FI@@ RS@@ T@@ _M@@ AT@@ CH@@ )) != 0; } com.android.@@ bluetooth.@@ le.@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to@@ .@@ Scan@@ Ev@@ ent scan@@ Ev@@ ent = Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to@@ .@@ Scan@@ Ev@@ ent.@@ Scan@@ Ev@@ ent.@@ set@@ Scan@@ Event@@ Type@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Scan@@ Ev@@ ent.@@ Scan@@ Event@@ Type.@@ S@@ C@@ AN@@ _@@ EV@@ ENT_@@ START@@ ).set@@ Scan@@ T@@ ec@@ h@@ no@@ log@@ y@@ Type@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Scan@@ T@@ ec@@ h@@ no@@ log@@ y@@ Type.@@ S@@ C@@ AN@@ _@@ TE@@ CH@@ _@@ TYP@@ E_@@ LE@@ ).set@@ Event@@ Time@@ Milli@@ s(@@ java.lang.System.@@ current@@ Time@@ Milli@@ s@@ ()@@ ).set@@ In@@ iti@@ ator@@ (@@ tr@@ un@@ cate@@ App@@ Name@@ (@@ app@@ Name@@ )).@@ build@@ (); m@@ G@@ att@@ Service.@@ add@@ Scan@@ Event@@ (s@@ can@@ Ev@@ ent@@ ); m@@ Session@@ N@@ um@@ Scan@@ Result@@ s = 0@@ ; if (!(@@ is@@ Scan@@ ning@@ ())) { m@@ Scan@@ Start@@ Tim@@ e = start@@ Time@@ ; } try { boolean is@@ U@@ no@@ pti@@ m@@ iz@@ ed = !@@ ((@@ (s@@ can@@ .@@ fil@@ ter@@ ed@@ ) || (s@@ can@@ .@@ back@@ g@@ round@@ )) || (s@@ can@@ .@@ op@@ port@@ un@@ is@@ tic@@ )); m@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ le@@ Scan@@ St@@ ar@@ ted@@ (@@ work@@ Source@@ , is@@ U@@ no@@ pti@@ m@@ iz@@ ed@@ ); } catch (android.os.@@ Remote@@ Exception e) { } m@@ On@@ go@@ ing@@ Scan@@ s.@@ put@@ (s@@ can@@ ner@@ Id, scan@@ ); }
synchronized void re@@ cord@@ Scan@@ St@@ op@@ (@@ int scan@@ ner@@ Id@@ ) { com.android.@@ bluetooth.@@ g@@ at@@ t.@@ App@@ Scan@@ Stat@@ s.@@ L@@ ast@@ S@@ c@@ an sc@@ an = get@@ Scan@@ From@@ Scan@@ ner@@ Id@@ (s@@ can@@ ner@@ Id@@ ); if (s@@ c@@ an == null@@ ) { return@@ ; } (@@ this@@ .@@ m@@ Scan@@ s@@ St@@ op@@ p@@ ed@@ )@@ ++@@ ; st@@ op@@ Tim@@ e = android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (); long scan@@ D@@ ur@@ ation = (@@ st@@ op@@ Tim@@ e) - (s@@ can@@ .@@ tim@@ est@@ amp@@ ); scan@@ .@@ d@@ ur@@ ation = scan@@ D@@ ur@@ ation@@ ; if (s@@ can@@ Su@@ s@@ pend@@ ed@@ ) { long su@@ s@@ pend@@ D@@ ur@@ ation = (@@ st@@ op@@ Tim@@ e) - (s@@ can@@ .@@ su@@ s@@ pend@@ Start@@ Time@@ ); scan@@ .@@ su@@ s@@ pend@@ D@@ ur@@ ation +@@ = su@@ s@@ pend@@ D@@ ur@@ ation@@ ; m@@ To@@ t@@ al@@ Su@@ s@@ pend@@ Tim@@ e +@@ = su@@ s@@ pend@@ D@@ ur@@ ation@@ ; } m@@ On@@ go@@ ing@@ Scan@@ s.@@ remove@@ (s@@ can@@ ner@@ Id@@ ); if ((m@@ L@@ ast@@ Scan@@ s.@@ size@@ ()) >@@ = (com.android.bluetooth.@@ g@@ at@@ t.@@ App@@ Scan@@ Stat@@ s.@@ N@@ U@@ M@@ _S@@ C@@ AN@@ _@@ D@@ UR@@ AT@@ ION@@ S_@@ KE@@ P@@ T@@ )) { m@@ L@@ ast@@ Scan@@ s.@@ remove@@ (@@ 0); } m@@ L@@ ast@@ Scan@@ s.@@ add@@ (s@@ can@@ ); com.android.@@ bluetooth.@@ g@@ at@@ t.@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to@@ Scan@@ Ev@@ ent scan@@ Ev@@ ent = Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to@@ Scan@@ Ev@@ ent.@@ set@@ Scan@@ Event@@ Type@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Scan@@ Ev@@ ent.@@ Scan@@ Event@@ Type.@@ S@@ C@@ AN@@ _@@ EV@@ ENT_@@ S@@ TO@@ P@@ ).set@@ Scan@@ T@@ ec@@ h@@ no@@ log@@ y@@ Type@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Scan@@ T@@ ec@@ h@@ no@@ log@@ y@@ Type.@@ S@@ C@@ AN@@ _@@ TE@@ CH@@ _@@ TYP@@ E_@@ LE@@ ).set@@ Event@@ Time@@ Milli@@ s(@@ java.lang.System.@@ current@@ Time@@ Milli@@ s@@ ()@@ ).set@@ In@@ iti@@ ator@@ (@@ tr@@ un@@ cate@@ App@@ Name@@ (@@ app@@ Name@@ )@@ ).set@@ Number@@ Results@@ (m@@ Session@@ N@@ um@@ Scan@@ Results@@ ).@@ build@@ (); m@@ G@@ att@@ Service.@@ add@@ Scan@@ Event@@ (s@@ can@@ Ev@@ ent@@ ); m@@ Session@@ N@@ um@@ Scan@@ Result@@ s = 0@@ ; if (!(@@ is@@ Scan@@ ning@@ ())) { long to@@ t@@ al@@ D@@ ur@@ ation = (@@ st@@ op@@ Tim@@ e) - (m@@ Scan@@ Start@@ Time@@ ); m@@ To@@ t@@ al@@ Scan@@ Tim@@ e +@@ = to@@ t@@ al@@ D@@ ur@@ ation@@ ; m@@ Min@@ Scan@@ Tim@@ e = java.lang.@@ Math.@@ min@@ (@@ to@@ t@@ al@@ D@@ ur@@ ation@@ , m@@ Min@@ Scan@@ Time@@ ); m@@ Ma@@ x@@ Scan@@ Tim@@ e = java.lang.@@ Math.@@ max@@ (@@ to@@ t@@ al@@ D@@ ur@@ ation@@ , m@@ Ma@@ x@@ Scan@@ Time@@ ); } try { boolean is@@ U@@ no@@ pti@@ m@@ iz@@ ed = !@@ ((@@ (s@@ can@@ .@@ fil@@ ter@@ ed@@ ) || (s@@ can@@ .@@ back@@ g@@ round@@ )) || (s@@ can@@ .@@ op@@ port@@ un@@ is@@ tic@@ )); m@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@ at@@ ter@@ y@@ Stat@@ s.@@ no@@ te@@ B@@
private void cal@@ c@@ ul@@ ate@@ Match@@ () { if ((m@@ I@@ s@@ Per@@ iph@@ er@@ al@@ At@@ t@@ ach@@ ed@@ ) && ((m@@ Se@@ lected@@ Pro@@ file@@ ) != null@@ )) { com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ au@@ d@@ io.@@ per@@ iph@@ er@@ al@@ pro@@ file.@@ Pro@@ file@@ B@@ utton@@ Attribute@@ s m@@ B@@ utton@@ Attribute@@ s = m@@ Se@@ lected@@ Pro@@ file@@ .get@@ B@@ utton@@ At@@ tri@@ b@@ ut@@ es@@ (); boolean mat@@ ch = m@@ B@@ utton@@ Attribute@@ s != null@@ ; boolean int@@ er@@ ce@@ p@@ ted@@ V@@ ol@@ um@@ e = get@@ Res@@ ources@@ ().get@@ Boolean@@ (android.@@ content.@@ res@@ .@@ Res@@ ources@@ .get@@ System@@ ().get@@ Id@@ ent@@ if@@ ier@@ ("@@ config@@ _@@ handle@@ V@@ ol@@ um@@ e@@ Key@@ s@@ In@@ W@@ in@@ do@@ w@@ Manager@@ ", "@@ b@@ ool@@ ", "@@ android@@ ")); if (m@@ at@@ ch && ((m@@ B@@ utton@@ At@@ tri@@ b@@ ut@@ es.@@ m@@ Has@@ B@@ t@@ n@@ A@@ ) != (m@@ Has@@ B@@ t@@ n@@ A@@ ))) { mat@@ ch = false@@ ; } if ((@@ mat@@ ch && ((m@@ B@@ utton@@ At@@ tri@@ b@@ ut@@ es.@@ m@@ Has@@ B@@ t@@ n@@ B@@ ) != (m@@ Has@@ B@@ t@@ n@@ B@@ ))) && (@@ !@@ int@@ er@@ ce@@ p@@ ted@@ V@@ ol@@ um@@ e@@ )) { mat@@ ch = false@@ ; } if (m@@ at@@ ch && ((m@@ B@@ utton@@ At@@ tri@@ b@@ ut@@ es.@@ m@@ Has@@ B@@ t@@ n@@ C@@ ) != (m@@ Has@@ B@@ t@@ n@@ C@@ )) && (!(@@ int@@ er@@ ce@@ p@@ ted@@ V@@ ol@@ um@@ e@@ )) { mat@@ ch = false@@ ; } android.util.Log.@@ i@@ (com.android.@@ cts.@@ ve@@ r@@ if@@ i@@ er.@@ au@@ d@@ io.@@ US@@ B@@ Au@@ dio@@ Per@@ iph@@ er@@ al@@ B@@ utton@@ s@@ Ac@@ tivity.@@ TAG, ("@@ match@@ :@@ " + match@@ )); get@@ P@@ ass@@ B@@ utton@@ ().@@ set@@ Enabled@@ (m@@ atch@@ ); } else { get@@ P@@ ass@@ B@@ utton@@ ().@@ set@@ Enabled@@ (@@ false@@ ); } }
public void test@@ Al@@ w@@ ay@@ s@@ On@@ V@@ p@@ n@@ Dis@@ abled@@ () throw@@ s java.lang.Exception { for (@@ int i = 0; (@@ i < 6@@ 0) && ((m@@ Device@@ Po@@ lic@@ y@@ Manager.@@ get@@ Al@@ w@@ ay@@ s@@ On@@ V@@ p@@ n@@ Package@@ (com.android.@@ cts.@@ device@@ and@@ pro@@ file@@ o@@ wn@@ er.@@ AD@@ M@@ IN@@ _RE@@ CE@@ I@@ V@@ ER@@ _C@@ O@@ M@@ P@@ ON@@ EN@@ T@@ )) != null@@ ); i++) { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (1@@ 00@@ 0); } assert@@ Null@@ (m@@ Device@@ Po@@ lic@@ y@@ Manager.@@ get@@ Al@@ w@@ ay@@ s@@ On@@ V@@ p@@ n@@ Package@@ (com.android.@@ cts.@@ device@@ pro@@ file@@ o@@ wn@@ er.@@ AD@@ M@@ IN@@ _RE@@ CE@@ I@@ V@@ ER@@ _C@@ O@@ M@@ P@@ ON@@ EN@@ T@@ )); assert@@ False@@ (com.android.@@ cts.@@ device@@ and@@ pro@@ file@@ o@@ wn@@ er.@@ v@@ p@@ n@@ .@@ V@@ p@@ n@@ Test@@ Helper.@@ is@@ Network@@ V@@ p@@ n@@ (m@@ Context@@ )); }
private synchronized boolean@@ [] int@@ er@@ n@@ al@@ _@@ is@@ N@@ fc@@ Event@@ Al@@ low@@ ed@@ (@@ byte@@ [] a@@ id, java.lang.String[] package@@ Nam@@ es@@ , boolean check@@ Ref@@ res@@ h@@ T@@ ag@@ ) { if (@@ check@@ Ref@@ res@@ h@@ T@@ ag@@ ) { try { update@@ Access@@ R@@ ule@@ I@@ f@@ N@@ e@@ ed@@ ed@@ ed@@ (@@ false@@ ); } catch (java.io.IOException ign@@ or@@ e) { } int i = 0; boolean@@ [] n@@ fc@@ Event@@ Flag@@ s = new boolean@@ [@@ package@@ Nam@@ es.@@ length@@ ]; for (java.lang.String package@@ Name : package@@ Nam@@ es) { try { java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ [] app@@ Cer@@ t@@ s = get@@ AP@@ P@@ Cer@@ ts@@ (@@ package@@ Name); if ((@@ app@@ Cer@@ t@@ s == null@@ ) || ((@@ app@@ Cer@@ ts.@@ length) == 0@@ )) { n@@ fc@@ Event@@ Flag@@ s@@ [i@@ ] = false@@ ; } else { com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s channe@@ l@@ Ac@@ ces@@ s = get@@ Access@@ R@@ ule@@ (@@ a@@ id, app@@ Cer@@ t@@ s); n@@ fc@@ Event@@ Flag@@ s@@ [i@@ ] = (@@ channe@@ l@@ Ac@@ ces@@ s.get@@ N@@ F@@ C@@ Event@@ Access@@ ()) == (com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s.@@ AC@@ CE@@ SS@@ .@@ AL@@ LO@@ W@@ E@@ D@@ ); } } catch (java.lang.Exception e) { android.util.Log.@@ w@@ (m@@ T@@ ag@@ , ("@@ Ac@@ ces@@ s R@@ ule@@ s for N@@ F@@ C@@ : " + (@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()))); n@@ fc@@ Event@@ Flag@@ s@@ [i@@ ] = false@@ ; } i@@ ++@@ ; } return n@@ fc@@ Event@@ Flag@@ s; }
private void update@@ Access@@ R@@ ule@@ I@@ f@@ N@@ e@@ ed@@ ed@@ (@@ boolean di@@ st@@ ing@@ u@@ is@@ h@@ Temp@@ or@@ ary@@ Error@@ ) throw@@ s java.io.IOException { if ((m@@ U@@ se@@ Ar@@ a@@ ) && ((m@@ Ar@@ a@@ Control@@ ler@@ ) != null@@ )) { try { m@@ Ar@@ a@@ Control@@ ler.@@ in@@ iti@@ aliz@@ e@@ (); m@@ U@@ se@@ Ar@@ f = false@@ ; m@@ F@@ ull@@ Ac@@ ces@@ s = false@@ ; } catch (java.lang.Exception e) { if (@@ di@@ st@@ ing@@ u@@ is@@ h@@ Temp@@ or@@ ary@@ Error@@ ) { if (@@ e instanceof java.io.IO@@ Exception@@ ) { throw e@@ ; } } throw new java.security.@@ Access@@ Control@@ Exception@@ (("@@ N@@ e@@ ed@@ ed AR@@ A app@@ le@@ t fo@@ un@@ d in " + (m@@ T@@ er@@ min@@ al@@ .getName@@ ()))); } } else if ((m@@ U@@ se@@ Ar@@ f@@ ) && ((m@@ Ar@@ f@@ Control@@ ler@@ ) != null@@ )) { try { m@@ Ar@@ f@@ Control@@ ler.@@ in@@ iti@@ aliz@@ e@@ (); } catch (java.lang.Exception e) { if (@@ di@@ st@@ ing@@ u@@ is@@ h@@ Temp@@ or@@ ary@@ Error@@ ) { if (@@ e instanceof java.io.IO@@ Exception@@ ) { throw e@@ ; } } } }
private synchronized com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s int@@ er@@ n@@ al@@ _@@ set@@ Up@@ Channel@@ Access@@ (@@ byte@@ [] a@@ id, java.lang.String package@@ Name, boolean check@@ Ref@@ res@@ h@@ T@@ ag@@ ) throw@@ s java.io.IOException { if (@@ package@@ Name == null@@ ) || (@@ package@@ Nam@@ e.@@ isEmpty@@ ())) { throw new java.security.@@ Access@@ Control@@ Exception@@ ("@@ N@@ o name@@ s m@@ us@@ t b@@ e s@@ pe@@ c@@ if@@ i@@ ed@@ "); } try { java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ [] app@@ Cer@@ t@@ s = get@@ AP@@ P@@ Cer@@ ts@@ (@@ package@@ Name); if ((@@ app@@ Cer@@ t@@ s == null@@ ) || ((@@ app@@ Cer@@ ts.@@ length) == 0@@ )) { throw new java.security.@@ Access@@ Control@@ Exception@@ ("@@ P@@ end@@ ing cer@@ t@@ if@@ ic@@ ate@@ s ar@@ e in@@ va@@ li@@ d or do not exist@@ .@@ "); } if (@@ check@@ Ref@@ res@@ h@@ T@@ ag@@ ) { update@@ Access@@ R@@ ule@@ I@@ f@@ N@@ e@@ ed@@ (@@ true@@ ); } return get@@ Access@@ R@@ ule@@ (@@ a@@ id, app@@ Cer@@ t@@ s); } catch (java.lang.Exception e) { throw e@@ ; } catch (java.lang.Exception e) { throw new java.security.@@ Access@@ Control@@ Exception(@@ exp@@ .get@@ Message@@ ()); } }
public com.android.s@@ e.@@ Channe@@ l open@@ Log@@ ic@@ al@@ Channel@@ With@@ out@@ Channel@@ Access@@ (@@ byte@@ [] a@@ id@@ ) throw@@ s java.io.IO@@ Exception { return open@@ Log@@ ic@@ al@@ Channel@@ (@@ null@@ , a@@ id, (@@ (@@ byte@@ ) (0@@ )), null@@ , 0); }
public com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s set@@ Up@@ Channel@@ Access@@ (@@ byte@@ [] a@@ id, java.lang.String package@@ Name, boolean check@@ Ref@@ res@@ h@@ T@@ ag@@ , int p@@ id@@ ) { if ((m@@ Access@@ Control@@ E@@ n@@ for@@ cer@@ ) == null@@ ) { android.util.Log.@@ e@@ (m@@ T@@ ag@@ , Contro@@ l E@@ n@@ for@@ ce@@ r not pro@@ per@@ l@@ y set u@@ p in@@ iti@@ aliz@@ e@@ Access@@ Control@@ (); } m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.@@ set@@ Package@@ Manager@@ (m@@ Contex@@ t.get@@ Package@@ Manager@@ ()); synchronized@@ (m@@ Lock) { try { com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s channe@@ l@@ Ac@@ ces@@ s = m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.@@ set@@ Up@@ Channel@@ Ac@@ ces@@ s(@@ a@@ id, package@@ Name, check@@ Ref@@ res@@ h@@ T@@ ag@@ ); channe@@ l@@ Ac@@ ces@@ s.@@ set@@ Call@@ ing@@ P@@ id@@ (p@@ id@@ ); return channe@@ l@@ Access@@ ; } catch (java.lang.Exception e) { throw new android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception@@ (android.@@ s@@ e.@@ om@@ api.@@ SE@@ Service.@@ IO@@ _@@ ER@@ RO@@ R@@ , e.get@@ Message@@ ()); } catch (java.lang.Exception e) { throw new java.lang.@@ Sec@@ ur@@ ity@@ Exception@@ (("@@ Illeg@@ al in set@@ Up@@ Channel@@ Access@@ () " + e@@ )); } }
public byte@@ [] ex@@ ch@@ ang@@ e@@ AP@@ D@@ U@@ (com.android.s@@ e.@@ security.@@ ar@@ f.@@ p@@ k@@ c@@ s@@ 1@@ 5@@ .@@ E@@ F e@@ f@@ , byte@@ [] c@@ m@@ d@@ ) throw@@ s com.android.s@@ e.@@ security.@@ ar@@ f.@@ Sec@@ ure@@ Element@@ Exception { try { return m@@ Ar@@ f@@ Channe@@ l.@@ trans@@ m@@ it@@ (c@@ m@@ d@@ ); } catch (android.@@ security.@@ ar@@ f.@@ Sec@@ ure@@ Element@@ Exception e) { throw new java.io.IO@@ Exception(@@ e.get@@ Message@@ ()); } catch (android.@@ security.@@ ar@@ f.@@ Sec@@ ure@@ Element@@ Exception e) { if (@@ e instanceof android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception@@ ) { if ((((@@ android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception@@ ) (@@ e@@ )).@@ error@@ Code@@ ) == (android.@@ s@@ e.@@ om@@ api.@@ SE@@ Service.@@ IO@@ _@@ ER@@ RO@@ R@@ )) { throw new java.io.IO@@ Exception(@@ e.get@@ Message@@ ()); } } throw new com.android.s@@ e.@@ security.@@ ar@@ f.@@ Sec@@ ure@@ Element@@ Exception@@ (("@@ Un@@ k@@ no@@ w@@ n Elem@@ ent ac@@ ces@@ s er@@ ror " + (@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()))); } }
private com.android.s@@ e.@@ security.@@ Response@@ Ap@@ d@@ u send@@ (com.android.s@@ e.@@ security.@@ Command@@ Ap@@ d@@ u c@@ m@@ d@@ Ap@@ du@@ ) throw@@ s java.io.IOException { try { byte@@ [] respon@@ se = m@@ Channe@@ l.@@ trans@@ m@@ it@@ (c@@ m@@ d@@ Ap@@ du@@ .@@ to@@ Bytes@@ ()); return new com.android.s@@ e.@@ security.@@ Response@@ Ap@@ du@@ (@@ respon@@ se@@ ); } catch (android.@@ os@@ .@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { if ((@@ e.@@ error@@ Code@@ ) == (android.@@ s@@ e.@@ om@@ api.@@ SE@@ Service.@@ IO@@ _@@ ER@@ RO@@ R@@ )) { throw new java.io.IO@@ Exception(@@ e.get@@ Message@@ ()); } throw e@@ ; } catch (android.@@ os@@ .@@ Remote@@ Exception e) { throw new java.io.IO@@ Exception(@@ e.get@@ Message@@ ()); } }
public com.android.s@@ e.@@ Channe@@ l open@@ Log@@ ic@@ al@@ Ar@@ f@@ Channel@@ (@@ byte@@ [] a@@ id@@ ) throw@@ s java.io.IOException { try { m@@ Ar@@ f@@ Channe@@ l = m@@ T@@ er@@ min@@ al@@ Hand@@ le.@@ open@@ Log@@ ic@@ al@@ Channel@@ With@@ out@@ Channel@@ Ac@@ ces@@ s(@@ a@@ id@@ ); if ((m@@ Ar@@ f@@ Channel@@ ) == null@@ ) { throw new java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ("@@ Can't channe@@ l w@@ a@@ s ava@@ il@@ able "); } set@@ Up@@ Channel@@ Access@@ (m@@ Ar@@ f@@ Channel@@ ); return m@@ Ar@@ f@@ Channel@@ ; } catch (java.io.IOException e) { throw e@@ ; } catch (java.lang.Exception e) { if (@@ e instanceof java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ) { android.util.Log.@@ e@@ (m@@ T@@ ag@@ , ("@@ Faile@@ d channe@@ l@@ s le@@ f@@ t to ac@@ ces@@ s AR@@ F@@ : " + (@@ e.get@@ Message@@ ()))); throw ((@@ java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ) (@@ e@@ )); } else { android.util.Log.@@ e@@ (m@@ T@@ ag@@ , ("@@ Er@@ ror open@@ ing log@@ ic@@ al channe@@ l '@@ " + (@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()))); } m@@ Ar@@ f@@ Channe@@ l = null@@ ; return null@@ ; } }
private synchronized boolean@@ [] int@@ er@@ n@@ al@@ _@@ is@@ N@@ fc@@ Event@@ Al@@ low@@ ed@@ (@@ byte@@ [] a@@ id, java.lang.String[] package@@ Nam@@ es@@ , boolean check@@ Ref@@ res@@ h@@ T@@ ag@@ ) { if (@@ check@@ Ref@@ res@@ h@@ T@@ ag@@ ) { try { update@@ Access@@ R@@ ule@@ I@@ f@@ N@@ e@@ ed@@ ed@@ (@@ false@@ ); } catch (java.io.IOException ign@@ or@@ e) { } catch (java.util.@@ M@@ is@@ sing@@ Resource@@ Exception ign@@ or@@ e) { } int i = 0; boolean@@ [] n@@ fc@@ Event@@ Flag@@ s = new boolean@@ [@@ package@@ Nam@@ es.@@ length@@ ]; for (java.lang.String package@@ Name : package@@ Nam@@ es) { try { java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ [] app@@ Cer@@ t@@ s = get@@ AP@@ P@@ Cer@@ ts@@ (@@ package@@ Name); if ((@@ app@@ Cer@@ t@@ s == null@@ ) || ((@@ app@@ Cer@@ ts.@@ length) == 0@@ )) { n@@ fc@@ Event@@ Flag@@ s@@ [i@@ ] = false@@ ; } else { com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s channe@@ l@@ Ac@@ ces@@ s = get@@ Access@@ R@@ ule@@ (@@ a@@ id, app@@ Cer@@ t@@ s); n@@ fc@@ Event@@ Flag@@ s@@ [i@@ ] = (@@ channe@@ l@@ Ac@@ ces@@ s.get@@ N@@ F@@ C@@ Event@@ Access@@ ()) == (com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s.@@ AC@@ CE@@ SS@@ .@@ AL@@ LO@@ W@@ E@@ D@@ ); } } catch (java.lang.Exception e) { android.util.Log.@@ w@@ (m@@ T@@ ag@@ , ("@@ Ac@@ ces@@ s R@@ ule@@ s for N@@ F@@ C@@ : " + (@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()))); n@@ fc@@ Event@@ Flag@@ s@@ [i@@ ] = false@@ ; } i@@ ++@@ ; } return n@@ fc@@ Event@@ Flag@@ s; }
private synchronized com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s int@@ er@@ n@@ al@@ _@@ set@@ Up@@ Channel@@ Access@@ (@@ byte@@ [] a@@ id, java.lang.String package@@ Name, boolean check@@ Ref@@ res@@ h@@ T@@ ag@@ ) throw@@ s java.io.IOException { if (@@ package@@ Name == null@@ ) || (@@ package@@ Nam@@ e.@@ isEmpty@@ ())) { throw new java.security.@@ Access@@ Control@@ Exception@@ ("@@ N@@ o name@@ s m@@ us@@ t b@@ e s@@ pe@@ c@@ if@@ i@@ ed@@ "); } try { java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ [] app@@ Cer@@ t@@ s = get@@ AP@@ P@@ Cer@@ ts@@ (@@ package@@ Name); if ((@@ app@@ Cer@@ t@@ s == null@@ ) || ((@@ app@@ Cer@@ ts.@@ length) == 0@@ )) { throw new java.security.@@ Access@@ Control@@ Exception@@ ("@@ N@@ e@@ ed@@ ed cer@@ t@@ if@@ ic@@ ate@@ s ar@@ e in@@ va@@ li@@ d or do not exist@@ .@@ "); } if (@@ check@@ Ref@@ res@@ h@@ T@@ ag@@ ) { update@@ Access@@ R@@ ule@@ I@@ f@@ N@@ e@@ ed@@ (@@ true@@ ); } return get@@ Access@@ R@@ ule@@ (@@ a@@ id, app@@ Cer@@ t@@ s); } catch (java.io.IOException e) { throw e@@ ; } catch (java.lang.Exception e) { throw e@@ ; } catch (java.lang.Exception e) { throw new java.security.@@ Access@@ Control@@ Exception@@ (("@@ Can@@ not exp@@ exp@@ ) { throw new java.security.@@ Access@@ Control@@ Exception(@@ exp@@ .get@@ Message@@ ()); } }
private void update@@ Access@@ R@@ ule@@ I@@ f@@ N@@ e@@ ed@@ (@@ boolean di@@ st@@ ing@@ u@@ is@@ h@@ Temp@@ or@@ ary@@ Error@@ ) throw@@ s java.io.IOException { if ((m@@ U@@ se@@ Ar@@ a@@ ) && ((m@@ Ar@@ a@@ Control@@ ler@@ ) != null@@ )) { try { m@@ Ar@@ a@@ Control@@ ler.@@ in@@ iti@@ aliz@@ e@@ (); m@@ U@@ se@@ Ar@@ f = false@@ ; m@@ F@@ ull@@ Ac@@ ces@@ s = false@@ ; } catch (java.lang.Exception e) { if (@@ di@@ st@@ ing@@ u@@ is@@ h@@ Temp@@ or@@ ary@@ Error@@ ) { if (@@ e instanceof java.io.IO@@ Exception@@ ) { throw e@@ ; } else if (@@ e instanceof java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ) { throw e@@ ; } } throw new java.security.@@ Access@@ Control@@ Exception@@ (("@@ N@@ o AR@@ A app@@ le@@ t fo@@ un@@ d in " + (m@@ T@@ er@@ min@@ al@@ .getName@@ ()))); } } else if ((m@@ U@@ se@@ Ar@@ f@@ ) && ((m@@ Ar@@ f@@ Control@@ ler@@ ) != null@@ )) { try { m@@ Ar@@ f@@ Control@@ ler.@@ in@@ iti@@ aliz@@ e@@ (); } catch (java.lang.Exception e) { if (@@ di@@ st@@ ing@@ u@@ is@@ h@@ Temp@@ or@@ ary@@ Error@@ ) { if (@@ e instanceof java.io.IOException { throw e@@ ; } else if (@@ e instanceof java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ) { throw e@@ ; } } android.util.Log.@@ e@@ (m@@ T@@ ag@@ , e.get@@ Message@@ ()); } } }
private byte@@ [] trans@@ m@@ it@@ In@@ ternal@@ (@@ byte@@ [] c@@ m@@ d@@ ) throw@@ s android.os.@@ Remote@@ Exception { java.util.ArrayList<@@ java.lang.@@ Byte@@ > respon@@ se = m@@ SE@@ H@@ al.@@ trans@@ m@@ it@@ (@@ byte@@ Array@@ To@@ Array@@ List@@ (c@@ m@@ d@@ )); if (@@ respon@@ s@@ e.@@ isEmpty@@ ()) { throw new android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception@@ (android.@@ s@@ e.@@ om@@ api.@@ SE@@ Service.@@ IO@@ _@@ ER@@ RO@@ R@@ , "@@ S@@ k@@ ip@@ p@@ ing in trans@@ m@@ it@@ () "); } byte@@ [] rs@@ p = array@@ List@@ To@@ ByteArray@@ (@@ respon@@ se@@ ); if (@@ DE@@ B@@ U@@ G@@ ) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , ("@@ se@@ : " + (com.android.@@ se@@ .@@ int@@ er@@ n@@ al.@@ ByteArray@@ Con@@ ver@@ ter@@ .@@ byte@@ Array@@ To@@ H@@ ex@@ String@@ (c@@ m@@ d@@ )))); android.util.Log.@@ i@@ (m@@ T@@ ag@@ , ("@@ se@@ .@@ int@@ er@@ n@@ al.@@ ByteArray@@ Con@@ ver@@ ter@@ .@@ byte@@ Array@@ To@@ H@@ ex@@ String(@@ rs@@ p@@ )))); } return rs@@ p@@ ; }
@java.lang.Override public void en@@ ter@@ () { super@@ .@@ ent@@ er@@ (); send@@ Message@@ D@@ el@@ ay@@ ed@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _@@ START@@ _@@ TI@@ ME@@ O@@ UT@@ , com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _@@ START@@ _@@ TI@@ ME@@ O@@ U@@ T_@@ DE@@ LA@@ Y@@ ); m@@ Adap@@ ter@@ Service.@@ start@@ C@@ ore@@ Ser@@ vices@@ (); }
void start@@ C@@ ore@@ Ser@@ vices@@ () { debu@@ g@@ Log@@ ("@@ start@@ C@@ ore@@ Ser@@ vices@@ ()@@ "); java.lang.@@ Class@@ [] sup@@ ported@@ Pro@@ file@@ Service@@ s = com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Config.@@ get@@ Sup@@ ported@@ Pro@@ fil@@ es@@ (); if ((@@ (s@@ up@@ ported@@ Pro@@ file@@ Ser@@ vices@@ .@@ length) == 1@@ ) && ((@@ (m@@ Run@@ ning@@ Pro@@ fil@@ es.@@ size@@ ()) == 1@@ ) && (com.android.bluetooth.@@ g@@ at@@ t.@@ G@@ att@@ Service@@ .@@ class@@ .get@@ Sim@@ ple@@ Name@@ ().@@ equal@@ s@@ (m@@ Run@@ ning@@ Pro@@ fil@@ es@@ .get@@ (0@@ )@@ .getName@@ ()@@ )@@ ))) { m@@ Adap@@ ter@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _@@ START@@ E@@ D@@ ); } else { set@@ All@@ Pro@@ file@@ Service@@ Stat@@ es@@ (s@@ up@@ ported@@ Pro@@ file@@ Ser@@ vices@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ ); } }
void st@@ op@@ G@@ att@@ Pro@@ file@@ Service@@ () { m@@ Adap@@ ter@@ Proper@@ ti@@ es.@@ on@@ B@@ le@@ Dis@@ able@@ (); if ((m@@ Run@@ ning@@ Pro@@ fil@@ es.@@ size@@ ()) == 0) { debu@@ g@@ Log@@ ("@@ G@@ o@@ t - N@@ o pro@@ file@@ s to st@@ op@@ .@@ "); m@@ Adap@@ ter@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ S@@ TO@@ P@@ P@@ E@@ D@@ ); } set@@ Pro@@ file@@ Service@@ State@@ (com.android.bluetooth.@@ g@@ at@@ t.@@ G@@ att@@ Service@@ .@@ class@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ F@@ ); }
boolean st@@ op@@ G@@ att@@ Pro@@ file@@ Service@@ () { m@@ Adap@@ ter@@ Proper@@ ti@@ es.@@ on@@ B@@ le@@ Dis@@ able@@ (); if ((m@@ Run@@ ning@@ Pro@@ fil@@ es.@@ size@@ ()) == 0) { debu@@ g@@ Log@@ ("@@ N@@ o pro@@ file@@ s to st@@ op@@ .@@ "); m@@ Adap@@ ter@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ S@@ TO@@ P@@ P@@ E@@ D@@ ); } set@@ Pro@@ file@@ Service@@ State@@ (com.android.bluetooth.@@ g@@ at@@ t.@@ G@@ att@@ Service@@ .@@ class@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ F@@ ); return true@@ ; }
boolean en@@ able@@ Native@@ From@@ State@@ M@@ ach@@ ine@@ () { boolean is@@ G@@ u@@ est = android.os.@@ User@@ Manager.@@ get@@ (@@ this@@ ).@@ is@@ G@@ u@@ est@@ User@@ (); android.util.Log.d@@ ("@@ AT@@ S@@ T@@ ", ("@@ en@@ able@@ Native@@ User@@ () - is@@ G@@ u@@ est = " + is@@ G@@ u@@ est@@ )); return en@@ able@@ Native@@ (is@@ G@@ u@@ est@@ ); }
public void on@@ B@@ r@@ E@@ d@@ r@@ Do@@ wn@@ () { m@@ Adap@@ ter@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ Adap@@ ter@@ State@@ .@@ B@@ L@@ E_@@ T@@ UR@@ N@@ _@@ O@@ F@@ F@@ ); }
void state@@ Chang@@ e@@ Callback@@ (@@ int statu@@ s) { if (@@ statu@@ s == (@@ Abstr@@ action@@ Lay@@ er.@@ B@@ T_@@ STATE_@@ O@@ F@@ )) { m@@ Adap@@ ter@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ Adap@@ ter@@ State.@@ D@@ IS@@ AB@@ LE@@ D_@@ N@@ AT@@ I@@ V@@ E); } else if (@@ statu@@ s == (@@ Abstr@@ action@@ Lay@@ er.@@ B@@ T_@@ STATE_@@ ON@@ )) { m@@ Adap@@ ter@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ Adap@@ ter@@ State.@@ EN@@ AB@@ LE@@ D_@@ N@@ AT@@ I@@ V@@ E); } else { android.util.Log.@@ e@@ ("@@ TAG@@ ", (("@@ In@@ cor@@ re@@ c@@ t statu@@ s " + statu@@ s) + " in state@@ Chang@@ e@@ Callback@@ ")); } }
@java.lang.Override public boolean process@@ Message@@ (android.os.@@ Mess@@ age ms@@ g@@ ) { switch (m@@ s@@ g.@@ wh@@ at@@ ) { case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State@@ .@@ B@@ L@@ E_@@ START@@ E@@ D@@ : m@@ Adap@@ ter@@ Ser@@ vice = .@@ en@@ able@@ Native@@ From@@ State@@ M@@ ach@@ in@@ e@@ (); break@@ ; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State@@ .@@ EN@@ AB@@ LE@@ D_@@ N@@ AT@@ I@@ V@@ E@@ : tr@@ an@@ sition@@ T@@ o@@ (m@@ B@@ le@@ On@@ State@@ ); break@@ ; default : in@@ fo@@ Log@@ (("@@ D@@ id mess@@ age - " + (m@@ ess@@ age@@ String@@ (m@@ s@@ g.@@ wh@@ at@@ )))); return false@@ ; } return true@@ ; }
private java.lang.String message@@ Str@@ ing@@ Str@@ ing@@ (@@ int message@@ ) { switch (@@ message@@ ) { case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ T@@ UR@@ N@@ _@@ O@@ N : return "@@ B@@ L@@ E_@@ T@@ UR@@ N@@ _@@ ON@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ US@@ ER_@@ T@@ UR@@ N@@ _@@ O@@ N : return "@@ US@@ ER_@@ T@@ UR@@ N@@ _@@ ON@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _@@ START@@ E@@ D : return "@@ B@@ RE@@ D@@ R@@ _@@ START@@ E@@ D@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ EN@@ AB@@ LE@@ D_@@ N@@ AT@@ I@@ V@@ E : return "@@ EN@@ AB@@ LE@@ D_@@ N@@ AT@@ I@@ V@@ E@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ START@@ E@@ D : return "@@ B@@ L@@ E_@@ START@@ E@@ D@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ US@@ ER_@@ T@@ UR@@ N@@ _@@ O@@ F@@ F : return "@@ US@@ ER_@@ T@@ UR@@ N@@ _@@ O@@ F@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ T@@ UR@@ N@@ _@@ O@@ F@@ F : return "@@ B@@ L@@ E_@@ T@@ UR@@ N@@ _@@ O@@ F@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ D@@ IS@@ AB@@ LE@@ D_@@ N@@ AT@@ I@@ V@@ E : return "@@ D@@ IS@@ AB@@ LE@@ D_@@ N@@ AT@@ I@@ V@@ E@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ S@@ TO@@ P@@ P@@ E@@ D : return "@@ B@@ L@@ E_@@ S@@ TO@@ P@@ P@@ P@@ E@@ D@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _S@@ TO@@ P@@ P@@ P@@ E@@ D : return "@@ B@@ RE@@ D@@ R@@ _S@@ TO@@ P@@ P@@ P@@ E@@ D@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ START@@ _@@ TI@@ ME@@ O@@ U@@ T : return "@@ B@@ L@@ E_@@ START@@ _@@ TI@@ ME@@ O@@ UT@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ U@@ T : return "@@ B@@ L@@ E_@@ S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ UT@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _@@ START@@ _@@ TI@@ ME@@ O@@ UT@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ UT@@ "; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ U@@ T : return "@@ B@@ RE@@ D@@ R@@ _S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ UT@@ "; default : return (("@@ B@@ RE@@ D@@ R@@ _S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ UT@@ "; default : return (("@@ B@@ RE@@ D@@ R@@ _S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ UT@@ " + mess@@ age@@ ) + "@@ )@@ "@@ )@@ "; } }
@java.lang.Override public void ex@@ it@@ () { remove@@ Mess@@ ag@@ es@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ UT@@ ); }
public void ex@@ it@@ (@@ java.lang.Object value@@ ) { remove@@ Message@@ s(@@ value@@ ); }
@java.lang.Override public boolean process@@ Message@@ (android.os.@@ Mess@@ age ms@@ g@@ ) { switch (m@@ s@@ g.@@ wh@@ at@@ ) { case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ S@@ TO@@ P@@ P@@ E@@ D : tr@@ an@@ sition@@ To@@ (m@@ O@@ ff@@ State@@ ); break@@ ; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ D@@ IS@@ AB@@ LE@@ D_@@ N@@ AT@@ I@@ V@@ E : m@@ Adap@@ ter@@ Service.@@ st@@ op@@ G@@ att@@ Pro@@ file@@ Service@@ (); break@@ ; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ U@@ T : error@@ Log@@ (m@@ ess@@ age@@ String@@ (m@@ s@@ g.@@ wh@@ at@@ )); tr@@ an@@ sition@@ To@@ (m@@ O@@ ff@@ State@@ ); break@@ ; default : in@@ fo@@ Log@@ (("@@ Un@@ handle@@ d mess@@ age - " + (m@@ ess@@ age@@ String@@ (m@@ s@@ g.@@ wh@@ at@@ )))); return false@@ ; } return true@@ ; }
@java.lang.Override public void ex@@ it@@ () { remove@@ Mess@@ ag@@ es@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ START@@ _@@ TI@@ ME@@ O@@ UT@@ ); }
@java.lang.Override public void ent@@ er@@ () { super@@ .@@ en@@ ter@@ (@@ null@@ ); m@@ Adap@@ ter@@ Service.@@ update@@ U@@ u@@ id@@ s(); m@@ Adap@@ ter@@ Service@@ .set@@ Bluetooth@@ Class@@ From@@ Config@@ (); }
@java.lang.Override public void en@@ ter@@ () { super@@ .@@ en@@ ter@@ (); send@@ Message@@ D@@ el@@ ay@@ ed@@ (@@ co@@ m@@ ent.@@ android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ UT@@ , com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ S@@ TO@@ P@@ _@@ TI@@ ME@@ O@@ U@@ T_@@ DE@@ LA@@ Y@@ ); m@@ Adap@@ ter@@ Service.@@ dis@@ able@@ N@@ ative@@ (); }
@java.lang.Override public boolean process@@ Message@@ (android.os.@@ Mess@@ age ms@@ g@@ ) { switch (m@@ s@@ g.@@ wh@@ at@@ ) { case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _@@ START@@ E@@ D : tr@@ an@@ sition@@ To@@ (m@@ On@@ State@@ ); break@@ ; case com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ RE@@ D@@ R@@ _@@ START@@ _@@ TI@@ ME@@ O@@ U@@ T : error@@ Log@@ (m@@ ess@@ age@@ String@@ (m@@ s@@ g.@@ wh@@ at@@ )); tr@@ an@@ sition@@ To@@ (m@@ B@@ le@@ On@@ State@@ ); break@@ ; default : in@@ fo@@ Log@@ (("@@ Un@@ handle@@ d mess@@ age - " + (m@@ ess@@ age@@ String@@ (m@@ s@@ g.@@ wh@@ at@@ )))); return false@@ ; } return true@@ ; }
@java.lang.Override public void ent@@ er@@ () { super@@ .@@ en@@ ter@@ (@@ this@@ ); m@@ Adap@@ ter@@ Service.@@ ble@@ On@@ Process@@ Start@@ (); send@@ Message@@ D@@ el@@ ay@@ ed@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ START@@ _@@ TI@@ ME@@ O@@ UT@@ , com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ START@@ _@@ TI@@ ME@@ O@@ U@@ T_@@ DE@@ LA@@ Y@@ ); }
private com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e get@@ Or@@ Create@@ State@@ M@@ ach@@ ine@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (@@ de@@ vice == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ get@@ Or@@ Create@@ State@@ M@@ ach@@ in@@ e fa@@ ile@@ d@@ : de@@ vice can@@ not b@@ e null@@ "); return null@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m != null@@ ) { return s@@ m@@ ; } if ((m@@ State@@ M@@ ach@@ in@@ es.@@ size@@ ()) > (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ MA@@ X@@ _@@ He@@ ar@@ ing@@ A@@ id@@ _@@ STA@@ TE@@ _M@@ AC@@ H@@ IN@@ E@@ S@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ Ma@@ x@@ im@@ u@@ m n@@ umb@@ er of He@@ ar@@ ing@@ A@@ id st@@ ate m@@ ach@@ ine@@ s re@@ ach@@ ed@@ : " + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ MA@@ X@@ _@@ He@@ ar@@ ing@@ A@@ id@@ _@@ STA@@ TE@@ _M@@ AC@@ H@@ IN@@ E@@ S@@ ))); return null@@ ; } if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ Cre@@ at@@ ing a new st@@ ate m@@ ach@@ in@@ e for " + device@@ )); } s@@ m = com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ m@@ ake@@ (@@ device@@ , this@@ , m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ , m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .get@@ L@@ oo@@ per@@ ()); m@@ State@@ M@@ ach@@ in@@ es.@@ put@@ (@@ device@@ , s@@ m@@ ); return s@@ m@@ ; }
@java.lang.Override public void ex@@ it@@ () { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ Ex@@ i@@ t Dis@@ connec@@ ted@@ (@@ " + (m@@ Device@@ )) + "@@ )@@ : ") + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ message@@ W@@ hat@@ To@@ String@@ (get@@ Current@@ Message@@ ().@@ wh@@ at@@ )))); } m@@ L@@ ast@@ Connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; }
public void do@@ Q@@ u@@ it@@ () { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, (@@ "@@ do@@ Q@@ ui@@ t for de@@ vice " + (m@@ Device@@ ))); } qu@@ it@@ No@@ w@@ (); }
@java.lang.Override public void ent@@ er@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ En@@ ter Dis@@ connec@@ ted@@ (@@ " + (m@@ Device@@ )) + "@@ )@@ : ") + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ message@@ W@@ hat@@ To@@ String@@ (get@@ Current@@ Message@@ ().@@ wh@@ at@@ )))); m@@ Connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; remove@@ De@@ fer@@ re@@ d@@ Mess@@ ag@@ es@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); remove@@ Mess@@ ag@@ es@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T_@@ TI@@ ME@@ O@@ UT@@ ); if ((m@@ L@@ ast@@ Connection@@ State@@ ) != (-1@@ )) { b@@ roadcast@@ Connection@@ State@@ (m@@ Connection@@ State@@ , m@@ L@@ ast@@ Connection@@ State@@ ); if (m@@ I@@ s@@ Play@@ ing@@ ) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ Dis@@ connec@@ ted@@ : st@@ op@@ p@@ ed play@@ ing@@ : " + (m@@ Device@@ ))); m@@ I@@ s@@ Play@@ ing = false@@ ; b@@ roadcast@@ Au@@ dio@@ State@@ (@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ STATE_@@ NO@@ T_@@ P@@ LA@@ Y@@ ING@@ , Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ STATE_@@ P@@ LA@@ Y@@ ING@@ ); } }
@java.lang.Override public void ex@@ it@@ () { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ Ex@@ i@@ t Connec@@ ted@@ (@@ " + (m@@ Device@@ )) + "@@ )@@ : ") + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ message@@ W@@ hat@@ To@@ String@@ (get@@ Current@@ Message@@ ().@@ wh@@ at@@ )))); } m@@ L@@ ast@@ Connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; }
static com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e m@@ ake@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice s@@ v@@ c@@ , com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Inter@@ face he@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ , android.os.@@ L@@ oo@@ p@@ er lo@@ o@@ per@@ ) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ m@@ ak@@ e for de@@ vice " + device@@ )); com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e He@@ ar@@ ing@@ A@@ id@@ S@@ m = new com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ ine@@ (@@ device@@ , s@@ v@@ c@@ , he@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ , lo@@ o@@ per@@ ); ar@@ ing@@ A@@ id@@ S@@ m.@@ start@@ (); return He@@ ar@@ ing@@ A@@ id@@ S@@ m@@ ; }
private void b@@ roadcast@@ Connection@@ State@@ (@@ int new@@ State@@ , int pre@@ v@@ State@@ ) { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((((@@ ("@@ Connec@@ tion st@@ ate " + (m@@ Device@@ )) + "@@ : ") + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ pro@@ file@@ State@@ To@@ String@@ (p@@ re@@ v@@ State@@ ))) + "@@ -@@ >@@ ") + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ pro@@ file@@ State@@ To@@ String@@ (@@ new@@ State@@ )))); } android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , pre@@ v@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , new@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, m@@ Device@@ ); int@@ ent.@@ add@@ Flag@@ s@@ ((@@ (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ E@@ F@@ OR@@ E_@@ B@@ O@@ T@@ ) | (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER_@@ IN@@ C@@ L@@ U@@ D@@ E_@@ B@@ AC@@ K@@ G@@ RO@@ UN@@ D@@ ))); m@@ Service.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ , Pro@@ file@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); }
@java.lang.Override public void ex@@ it@@ () { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ Ex@@ i@@ t Dis@@ connect@@ ing@@ (@@ " + (m@@ Device@@ )) + "@@ )@@ : ") + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ message@@ W@@ hat@@ To@@ String@@ (get@@ Current@@ Message@@ ().@@ wh@@ at@@ )))); } m@@ L@@ ast@@ Connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ; remove@@ Mess@@ ag@@ es@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T_@@ TI@@ ME@@ O@@ UT@@ ); }
@java.lang.Override public void ex@@ it@@ () { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ Ex@@ i@@ t Con@@ nect@@ ing@@ (@@ " + (m@@ Device@@ )) + "@@ )@@ : ") + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ message@@ W@@ hat@@ To@@ String@@ (get@@ Current@@ Message@@ ().@@ wh@@ at@@ )))); } m@@ L@@ ast@@ Connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ; remove@@ Mess@@ ag@@ es@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T_@@ TI@@ ME@@ O@@ UT@@ ); }
private static java.lang.String au@@ dio@@ State@@ To@@ String@@ (@@ int state@@ ) { switch (@@ state@@ ) { case android.@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ STATE_@@ P@@ LA@@ Y@@ IN@@ G : return "@@ P@@ LA@@ Y@@ ING@@ "; case android.@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ STATE_@@ NO@@ T_@@ P@@ LA@@ Y@@ IN@@ G : return "@@ NO@@ T_@@ P@@ LA@@ Y@@ ING@@ "; default : break@@ ; } return java.lang.Integ@@ er.@@ toString@@ (@@ state@@ ); }
public void cle@@ an@@ up@@ () { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ cle@@ an@@ u@@ p for de@@ vice " + (m@@ Device@@ ))); } }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { m@@ Target@@ Context = android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ (); org.@@ junit.@@ A@@ ss@@ um@@ e.@@ ass@@ um@@ e@@ True@@ ("@@ I@@ gn@@ or@@ e t@@ est wh@@ e@@ n He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice is not en@@ abled@@ ", m@@ Target@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ pro@@ file@@ _@@ sup@@ ported@@ _@@ he@@ ar@@ ing@@ _@@ a@@ id@@ )); org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); com.android.@@ bluetooth.@@ Test@@ Utils.@@ set@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); m@@ Adap@@ ter = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (); m@@ Test@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 0@@ 1@@ :@@ 0@@ 3@@ :@@ 0@@ 4@@ :@@ 0@@ 5@@ "); m@@ Handler@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ ine@@ Test@@ Handler@@ Thread@@ "); m@@ Handler@@ Thread@@ .@@ start@@ (); m@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e = new com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ ine@@ (m@@ Test@@ Device@@ , m@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ , m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ , m@@ Handler@@ Thread@@ .get@@ L@@ oo@@ per@@ ()); m@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ s@@ Con@@ nect@@ Time@@ out@@ M@@ s = 1@@ 00@@ 0; m@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ start@@ (); }
@java.lang.Override public void ent@@ er@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ En@@ ter Connec@@ ted@@ (@@ " + (m@@ Device@@ )) + "@@ )@@ : ") + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ message@@ W@@ hat@@ To@@ String@@ (get@@ Current@@ Message@@ ().@@ wh@@ at@@ )))); m@@ Connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; remove@@ De@@ fer@@ re@@ d@@ Mess@@ ag@@ es@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T@@ ); b@@ roadcast@@ Connection@@ State@@ (m@@ Connection@@ State@@ , m@@ L@@ ast@@ Connection@@ State@@ ); b@@ roadcast@@ Au@@ dio@@ State@@ (@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ STATE_@@ NO@@ T_@@ P@@ LA@@ Y@@ ING@@ , Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ STATE_@@ P@@ LA@@ Y@@ ING@@ ); }
private synchronized void connection@@ State@@ Changed@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int f@@ rom@@ State@@ , int to@@ State@@ ) { if ((@@ de@@ vice == null@@ ) || (f@@ rom@@ State == to@@ State@@ )) { return@@ ; } if ((@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && ((@@ get@@ Connec@@ ted@@ De@@ vices@@ ().@@ size@@ ()) == 1@@ )) { set@@ Ac@@ tive@@ Device@@ (@@ device@@ ); } if ((@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && ((@@ get@@ Connec@@ ted@@ De@@ vices@@ ().@@ size@@ ()) == 0@@ )) { set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); } if (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { int b@@ ond@@ State = m@@ Adap@@ ter@@ Service@@ .get@@ B@@ ond@@ State@@ (@@ device@@ ); if (b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E@@ )) { remove@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); } } }
@java.lang.Override protected boolean start@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ start@@ ()@@ "); if ((m@@ Instance@@ ) != null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ start@@ ()@@ "); } if ((m@@ Adap@@ ter@@ ) != null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ N@@ o cal@@ le@@ d t@@ w@@ ic@@ e } m@@ Adap@@ ter = ja@@ v@@ a@@ uti@@ l@@ .@@ Object@@ s.@@ requ@@ i@@ re@@ Non@@ Null@@ (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (), "@@ t@@ e can@@ not b@@ e null@@ "); } wh@@ e@@ n He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice start@@ s m@@ Adap@@ ter@@ Ser@@ vice = java.util.@@ Object@@ s.@@ requ@@ i@@ re@@ Non@@ Null@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service@@ .get@@ Adap@@ ter@@ Service@@ (), "@@ start@@ ()@@ "); m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Inter@@ face = java.util.@@ Object@@ s.@@ requ@@ i@@ re@@ Non@@ Null@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .get@@ Instance@@ (), "@@ can@@ not b@@ e null wh@@ e@@ n He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice start@@ s m@@ State@@ M@@ ach@@ in@@ es.@@ clear@@ (); m@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ State@@ M@@ ach@@ in@@ es@@ "); m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .@@ start@@ (); m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .@@ init@@ (); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _@@ B@@ ON@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ve@@ r = new com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ B@@ ond@@ State@@ Changed@@ Recei@@ ver@@ (); register@@ Recei@@ ver@@ (m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ver@@ , fil@@ ter@@ ); fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); m@@ Connection@@ State@@ Changed@@ Recei@@ ve@@ r = new com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ (); register@@ Recei@@ ver@@ (m@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ , fil@@ ter@@ ); com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ .set@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ (@@ this@@ ); set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); return true@@ ; }
java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (@@ int@@ [] st@@ at@@ es) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > device@@ s = new java.util.ArrayList<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ >(); java.util.@@ Set@@ <@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > b@@ ond@@ ed@@ Device@@ s = m@@ Adap@@ t@@ er.get@@ B@@ ond@@ ed@@ De@@ vices@@ (); for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice : b@@ ond@@ ed@@ De@@ vices@@ ) { android.os.@@ Par@@ cel@@ U@@ u@@ id@@ [] f@@ e@@ ature@@ U@@ u@@ id@@ s = device@@ .get@@ U@@ u@@ id@@ s(); if (!@@ (android.@@ bluetooth.@@ Bluetooth@@ U@@ u@@ id@@ .is@@ U@@ u@@ id@@ P@@ res@@ ent@@ (f@@ e@@ ature@@ U@@ u@@ id@@ s, Bluetooth@@ U@@ u@@ id@@ .@@ Au@@ dio@@ S@@ in@@ k@@ ))) { continue@@ ; } int connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m != null@@ ) { connection@@ State = s@@ m@@ .get@@ Connection@@ State@@ (); } for (@@ int i = 0; i < (@@ st@@ at@@ es.@@ length); i++) { if (@@ connection@@ State == (@@ st@@ at@@ es@@ [i@@ ]@@ )) { de@@ vices@@ .@@ add(@@ device@@ ); } } return de@@ vices@@ ; }
@@@ android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing@@ (@@ oth@@ er@@ w@@ is@@ e = android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing.@@ P@@ AC@@ K@@ A@@ G@@ E_@@ P@@ R@@ I@@ V@@ A@@ TE@@ ) public boolean ok@@ To@@ Con@@ nect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (m@@ Adap@@ ter@@ Service.@@ is@@ Q@@ ui@@ et@@ Mode@@ Enabled@@ ()) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ S@@ ys@@ te@@ m can@@ not connec@@ t to " + device@@ ) + " : qu@@ i@@ et mo@@ de en@@ able@@ d return false@@ ; } if (!(@@ connection@@ Al@@ low@@ ed@@ Check@@ Ma@@ x@@ De@@ vices@@ (@@ device@@ ))) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ S@@ ho@@ ul@@ d can@@ not connec@@ t to " + device@@ ) + " : to@@ o man@@ y connec@@ ted device@@ s return false@@ ; } int p@@ ri@@ or@@ it@@ y = get@@ Pri@@ or@@ ity@@ (@@ device@@ ); int b@@ ond@@ State = m@@ Adap@@ ter@@ Service@@ .get@@ B@@ ond@@ State@@ (@@ device@@ ); if ((@@ p@@ ri@@ or@@ it@@ y == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ UN@@ DE@@ F@@ IN@@ E@@ D@@ )) && (b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E@@ ))) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ((((@@ ("@@ S@@ ho@@ ul@@ d can@@ not connec@@ t to " + device@@ ) + " : p@@ ri@@ or@@ ity@@ =@@ ") + p@@ ri@@ or@@ ity@@ ) + " b@@ ond@@ State@@ =@@ ") + b@@ ond@@ State@@ )); return false@@ ; } if (p@@ ri@@ or@@ it@@ y <@@ = (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ O@@ F@@ F@@ F@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ((@@ ("@@ S@@ D@@ IO@@ : can@@ not connec@@ t to " + device@@ ) + " : p@@ ri@@ or@@ ity@@ =@@ ") + p@@ ri@@ or@@ ity@@ )); return false@@ ; } return true@@ ; }
@java.lang.Override protected boolean st@@ op@@ () { android.util.@@ Log@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ st@@ op@@ ()@@ "); if ((@@ com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ s@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ ) == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ st@@ op@@ () cal@@ le@@ d b@@ e@@ for@@ e start@@ () return true@@ ; } set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ .set@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ (@@ null@@ ); un@@ register@@ Recei@@ ver@@ (m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ver@@ ); m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ve@@ r = null@@ ; un@@ register@@ Recei@@ ver@@ (m@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ ); m@@ Connection@@ State@@ Changed@@ Recei@@ ve@@ r = null@@ ; m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .@@ cle@@ an@@ up@@ (); m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Inter@@ face = null@@ ; synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { s@@ m@@ .@@ do@@ Q@@ u@@ it@@ (); s@@ m.@@ cle@@ an@@ up@@ (); } m@@ State@@ M@@ ach@@ in@@ es.@@ clear@@ (); } if ((m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ ) != null@@ ) { m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .@@ qu@@ it@@ S@@ a@@ f@@ el@@ y(); m@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad = null@@ ; } m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Inter@@ face = null@@ ; m@@ Adap@@ ter@@ Ser@@ vice = null@@ ; m@@ Adap@@ ter = null@@ ; return true@@ ; }
public synchronized boolean set@@ Ac@@ tive@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if (@@ de@@ vice != null@@ ) { com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Ser@@ vice a@@ 2@@ d@@ p@@ Ser@@ vice = com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service@@ .get@@ A@@ 2@@ d@@ p@@ Service@@ (); a@@ 2@@ d@@ p@@ Service@@ .set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); } m@@ Ac@@ tive@@ De@@ vice = device@@ ; return true@@ ; }
@java.lang.Override public void set@@ V@@ ol@@ um@@ e@@ (@@ int vo@@ l@@ um@@ e) { vo@@ l@@ um@@ e = ((@@ vo@@ l@@ um@@ e * 5@@ 12@@ ) / 1@@ 00@@ ) - 12@@ 8@@ ; com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .set@@ V@@ ol@@ um@@ e(@@ vo@@ l@@ um@@ e); }
boolean dis@@ connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ dis@@ connect@@ () " + device@@ )); } int c@@ ust@@ om@@ er@@ Id = m@@ Device@@ Map@@ .get@@ (@@ device@@ ); for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice st@@ or@@ ed@@ De@@ vice : m@@ Device@@ Map@@ .@@ key@@ Set@@ ()) { if ((m@@ Device@@ Map@@ .get@@ (@@ st@@ or@@ ed@@ Device@@ )) != c@@ ust@@ om@@ er@@ Id@@ ) { continue@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ dis@@ connec@@ t requ@@ est for " + device@@ ) + " : n@@ o st@@ ate m@@ ach@@ in@@ e continue@@ ; } s@@ m.@@ send@@ Message@@ (@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); } } return true@@ ; }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { if (!(@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _@@ B@@ ON@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ()))) { return@@ ; } int st@@ ate = int@@ ent.get@@ Int@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ B@@ ON@@ D_@@ STA@@ TE@@ , Bluetooth@@ Device@@ .@@ ER@@ RO@@ R@@ ); android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = int@@ ent.get@@ Par@@ cel@@ able@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E); if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ((@@ ("@@ on@@ Recei@@ ve@@ () st@@ ate ch@@ ang@@ ed for device@@ : " + device@@ ) + state@@ )); } if (@@ st@@ ate != (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E@@ )) { return@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m == null@@ ) { return@@ ; } if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E); if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , Bluetooth@@ Device@@ .@@ ER@@ RO@@ R@@ ); } s@@ m@@ .@@ do@@ Q@@ u@@ it@@ (); s@@ m.@@ cle@@ an@@ up@@ (); m@@ State@@ M@@ ach@@ in@@ es.@@ remove@@ (@@ device@@ ); } }
@java.lang.Override protected void cle@@ an@@ up@@ () { android.util.@@ Log@@ .@@ check@@ NotNull@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ cle@@ an@@ up@@ ()@@ "); }
@java.lang.Override protected void create@@ () { android.util.@@ Log@@ .@@ check@@ NotNull@@ (m@@ y@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ create@@ ()@@ "); }
static android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th con@@ ver@@ t@@ H@@ al@@ Sign@@ al@@ Str@@ ength@@ (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ Sign@@ al@@ Str@@ eng@@ th sign@@ al@@ Str@@ ength@@ ) { int t@@ d@@ sc@@ d@@ ma@@ Rs@@ r@@ p@@ _@@ 1@@ _@@ 2 = 25@@ 5@@ ; if (((@@ sign@@ al@@ Str@@ ength@@ .@@ t@@ d@@ S@@ c@@ d@@ m@@ a.@@ r@@ sc@@ p@@ ) >@@ = 25@@ ) && ((@@ sign@@ al@@ Str@@ ength@@ .@@ t@@ d@@ S@@ c@@ d@@ m@@ a.@@ r@@ sc@@ p@@ ) <@@ = 12@@ 0@@ )) { t@@ d@@ sc@@ d@@ ma@@ Rs@@ r@@ p@@ _@@ 1@@ _@@ 2 = 12@@ 0 - (@@ sign@@ al@@ Str@@ ength@@ .@@ t@@ d@@ S@@ c@@ d@@ m@@ a.@@ r@@ sc@@ p@@ ); } return new android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ (@@ sign@@ al@@ Str@@ ength@@ .@@ g@@ w@@ .@@ sign@@ al@@ Str@@ ength@@ , sign@@ al@@ Str@@ ength@@ , sign@@ al@@ Str@@ ength@@ .@@ g@@ w@@ .@@ b@@ it@@ Error@@ R@@ ate@@ , sign@@ al@@ Str@@ ength@@ .@@ c@@ d@@ m@@ a.@@ d@@ b@@ m@@ , sign@@ al@@ Str@@ ength@@ .@@ c@@ d@@ m@@ a.@@ ec@@ io@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ d@@ b@@ m@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ ec@@ io@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ sign@@ al@@ No@@ is@@ e@@ R@@ ati@@ o@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ al@@ Str@@ ength@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ rs@@ r@@ p@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ rs@@ r@@ q@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ r@@ ss@@ n@@ r@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ c@@ q@@ i@@ , t@@ d@@ sc@@ d@@ ma@@ Rs@@ r@@ p@@ _@@ 1@@ _@@ 2@@ ); }
static android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th con@@ ver@@ t@@ H@@ al@@ Sign@@ al@@ Str@@ ength@@ _@@ 1@@ _@@ 2@@ (android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Sign@@ al@@ Str@@ eng@@ th sign@@ al@@ Str@@ ength@@ ) { return new android.@@ telephony.@@ Sign@@ al@@ Str@@ ength@@ (@@ sign@@ al@@ Str@@ ength@@ .@@ g@@ s@@ m.@@ sign@@ al@@ Str@@ ength@@ , sign@@ al@@ Str@@ ength@@ .@@ g@@ s@@ m.@@ b@@ it@@ Error@@ R@@ ate@@ , sign@@ al@@ Str@@ ength@@ .@@ c@@ d@@ m@@ a.@@ d@@ b@@ m@@ , sign@@ al@@ Str@@ ength@@ .@@ c@@ d@@ m@@ a.@@ ec@@ io@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ d@@ b@@ m@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ ec@@ io@@ , sign@@ al@@ Str@@ ength@@ .@@ e@@ v@@ do@@ .@@ sign@@ al@@ No@@ is@@ e@@ R@@ ati@@ o@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ sign@@ al@@ Str@@ ength@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ rs@@ r@@ p@@ , sign@@ al@@ Str@@ ength@@ .@@ rs@@ r@@ q@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ r@@ ss@@ n@@ r@@ , sign@@ al@@ Str@@ ength@@ .@@ l@@ te@@ .@@ c@@ q@@ i@@ , t@@ d@@ sc@@ d@@ ma@@ Rs@@ r@@ p@@ _@@ 1@@ _@@ 2@@ ); }
public android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th get@@ T@@ d@@ S@@ c@@ d@@ ma@@ Sign@@ al@@ Str@@ ength@@ _@@ 1@@ _@@ 0@@ (@@ int t@@ d@@ ma@@ N@@ eg@@ D@@ b@@ m@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ Sign@@ al@@ Str@@ eng@@ th h@@ al@@ S@@ s = new android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ Sign@@ al@@ Str@@ ength@@ (); h@@ al@@ S@@ s.@@ l@@ te@@ .@@ sign@@ al@@ Str@@ eng@@ th = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ ; h@@ al@@ S@@ s.@@ l@@ te@@ .@@ rs@@ r@@ p = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ RS@@ R@@ P@@ ; h@@ al@@ S@@ s.@@ l@@ te@@ .@@ rs@@ r@@ q = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ RS@@ R@@ Q@@ ; h@@ al@@ S@@ s.@@ l@@ te@@ .@@ r@@ ss@@ n@@ r = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ RS@@ S@@ N@@ R@@ ; h@@ al@@ S@@ s.@@ g@@ w@@ .@@ sign@@ al@@ Str@@ eng@@ th = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ ; h@@ al@@ S@@ s.@@ g@@ w@@ .@@ b@@ it@@ Error@@ R@@ ate = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ B@@ I@@ T_@@ ER@@ RO@@ R@@ _@@ R@@ A@@ TE@@ ; h@@ al@@ S@@ s.@@ c@@ d@@ m@@ a.@@ d@@ b@@ m = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ D@@ B@@ M@@ ; h@@ al@@ S@@ s.@@ c@@ d@@ m@@ a.@@ ec@@ i@@ o = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ EC@@ IO@@ ; h@@ al@@ S@@ s.@@ e@@ v@@ do@@ .@@ d@@ b@@ m = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ D@@ B@@ M@@ ; h@@ al@@ S@@ s.@@ e@@ v@@ do@@ .@@ ec@@ i@@ o = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ EC@@ IO@@ ; h@@ al@@ S@@ s.@@ e@@ v@@ do@@ .@@ sign@@ al@@ No@@ is@@ e@@ R@@ ati@@ o = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ SI@@ G@@ N@@ AL@@ _N@@ O@@ IC@@ E_@@ R@@ AT@@ IO@@ ; h@@ al@@ S@@ c@@ d@@ m@@ a.@@ r@@ sc@@ p = t@@ d@@ sc@@ d@@ ma@@ N@@ eg@@ D@@ b@@ m@@ ; return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ con@@ ver@@ t@@ H@@ al@@ Sign@@ al@@ Str@@ ength@@ (@@ h@@ al@@ S@@ s); }
public android.@@ telephony.@@ Sign@@ al@@ Str@@ eng@@ th get@@ T@@ d@@ S@@ c@@ d@@ ma@@ Sign@@ al@@ Str@@ ength@@ _@@ 1@@ _@@ 2@@ (@@ int t@@ d@@ ma@@ As@@ u@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Sign@@ al@@ Str@@ eng@@ th h@@ al@@ S@@ s = new android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ Sign@@ al@@ Str@@ ength@@ (); h@@ al@@ S@@ s.@@ l@@ te@@ .@@ sign@@ al@@ Str@@ eng@@ th = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ ; h@@ al@@ S@@ s.@@ l@@ te@@ .@@ rs@@ r@@ p = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ RS@@ R@@ P@@ ; h@@ al@@ S@@ s.@@ l@@ te@@ .@@ rs@@ r@@ q = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ RS@@ R@@ Q@@ ; h@@ al@@ S@@ s.@@ l@@ te@@ .@@ r@@ ss@@ n@@ r = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ RS@@ S@@ N@@ R@@ ; h@@ al@@ S@@ s.@@ g@@ s@@ m.@@ sign@@ al@@ Str@@ eng@@ th = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ ; h@@ al@@ S@@ s.@@ g@@ s@@ m.@@ b@@ it@@ Error@@ R@@ ate = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ B@@ I@@ T_@@ ER@@ RO@@ R@@ _@@ R@@ A@@ TE@@ ; h@@ al@@ S@@ s.@@ c@@ d@@ m@@ a.@@ d@@ b@@ m = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ D@@ B@@ M@@ ; h@@ al@@ S@@ s.@@ c@@ d@@ m@@ a.@@ ec@@ i@@ o = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ EC@@ IO@@ ; h@@ al@@ S@@ s.@@ e@@ v@@ do@@ .@@ d@@ b@@ m = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ D@@ B@@ M@@ ; h@@ al@@ S@@ s.@@ e@@ v@@ do@@ .@@ ec@@ i@@ o = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ EC@@ IO@@ ; h@@ al@@ S@@ s.@@ e@@ v@@ do@@ .@@ sign@@ al@@ No@@ e@@ R@@ ati@@ o = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Test.@@ SI@@ G@@ N@@ AL@@ _N@@ O@@ IC@@ E_@@ R@@ AT@@ IO@@ ; h@@ al@@ S@@ s.@@ t@@ d@@ m@@ a.@@ r@@ sc@@ p = t@@ d@@ sc@@ d@@ ma@@ As@@ u@@ ; return com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ con@@ ver@@ t@@ H@@ al@@ Sign@@ al@@ Str@@ ength@@ _@@ 1@@ _@@ 2@@ (@@ h@@ al@@ S@@ s); }
private static void array@@ copy@@ (@@ float@@ [] src@@ , int src@@ Po@@ s, float@@ [] d@@ st@@ , int d@@ st@@ Po@@ s, int length) { if (s@@ r@@ c == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ av@@ e == null@@ "); } if (d@@ s@@ t == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ Y@@ S@@ "); } if ((((@@ (s@@ rc@@ Po@@ s < 0) || (d@@ st@@ Po@@ s < 0@@ )) || (@@ l@@ eng@@ th < 0@@ )) || (s@@ rc@@ Po@@ s > ((@@ s@@ r@@ c.@@ length) - length@@ ))) || (d@@ st@@ Po@@ s > ((@@ d@@ s@@ t.@@ length) - length@@ ))) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ((((@@ ((((@@ (("@@ s@@ r@@ c.@@ length@@ =@@ " + (s@@ r@@ c.@@ length@@ )) + " src@@ Po@@ s@@ =@@ ") + src@@ Po@@ s) + d@@ s@@ t.@@ length@@ =@@ ") + (d@@ s@@ t.@@ length@@ )) + d@@ st@@ Po@@ s@@ = ") + d@@ st@@ Po@@ s) + length@@ = ") + length@@ )); } if (@@ l@@ eng@@ th <@@ = (java.lang.@@ System.@@ AR@@ R@@ A@@ Y@@ C@@ O@@ P@@ Y@@ _S@@ H@@ O@@ RT@@ _@@ FLOAT_@@ AR@@ R@@ A@@ Y_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ )) { if ((@@ (s@@ r@@ c == d@@ st@@ ) && (s@@ rc@@ Po@@ s < d@@ st@@ Po@@ s@@ )) && (d@@ st@@ Po@@ s < (s@@ rc@@ Po@@ s + length@@ ))) { for (@@ int i = l@@ eng@@ th - 1; i >@@ = 0; --@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { for (@@ int i = 0; i < length@@ ; ++@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { java.lang.System.@@ array@@ copy@@ Float@@ Un@@ check@@ ed@@ (s@@ rc@@ , src@@ Po@@ s, d@@ st@@ , d@@ st@@ Po@@ s, length); } }
private static void array@@ copy@@ (@@ long@@ [] src@@ , int src@@ Po@@ s, long@@ [] d@@ st@@ , int d@@ st@@ Po@@ s, int length) { if (s@@ r@@ c == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ src@@ "); } if (d@@ s@@ t == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ Y@@ S@@ "); } if ((((@@ (s@@ rc@@ Po@@ s < 0) || (d@@ st@@ Po@@ s < 0@@ )) || (@@ l@@ eng@@ th < 0@@ )) || (s@@ rc@@ Po@@ s > ((@@ s@@ r@@ c.@@ length) - length@@ ))) || (d@@ st@@ Po@@ s > ((@@ d@@ s@@ t.@@ length) - length@@ ))) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ((((@@ ((((@@ (("@@ s@@ r@@ c.@@ length@@ =@@ " + (s@@ r@@ c.@@ length@@ )) + " src@@ Po@@ s@@ =@@ ") + src@@ Po@@ s) + d@@ s@@ t.@@ length@@ =@@ ") + (d@@ s@@ t.@@ length@@ )) + d@@ st@@ Po@@ s@@ = ") + d@@ st@@ Po@@ s) + length@@ = ") + length@@ )); } if (@@ l@@ eng@@ th <@@ = (java.lang.@@ System.@@ AR@@ R@@ A@@ Y@@ C@@ O@@ P@@ Y@@ _S@@ H@@ O@@ RT@@ _@@ L@@ ON@@ G_@@ AR@@ R@@ A@@ Y_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ )) { if ((@@ (s@@ r@@ c == d@@ st@@ ) && (s@@ rc@@ Po@@ s < d@@ st@@ Po@@ s@@ )) && (d@@ st@@ Po@@ s < (s@@ rc@@ Po@@ s + length@@ ))) { for (@@ int i = l@@ eng@@ th - 1; i >@@ = 0; --@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { for (@@ int i = 0; i < length@@ ; ++@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } } else { java.lang.System.@@ array@@ copy@@ Long@@ Un@@ check@@ ed@@ (s@@ rc@@ , src@@ Po@@ s, d@@ st@@ , d@@ st@@ Po@@ s, length); } }
private static void array@@ copy@@ (@@ char@@ [] src@@ , int src@@ Po@@ s, char@@ [] d@@ st@@ , int d@@ st@@ Po@@ s, int length) { if (s@@ r@@ c == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ src@@ "); } if (d@@ s@@ t == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ Y@@ S@@ "); } if ((((@@ (s@@ rc@@ Po@@ s < 0) || (d@@ st@@ Po@@ s < 0@@ )) || (@@ l@@ eng@@ th < 0@@ )) || (s@@ rc@@ Po@@ s > ((@@ s@@ r@@ c.@@ length) - length@@ ))) || (d@@ st@@ Po@@ s > ((@@ d@@ s@@ t.@@ length) - length@@ ))) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ((((@@ ((((@@ (("@@ s@@ r@@ c.@@ length@@ =@@ " + (s@@ r@@ c.@@ length@@ )) + " src@@ Po@@ s@@ =@@ ") + src@@ Po@@ s) + d@@ s@@ t.@@ length@@ =@@ ") + (d@@ s@@ t.@@ length@@ )) + d@@ st@@ Po@@ s@@ = ") + d@@ st@@ Po@@ s) + length@@ =@@ ") + length@@ )); } if (@@ l@@ eng@@ th <@@ = (java.lang.@@ System.@@ AR@@ R@@ A@@ Y@@ C@@ O@@ P@@ Y@@ _S@@ H@@ O@@ RT@@ _C@@ H@@ AR@@ _@@ AR@@ R@@ A@@ Y_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ )) { if ((@@ (s@@ r@@ c == d@@ st@@ ) && (s@@ rc@@ Po@@ s < d@@ st@@ Po@@ s@@ )) && (d@@ st@@ Po@@ s < (s@@ rc@@ Po@@ s + length@@ ))) { for (@@ int i = l@@ eng@@ th - 1; i >@@ = 0; --@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { for (@@ int i = 0; i < length@@ ; ++@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } } else { java.lang.System.@@ array@@ copy@@ Char@@ Un@@ check@@ ed@@ (s@@ rc@@ , src@@ Po@@ s, d@@ st@@ , d@@ st@@ Po@@ s, length); } }
private static void array@@ copy@@ (@@ byte@@ [] src@@ , int src@@ Po@@ s, byte@@ [] d@@ st@@ , int d@@ st@@ Po@@ s, int length) { if (s@@ r@@ c == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ src@@ "); } if (d@@ s@@ t == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ ho@@ ul@@ d == null@@ "); } if ((((@@ (s@@ rc@@ Po@@ s < 0) || (d@@ st@@ Po@@ s < 0@@ )) || (@@ l@@ eng@@ th < 0@@ )) || (s@@ rc@@ Po@@ s > ((@@ s@@ r@@ c.@@ length) - length@@ ))) || (d@@ st@@ Po@@ s > ((@@ d@@ s@@ t.@@ length) - length@@ ))) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ((((@@ ((((@@ (("@@ s@@ r@@ c.@@ length@@ =@@ " + (s@@ r@@ c.@@ length@@ )) + " src@@ Po@@ s@@ =@@ ") + src@@ Po@@ s) + d@@ s@@ t.@@ length@@ =@@ ") + (d@@ s@@ t.@@ length@@ )) + d@@ st@@ Po@@ s@@ = ") + d@@ st@@ Po@@ s) + length@@ = ") + length@@ )); } if (@@ l@@ eng@@ th <@@ = (java.lang.@@ System.@@ AR@@ R@@ A@@ Y@@ C@@ O@@ P@@ Y@@ _S@@ H@@ O@@ RT@@ _@@ B@@ Y@@ T@@ E_@@ AR@@ R@@ A@@ Y_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ )) { if ((@@ (s@@ r@@ c == d@@ st@@ ) && (s@@ rc@@ Po@@ s < d@@ st@@ Po@@ s@@ )) && (d@@ st@@ Po@@ s < (s@@ rc@@ Po@@ s + length@@ ))) { for (@@ int i = l@@ eng@@ th - 1; i >@@ = 0; --@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { for (@@ int i = 0; i < length@@ ; ++@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { java.lang.System.@@ array@@ copy@@ Byte@@ Un@@ check@@ ed@@ (s@@ rc@@ , src@@ Po@@ s, d@@ st@@ , d@@ st@@ Po@@ s, length); } }
private static void array@@ copy@@ (@@ do@@ u@@ ble@@ [] src@@ , int src@@ Po@@ s, do@@ u@@ ble@@ [] d@@ st@@ , int d@@ st@@ Po@@ s, int length) { if (s@@ r@@ c == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ array@@ copy@@ : == null@@ "); } if (d@@ s@@ t == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ ho@@ ul@@ d == null@@ "); } if ((((@@ (s@@ rc@@ Po@@ s < 0) || (d@@ st@@ Po@@ s < 0@@ )) || (@@ l@@ eng@@ th < 0@@ )) || (s@@ rc@@ Po@@ s > ((@@ s@@ r@@ c.@@ length) - length@@ ))) || (d@@ st@@ Po@@ s > ((@@ d@@ s@@ t.@@ length) - length@@ ))) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ((((@@ ((((@@ (("@@ s@@ r@@ c.@@ length@@ =@@ " + (s@@ r@@ c.@@ length@@ )) + src@@ Po@@ s@@ = ") + src@@ Po@@ s) + d@@ s@@ t.@@ length@@ =@@ ") + (d@@ s@@ t.@@ length@@ )) + d@@ st@@ Po@@ s@@ = ") + d@@ st@@ Po@@ s) + length@@ =@@ =@@ ") + length@@ )); } if (@@ l@@ eng@@ th <@@ = (java.lang.@@ System.@@ AR@@ R@@ A@@ Y@@ C@@ O@@ P@@ Y@@ _S@@ H@@ O@@ RT@@ _@@ D@@ O@@ U@@ B@@ L@@ E_@@ AR@@ R@@ A@@ Y_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ )) { if ((@@ (s@@ r@@ c == d@@ st@@ ) && (s@@ rc@@ Po@@ s < d@@ st@@ Po@@ s@@ )) && (d@@ st@@ Po@@ s < (s@@ rc@@ Po@@ s + length@@ ))) { for (@@ int i = l@@ eng@@ th - 1; i >@@ = 0; --@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { for (@@ int i = 0; i < length@@ ; ++@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } } else { java.lang.System.@@ array@@ copy@@ D@@ ouble@@ Un@@ check@@ ed@@ (s@@ rc@@ , src@@ Po@@ s, d@@ st@@ , d@@ st@@ Po@@ s, length); } }
private static void array@@ copy@@ (@@ boolean@@ [] src@@ , int src@@ Po@@ s, boolean@@ [] d@@ st@@ , int d@@ st@@ Po@@ s, int length) { if (s@@ r@@ c == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ src@@ : == null@@ "); } if (d@@ s@@ t == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ Y@@ S@@ "); } if ((((@@ (s@@ rc@@ Po@@ s < 0) || (d@@ st@@ Po@@ s < 0@@ )) || (@@ l@@ eng@@ th < 0@@ )) || (s@@ rc@@ Po@@ s > ((@@ s@@ r@@ c.@@ length) - length@@ ))) || (d@@ st@@ Po@@ s > ((@@ d@@ s@@ t.@@ length) - length@@ ))) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ((((@@ ((((@@ (("@@ s@@ r@@ c.@@ length@@ =@@ " + (s@@ r@@ c.@@ length@@ )) + " src@@ Po@@ s@@ =@@ ") + src@@ Po@@ s) + d@@ s@@ t.@@ length@@ =@@ ") + (d@@ s@@ t.@@ length@@ )) + d@@ st@@ Po@@ s@@ = ") + d@@ st@@ Po@@ s) + length@@ = ") + length@@ )); } if (@@ l@@ eng@@ th <@@ = (java.lang.@@ System.@@ AR@@ R@@ A@@ Y@@ C@@ O@@ P@@ Y@@ _S@@ H@@ O@@ RT@@ _@@ B@@ O@@ O@@ LE@@ AN@@ _@@ AR@@ R@@ A@@ Y_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ )) { if ((@@ (s@@ r@@ c == d@@ st@@ ) && (s@@ rc@@ Po@@ s < d@@ st@@ Po@@ s@@ )) && (d@@ st@@ Po@@ s < (s@@ rc@@ Po@@ s + length@@ ))) { for (@@ int i = l@@ eng@@ th - 1; i >@@ = 0; --@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { for (@@ int i = 0; i < length@@ ; ++@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { java.lang.System.@@ array@@ copy@@ Boolean@@ Un@@ check@@ ed@@ (s@@ rc@@ , src@@ Po@@ s, d@@ st@@ , d@@ st@@ Po@@ s, length); } }
private static void array@@ copy@@ (@@ short@@ [] src@@ , int src@@ Po@@ s, short@@ [] d@@ st@@ , int d@@ st@@ Po@@ s, int length) { if (s@@ r@@ c == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ src@@ "); } if (d@@ s@@ t == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ ho@@ ul@@ d == null@@ "); } if ((((@@ (s@@ rc@@ Po@@ s < 0) || (d@@ st@@ Po@@ s < 0@@ )) || (@@ l@@ eng@@ th < 0@@ )) || (s@@ rc@@ Po@@ s > ((@@ s@@ r@@ c.@@ length) - length@@ ))) || (d@@ st@@ Po@@ s > ((@@ d@@ s@@ t.@@ length) - length@@ ))) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ((((@@ ((((@@ (("@@ s@@ r@@ c.@@ length@@ =@@ " + (s@@ r@@ c.@@ length@@ )) + " src@@ Po@@ s@@ =@@ ") + src@@ Po@@ s) + d@@ s@@ t.@@ length@@ =@@ ") + (d@@ s@@ t.@@ length@@ )) + d@@ st@@ Po@@ s@@ = ") + d@@ st@@ Po@@ s) + length@@ =@@ ") + length@@ )); } if (@@ l@@ eng@@ th <@@ = (java.lang.@@ System.@@ AR@@ R@@ A@@ Y@@ C@@ O@@ P@@ Y@@ _S@@ H@@ O@@ RT@@ _@@ AR@@ R@@ A@@ Y_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ )) { if ((@@ (s@@ r@@ c == d@@ st@@ ) && (s@@ rc@@ Po@@ s < d@@ st@@ Po@@ s@@ )) && (d@@ st@@ Po@@ s < (s@@ rc@@ Po@@ s + length@@ ))) { for (@@ int i = l@@ eng@@ th - 1; i >@@ = 0; --@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { for (@@ int i = 0; i < length@@ ; ++@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } } else { java.lang.System.@@ array@@ copy@@ Short@@ Un@@ check@@ ed@@ (s@@ rc@@ , src@@ Po@@ s, d@@ st@@ , d@@ st@@ Po@@ s, length); } }
private static void array@@ copy@@ (@@ int@@ [] src@@ , int src@@ Po@@ s, int@@ [] d@@ st@@ , int d@@ st@@ Po@@ s, int length) { if (s@@ r@@ c == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ src@@ "); } if (d@@ s@@ t == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ Y@@ S@@ "); } if ((((@@ (s@@ rc@@ Po@@ s < 0) || (d@@ st@@ Po@@ s < 0@@ )) || (@@ l@@ eng@@ th < 0@@ )) || (s@@ rc@@ Po@@ s > ((@@ s@@ r@@ c.@@ length) - length@@ ))) || (d@@ st@@ Po@@ s > ((@@ d@@ s@@ t.@@ length) - length@@ ))) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ((((@@ ((((@@ (("@@ s@@ r@@ c.@@ length@@ =@@ " + (s@@ r@@ c.@@ length@@ )) + " src@@ Po@@ s@@ =@@ ") + src@@ Po@@ s) + d@@ s@@ t.@@ length@@ =@@ ") + (d@@ s@@ t.@@ length@@ )) + d@@ st@@ Po@@ s@@ = ") + d@@ st@@ Po@@ s) + length@@ =@@ ") + length@@ )); } if (@@ l@@ eng@@ th <@@ = (java.lang.@@ System.@@ AR@@ R@@ A@@ Y@@ C@@ O@@ P@@ Y@@ _S@@ H@@ O@@ RT@@ _@@ IN@@ T_@@ AR@@ R@@ A@@ Y_@@ TH@@ RE@@ S@@ H@@ O@@ L@@ D@@ )) { if ((@@ (s@@ r@@ c == d@@ st@@ ) && (s@@ rc@@ Po@@ s < d@@ st@@ Po@@ s@@ )) && (d@@ st@@ Po@@ s < (s@@ rc@@ Po@@ s + length@@ ))) { for (@@ int i = l@@ eng@@ th - 1; i >@@ = 0; --@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { for (@@ int i = 0; i < length@@ ; ++@@ i@@ ) { d@@ st@@ [@@ (d@@ st@@ Po@@ s + i@@ )@@ ] = src@@ [@@ (s@@ rc@@ Po@@ s + i@@ )@@ ]; } } else { java.lang.System.@@ array@@ copy@@ Int@@ Un@@ check@@ ed@@ (s@@ rc@@ , src@@ Po@@ s, d@@ st@@ , d@@ st@@ Po@@ s, length); } }
private int get@@ Dex@@ Flag@@ s(@@ android.content.@@ p@@ m.@@ Application@@ Info in@@ fo@@ , java.lang.String comp@@ il@@ er@@ Filter@@ , com.android.server.@@ p@@ m.@@ dex.@@ Dex@@ opt@@ Option@@ s option@@ s) { int flag@@ s = in@@ f@@ o.@@ flag@@ s; boolean debu@@ gg@@ able = (@@ flag@@ s & (android.@@ content.@@ p@@ m.@@ Application@@ Info.@@ F@@ LA@@ G_@@ DE@@ B@@ U@@ G@@ G@@ G@@ G@@ AB@@ LE@@ )) != 0; boolean is@@ Pro@@ file@@ G@@ u@@ id@@ ed@@ Fil@@ ter = d@@ alvi@@ k.@@ system.@@ Dex@@ File@@ .is@@ Pro@@ file@@ G@@ u@@ id@@ ed@@ Comp@@ il@@ er@@ Filter@@ (@@ comp@@ il@@ er@@ Filter@@ ); boolean is@@ P@@ u@@ bli@@ c = (!@@ (in@@ f@@ o.@@ is@@ For@@ w@@ ard@@ Lock@@ ed@@ ())) && ((@@ !@@ is@@ Pro@@ file@@ G@@ u@@ id@@ ed@@ Filter@@ ) || (@@ option@@ s.@@ is@@ Dex@@ opt@@ In@@ stall@@ With@@ Dex@@ M@@ et@@ ad@@ ata@@ ())); int pro@@ file@@ F@@ la@@ g = (is@@ Pro@@ file@@ G@@ u@@ id@@ ed@@ Filter@@ ) ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ P@@ RO@@ F@@ IL@@ E_@@ G@@ U@@ ID@@ E@@ D : 0; int h@@ id@@ d@@ en@@ Api@@ F@@ la@@ g = (in@@ f@@ o.@@ is@@ Al@@ low@@ ed@@ To@@ U@@ se@@ H@@ id@@ d@@ en@@ Api@@ ()) ? : com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ EN@@ AB@@ L@@ E_@@ H@@ ID@@ D@@ EN@@ _@@ AP@@ I@@ _C@@ H@@ EC@@ K@@ S@@ ; int comp@@ il@@ ation@@ Re@@ as@@ on = option@@ s.get@@ Comp@@ il@@ ation@@ Re@@ as@@ on@@ (); final boolean g@@ ener@@ ate@@ Comp@@ act@@ De@@ x = ((@@ comp@@ il@@ ation@@ Re@@ as@@ on != (@@ Package@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ FI@@ RS@@ T_@@ B@@ O@@ T@@ )) && (@@ comp@@ il@@ ation@@ Re@@ as@@ on != (@@ Package@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ B@@ O@@ O@@ T@@ ))) && (@@ comp@@ il@@ ation@@ Re@@ as@@ on != (@@ Package@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ IN@@ STA@@ L@@ L@@ )); int dex@@ Flag@@ s = ((((@@ (is@@ P@@ u@@ bli@@ c ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ P@@ U@@ B@@ L@@ I@@ C : 0) | (@@ debu@@ gg@@ able ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ DE@@ B@@ U@@ G@@ G@@ G@@ G@@ G@@ AB@@ L@@ E : 0@@ )) | pro@@ file@@ Flag@@ ) | (@@ option@@ s.@@ is@@ B@@ oot@@ Comp@@ let@@ e@@ () ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ B@@ O@@ O@@ T@@ C@@ O@@ M@@ P@@ LE@@ T@@ E : 0@@ )) | (@@ option@@ s.@@ is@@ Dex@@ opt@@ Id@@ le@@ B@@ ack@@ g@@ round@@ J@@ ob@@ () ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ ID@@ L@@ E_@@ B@@ AC@@ K@@ G@@ RO@@ UN@@ D_@@ J@@ O@@ B : 0@@ )) | (@@ g@@ ener@@ ate@@ Comp@@ act@@ De@@ x ? com.android.server.@@ p@@ m.@@ In@@ stall@@ er.@@ DE@@ X@@ O@@ P@@ T_@@ G@@ EN@@ ER@@ AT@@ E_@@ C@@ O@@ M@@ P@@ AC@@ T_@@ DE@@ X : 0@@ )) | h@@ id@@ d@@ en@@ Api@@ Flag@@ s(@@ dex@@ Flag@@ s); }
public static boolean update@@ B@@ and@@ wid@@ th@@ s@@ (@@ int@@ [] b@@ and@@ wid@@ th@@ s, android.@@ telephony.@@ Service@@ State service@@ State@@ ) { if (b@@ and@@ wid@@ th@@ s == null@@ ) { return false@@ ; } int ss@@ A@@ gg@@ reg@@ ate@@ B@@ and@@ wid@@ th = 0; int@@ [] ss@@ B@@ and@@ wid@@ th@@ s = service@@ Stat@@ e.get@@ C@@ ell@@ B@@ and@@ wid@@ th@@ s(); if (s@@ s@@ B@@ and@@ wid@@ th@@ s != null@@ ) { for (@@ int b@@ w : ss@@ B@@ and@@ wid@@ th@@ s) { ss@@ A@@ gg@@ reg@@ ate@@ B@@ and@@ wid@@ th +@@ = b@@ w@@ ; } } int new@@ A@@ gg@@ reg@@ ate@@ B@@ and@@ wid@@ th = 0; for (@@ int b@@ w : b@@ and@@ wid@@ th@@ s) { new@@ A@@ gg@@ reg@@ ate@@ B@@ and@@ wid@@ th +@@ = b@@ w@@ ; } if (@@ new@@ A@@ gg@@ reg@@ ate@@ B@@ and@@ wid@@ th > ss@@ A@@ gg@@ reg@@ ate@@ B@@ and@@ wid@@ th@@ ) { service@@ State.@@ set@@ C@@ ell@@ B@@ and@@ wid@@ th@@ s(@@ b@@ and@@ wid@@ th@@ s); return true@@ ; } return false@@ ; }
public void r@@ atch@@ et@@ R@@ il@@ V@@ o@@ i@@ ce@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ ()); int new@@ Data@@ R@@ il@@ y = r@@ atch@@ et@@ R@@ il@@ V@@ o@@ i@@ ce@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ (@@ new@@ SS@@ .get@@ R@@ il@@ V@@ o@@ i@@ ce@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ ()); int new@@ Data@@ R@@ at = r@@ atch@@ et@@ R@@ at@@ (@@ old@@ SS@@ .get@@ R@@ il@@ Data@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ (), new@@ SS@@ .get@@ R@@ il@@ Data@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ ()); boolean new@@ U@@ sing@@ C@@ A = (@@ old@@ SS@@ .is@@ U@@ sing@@ C@@ ar@@ ri@@ er@@ A@@ gg@@ reg@@ ation@@ ()) || (@@ new@@ SS@@ .is@@ U@@ sing@@ C@@ ar@@ ri@@ er@@ A@@ gg@@ reg@@ ation@@ ()); if (is@@ S@@ ame@@ R@@ at@@ F@@ am@@ il@@ y@@ (@@ old@@ SS@@ , new@@ SS@@ )) { new@@ SS@@ .set@@ R@@ il@@ V@@ o@@ i@@ ce@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ (@@ new@@ SS@@ .get@@ R@@ il@@ V@@ o@@ i@@ ce@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ ()); boolean new@@ U@@ sing@@ C@@ A = (@@ old@@ SS@@ .is@@ U@@ sing@@ C@@ ar@@ ri@@ er@@ A@@ gg@@ reg@@ ation@@ ()) || (@@ new@@ SS@@ .is@@ U@@ sing@@ C@@ ar@@ ri@@ er@@ A@@ gg@@ reg@@ ation@@ ()); if (is@@ S@@ ame@@ R@@ at@@ F@@ am@@ il@@ y@@ (@@ old@@ SS@@ , new@@ SS@@ )) { new@@ SS@@ .set@@ R@@ il@@ V@@ o@@ i@@ ce@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ (@@ new@@ V@@ o@@ i@@ ce@@ R@@ at@@ ); new@@ SS@@ .set@@ R@@ il@@ Data@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ (@@ new@@ Data@@ R@@ at@@ ); new@@ SS@@ .set@@ I@@ s@@ U@@ sing@@ C@@ ar@@ ri@@ er@@ A@@ gg@@ reg@@ ation@@ (@@ new@@ U@@ sing@@ C@@ A@@ ); } }
@org.junit.Test @com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ annotations.@@ Test@@ Info@@ (@@ id = "@@ 1@@ 4@@ 5@@ 7@@ 8@@ 8@@ 8@@ 2@@ 1@@ ") public void test@@ V@@ ide@@ o@@ Cap@@ t@@ ure@@ () throw@@ s java.lang.Exception { android.@@ app.@@ In@@ strument@@ ation in@@ strument@@ ation = test@@ F@@ ramework@@ .get@@ In@@ strument@@ ation@@ (); if ((@@ test@@ F@@ ramework@@ .get@@ Api@@ ()) >@@ = 24@@ ) { boolean vid@@ e@@ o@@ Test@@ Su@@ c@@ ces@@ s = u@@ se@@ C@@ am@@ er@@ a@@ (in@@ strument@@ ation@@ , "@@ V@@ ide@@ o@@ "); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ ("@@ N@@ e@@ w vid@@ e@@ o w@@ a@@ s not delet@@ ed f@@ ro@@ m the g@@ all@@ er@@ y@@ ", vid@@ e@@ o@@ Test@@ Su@@ c@@ cess@@ ); } }
@org.junit.Test @com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ annotations.@@ Test@@ Info@@ (@@ id = "@@ 1@@ 4@@ 5@@ 7@@ 8@@ 8@@ 8@@ 8@@ 2@@ 1@@ ") public void test@@ P@@ ho@@ to@@ Cap@@ t@@ ure@@ () throw@@ s java.lang.Exception { android.@@ app.@@ In@@ strument@@ ation in@@ strument@@ ation = test@@ F@@ ramework@@ .get@@ In@@ strument@@ ation@@ (); final android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ De@@ vice de@@ vice = android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Device@@ .get@@ Instance@@ (in@@ strument@@ ation@@ ); if ((@@ test@@ F@@ ramework@@ .get@@ Api@@ ()) >@@ = 24@@ ) { boolean p@@ ho@@ to@@ Test@@ Su@@ c@@ ces@@ s = u@@ se@@ C@@ am@@ er@@ a@@ (in@@ strument@@ ation@@ , "@@ C@@ am@@ er@@ a@@ "); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ ("@@ In@@ strument@@ ation p@@ ho@@ to w@@ a@@ s not delet@@ ed@@ ", f@@ ro@@ m the g@@ all@@ er@@ y p@@ ho@@ to@@ Test@@ Su@@ c@@ ces@@ s); } }
private void la@@ unch@@ Input@@ Activity@@ (@@ int s@@ lo@@ t@@ Id@@ ) { android.content.@@ Int@@ ent new@@ Int@@ ent = new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _V@@ I@@ E@@ W@@ ); java.lang.String target@@ Ac@@ tiv@@ it@@ y = com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ T@@ K@@ _@@ IN@@ P@@ U@@ T_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ AM@@ E@@ ; java.lang.String ur@@ i@@ Str@@ ing = (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ T@@ K@@ _@@ IN@@ P@@ U@@ T_@@ UR@@ I@@ ) + (java.lang.@@ System.@@ current@@ Time@@ Milli@@ s()); android.net.@@ Ur@@ i ur@@ i@@ Data = android.net.@@ U@@ ri@@ .@@ parse@@ (@@ ur@@ i@@ String@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ LO@@ G_@@ TAG, ("@@ S@@ lo@@ t@@ Id@@ : " + s@@ lo@@ t@@ Id@@ )); new@@ Int@@ ent.@@ set@@ Flag@@ s@@ ((@@ (android.@@ content.@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ ) | (get@@ Flag@@ Activity@@ No@@ User@@ Action@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ In@@ iti@@ ated@@ By@@ User@@ Action@@ .@@ un@@ k@@ no@@ wn@@ , s@@ lo@@ t@@ Id@@ )))); new@@ Int@@ ent.@@ set@@ Class@@ Name@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ P@@ AC@@ K@@ A@@ G@@ E_@@ N@@ AM@@ E, target@@ Activity@@ ); new@@ Int@@ ent.@@ put@@ Extra@@ ("@@ INPUT@@ ", m@@ St@@ k@@ Context@@ [@@ s@@ lo@@ t@@ Id@@ ]@@ .@@ m@@ Current@@ C@@ m@@ d.@@ g@@ e@@ Input@@ ()); new@@ Int@@ ent.@@ put@@ Extra@@ (com.android.@@ st@@ k.@@ St@@ k@@ App@@ Service.@@ S@@ LO@@ T_@@ ID@@ , s@@ lo@@ t@@ Id@@ ); new@@ Int@@ ent.@@ set@@ Data@@ (@@ ur@@ i@@ Data@@ ); start@@ Activity@@ (@@ new@@ Intent@@ ); }
@java.lang.Override protected void on@@ R@@ est@@ ore@@ Instance@@ State@@ (android.os.@@ Bund@@ le s@@ av@@ ed@@ Instance@@ State@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ LO@@ G_@@ TAG, ("@@ on@@ R@@ est@@ ore@@ Instance@@ State@@ : " + (m@@ S@@ lo@@ t@@ Id@@ ))); m@@ State = s@@ av@@ ed@@ Instance@@ Stat@@ e.get@@ Int@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ STATE_@@ KE@@ Y@@ ); m@@ St@@ k@@ M@@ en@@ u = s@@ av@@ ed@@ Instance@@ Stat@@ e.get@@ Par@@ cel@@ able@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ M@@ EN@@ U@@ _@@ KE@@ Y@@ ); m@@ Ac@@ ce@@ p@@ t@@ User@@ s@@ In@@ put = s@@ av@@ ed@@ Instance@@ Stat@@ e.get@@ Boolean@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ AC@@ CE@@ P@@ T_@@ US@@ E@@ RS@@ _@@ IN@@ P@@ U@@ T_@@ KE@@ Y@@ ); m@@ I@@ s@@ Response@@ S@@ ent = s@@ av@@ ed@@ Instance@@ Stat@@ e.get@@ Boolean@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ RE@@ S@@ P@@ ON@@ S@@ E_@@ S@@ ENT_@@ KE@@ Y@@ ); }
@java.lang.Override public void on@@ Create@@ (android.os.@@ Bund@@ le s@@ av@@ ed@@ Instance@@ State@@ ) { super@@ .@@ on@@ Create@@ (s@@ av@@ ed@@ Instance@@ State@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ LO@@ G_@@ TAG, "@@ on@@ Create@@ "); android.@@ app.@@ Action@@ B@@ ar action@@ B@@ ar = get@@ Action@@ B@@ ar@@ (); action@@ B@@ ar@@ .set@@ C@@ ust@@ om@@ View@@ (@@ R.@@ layout.@@ st@@ k@@ _@@ ti@@ t@@ le@@ ); action@@ B@@ ar@@ .set@@ Display@@ S@@ ho@@ w@@ C@@ ust@@ om@@ Enabled@@ (@@ true@@ ); set@@ Content@@ View@@ (@@ R.@@ layout.@@ st@@ k@@ _@@ m@@ en@@ u@@ _@@ list@@ ); m@@ In@@ stan@@ ce = this@@ ; m@@ T@@ it@@ le@@ Text@@ Vi@@ e@@ w = ((@@ android.@@ widget@@ .@@ Text@@ View@@ ) (@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ ti@@ t@@ le@@ _@@ text@@ ))); m@@ T@@ it@@ le@@ I@@ con@@ Vi@@ e@@ w = ((@@ android.@@ widget@@ .@@ Image@@ View@@ ) (@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ ti@@ t@@ le@@ _@@ i@@ con@@ ))); m@@ Pro@@ g@@ ress@@ Vi@@ e@@ w = ((@@ android.@@ widget@@ .@@ Pro@@ g@@ ress@@ B@@ ar@@ ) (@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ pro@@ g@@ ress@@ _@@ b@@ ar@@ ))); m@@ Context = get@@ B@@ ase@@ Context@@ (); m@@ Ac@@ ce@@ p@@ t@@ User@@ s@@ In@@ put = true@@ ; get@@ List@@ View@@ ().@@ set@@ On@@ Create@@ Context@@ M@@ en@@ u@@ Listener@@ (@@ this@@ ); if ((@@ app@@ Service@@ ) == null@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ LO@@ G_@@ TAG, "@@ on@@ Create@@ : - app@@ Ser@@ vice is null@@ "); fin@@ is@@ h@@ (); return@@ ; } init@@ From@@ Intent@@ (get@@ Intent@@ ()); }
@java.lang.Override public void on@@ D@@ est@@ ro@@ y@@ () { get@@ List@@ View@@ ().@@ set@@ On@@ Create@@ Context@@ M@@ en@@ u@@ Listener@@ (@@ null@@ ); super@@ .@@ on@@ D@@ est@@ ro@@ y(); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ LO@@ G_@@ TAG, (("@@ on@@ D@@ est@@ ro@@ y@@ " + "@@ ,@@ ") + (m@@ State@@ ))); if ((@@ app@@ Service@@ ) == null@@ ) { return@@ ; } if ((@@ ((m@@ State@@ ) == (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ STATE_@@ S@@ EC@@ ON@@ D@@ AR@@ Y@@ )) && (!(m@@ I@@ s@@ Response@@ S@@ ent@@ ))) && (!(@@ app@@ Service.@@ is@@ M@@ en@@ u@@ P@@ end@@ ing@@ (m@@ S@@ lo@@ t@@ Id@@ )@@ ))) { if (!(@@ is@@ Chang@@ ing@@ Configuration@@ s@@ ())) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ LO@@ G_@@ TAG, "@@ S@@ en@@ d En@@ d S@@ es@@ sion send@@ Response@@ (@@ St@@ k@@ App@@ Service.@@ RE@@ S_@@ ID@@ _@@ END@@ _S@@ E@@ SS@@ ION@@ ); } } if ((m@@ State@@ ) == (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ STA@@ TE@@ _M@@ A@@ IN@@ )) { if ((@@ app@@ Service@@ ) != null@@ ) { app@@ Service@@ .get@@ St@@ k@@ Context@@ (m@@ S@@ lo@@ t@@ Id@@ ).set@@ M@@ ain@@ Activity@@ Instance@@ (@@ null@@ ); } else { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ M@@ en@@ u@@ Ac@@ tivity.@@ LO@@ G_@@ TAG, "@@ S@@ k@@ ing null app@@ Service@@ . "); } } }
private void update@@ B@@ ound@@ C@@ ar@@ ri@@ er@@ Ser@@ vices@@ (@@ int sub@@ Id@@ ) { int s@@ lo@@ t@@ Id = m@@ Sub@@ s@@ cription@@ Manager@@ Prox@@ y@@ .get@@ S@@ lo@@ t@@ Index@@ (s@@ u@@ b@@ Id@@ ); java.lang.String new@@ Package@@ Name = "@@ com.google.@@ android.@@ im@@ s@@ "@@ ; if ((@@ s@@ lo@@ t@@ Id != (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _@@ SI@@ M@@ _S@@ LO@@ T_@@ IN@@ DE@@ X@@ )) && (s@@ lo@@ t@@ Id < (m@@ N@@ um@@ S@@ lo@@ ts@@ ))) { java.lang.String old@@ Package@@ Name = mC@@ ar@@ ri@@ er@@ Ser@@ vices@@ [@@ s@@ lo@@ t@@ Id@@ ]; mC@@ ar@@ ri@@ er@@ Ser@@ vices@@ [@@ s@@ lo@@ t@@ Id@@ ] = new@@ Package@@ Name@@ ; if (!@@ (android.@@ text.@@ Text@@ Utils.@@ equal@@ s@@ (@@ new@@ Package@@ Name, old@@ Package@@ Name@@ ))) { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, Con@@ fi@@ g up@@ dat@@ ed@@ , b@@ ind@@ ing new Im@@ s@@ Ser@@ vice un@@ b@@ ind@@ Im@@ s@@ Service@@ (get@@ Im@@ s@@ Service@@ Info@@ From@@ Cach@@ e(@@ old@@ Package@@ Name@@ )); b@@ ind@@ New@@ Im@@ s@@ Service@@ (get@@ Im@@ s@@ Service@@ Info@@ From@@ Cach@@ e@@ (@@ new@@ Package@@ Name@@ )); update@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ (get@@ Im@@ s@@ Service@@ Info@@ From@@ Cach@@ e@@ (m@@ Device@@ Service@@ )); } } }
@java.lang.Override public void on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ (java.lang.String name@@ ) { if (((@@ check@@ s@@ List@@ ) != null@@ ) && (@@ check@@ s@@ List.@@ contain@@ s(@@ libcore.@@ d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ Test.@@ Record@@ ing@@ Po@@ lic@@ y.@@ Check@@ .@@ C@@ US@@ TO@@ M@@ _S@@ LO@@ W@@ _C@@ AL@@ L@@ ))) { add@@ Vi@@ ol@@ ation@@ (("@@ on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ /@@ " + name@@ )); } }
public void test@@ System@@ G@@ c@@ () throw@@ s java.lang.Exception { re@@ cord@@ er.@@ clear@@ (); java.lang.System.@@ g@@ c@@ (); re@@ cord@@ er.@@ exp@@ ect@@ And@@ C@@ le@@ ar@@ ("@@ on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ /@@ System.@@ g@@ c@@ ()@@ "); }
public static void g@@ c@@ () { if (android.@@ support.@@ v@@ 8@@ .@@ renderscript.@@ Render@@ S@@ crip@@ t.@@ sho@@ ul@@ d@@ Run@@ G@@ C@@ ) { java.lang.System.@@ j@@ ust@@ R@@ an@@ F@@ in@@ aliz@@ ation = false@@ ; } else { java.lang.System.@@ run@@ G@@ C = true@@ ; } } if (s@@ ho@@ ul@@ d@@ Run@@ G@@ C@@ ) { java.lang.@@ Run@@ tim@@ e.get@@ Runtime@@ ().@@ g@@ c@@ (); }
public void test@@ _@@ class@@ Load@@ er@@ _@@ excepti@@ on@@ D@@ ur@@ ing@@ Load@@ ing@@ () throw@@ s java.lang.Exception { final java.io.File ja@@ r = libcore.@@ d@@ alvi@@ k.@@ system.@@ Path@@ Class@@ Load@@ er@@ Test.@@ ex@@ tr@@ act@@ Resource@@ Jar@@ ("@@ load@@ ing@@ -@@ test@@ "); final d@@ alvi@@ k.@@ system.@@ Path@@ Class@@ Load@@ er p@@ c@@ l = new d@@ alvi@@ k.@@ system.@@ Path@@ Class@@ Load@@ er(@@ jar@@ .get@@ Absolute@@ Path@@ (), java.lang.Ob@@ ject@@ .@@ class@@ .get@@ Class@@ Load@@ er@@ ()); d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .@@ Po@@ lic@@ y po@@ lic@@ y = d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .get@@ Thread@@ Po@@ lic@@ y(); d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .set@@ Thread@@ Po@@ lic@@ y@@ (@@ new d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .@@ Po@@ lic@@ y@@ () { @java.lang.Override public void on@@ Wri@@ te@@ To@@ Dis@@ k@@ () { throw new java.lang.@@ RuntimeException@@ ("@@ on@@ Wri@@ te@@ To@@ Dis@@ k@@ "); } @java.lang.Override public void on@@ Read@@ From@@ Dis@@ k@@ () { throw new java.lang.@@ RuntimeException@@ ("@@ on@@ Read@@ From@@ Dis@@ k@@ "); } @java.lang.Override public void on@@ Network@@ () { throw new java.lang.@@ RuntimeException@@ ("@@ on@@ Network@@ "); } @java.lang.Override public void on@@ Un@@ buff@@ er@@ ed@@ IO@@ () { throw new java.lang.@@ RuntimeException@@ ("@@ on@@ Un@@ buff@@ er@@ ed@@ IO@@ "); } @java.lang.Override public void on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ (java.lang.String name@@ ) { throw new java.lang.@@ RuntimeException@@ (("@@ on@@ Un@@ buff@@ er " + name@@ )); } @java.lang.Override public int get@@ Po@@ lic@@ y@@ M@@ ask@@ () { return 0; } }); try { p@@ c@@ l.get@@ Resource@@ ("@@ test@@ /@@ Resource@@ 1.@@ t@@ xt@@ "); fail@@ (); } catch (java.lang.@@ Runtime@@ Exception expected) { } } final@@ l@@ y { d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .set@@ Thread@@ Po@@ lic@@ y@@ (@@ po@@ lic@@ y@@ ); } assert@@ NotNull@@ (p@@ c@@ l.get@@ Resource@@ ("@@ test@@ /@@ Resource@@ 1.@@ t@@ xt@@ ")); }
@java.lang.Override public void on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ (java.lang.String name@@ ) { throw new java.lang.@@ RuntimeException(("@@ on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ : " + name@@ )); }
public void test@@ Hash@@ Code@@ And@@ Equal@@ s@@ Do@@ es@@ Not@@ P@@ er@@ for@@ m@@ Network@@ I@@ o@@ () throw@@ s java.lang.Exception { final d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .@@ Po@@ lic@@ y old@@ Po@@ lic@@ y = d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .get@@ Thread@@ Po@@ lic@@ y(); d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .set@@ Thread@@ Po@@ lic@@ y@@ (@@ new d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .@@ Po@@ lic@@ y@@ () { @java.lang.Override public void on@@ Wri@@ te@@ To@@ Dis@@ k@@ () { fail@@ ("@@ Block@@ guard@@ .@@ Po@@ lic@@ y.@@ on@@ Wri@@ te@@ To@@ Dis@@ k@@ "); } @java.lang.Override public void on@@ Read@@ From@@ Dis@@ k@@ () { fail@@ ("@@ Block@@ .@@ Po@@ lic@@ y.@@ on@@ Read@@ From@@ Dis@@ k@@ "); } @java.lang.Override public void on@@ Network@@ () { fail@@ ("@@ Block@@ guard@@ .@@ Po@@ lic@@ y.@@ on@@ Network@@ "); } @java.lang.Override public void on@@ Un@@ buff@@ er@@ ed@@ IO@@ () { fail@@ ("@@ Block@@ guard@@ .@@ Po@@ lic@@ y.@@ on@@ Un@@ buff@@ er@@ ed@@ IO@@ "); } @java.lang.Override public void on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ (java.lang.String name@@ ) { fail@@ (("@@ B@@ ad " + name@@ )); } @java.lang.Override public int get@@ Po@@ lic@@ y@@ M@@ ask@@ () { return 0; } }); try { java.net.@@ UR@@ L ur@@ l = new java.net.@@ URL@@ ("@@ h@@ ttp@@ :@@ /@@ w@@ w@@ .@@ goog@@ le.@@ com@@ /@@ "); java.net.@@ UR@@ L ur@@ l@@ 2 = new java.net.@@ URL@@ ("@@ h@@ ttp@@ :@@ /@@ w@@ w@@ w@@ w@@ .@@ n@@ est.@@ com@@ /@@ "); ur@@ l.@@ equals(@@ ur@@ l@@ 2@@ ); ur@@ l@@ 2.@@ has@@ h@@ Code@@ (); } final@@ l@@ y { d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .set@@ Thread@@ Po@@ lic@@ y@@ (@@ old@@ Po@@ lic@@ y@@ ); } }
public void on@@ Sdk@@ Re@@ load@@ (java.lang.String name@@ ) { if ((m@@ State@@ ) == null@@ ) { return@@ ; } try { m@@ P@@ kg@@ Manager.@@ on@@ Sdk@@ Re@@ le@@ ase@@ ().@@ re@@ le@@ ase@@ (); } catch (java.lang.Exception e) { com.android.ide.@@ eclipse.ad@@ t@@ .@@ int@@ er@@ n@@ al.@@ editors.@@ layout.@@ g@@ le@@ 2.@@ Can@@ va@@ s@@ View@@ Debu@@ g.@@ P@@ kg@@ Info in@@ f@@ o = m@@ P@@ kg@@ Manager.@@ get@@ And@@ In@@ iti@@ aliz@@ ed@@ Re@@ le@@ ct@@ ure@@ (m@@ Contex@@ t.get@@ Name@@ (), name@@ ); return@@ ; } if ((@@ in@@ f@@ o == null@@ ) || (m@@ y@@ Parent@@ Directory@@ .get@@ Parent@@ File@@ ()) == null@@ )) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ Faile@@ d to fin@@ d to
@java.lang.Override public void on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ (java.lang.String name@@ ) { fail@@ (("@@ Block@@ .@@ Po@@ lic@@ y.@@ on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ : " + name@@ )); }
void on@@ C@@ ust@@ om@@ S@@ low@@ Call@@ (java.lang.String name@@ ) throw@@ s android.os.@@ Remote@@ Exception { if ((m@@ State@@ ) == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ p@@ o@@ int@@ "); } if ((m@@ State@@ ) == null@@ ) { throw new java.lang.@@ Sec@@ ur@@ ity@@ Exception@@ ("@@ p@@ k@@ el@@ y of class const@@ r@@ u@@ ct@@ ure@@ "); }
private void update@@ Pre@@ fer@@ re@@ d@@ Network@@ U@@ I@@ From@@ D@@ b@@ () { final int phon@@ e@@ Sub@@ Id = m@@ Ph@@ on@@ e.get@@ Sub@@ Id@@ (); int setting@@ s@@ Network@@ Mod@@ e = get@@ Pre@@ fer@@ re@@ d@@ Network@@ Mode@@ For@@ Sub@@ Id@@ (@@ phon@@ e@@ Sub@@ Id@@ ); if (com.android.@@ phon@@ e.@@ Mo@@ b@@ ile@@ Network@@ Setting@@ s.@@ Mo@@ b@@ ile@@ Network@@ F@@ r@@ ag@@ m@@ ent.@@ D@@ B@@ G) { com.android.@@ phon@@ e.@@ Mo@@ b@@ ile@@ Network@@ Setting@@ s.@@ Mo@@ b@@ ile@@ Network@@ F@@ r@@ ag@@ m@@ ent.@@ log@@ (("@@ update@@ Pre@@ fer@@ re@@ d@@ Network@@ U@@ I@@ From@@ D@@ b@@ () setting@@ s@@ Network@@ Mod@@ e = " + setting@@ s@@ Network@@ Mode@@ )); }
@java.lang.Override public boolean set@@ Pre@@ fer@@ re@@ d@@ Network@@ Type@@ (@@ int sub@@ Id, int network@@ Typ@@ e) { e@@ n@@ for@@ ce@@ Mo@@ d@@ if@@ y@@ Permission@@ Or@@ C@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ e@@ (s@@ u@@ b@@ Id@@ ); if (com.android.@@ phon@@ e.@@ Phone@@ Interface@@ Manager.@@ D@@ B@@ G) com.android.@@ phon@@ e.@@ Phone@@ Interface@@ Manager.@@ log@@ ((@@ (("@@ set@@ Pre@@ fer@@ re@@ d@@ Network@@ Type@@ : sub@@ Id " + sub@@ Id@@ ) + " type ") + network@@ Type@@ )); java.lang.@@ Boole@@ an su@@ c@@ ces@@ s = ((@@ java.lang.@@ Boolean@@ ) (s@@ end@@ Request@@ (com.android.@@ phon@@ e.@@ Phone@@ Interface@@ Manager.@@ C@@ M@@ D_@@ SE@@ T_@@ P@@ RE@@ F@@ ER@@ RE@@ D_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ TYP@@ E, network@@ Type, sub@@ Id@@ ))); if (com.android.@@ phon@@ e.@@ Phone@@ Interface@@ Manager.@@ D@@ B@@ G) com.android.@@ phon@@ e.@@ Phone@@ Interface@@ Manager.@@ log@@ (("@@ set@@ Pre@@ fer@@ re@@ d@@ Network@@ Type@@ : " + (s@@ u@@ c@@ ces@@ s ? "@@ ok@@ " : "@@ fail@@ "@@ ))); if (s@@ u@@ c@@ ces@@ s) { Setting@@ s.@@ G@@ lo@@ b@@ al.@@ put@@ Int@@ (m@@ Ph@@ on@@ e.get@@ Context@@ ().get@@ Content@@ Res@@ ol@@ ver@@ (), ((@@ Setting@@ s.@@ G@@ lo@@ b@@ al.@@ P@@ RE@@ F@@ ER@@ RE@@ D_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _MOD@@ E@@ ) + sub@@ Id@@ ), network@@ Type@@ ); android.@@ telephony.@@ Telephony@@ Manager.@@ put@@ Int@@ At@@ Index@@ (m@@ Ph@@ on@@ e.get@@ Context@@ ().get@@ Content@@ Res@@ ol@@ ver@@ (), android.@@ provider.@@ Setting@@ s.@@ G@@ lo@@ b@@ al.@@ P@@ RE@@ F@@ ER@@ RE@@ D_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _MOD@@ E, m@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Phone@@ Id@@ (s@@ u@@ b@@ Id@@ ), network@@ Type@@ ); } return su@@ c@@ cess@@ ; }
@java.lang.Override public void fa@@ ctory@@ Res@@ et@@ (@@ int sub@@ Id@@ ) { e@@ n@@ for@@ ce@@ Connectivity@@ In@@ ternal@@ Permission@@ (); if (m@@ User@@ Manager.@@ has@@ User@@ Res@@ tr@@ ic@@ tion@@ (@@ User@@ Manager.@@ D@@ IS@@ AL@@ LO@@ W@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _RE@@ SE@@ T@@ )) { return@@ ; } final long id@@ enti@@ t@@ y = android.os.@@ B@@ ind@@ er.@@ clear@@ Call@@ ing@@ Id@@ enti@@ ty@@ (); try { if ((@@ android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ is@@ U@@ s@@ able@@ Sub@@ Id@@ Value@@ (s@@ u@@ b@@ Id@@ )) && (!(m@@ User@@ Manager.@@ has@@ User@@ Res@@ tr@@ ic@@ tion@@ (@@ User@@ Manager.@@ D@@ IS@@ AL@@ LO@@ W@@ _C@@ ON@@ FI@@ G@@ _M@@ O@@ B@@ IL@@ E_@@ N@@ E@@ T@@ W@@ OR@@ K@@ S@@ )@@ ))) { set@@ Data@@ Enabled@@ (s@@ u@@ b@@ Id, true@@ ); set@@ Network@@ Selection@@ Mode@@ A@@ ut@@ om@@ ati@@ c@@ (s@@ u@@ b@@ Id@@ ); java.lang.String default@@ Net@@ wor@@ k = android.@@ telephony.@@ Telephony@@ Manager.@@ get@@ Telephony@@ Property@@ (m@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Phone@@ Id@@ (s@@ u@@ b@@ Id@@ ), "@@ ro@@ .@@ telephon@@ y@@ .@@ default@@ _@@ network@@ ", null@@ ); int network@@ Type = (!@@ (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ default@@ Network@@ ))) ? java.lang.Integ@@ er.@@ parse@@ Int@@ (@@ default@@ Network@@ ) : com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e.@@ P@@ RE@@ F@@ ER@@ RE@@ D_@@ N@@ T@@ _MOD@@ E@@ ; set@@ Pre@@ fer@@ re@@ d@@ Network@@ Type@@ (s@@ u@@ b@@ Id, network@@ Type@@ ); m@@ Ph@@ on@@ e.@@ set@@ Data@@ R@@ o@@ am@@ ing@@ Enabled@@ (@@ false@@ ); } } final@@ l@@ y { android.os.@@ B@@ ind@@ er.@@ r@@ est@@ ore@@ Call@@ ing@@ Id@@ enti@@ ty@@ (@@ id@@ enti@@ ty@@ ); } }
public static int cal@@ c@@ ul@@ ate@@ Pre@@ fer@@ re@@ d@@ Network@@ Type@@ (android.@@ content.@@ Context context@@ , int phon@@ e@@ Sub@@ Id@@ ) { int phon@@ e@@ Id = com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Instance@@ ().get@@ Phone@@ Id@@ (@@ phon@@ e@@ Sub@@ Id@@ ); int phon@@ e@@ Id@@ Network@@ Type = R@@ IL@@ Constants.@@ P@@ RE@@ F@@ ER@@ RE@@ D_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _MOD@@ E@@ ; try { phon@@ e@@ Id@@ Network@@ Type = android.@@ telephony.@@ Telephony@@ Manager.@@ get@@ Int@@ At@@ Index@@ (@@ con@@ tex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (), Setting@@ s.@@ G@@ lo@@ b@@ al.@@ P@@ RE@@ F@@ ER@@ RE@@ D_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _MOD@@ E, phon@@ e@@ Id@@ ); } catch (android.@@ provider.@@ Setting@@ s@@ .@@ Setting@@ Not@@ F@@ ound@@ Exception s@@ n@@ f@@ e) { android.@@ telephony.@@ R@@ log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Phone@@ Fa@@ ctory.@@ LO@@ G_@@ TAG, "@@ N@@ o Exception Read@@ ing Value@@ "); } int network@@ Type = phon@@ e@@ Id@@ Network@@ Type@@ ; android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Phone@@ Fa@@ ctory.@@ LO@@ G_@@ TAG, ((@@ ("@@ N@@ e@@ Id phon@@ e@@ Id@@ ) + phon@@ e@@ Id@@ Network@@ Type = " phon@@ e@@ Id@@ Network@@ Type@@ )); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Sub@@ s@@ cription@@ Control@@ l@@ er.get@@ Instance@@ ().@@ is@@ Ac@@ tive@@ Sub@@ Id@@ (@@ phon@@ e@@ Sub@@ Id@@ )) { network@@ Type = android.@@ provider.@@ Setting@@ s@@ .@@ G@@ lo@@ b@@ al@@ .get@@ Int@@ (@@ con@@ tex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (), ((@@ android.@@ provider.@@ Setting@@ s.@@ G@@ lo@@ b@@ al.@@ P@@ RE@@ F@@ ER@@ RE@@ D_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _MOD@@ E@@ ) + phon@@ e@@ Sub@@ Id@@ ), phon@@ e@@ Id@@ Network@@ Type@@ ); } else { android.@@ telephony.@@ R@@ log.@@ d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Phone@@ Fa@@ ctory.@@ LO@@ G_@@ TAG, (("@@ N@@ e@@ ed@@ ed (@@ phon@@ e@@ Sub@@ Id = " + phon@@ e@@ Sub@@ Id@@ ) + " is not a ac@@ tiv@@ e Sub@@ Id ") + network@@ Type@@ )); return network@@ Type@@ ; }
private void re@@ co@@ ver@@ Bluetooth@@ Service@@ From@@ Error@@ (@@ boolean clear@@ B@@ le@@ ) { android.util.@@ S@@ log.@@ e@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ re@@ co@@ ver@@ Bluetooth@@ Service@@ From@@ Error@@ "); try { m@@ Bluetooth@@ Lock@@ .@@ read@@ Lock@@ ().@@ lock@@ (); if ((m@@ Bluetooth@@ ) != null@@ ) { m@@ Bluetooth@@ .@@ un@@ register@@ Callback@@ (m@@ Bluetooth@@ Callback@@ ); } } catch (android.os.@@ Remote@@ Exception re@@ ) { android.util.@@ S@@ log.@@ e@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ Un@@ able to un@@ reg@@ is@@ ter re@@ ); } final@@ l@@ y { m@@ Bluetooth@@ Lock@@ .@@ read@@ Lock@@ ().@@ un@@ lock@@ (); } android.os.@@ System@@ C@@ lock@@ .@@ s@@ le@@ e@@ p@@ (@@ 5@@ 00@@ ); add@@ Ac@@ tive@@ Log@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ START@@ _C@@ R@@ A@@ S@@ H@@ , android.@@ app.@@ Activity@@ Thread@@ .@@ current@@ Package@@ Name@@ (), false@@ ); handle@@ Dis@@ able@@ (); wait@@ For@@ On@@ O@@ ff@@ (@@ false@@ , true@@ ); send@@ Bluetooth@@ Service@@ Do@@ wn@@ Callback@@ (); try { m@@ Bluetooth@@ Lock@@ .@@ write@@ Lock@@ ().@@ lock@@ (); if ((m@@ Bluetooth@@ ) != null@@ ) { m@@ B@@ luetoo@@ th = null@@ ; m@@ Context.@@ un@@ b@@ ind@@ Service@@ (m@@ Connection@@ ); } m@@ Bluetooth@@ G@@ at@@ t = null@@ ; } final@@ l@@ y { m@@ Bluetooth@@ Lock@@ .@@ write@@ Lock@@ ().@@ un@@ lock@@ (); } m@@ Handler.@@ remove@@ Mess@@ ag@@ es@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ STATE_@@ CH@@ AN@@ G@@ E); m@@ State = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ; if (c@@ le@@ ar@@ B@@ le@@ ) { clear@@ B@@ le@@ Ap@@ ps@@ (); } m@@ En@@ able = false@@ ; if ((@@ (m@@ Error@@ Re@@ co@@ ver@@ y@@ R@@ e@@ try@@ Coun@@ ter@@ )@@ ++) < (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ MA@@ X@@ _@@ ER@@ RO@@ R@@ _RE@@ START@@ _RE@@ TR@@ I@@ E@@ S@@ )) { android.os.@@ Mess@@ age r@@ est@@ art@@ M@@ s@@ g = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ RE@@ START@@ _@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _S@@ ER@@ V@@ IC@@ E); m@@ Handler.@@ send@@ Message@@ D@@ el@@ ay@@ ed@@ (@@ r@@ est@@ art@@ M@@ s@@ g@@ , com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ ER@@ RO@@ R@@ _RE@@ START@@ _@@ TI@@ ME@@ _M@@ S@@ ); } else { } }
public boolean en@@ able@@ (java.lang.String package@@ Name@@ ) throw@@ s android.os.@@ Remote@@ Exception { final int call@@ ing@@ U@@ id = android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (); final boolean call@@ er@@ S@@ ys@@ te@@ m = (android.os.@@ User@@ Handle@@ .get@@ App@@ Id@@ (c@@ all@@ ing@@ U@@ id@@ )) == (@@ S@@ Y@@ S@@ TE@@ M@@ _@@ U@@ ID@@ ); if (is@@ Bluetooth@@ Dis@@ al@@ low@@ ed@@ ()) { if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ en@@ able@@ ()@@ : not en@@ ab@@ l@@ ing - b@@ luetoo@@ th dis@@ al@@ low@@ ed@@ "); } return false@@ ; } if (!@@ call@@ er@@ System@@ ) { if (!(@@ check@@ I@@ f@@ Call@@ er@@ I@@ s@@ For@@ eg@@ round@@ User@@ ())) { android.util.@@ S@@ log.@@ w@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ en@@ able@@ ()@@ : not al@@ low@@ ed for n@@ on@@ -@@ ac@@ tiv@@ e an@@ d n@@ on s@@ ys@@ te@@ m u@@ se@@ r return false@@ ; } m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ , B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if ((@@ (!(@@ is@@ Enabled@@ ())) && (m@@ Permission@@ Re@@ view@@ Requ@@ i@@ re@@ d@@ )) && (@@ start@@ Con@@ s@@ ent@@ U@@ i@@ I@@ f@@ N@@ e@@ ed@@ ed@@ ed@@ (@@ package@@ Name, call@@ ing@@ U@@ id, Bluetooth@@ Adap@@ ter.@@ AC@@ TION@@ _RE@@ Q@@ UE@@ ST_@@ EN@@ AB@@ LE@@ ))) { return false@@ ; } } if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, ((((@@ ((@@ ("@@ en@@ able@@ (@@ " + package@@ Name@@ ) + " m@@ B@@ luetoo@@ th =@@ ") + (m@@ Bluetooth@@ )) + ", m@@ B@@ ind@@ ing = ") + (m@@ B@@ ind@@ ing@@ )) + ", m@@ State = ") + (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ name@@ For@@ State@@ (m@@ State@@ )))); } synchronized@@ (m@@ Recei@@ ver@@ ) { m@@ Q@@ ui@@ et@@ En@@ able@@ Ex@@ tern@@ al = false@@ ; m@@ En@@ able@@ Ex@@ tern@@ al = true@@ ; send@@ En@@ able@@ M@@ s@@ g@@ (@@ false@@ , com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _P@@ AC@@ K@@ A@@ G@@ E, package@@ Name); } if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ en@@ able@@ ()@@ : return@@ ing "); } return true@@ ; }
@java.lang.Override public void on@@ Chang@@ e@@ (@@ boolean un@@ u@@ sed@@ ) { synchronized@@ (@@ this@@ ) { if (is@@ Bluetooth@@ Per@@ si@@ s@@ ted@@ State@@ On@@ ()) { if (is@@ A@@ ir@@ p@@ lan@@ e@@ Mode@@ On@@ ()) { per@@ si@@ st@@ Bluetooth@@ Setting@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ ON@@ _@@ A@@ I@@ R@@ P@@ L@@ AN@@ E); } else { per@@ si@@ st@@ Bluetooth@@ Setting@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ ON@@ _@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ ); } } int s@@ t = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ F@@ ; try { m@@ Bluetooth@@ Lock@@ .@@ read@@ Lock@@ ().@@ lock@@ (); if ((m@@ Bluetooth@@ ) != null@@ ) { s@@ t = m@@ Bluetooth@@ .get@@ State@@ (); } } catch (android.os.@@ Remote@@ Exception e) { android.util.@@ S@@ log.@@ e@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ Un@@ able to cal@@ l get@@ State ", e); return@@ ; } final@@ l@@ y { m@@ Bluetooth@@ Lock@@ .@@ read@@ Lock@@ ().@@ un@@ lock@@ (); } android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, ("@@ on@@ Chang@@ e@@ : Mod@@ e ch@@ ang@@ e - curr@@ ent state@@ : " + (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ name@@ For@@ State@@ (@@ st@@ )))); if (is@@ A@@ ir@@ p@@ lan@@ e@@ Mode@@ On@@ ()) { clear@@ B@@ le@@ Ap@@ ps@@ (); if (s@@ t == (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ B@@ L@@ E_@@ ON@@ )) { try { m@@ Bluetooth@@ Lock@@ .@@ read@@ Lock@@ ().@@ lock@@ (); if ((m@@ Bluetooth@@ ) != null@@ ) { m@@ Bluetooth@@ .@@ on@@ B@@ r@@ E@@ d@@ r@@ Do@@ wn@@ (); m@@ En@@ able = false@@ ; m@@ En@@ able@@ Ex@@ tern@@ al = false@@ ; } } catch (android.os.@@ Remote@@ Exception e) { android.util.@@ S@@ log.@@ e@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ Un@@ able to cal@@ l on@@ B@@ r@@ E@@ d@@ r@@ Do@@ w@@ n e); } final@@ l@@ y { m@@ Bluetooth@@ Lock@@ .@@ read@@ Lock@@ ().@@ un@@ lock@@ (); } } else if (s@@ t == (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ )) { send@@ Dis@@ able@@ M@@ s@@ g@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ A@@ I@@ R@@ P@@ L@@ AN@@ E@@ _MOD@@ E@@ , android.@@ app.@@ Activity@@ Thread@@ .@@ current@@ Package@@ Name@@ ()); } } else if (m@@ En@@ able@@ Ex@@ ternal@@ ) { send@@ En@@ able@@ M@@ s@@ g@@ (m@@ Q@@ ui@@ et@@ En@@ able@@ Ex@@ ternal@@ , com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ A@@ I@@ R@@ P@@ L@@ AN@@ E@@ _MOD@@ E@@ , android.@@ app.@@ Activity@@ Thread@@ .@@ current@@ Package@@ Name@@ ()); } }
public boolean en@@ able@@ No@@ A@@ ut@@ o@@ Con@@ nect@@ (java.lang.String package@@ Name@@ ) { if (is@@ Bluetooth@@ Dis@@ al@@ low@@ ed@@ ()) { if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ en@@ able@@ No@@ A@@ ut@@ o@@ Con@@ nect@@ "); } if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, ((@@ ("@@ en@@ able@@ No@@ A@@ ut@@ o@@ Con@@ nect@@ : m@@ B@@ luetoo@@ th " + (m@@ Bluetooth@@ )) + " m@@ B@@ ind@@ ing = ") + (m@@ B@@ ind@@ ing@@ ))); } int call@@ ing@@ App@@ Id = android.os.@@ User@@ Handle@@ .get@@ App@@ Id@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); if (c@@ all@@ ing@@ App@@ Id != (@@ N@@ F@@ C@@ _@@ U@@ ID@@ )) { throw new java.lang.@@ Sec@@ ur@@ ity@@ Exception@@ ("@@ Un@@ able per@@ mis@@ sion to en@@ able B@@ luetoo@@ th qu@@ i@@ et@@ l@@ y "); } synchronized@@ (m@@ Recei@@ ver@@ ) { m@@ Q@@ ui@@ et@@ En@@ able@@ Ex@@ tern@@ al = true@@ ; m@@ En@@ able@@ Ex@@ tern@@ al = true@@ ; send@@ En@@ able@@ M@@ s@@ g@@ (@@ true@@ , com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _P@@ AC@@ K@@ A@@ G@@ E, package@@ Name); } return true@@ ; }
public boolean dis@@ able@@ (java.lang.String package@@ Name, boolean per@@ si@@ st@@ ) throw@@ s android.os.@@ Remote@@ Exception { final int call@@ ing@@ U@@ id = android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (); final boolean call@@ er@@ S@@ ys@@ te@@ m = (android.os.@@ User@@ Handle@@ .get@@ App@@ Id@@ (c@@ all@@ ing@@ U@@ id@@ )) == (@@ S@@ Y@@ S@@ TE@@ M@@ _@@ U@@ ID@@ ); if (!@@ call@@ er@@ System@@ ) { if (!(@@ check@@ I@@ f@@ Call@@ er@@ I@@ s@@ For@@ eg@@ round@@ User@@ ())) { android.util.@@ S@@ log.@@ w@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ dis@@ able@@ ()@@ : not al@@ low@@ ed for n@@ on@@ -@@ ac@@ tiv@@ e an@@ d n@@ on s@@ ys@@ te@@ m u@@ se@@ r return false@@ ; } m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if (((@@ is@@ Enabled@@ ()) && (m@@ Permission@@ Re@@ view@@ Requ@@ i@@ re@@ d@@ )) && (@@ start@@ Con@@ s@@ ent@@ U@@ i@@ I@@ f@@ N@@ e@@ ed@@ ed@@ ed@@ (@@ package@@ Name, call@@ ing@@ U@@ id, Bluetooth@@ Adap@@ ter.@@ AC@@ TION@@ _RE@@ Q@@ UE@@ ST_@@ D@@ IS@@ AB@@ LE@@ ))) { return false@@ ; } } if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, ((@@ ("@@ dis@@ able@@ ()@@ : m@@ B@@ luetoo@@ th = " + (m@@ Bluetooth@@ )) + " m@@ B@@ ind@@ ing = ") + (m@@ B@@ ind@@ ing@@ ))); } synchronized@@ (m@@ Recei@@ ver@@ ) { if (@@ per@@ si@@ st@@ ) { per@@ si@@ st@@ Bluetooth@@ Setting@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ O@@ F@@ ); } m@@ En@@ able@@ Ex@@ tern@@ al = false@@ ; send@@ Dis@@ able@@ M@@ s@@ g@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _P@@ AC@@ K@@ A@@ G@@ E, package@@ Name); } return true@@ ; }
@java.lang.Override public void on@@ User@@ Res@@ tr@@ ic@@ tion@@ s@@ Changed@@ (@@ int user@@ Id, android.os.@@ Bund@@ le new@@ Res@@ tr@@ ic@@ tion@@ s, android.os.@@ Bund@@ le pre@@ v@@ Res@@ tr@@ ic@@ tion@@ s) { if (com.android.server.@@ p@@ m.@@ User@@ Res@@ tr@@ ic@@ tion@@ s@@ Utils.@@ res@@ tr@@ ic@@ tion@@ s@@ Changed@@ (p@@ re@@ v@@ Res@@ tr@@ ic@@ tion@@ s, new@@ Res@@ tr@@ ic@@ tion@@ s, User@@ Manager.@@ D@@ IS@@ AL@@ LO@@ W@@ _@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _S@@ H@@ AR@@ ING@@ )) { update@@ Op@@ p@@ L@@ a@@ unch@@ er@@ Comp@@ onent@@ State@@ (@@ user@@ Id, new@@ Res@@ tr@@ ic@@ tion@@ s.get@@ Boolean@@ (@@ User@@ Manager.@@ D@@ IS@@ AL@@ LO@@ W@@ _@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _S@@ H@@ AR@@ ING@@ )); } if ((@@ user@@ Id == (android.os.@@ User@@ Hand@@ le.@@ US@@ ER@@ _S@@ Y@@ S@@ TE@@ M@@ )) && (com.android.server.@@ p@@ m.@@ User@@ Res@@ tr@@ ic@@ tion@@ s@@ Utils.@@ res@@ tr@@ ic@@ tion@@ s@@ Changed@@ (p@@ re@@ v@@ Res@@ tr@@ ic@@ tion@@ s, new@@ Res@@ tr@@ ic@@ tion@@ s, User@@ Manager.@@ D@@ IS@@ AL@@ LO@@ W@@ _@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ ))) { if ((@@ user@@ Id == (android.os.@@ User@@ Hand@@ le.@@ US@@ ER@@ _S@@ Y@@ S@@ TE@@ M@@ )) && (@@ new@@ Res@@ tr@@ ic@@ tion@@ s.get@@ Boolean@@ (@@ User@@ Manager.@@ D@@ IS@@ AL@@ LO@@ W@@ _@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ ))) { update@@ Op@@ p@@ L@@ a@@ unch@@ er@@ Comp@@ onent@@ State@@ (@@ user@@ Id, true@@ ); send@@ Dis@@ able@@ M@@ s@@ g@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ D@@ IS@@ AL@@ LO@@ W@@ E@@ D@@ , android.@@ app.@@ Activity@@ Thread@@ .@@ current@@ Package@@ Name@@ ()); } else { update@@ Op@@ p@@ L@@ a@@ unch@@ er@@ Comp@@ onent@@ State@@ (@@ user@@ Id, new@@ Res@@ tr@@ ic@@ tion@@ s.get@@ Boolean@@ (@@ User@@ Manager.@@ D@@ IS@@ AL@@ LO@@ W@@ _@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _S@@ H@@ AR@@ ING@@ )); } }
private static java.lang.String get@@ Re@@ as@@ on@@ String@@ (@@ int re@@ as@@ on@@ ) { switch (re@@ as@@ on@@ ) { case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _P@@ AC@@ K@@ A@@ G@@ E : return "@@ RE@@ A@@ S@@ ON@@ _P@@ AC@@ K@@ A@@ GE@@ "; case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ A@@ I@@ R@@ P@@ L@@ AN@@ E@@ _MOD@@ E : return "@@ RE@@ A@@ S@@ ON@@ _@@ A@@ I@@ R@@ P@@ L@@ AN@@ E@@ _MOD@@ E@@ "; case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ D@@ IS@@ AL@@ LO@@ W@@ E@@ D : return "@@ RE@@ A@@ S@@ ON@@ _@@ D@@ IS@@ AL@@ LO@@ W@@ E@@ D@@ "; case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _RE@@ START@@ E@@ D : return "@@ RE@@ A@@ S@@ ON@@ _RE@@ START@@ E@@ D@@ "; case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ START@@ _C@@ R@@ A@@ S@@ H : return "@@ RE@@ A@@ S@@ ON@@ _@@ START@@ _C@@ R@@ A@@ S@@ H@@ "; case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _S@@ Y@@ S@@ TE@@ M@@ _@@ B@@ O@@ O@@ T : return "@@ RE@@ A@@ S@@ ON@@ _S@@ Y@@ S@@ TE@@ M@@ _@@ B@@ O@@ O@@ T@@ "; case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ UN@@ EX@@ P@@ EC@@ TE@@ D : return "@@ RE@@ A@@ S@@ ON@@ _@@ UN@@ EX@@ P@@ EC@@ TE@@ D@@ "; case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _@@ US@@ ER@@ _S@@ WI@@ T@@ C@@ H : return "@@ RE@@ A@@ S@@ ON@@ _@@ US@@ ER@@ _S@@ WI@@ T@@ CH@@ "; case com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _RE@@ S@@ T@@ OR@@ E_@@ US@@ ER@@ _S@@ E@@ T@@ IN@@ G : return "@@ RE@@ A@@ S@@ ON@@ _RE@@ S@@ T@@ OR@@ E_@@ US@@ ER@@ _S@@ E@@ T@@ T@@ ING@@ "; default : return ("@@ RE@@ A@@ S@@ ON@@ _@@ UN@@ K@@ NO@@ W@@ N@@ [@@ " + re@@ as@@ on@@ ) + "@@ ]@@ "; } }
public void handle@@ On@@ B@@ oot@@ P@@ has@@ e@@ () { if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ B@@ luetoo@@ th b@@ oo@@ t comp@@ let@@ ed@@ "); } android.os.@@ User@@ Manager@@ In@@ tern@@ al user@@ Manager@@ In@@ tern@@ al = com.android.server.@@ Local@@ Ser@@ vices@@ .get@@ Service@@ (android.os.@@ User@@ Manager@@ In@@ ternal@@ .@@ class@@ ); user@@ Manager@@ In@@ tern@@ al.@@ add@@ User@@ Res@@ tr@@ ic@@ tion@@ s@@ Listener@@ (m@@ User@@ Res@@ tr@@ ic@@ tion@@ s@@ Listener@@ ); final boolean is@@ Bluetooth@@ Dis@@ al@@ low@@ ed = is@@ Bluetooth@@ Dis@@ al@@ low@@ ed@@ (); if (is@@ Bluetooth@@ Dis@@ al@@ low@@ ed@@ ) { return@@ ; } if ((m@@ En@@ able@@ Ex@@ ternal@@ ) && (is@@ Bluetooth@@ Per@@ si@@ s@@ ted@@ State@@ On@@ Bluetooth@@ ())) { if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ S@@ ys@@ te@@ m Bluetooth@@ .@@ "); } send@@ En@@ able@@ M@@ s@@ g@@ (m@@ Q@@ ui@@ et@@ En@@ able@@ Ex@@ ternal@@ , com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ RE@@ A@@ S@@ ON@@ _S@@ Y@@ S@@ TE@@ M@@ _@@ B@@ O@@ T@@ , android.@@ app.@@ Activity@@ Thread@@ .@@ current@@ Package@@ Name@@ ()); } else if (!(@@ is@@ Name@@ And@@ Address@@ Set@@ ())) { if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Ser@@ vice ad@@ ap@@ ter name an@@ d addres@@ s@@ "); } android.os.@@ Mess@@ age get@@ M@@ s@@ g = m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ ME@@ SS@@ A@@ G@@ E_@@ GE@@ T_@@ N@@ AM@@ E_@@ AN@@ D_@@ AD@@ D@@ RE@@ SS@@ ); m@@ Handler.@@ send@@ Message@@ (get@@ M@@ s@@ g@@ ); } }
public java.lang.String toString@@ () { return (@@ (@@ time@@ To@@ Log@@ (m@@ Tim@@ est@@ amp@@ )) + (m@@ En@@ able ? En@@ able@@ d : Dis@@ able@@ d + du@@ e to ") + (com.android.server.@@ Bluetooth@@ Manager@@ Service@@ .get@@ Re@@ as@@ on@@ String@@ (m@@ Re@@ as@@ on@@ ))) + ", b@@ y ") + (m@@ Package@@ Name); }
@java.lang.Override public boolean equals(@@ java.lang.Object o@@ ) { if (@@ o == null@@ ) return false@@ ; if (!(@@ o instanceof com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Data@@ )) return false@@ ; final com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Data u = ((@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Data@@ ) (@@ o@@ )); if (!(@@ java.util.@@ Object@@ s.@@ equal@@ s@@ (m@@ et@@ ad@@ ata@@ , u@@ .@@ m@@ et@@ ad@@ ata@@ ))) { return false@@ ; } if (!(@@ java.util.@@ Object@@ s.@@ equals(@@ q@@ ue@@ ue@@ , u@@ .@@ q@@ ue@@ ))) { return false@@ ; } if (!@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ play@@ state@@ Equal@@ s(@@ state@@ , u@@ .@@ state@@ ))) { return false@@ ; } return true@@ ; }
@org.junit.Test public void test@@ I@@ s@@ Read@@ y@@ () { assert@@ False@@ (@@ w@@ r@@ app@@ er.@@ is@@ Read@@ y@@ ()); do@@ Return@@ (m@@ Test@@ State.@@ build@@ ()).@@ when@@ (m@@ Mock@@ Control@@ ler@@ )@@ .get@@ Play@@ back@@ State@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (@@ w@@ r@@ app@@ er.@@ is@@ Read@@ y@@ ()); do@@ Return@@ (@@ null@@ ).@@ when@@ (m@@ Mock@@ Control@@ ler@@ )@@ .get@@ Play@@ back@@ State@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ False@@ (@@ w@@ r@@ app@@ er.@@ is@@ Read@@ y@@ ()); do@@ Return@@ (m@@ Test@@ State.@@ build@@ ()).@@ when@@ (m@@ Mock@@ Control@@ ler@@ )@@ .get@@ Play@@ back@@ State@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (@@ w@@ r@@ app@@ er.@@ is@@ Read@@ y@@ ()); do@@ Return@@ (@@ null@@ ).@@ when@@ (m@@ Mock@@ Control@@ ler@@ )@@ .get@@ M@@ et@@ ad@@ ata@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (@@ w@@ r@@ app@@ er.@@ is@@ Read@@ y@@ ()); do@@ Return@@ (@@ null@@ ).@@ when@@ (m@@ Mock@@ Control@@ ler@@ )@@ .get@@ M@@ et@@ ad@@ ata@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ False@@ (@@ w@@ r@@ app@@ er.@@ is@@ Read@@ y@@ ()); do@@ Return@@ (m@@ Test@@ M@@ et@@ ad@@ ata@@ .@@ build@@ ()).@@ when@@ (m@@ Mock@@ Control@@ ler@@ )@@ .get@@ M@@ et@@ ad@@ ata@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (@@ w@@ r@@ app@@ er.@@ is@@ Read@@ y@@ ()); m@@ Test@@ M@@ et@@ ad@@ ata@@ .@@ put@@ String(@@ Media@@ M@@ et@@ ad@@ ata@@ .@@ ME@@ TA@@ DA@@ TA@@ _@@ KE@@ Y_@@ TI@@ T@@ LE@@ , null@@ ); do@@ Return@@ (m@@ Test@@ M@@ et@@ ad@@ ata@@ .@@ build@@ ()).@@ when@@ (m@@ Mock@@ Control@@ ler@@ )@@ .get@@ M@@ et@@ ad@@ ata@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ False@@ (@@ w@@ rap@@ per@@ .@@ is@@ Read@@ y@@ ()); }
void update@@ Media@@ Control@@ ler@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Contro@@ lle@@ r new@@ Control@@ ler@@ ) { if (@@ new@@ Contro@@ lle@@ r == (m@@ Media@@ Control@@ ler@@ )) return@@ ; synchronized@@ (m@@ Callback@@ Lock) { if ((@@ (m@@ Reg@@ ister@@ ed@@ Callback@@ ) == null@@ ) || ((m@@ Control@@ ler@@ Callback@@ s) == null@@ )) { return@@ ; } m@@ Control@@ ler@@ Callback@@ s.@@ cle@@ an@@ up@@ (); m@@ Media@@ Contro@@ lle@@ r = new@@ Control@@ ler@@ ; m@@ Control@@ ler@@ Callback@@ s = new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ Media@@ Control@@ ler@@ Listener@@ (m@@ L@@ oo@@ per@@ ); if (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ DE@@ B@@ U@@ G) android.util.Log.d@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, (("@@ Contro@@ lle@@ r for " + (m@@ Package@@ Name@@ )) + " w@@ a@@ s up@@ dat@@ ed.@@ ")); }
boolean is@@ Read@@ y@@ () { return m@@ M@@ et@@ ad@@ ata@@ ; }
public android.net.@@ Network@@ Info.@@ D@@ eta@@ ile@@ d@@ State get@@ D@@ eta@@ ile@@ d@@ State@@ () { synchronized@@ (@@ this@@ ) { return m@@ D@@ eta@@ ile@@ d@@ State@@ ; } }
public boolean is@@ Connec@@ ted@@ () { return (m@@ State@@ ) == (android.net.@@ Network@@ Info.@@ State.@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); }
private static java.lang.@@ invok@@ e.@@ Call@@ S@@ it@@ e lin@@ k@@ er@@ Method@@ 2@@ (java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es.@@ L@@ ook@@ u@@ p lo@@ ok@@ up@@ , java.lang.String method@@ Name, java.lang.@@ invok@@ e.@@ Method@@ Type method@@ Type, int ex@@ tra@@ Int@@ , java.lang.String.@@ .@@ . ex@@ tra@@ A@@ ri@@ ty@@ Arg@@ s) throw@@ s java.lang.@@ Throw@@ able { java.lang.System.out.@@ p@@ r@@ int@@ ("@@ lin@@ k@@ er@@ Method@@ 2@@ ("@@ ); java.lang.System.out.@@ p@@ r@@ int@@ (@@ lo@@ ok@@ up@@ .@@ lo@@ ok@@ up@@ Class@@ ()); java.lang.System.out.@@ p@@ r@@ int@@ ("@@ , "); java.lang.System.out.@@ p@@ r@@ int@@ (m@@ ethod@@ Name); java.lang.System.out.@@ p@@ r@@ int@@ ("@@ , "); java.lang.System.out.@@ p@@ r@@ int@@ (m@@ ethod@@ Type@@ ); java.lang.System.out.@@ p@@ r@@ int@@ ("@@ , "); java.lang.System.out.@@ p@@ r@@ int@@ (@@ ex@@ tra@@ Int@@ ); for (java.lang.String ar@@ g : ex@@ tra@@ A@@ ri@@ ty@@ Arg@@ s) { java.lang.System.out.@@ p@@ r@@ int@@ ("@@ , "); java.lang.System.out.@@ p@@ r@@ int@@ (@@ arg@@ ); } java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ )@@ "); java.lang.@@ invok@@ e.@@ Method@@ Hand@@ le m@@ h = lo@@ ok@@ up@@ .@@ find@@ St@@ ati@@ c@@ (@@ lo@@ ok@@ up@@ .@@ lo@@ ok@@ up@@ Class@@ (), method@@ Name, method@@ Type@@ ); return new java.lang.@@ invok@@ e.@@ Constan@@ t@@ Call@@ S@@ ite@@ (m@@ h@@ ); }
@@@ annotations.@@ Cal@@ le@@ d@@ By@@ In@@ d@@ y@@ (b@@ oot@@ str@@ ap@@ M@@ ethod = @@@ annotations.@@ B@@ oot@@ str@@ ap@@ Method@@ (@@ en@@ clo@@ sing@@ Type = Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ class@@ , name = "@@ lin@@ k@@ er@@ Method@@ 2@@ ", param@@ eter@@ Type@@ s = { java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es.@@ L@@ ook@@ up@@ .@@ class@@ , java.lang.String@@ .@@ class@@ , java.lang.@@ invok@@ e.@@ Method@@ Type@@ .@@ class@@ , int@@ .@@ class@@ , java.lang.String@@ []@@ .@@ class }@@ ), field@@ Or@@ Method@@ Name = "@@ method@@ Z@@ ", const@@ ant@@ Argument@@ s@@ For@@ B@@ oot@@ str@@ ap@@ M@@ ethod = { @@@ annotations.@@ Constan@@ t@@ (@@ int@@ Value = 10@@ 3@@ ) }@@ ) }@@ ) private static void method@@ Z@@ () { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ method@@ Z@@ "); }
@@@ annotations.@@ Cal@@ le@@ d@@ By@@ In@@ d@@ y@@ (b@@ oot@@ str@@ ap@@ M@@ ethod = @@@ annotations.@@ B@@ oot@@ str@@ ap@@ Method@@ (@@ en@@ clo@@ sing@@ Type = Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ class@@ , name = "@@ lin@@ k@@ er@@ Method@@ ", param@@ eter@@ Type@@ s = { java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es.@@ L@@ ook@@ up@@ .@@ class@@ , java.lang.String@@ .@@ class@@ , java.lang.@@ invok@@ e.@@ Method@@ Type@@ .@@ class@@ , java.lang.String@@ []@@ .@@ class }@@ ), field@@ Or@@ Method@@ Name = "@@ method@@ C@@ ") private static void method@@ C@@ () { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ method@@ C@@ "); }
@@@ annotations.@@ Cal@@ le@@ d@@ By@@ In@@ d@@ y@@ (b@@ oot@@ str@@ ap@@ M@@ ethod = @@@ annotations.@@ B@@ oot@@ str@@ ap@@ Method@@ (@@ en@@ clo@@ sing@@ Type = Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ class@@ , name = "@@ lin@@ k@@ er@@ Method@@ ", param@@ eter@@ Type@@ s = { java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es.@@ L@@ ook@@ up@@ .@@ class@@ , java.lang.String@@ .@@ class@@ , java.lang.@@ invok@@ e.@@ Method@@ Type@@ .@@ class@@ , java.lang.String@@ []@@ .@@ class }@@ ), field@@ Or@@ Method@@ Name = "@@ method@@ A@@ ", const@@ ant@@ Argument@@ s@@ For@@ B@@ oot@@ str@@ ap@@ M@@ ethod = { @@@ annotations.@@ Constan@@ t@@ (@@ string@@ Value = "@@ A@@ ach@@ en@@ "), @@@ annotations.@@ Constan@@ t@@ (@@ string@@ Value = "@@ A@@ al@@ b@@ or@@ g@@ "), @@@ annotations.@@ Constan@@ t@@ (@@ string@@ Value = "@@ A@@ al@@ to@@ ") }@@ ) private static void method@@ A@@ () { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ method@@ A@@ "); }
private static java.lang.@@ invok@@ e.@@ Call@@ S@@ it@@ e lin@@ k@@ er@@ Method@@ (java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es.@@ L@@ ook@@ u@@ p lo@@ ok@@ up@@ , java.lang.String method@@ Name, java.lang.@@ invok@@ e.@@ Method@@ Type method@@ Type, java.lang.String.@@ .@@ . ar@@ ity@@ Arg@@ s) throw@@ s java.lang.@@ Throw@@ able { java.lang.System.out.@@ p@@ r@@ int@@ ("@@ lin@@ k@@ er@@ Method@@ ("@@ ); java.lang.System.out.@@ p@@ r@@ int@@ (@@ lo@@ ok@@ up@@ .@@ lo@@ ok@@ up@@ Class@@ ()); java.lang.System.out.@@ p@@ r@@ int@@ ("@@ , "); java.lang.System.out.@@ p@@ r@@ int@@ (m@@ ethod@@ Name); java.lang.System.out.@@ p@@ r@@ int@@ ("@@ , "); java.lang.System.out.@@ p@@ r@@ int@@ (m@@ ethod@@ Type@@ ); for (java.lang.String ar@@ g : ar@@ ity@@ Arg@@ s) { java.lang.System.out.@@ p@@ r@@ int@@ ("@@ , "); java.lang.System.out.@@ p@@ r@@ int@@ (@@ arg@@ ); } java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ )@@ "); java.lang.@@ invok@@ e.@@ Method@@ Hand@@ le m@@ h = lo@@ ok@@ up@@ .@@ find@@ St@@ ati@@ c@@ (@@ lo@@ ok@@ up@@ .@@ lo@@ ok@@ up@@ Class@@ (), method@@ Name, method@@ Type@@ ); return new java.lang.@@ invok@@ e.@@ Constan@@ t@@ Call@@ S@@ ite@@ (m@@ h@@ ); }
static void test@@ () { for (@@ int i = 0; i < 2@@ ; ++@@ i@@ ) { Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ method@@ A@@ (); Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ method@@ B@@ (); Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ method@@ C@@ (); } for (@@ int i = 0; i < 2@@ ; ++@@ i@@ ) { Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ method@@ X@@ (); Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ method@@ Y@@ (); Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ method@@ Z@@ (); } }
@@@ annotations.@@ Cal@@ le@@ d@@ By@@ In@@ d@@ y@@ (b@@ oot@@ str@@ ap@@ M@@ ethod = @@@ annotations.@@ B@@ oot@@ str@@ ap@@ Method@@ (@@ en@@ clo@@ sing@@ Type = Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ class@@ , name = "@@ lin@@ k@@ er@@ Method@@ 2@@ ", param@@ eter@@ Type@@ s = { java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es.@@ L@@ ook@@ up@@ .@@ class@@ , java.lang.String@@ .@@ class@@ , java.lang.@@ invok@@ e.@@ Method@@ Type@@ .@@ class@@ , int@@ .@@ class@@ , java.lang.String@@ []@@ .@@ class }@@ ), field@@ Or@@ Method@@ Name = "@@ method@@ Y@@ ", const@@ ant@@ Argument@@ s@@ For@@ B@@ oot@@ str@@ ap@@ M@@ ethod = { @@@ annotations.@@ Constan@@ t@@ (@@ int@@ Value = 10@@ 2@@ ), @@@ annotations.@@ Constan@@ t@@ (@@ string@@ Value = "@@ z@@ on@@ ic@@ ") }
@@@ annotations.@@ Cal@@ le@@ d@@ By@@ In@@ d@@ y@@ (b@@ oot@@ str@@ ap@@ M@@ ethod = @@@ annotations.@@ B@@ oot@@ str@@ ap@@ Method@@ (@@ en@@ clo@@ sing@@ Type = Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ class@@ , name = "@@ lin@@ k@@ er@@ Method@@ ", param@@ eter@@ Type@@ s = { java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es.@@ L@@ ook@@ up@@ .@@ class@@ , java.lang.String@@ .@@ class@@ , java.lang.@@ invok@@ e.@@ Method@@ Type@@ .@@ class@@ , java.lang.String@@ []@@ .@@ class }@@ ), field@@ Or@@ Method@@ Name = "@@ method@@ B@@ ", const@@ ant@@ Argument@@ s@@ For@@ B@@ oot@@ str@@ ap@@ M@@ ethod = { @@@ annotations.@@ Constan@@ t@@ (@@ string@@ Value = "@@ b@@ ar@@ i@@ um@@ ") }@@ ) private static void method@@ B@@ () { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ method@@ B@@ "); }
@@@ annotations.@@ Cal@@ le@@ d@@ By@@ In@@ d@@ y@@ (b@@ oot@@ str@@ ap@@ M@@ ethod = @@@ annotations.@@ B@@ oot@@ str@@ ap@@ Method@@ (@@ en@@ clo@@ sing@@ Type = Test@@ Vari@@ able@@ A@@ ri@@ ty@@ Lin@@ k@@ er@@ Method@@ .@@ class@@ , name = "@@ lin@@ k@@ er@@ Method@@ 2@@ ", param@@ eter@@ Type@@ s = { java.lang.@@ invok@@ e.@@ Method@@ Hand@@ l@@ es.@@ L@@ ook@@ up@@ .@@ class@@ , java.lang.String@@ .@@ class@@ , java.lang.@@ invok@@ e.@@ Method@@ Type@@ .@@ class@@ , int@@ .@@ class@@ , java.lang.String@@ []@@ .@@ class }@@ ), field@@ Or@@ Method@@ Name = "@@ method@@ X@@ ", const@@ ant@@ Argument@@ s@@ For@@ B@@ oot@@ str@@ ap@@ M@@ ethod = { @@@ annotations.@@ Constan@@ t@@ (@@ int@@ Value = 10@@ 1@@ ), @@@ annotations.@@ Constan@@ t@@ (@@ string@@ Value = "@@ z@@ oo@@ "), @@@ annotations.@@ Constan@@ t@@ (@@ string@@ Value = "@@ z@@ oog@@ en@@ e@@ "), @@@ annotations.@@ Constan@@ t@@ (@@ string@@ Value = "@@ z@@ oog@@ en@@ ic@@ ") }@@ ) private static void method@@ X@@ () { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ method@@ X@@ "); }
@java.lang.Override public void on@@ Create@@ (android.os.@@ Bund@@ le s@@ av@@ ed@@ Instance@@ State@@ ) { super@@ .@@ on@@ Create@@ (@@ s@@ av@@ ed@@ Instance@@ State@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ Input@@ Ac@@ tivity.@@ LO@@ G_@@ TAG, (("@@ on@@ Create@@ : - m@@ I@@ s@@ Response@@ S@@ ent@@ [@@ " + (m@@ I@@ s@@ Response@@ S@@ ent@@ )) + "@@ ]@@ ")); if ((@@ app@@ Service@@ ) == null@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ cat@@ .@@ C@@ at@@ Log.@@ d@@ (com.android.@@ st@@ k.@@ St@@ k@@ Input@@ Ac@@ tivity.@@ LO@@ G_@@ TAG, "@@ on@@ Create@@ : - app@@ Ser@@ vice is null@@ "); fin@@ is@@ h@@ (); return@@ ; } android.@@ app.@@ Action@@ B@@ ar action@@ B@@ ar = null@@ ; if (get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ sho@@ w@@ _@@ m@@ en@@ u@@ _@@ ti@@ t@@ le@@ _@@ on@@ ly@@ _@@ m@@ en@@ u@@ )) { action@@ B@@ ar = get@@ Action@@ B@@ ar@@ (); if (@@ action@@ B@@ ar != null@@ ) { action@@ B@@ ar.@@ h@@ ide@@ (); } } set@@ Content@@ View@@ (@@ R.@@ layout.@@ st@@ k@@ _@@ input@@ ); if (@@ action@@ B@@ ar != null@@ ) { m@@ M@@ ore@@ Option@@ s = find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ m@@ or@@ e); m@@ M@@ ore@@ Option@@ s.@@ set@@ Vi@@ si@@ b@@ ili@@ ty@@ (@@ View@@ .@@ V@@ I@@ SI@@ B@@ L@@ E); m@@ M@@ ore@@ Option@@ s.@@ set@@ On@@ C@@ li@@ ck@@ Listener@@ (@@ this@@ ); } m@@ Text@@ I@@ n = ((@@ android.@@ widget@@ .@@ E@@ d@@ it@@ Text@@ ) (@@ this@@ .@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ in@@ _@@ text@@ ))); m@@ Pro@@ mp@@ t@@ Vi@@ e@@ w = ((@@ android.@@ widget@@ .@@ Text@@ View@@ ) (@@ this@@ .@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ pro@@ mp@@ t@@ ))); m@@ In@@ stan@@ ce = this@@ ; android.@@ widget@@ .@@ B@@ utt@@ on = ((@@ android.@@ widget@@ .@@ B@@ utton@@ ) (@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ b@@ utton@@ _@@ ok@@ ))); android.@@ widget@@ .@@ B@@ utt@@ on y@@ es@@ B@@ utt@@ on = ((@@ android.@@ widget@@ .@@ B@@ utton@@ ) (@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ b@@ utton@@ _@@ y@@ es@@ ))); android.@@ widget@@ .@@ B@@ utt@@ on no@@ B@@ utt@@ on = ((@@ android.@@ widget@@ .@@ B@@ utton@@ ) (@@ find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ b@@ utton@@ _@@ no@@ ))); ok@@ B@@ utton@@ .set@@ On@@ C@@ li@@ ck@@ Listener@@ (@@ this@@ ); no@@ B@@ utton@@ .set@@ On@@ C@@ li@@ ck@@ Listener@@ (@@ this@@ ); no@@ B@@ utton@@ .set@@ On@@ C@@ li@@ ck@@ Listener@@ (@@ this@@ ); m@@ Y@@ es@@ No@@ Lay@@ out = find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ y@@ es@@ _@@ no@@ _@@ lay@@ out); m@@ N@@ or@@ m@@ al@@ Lay@@ out = find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ n@@ or@@ m@@ al@@ _@@ lay@@ out); init@@ From@@ Intent@@ (get@@ Intent@@ ()); m@@ Context = get@@ B@@ ase@@ Context@@ (); m@@ Ac@@ ce@@ p@@ t@@ User@@ s@@ In@@ put = true@@ ; }
@@@ android.@@ telephony.@@ Service@@ State.@@ D@@ up@@ le@@ x@@ Mod@@ e public int get@@ D@@ up@@ le@@ x@@ Mode@@ () { if (!@@ (android.@@ telephony.@@ Service@@ State.@@ is@@ L@@ te@@ (m@@ R@@ il@@ Data@@ R@@ ad@@ io@@ T@@ ec@@ h@@ no@@ log@@ y@@ ))) { return android.@@ telephony.@@ Service@@ State.@@ D@@ U@@ P@@ LE@@ X@@ _MOD@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ ; } int b@@ an@@ d = android.@@ telephony.@@ Channel@@ Utils.@@ get@@ Oper@@ at@@ ing@@ B@@ and@@ For@@ E@@ ar@@ fc@@ n@@ (m@@ Channel@@ Number@@ ); if (b@@ an@@ d >@@ = (android.@@ telephony.@@ Access@@ Network@@ Constants.@@ E@@ u@@ tr@@ an@@ B@@ and@@ .@@ B@@ AN@@ D_@@ 6@@ 5@@ )) { return android.@@ telephony.@@ Service@@ State.@@ D@@ U@@ P@@ LE@@ X@@ _MOD@@ E_@@ F@@ D@@ ; } else if (b@@ an@@ d >@@ = (android.@@ telephony.@@ Access@@ Network@@ Constants.@@ E@@ u@@ tr@@ an@@ B@@ and@@ .@@ B@@ AN@@ D_@@ 3@@ 3@@ )) { return android.@@ telephony.@@ Service@@ State.@@ D@@ U@@ P@@ LE@@ X@@ _MOD@@ E_@@ T@@ D@@ ; } else if (b@@ an@@ d >@@ = (android.@@ telephony.@@ Access@@ Network@@ Constants.@@ E@@ u@@ tr@@ an@@ B@@ and@@ .@@ B@@ AN@@ D_@@ 1@@ )) { return android.@@ telephony.@@ Service@@ State.@@ D@@ U@@ P@@ LE@@ X@@ _MOD@@ E_@@ F@@ D@@ D@@ ; } return android.@@ telephony.@@ Service@@ State.@@ D@@ U@@ P@@ LE@@ X@@ _MOD@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ ; }
private void update@@ Channel@@ Number@@ () { android.@@ telephony.@@ C@@ ell@@ Info p@@ ri@@ m@@ ary@@ C@@ ell@@ Info = null@@ ; for (android.@@ telephony.@@ C@@ ell@@ Info cel@@ l@@ Info : m@@ L@@ ast@@ C@@ ell@@ Info@@ List@@ ) { if ((@@ cel@@ l@@ Info@@ .get@@ C@@ ell@@ Connection@@ Statu@@ s()) == (android.@@ telephony.@@ C@@ ell@@ Info.@@ C@@ ON@@ N@@ EC@@ TION@@ _P@@ R@@ I@@ M@@ AR@@ Y@@ _S@@ ER@@ V@@ ING@@ )) { p@@ ri@@ m@@ ary@@ C@@ ell@@ Info = cel@@ l@@ Info@@ ; break@@ ; } } if (p@@ ri@@ m@@ ary@@ C@@ ell@@ Info instanceof android.@@ telephony.@@ C@@ ell@@ Info@@ G@@ s@@ m@@ ) { android.@@ telephony.@@ C@@ ell@@ Info@@ G@@ s@@ m cel@@ l@@ Info@@ G@@ s@@ m = ((@@ android.@@ telephony.@@ C@@ ell@@ Info@@ G@@ s@@ m@@ ) (p@@ ri@@ m@@ ary@@ C@@ ell@@ Info@@ )); int channe@@ l@@ N@@ umb@@ er = cel@@ l@@ Info@@ G@@ s@@ m@@ .get@@ C@@ ell@@ Id@@ enti@@ ty@@ ().get@@ Ar@@ fc@@ n@@ (); m@@ New@@ SS@@ .set@@ Channel@@ N@@ umb@@ er(@@ channe@@ l@@ Number@@ ); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ V@@ D@@ B@@ G) { log@@ (("@@ Set@@ t@@ ing channe@@ l n@@ umber@@ , AR@@ F@@ C@@ N@@ : " + channe@@ l@@ Number@@ )); } } else if (p@@ ri@@ m@@ ary@@ C@@ ell@@ Info instanceof android.@@ telephony.@@ C@@ ell@@ Info@@ W@@ c@@ d@@ ma@@ ) { android.@@ telephony.@@ C@@ ell@@ Info@@ W@@ c@@ d@@ m@@ a cel@@ l@@ Info@@ W@@ c@@ d@@ m@@ a = ((@@ android.@@ telephony.@@ C@@ ell@@ Info@@ W@@ c@@ d@@ ma@@ ) (p@@ ri@@ m@@ ary@@ C@@ ell@@ Info@@ )); int channe@@ l@@ N@@ umb@@ er = cel@@ l@@ Info@@ W@@ c@@ d@@ ma@@ .get@@ C@@ ell@@ Id@@ enti@@ ty@@ ().get@@ U@@ ar@@ fc@@ n@@ (); m@@ New@@ SS@@ .set@@ Channel@@ N@@ umb@@ er(@@ channe@@ l@@ Number@@ ); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ V@@ D@@ B@@ G) { log@@ (("@@ Set@@ t@@ ing channe@@ l n@@ umber@@ , U@@ AR@@ F@@ C@@ N@@ : " + channe@@ l@@ Number@@ )); } } else if (p@@ ri@@ m@@ ary@@ C@@ ell@@ Info instanceof android.@@ telephony.@@ C@@ ell@@ Info@@ L@@ te@@ ) { android.@@ telephony.@@ C@@ ell@@ Info@@ L@@ t@@ e cel@@ l@@ Info@@ L@@ t@@ e = ((@@ android.@@ telephony.@@ C@@ ell@@ Info@@ L@@ te@@ ) (p@@ ri@@ m@@ ary@@ C@@ ell@@ Info@@ )); int channe@@ l@@ N@@ umb@@ er = cel@@ l@@ Info@@ L@@ te@@ .get@@ C@@ ell@@ Id@@ enti@@ ty@@ ().get@@ E@@ ar@@ fc@@ n@@ (); m@@ New@@ SS@@ .set@@ Channel@@ N@@ umb@@ er(@@ channe@@ l@@ Number@@ ); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ V@@ D@@ B@@ G) { log@@ (("@@ Set@@ t@@ ing channe@@ l n@@ umber@@ , E@@ AR@@ F@@ C@@ N@@ : " + channe@@ l@@ Number@@ )); } } else { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ D@@ B@@ G) { log@@ ("@@ Co@@ ul@@ d not set Service@@ State channe@@ l n@@ umber@@ "); } } }
private void assert@@ Result@@ Not@@ Empty@@ (android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s result@@ ) { assert@@ True@@ ((@@ result != null@@ )); android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s.@@ Bu@@ ck@@ et bu@@ ck@@ et = new android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s.@@ Bu@@ ck@@ et@@ (); long to@@ t@@ al@@ T@@ x@@ Pack@@ et@@ s = 0; long to@@ t@@ al@@ R@@ x@@ Pack@@ et@@ s = 0; long to@@ t@@ al@@ T@@ x@@ Byte@@ s = 0; long to@@ t@@ al@@ R@@ x@@ Byte@@ s = 0; while (@@ res@@ ult.@@ has@@ Next@@ Bu@@ ck@@ et@@ ()) { assert@@ True@@ (@@ res@@ ul@@ t.get@@ Next@@ Bu@@ ck@@ et@@ (@@ bu@@ ck@@ et@@ )); assert@@ Tim@@ est@@ amp@@ s(@@ bu@@ ck@@ et@@ ); assert@@ Equal@@ s(@@ bu@@ ck@@ et@@ .get@@ State@@ (), Network@@ Stat@@ s.@@ Bu@@ ck@@ et@@ .@@ STATE_@@ AL@@ L); assert@@ Equal@@ s(@@ bu@@ ck@@ et@@ .get@@ M@@ eter@@ ed@@ (), Network@@ Stat@@ s.@@ Bu@@ ck@@ et@@ .@@ ME@@ TER@@ E@@ D_@@ AL@@ L); assert@@ Equal@@ s(@@ bu@@ ck@@ et@@ .get@@ Default@@ Network@@ (), Network@@ Stat@@ s.@@ Bu@@ ck@@ et@@ .@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _@@ AL@@ L); if ((@@ bu@@ ck@@ et@@ .get@@ U@@ id@@ ()) == (java.lang.@@ Pro@@ ces@@ s.@@ my@@ U@@ id@@ ())) { to@@ t@@ al@@ T@@ x@@ Pack@@ et@@ s +@@ = bu@@ ck@@ et@@ .get@@ T@@ x@@ Pack@@ et@@ s(); to@@ t@@ al@@ R@@ x@@ Pack@@ et@@ s +@@ = bu@@ ck@@ et@@ .get@@ R@@ x@@ Pack@@ et@@ s(); to@@ t@@ al@@ T@@ x@@ Byte@@ s +@@ = bu@@ ck@@ et@@ .get@@ T@@ x@@ Bytes@@ (); to@@ t@@ al@@ R@@ x@@ Byte@@ s +@@ = bu@@ ck@@ et@@ .get@@ R@@ x@@ Bytes@@ (); } } assert@@ False@@ (@@ res@@ ul@@ t.get@@ Next@@ Bu@@ ck@@ et@@ (@@ bu@@ ck@@ et@@ )); assert@@ True@@ (("@@ N@@ o R@@ x byte@@ s us@@ age for u@@ id " + (java.lang.@@ Pro@@ ces@@ s.@@ my@@ U@@ id@@ ()@@ )), (@@ to@@ t@@ al@@ R@@ x@@ Byte@@ s > 0@@ )); assert@@ True@@ (("@@ N@@ o R@@ x pack@@ et@@ s us@@ age for u@@ id " + (java.lang.@@ Pro@@ ces@@ s.@@ my@@ U@@ id@@ ()@@ )), (@@ to@@ t@@ al@@ R@@ x@@ Pack@@ et@@ s > 0@@ )); assert@@ True@@ (("@@ N@@ o T@@ x byte@@ s us@@ age for u@@ id " + (java.lang.@@ Pro@@ ces@@ s.@@ my@@ U@@ id@@ ()@@ )), (@@ to@@ t@@ al@@ T@@ x@@ Byte@@ s > 0@@ )); assert@@ True@@ (("@@ N@@ o T@@ x pack@@ et@@ s us@@ age for u@@ id " + (java.lang.@@ Pro@@ ces@@ s.@@ my@@ U@@ id@@ ()@@ )), (@@ to@@ t@@ al@@ T@@ x@@ Pack@@ et@@ s > 0@@ )); }
public void test@@ App@@ D@@ eta@@ il@@ s() throw@@ s java.lang.Exception { for (@@ int i = 0; i < (m@@ Network@@ Inter@@ fa@@ ces@@ To@@ Test.@@ length); ++@@ i@@ ) { if (!@@ (s@@ ho@@ ul@@ d@@ Test@@ Th@@ is@@ Network@@ Type@@ (i@@ , ((@@ android.@@ app.@@ us@@ age.@@ cts.@@ Network@@ U@@ s@@ age@@ Stat@@ s@@ Test.@@ M@@ IN@@ UT@@ E@@ ) * 12@@ 0@@ )@@ ))) { continue@@ ; } set@@ App@@ O@@ ps@@ Mode@@ (@@ App@@ O@@ ps@@ Manager.@@ O@@ P@@ S@@ TR@@ _@@ GE@@ T_@@ US@@ A@@ G@@ E_@@ STAT@@ S@@ , "@@ al@@ low@@ "); android.@@ app.@@ us@@ age.@@ Network@@ Stat@@ s result = null@@ ; try { result = m@@ N@@ s@@ m.@@ qu@@ er@@ y@@ D@@ eta@@ il@@ s@@ (m@@ Network@@ Inter@@ fa@@ ces@@ To@@ Test@@ [i@@ ]@@ .get@@ Network@@ Type@@ (), get@@ Sub@@ s@@ cri@@ b@@ er@@ Id@@ (i@@ ), m@@ Start@@ Time@@ , m@@ En@@ d@@ Time@@ ); assert@@ Result@@ Not@@ Empty@@ (@@ result@@ ); } catch (android.os.@@ Remote@@ Exception | java.lang.@@ Sec@@ ur@@ ity@@ Exception e) { fail@@ (("@@ Co@@ ul@@ d fail@@ s wit@@ h excepti@@ on@@ : " + (e.toString()))); } final@@ l@@ y { if (@@ result != null@@ ) { res@@ ult.@@ close(); } } set@@ App@@ O@@ ps@@ Mode@@ (@@ App@@ O@@ ps@@ Manager.@@ O@@ P@@ S@@ TR@@ _@@ GE@@ T_@@ US@@ A@@ G@@ E_@@ STAT@@ S@@ , "@@ d@@ en@@ y@@ "); try { result = m@@ N@@ s@@ m.@@ qu@@ er@@ y@@ D@@ eta@@ il@@ s@@ (m@@ Network@@ Inter@@ fa@@ ces@@ To@@ Test@@ [i@@ ]@@ .get@@ Network@@ Type@@ (), get@@ Sub@@ s@@ cri@@ b@@ er@@ Id@@ (i@@ ), m@@ Start@@ Time@@ , m@@ En@@ d@@ Time@@ ); fail@@ ("@@ S@@ ho@@ ul@@ d test@@ App@@ D@@ eta@@ il@@ s fail@@ s@@ : n@@ o excepti@@ on throw@@ n@@ .@@ "); } catch (android.os.@@ Remote@@ Exception e) { fail@@ (("@@ S@@ ho@@ ul@@ d fail@@ s wit@@ h excepti@@ on@@ : " + (e.toString()))); } catch (java.lang.@@ Sec@@ ur@@ ity@@ Exception e) { } }
private static void en@@ su@@ re@@ In@@ iti@@ aliz@@ ed@@ (java.lang.@@ Clas@@ s c@@ ) { c@@ .getName@@ (); }
private void m@@ ay@@ b@@ e@@ Add@@ ed@@ Im@@ s@@ Service@@ (java.lang.String package@@ Name@@ ) { android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ m@@ ay@@ b@@ e@@ Add@@ ed@@ Im@@ s@@ Service@@ : package@@ Name@@ : " + package@@ Name@@ )); java.util.List<@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info@@ > in@@ fo@@ s = get@@ Im@@ s@@ Service@@ Info@@ (@@ package@@ Name); java.util.List<@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info@@ > new@@ ly@@ Add@@ ed@@ Info@@ s = new java.util.ArrayList<@@ >(); for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info in@@ f@@ o : in@@ fo@@ s) { java.util.@@ Option@@ al@@ <@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info@@ > mat@@ ch = get@@ Info@@ By@@ Comp@@ onent@@ Name@@ (m@@ In@@ st@@ al@@ le@@ d@@ Ser@@ vices@@ Cach@@ e@@ , in@@ f@@ o.@@ name@@ ); if (m@@ atch@@ .is@@ P@@ res@@ ent@@ ()) { if (in@@ f@@ o.@@ f@@ e@@ ature@@ From@@ M@@ et@@ ad@@ ata@@ ) { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ m@@ ay@@ b@@ e@@ Add@@ ed@@ Im@@ s@@ Service@@ : " + (in@@ f@@ o.@@ name@@ ))); android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ((@@ ("@@ m@@ ay@@ b@@ e@@ Add@@ ed@@ Im@@ s@@ Service@@ : " + e@@ ature@@ s - O@@ l@@ d f@@ e@@ at@@ ur@@ es@@ : " + (m@@ atch@@ .get@@ ())) + "@@ : ") + in@@ f@@ e@@ at@@ ur@@ es@@ )); match@@ .get@@ ()@@ .@@ re@@ pla@@ ce@@ F@@ e@@ at@@ ur@@ es@@ (in@@ fo@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ()); update@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ (in@@ fo@@ ); } else { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ m@@ ay@@ b@@ e@@ Add@@ ed@@ Im@@ s@@ Ser@@ vice to c@@ ach@@ e@@ : " + (in@@ f@@ o.@@ name@@ ))); m@@ In@@ st@@ al@@ le@@ d@@ Ser@@ vices@@ C@@ ache.@@ add@@ (in@@ fo@@ ); if (in@@ f@@ o.@@ f@@ e@@ ature@@ From@@ M@@ et@@ ad@@ ata@@ ) { new@@ ly@@ Add@@ ed@@ Info@@ s.@@ add@@ (in@@ fo@@ ); } } else { } } for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info in@@ f@@ o : new@@ ly@@ Add@@ ed@@ Info@@ s) { if (is@@ Ac@@ tive@@ C@@ ar@@ ri@@ er@@ Service@@ (in@@ fo@@ )) { b@@ ind@@ New@@ Im@@ s@@ Service@@ (in@@ fo@@ ); update@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ (get@@ Im@@ s@@ Service@@ Info@@ From@@ Cach@@ e@@ (m@@ Device@@ Service@@ )); } else if (is@@ Device@@ Service@@ (in@@ fo@@ )) { b@@ ind@@ New@@ Im@@ s@@ Service@@ (in@@ fo@@ ); } } }
private void b@@ ind@@ New@@ Im@@ s@@ Service@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info in@@ fo@@ ) { if (in@@ f@@ o == null@@ ) { return@@ ; } java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > f@@ e@@ ature@@ s = cal@@ c@@ ul@@ ate@@ F@@ e@@ at@@ ur@@ es@@ To@@ Create@@ (in@@ fo@@ ); if ((@@ f@@ e@@ at@@ ur@@ es.@@ size@@ ()) > 0) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = in@@ f@@ o.@@ cont@@ ro@@ l@@ ler@@ Fa@@ ctory.@@ create@@ (m@@ Context@@ , in@@ f@@ o.@@ name@@ , this@@ ); android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ((@@ ("@@ Im@@ s@@ Service@@ : Im@@ s@@ Service@@ : " + (@@ cont@@ ro@@ l@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ())) + " wit@@ h f@@ e@@ at@@ ur@@ es@@ : ") + f@@ e@@ at@@ ur@@ es@@ )); cont@@ ro@@ l@@ ler.@@ b@@ ind@@ (f@@ e@@ at@@ ur@@ es@@ ); m@@ Ac@@ tive@@ Control@@ ler@@ s.@@ add(@@ cont@@ ro@@ l@@ ler@@ ); } }
@java.lang.Override public void on@@ Service@@ Connec@@ ted@@ (android.@@ content.@@ Comp@@ onent@@ Name name@@ , android.os.@@ I@@ B@@ in@@ der service@@ ) { }
void add@@ F@@ e@@ ature@@ For@@ All@@ S@@ lo@@ ts@@ (@@ int f@@ e@@ ature@@ ) { for (@@ int i = 0; i < (m@@ N@@ um@@ S@@ lo@@ t@@ s); i++) { m@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es.@@ add@@ (@@ new android.util.@@ Pair@@ (i@@ , f@@ e@@ ature@@ )); } }
@java.lang.Override public int has@@ h@@ Code@@ () { int result = ((@@ name@@ ) != null@@ ) ? nam@@ e.@@ has@@ h@@ Code@@ () : 0; result = (@@ 3@@ 1 * result@@ ) + (m@@ Sup@@ ported@@ F@@ e@@ ature@@ s.@@ has@@ h@@ Code@@ ()); result = (@@ 3@@ 1 * result@@ ) + ((@@ cont@@ ro@@ l@@ ler@@ Factory@@ ) != null ? cont@@ ro@@ l@@ ler@@ Fa@@ ctory.@@ has@@ h@@ Code@@ () : 0); return result@@ ; }
@java.lang.Override public java.lang.String toString@@ () { java.lang.String@@ Builder re@@ s = new java.lang.String@@ Builder@@ (); res@@ .@@ append@@ ("@@ [@@ Im@@ s@@ Service@@ Info@@ ] name@@ =@@ "); res@@ .@@ append(@@ name@@ ); res@@ .@@ append@@ ("@@ , sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ =@@ [@@ "); for (android.@@ util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ > f@@ e@@ at@@ ur@@ e : m@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es) { res@@ .@@ append@@ ("@@ ); res@@ .@@ append(@@ f@@ e@@ ature@@ .@@ fi@@ rst@@ ); res@@ .@@ append@@ ("@@ ,@@ "); res@@ .@@ append(@@ f@@ e@@ ature@@ .@@ sec@@ ond@@ ); res@@ .@@ append@@ ("@@ ) "); } res@@ .@@ append@@ ("@@ ]@@ , sup@@ port@@ s@@ E@@ merg@@ enc@@ y@@ =@@ "); res@@ .@@ append@@ (s@@ up@@ port@@ s@@ E@@ merg@@ enc@@ y@@ M@@ m@@ T@@ el@@ ); return res@@ .@@ toString@@ (); }
private void update@@ B@@ ound@@ C@@ ar@@ ri@@ er@@ Ser@@ vices@@ (@@ int sub@@ Id@@ ) { int s@@ lo@@ t@@ Id = m@@ Sub@@ s@@ cription@@ Manager@@ Prox@@ y@@ .get@@ S@@ lo@@ t@@ Index@@ (s@@ u@@ b@@ Id@@ ); java.lang.String new@@ Package@@ Name = mC@@ ar@@ ri@@ er@@ Config@@ Manager.@@ get@@ Config@@ For@@ Sub@@ Id@@ (s@@ u@@ b@@ Id@@ )@@ .get@@ String(@@ C@@ ar@@ ri@@ er@@ Config@@ Manager.@@ KE@@ Y@@ _C@@ ON@@ FI@@ G_@@ I@@ M@@ S@@ _P@@ AC@@ K@@ A@@ G@@ E_@@ O@@ V@@ ER@@ R@@ ID@@ E_@@ S@@ TR@@ ING@@ , null@@ ); if ((@@ s@@ lo@@ t@@ Id != (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _@@ SI@@ M@@ _S@@ LO@@ T_@@ IN@@ DE@@ X@@ )) && (s@@ lo@@ t@@ Id < (m@@ N@@ um@@ S@@ lo@@ ts@@ ))) { java.lang.String old@@ Package@@ Name = mC@@ ar@@ ri@@ er@@ Ser@@ vices@@ [@@ s@@ lo@@ t@@ Id@@ ]; mC@@ ar@@ ri@@ er@@ Ser@@ vices@@ [@@ s@@ lo@@ t@@ Id@@ ] = new@@ Package@@ Name@@ ; if (!@@ (android.@@ text.@@ Text@@ Utils.@@ equal@@ s@@ (@@ new@@ Package@@ Name, old@@ Package@@ Name@@ ))) { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, Con@@ fi@@ g up@@ dat@@ ed@@ , b@@ ind@@ ing new Im@@ s@@ Ser@@ vice un@@ b@@ ind@@ Im@@ s@@ Service@@ (get@@ Im@@ s@@ Service@@ Info@@ From@@ Cach@@ e(@@ old@@ Package@@ Name@@ )); if (!@@ (android.@@ text.@@ Text@@ Utils.@@ equal@@ s@@ (@@ new@@ Package@@ Name, old@@ Package@@ Name@@ ))) { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, "@@ S@@ k@@ ip@@ p@@ ing new@@ "); } } }
void re@@ pla@@ ce@@ F@@ e@@ at@@ ur@@ es@@ (java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > m@@ New@@ F@@ e@@ at@@ ur@@ es) { m@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es.@@ clear@@ (); m@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es.@@ add@@ All@@ (m@@ New@@ F@@ e@@ at@@ ur@@ es@@ ); }
@com.android.annotations.NonNull java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ () { return m@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ; }
private java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > cal@@ c@@ ul@@ ate@@ F@@ e@@ at@@ ur@@ es@@ To@@ Create@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info in@@ fo@@ ) { java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > im@@ s@@ F@@ e@@ at@@ ur@@ es@@ By@@ S@@ lo@@ t = new java.util.@@ Hash@@ Set@@ <@@ >(); int s@@ lo@@ t@@ Id = get@@ S@@ lo@@ t@@ For@@ Ac@@ tive@@ C@@ ar@@ ri@@ er@@ Service@@ (in@@ fo@@ ); if (s@@ lo@@ t@@ Id != (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ IN@@ V@@ AL@@ ID@@ _S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _@@ ID@@ )) { im@@ s@@ F@@ e@@ at@@ ur@@ es@@ By@@ S@@ lo@@ t.@@ add@@ All@@ (in@@ fo@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ().@@ str@@ eam@@ ().@@ fil@@ ter@@ (@@ ( f@@ e@@ ature@@ ) -@@ > s@@ lo@@ t@@ Id@@ ) == f@@ e@@ ature@@ .@@ fi@@ rs@@ t@@ ).@@ co@@ lle@@ ct@@ (java.util.@@ str@@ eam@@ .@@ Co@@ lle@@ ctor@@ s.@@ to@@ List@@ ())); } else if (is@@ Device@@ Service@@ (in@@ fo@@ )) { for (@@ int i = 0; i < (m@@ N@@ um@@ S@@ lo@@ t@@ s); i++) { final int curr@@ S@@ lo@@ t@@ Id = i@@ ; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info c@@ ar@@ ri@@ er@@ Im@@ s@@ Info = get@@ Im@@ s@@ Service@@ Info@@ From@@ Cach@@ e@@ (m@@ C@@ ar@@ ri@@ er@@ Ser@@ vices@@ [i@@ ]@@ ); if (c@@ ar@@ ri@@ er@@ Im@@ s@@ Info == null@@ ) { im@@ s@@ F@@ e@@ at@@ ur@@ es@@ By@@ S@@ lo@@ t.@@ add@@ All@@ (in@@ fo@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ().@@ str@@ eam@@ ().@@ fil@@ ter@@ ().@@ str@@ eam@@ ().@@ fil@@ ter@@ (("@@ get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ().@@ str@@ eam@@ ().@@ fil@@ ter@@ : f@@ e@@ ature@@ ) -@@ > curr@@ S@@ lo@@ t@@ Id == f@@ e@@ ature@@ .@@ fi@@ rst@@ ).@@ co@@ lle@@ ct@@ (java.util.@@ str@@ eam@@ .@@ Co@@ lle@@ ctor@@ s.@@ to@@ List@@ ())); } else { java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > device@@ F@@ e@@ ature@@ s = new java.util.@@ Hash@@ Set@@ (in@@ fo@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ()); device@@ F@@ e@@ at@@ ur@@ es.@@ remove@@ All@@ (c@@ ar@@ ri@@ er@@ Im@@ s@@ Info@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ()); im@@ s@@ F@@ e@@ at@@ ur@@ es@@ By@@ S@@ lo@@ t.@@ add@@ All@@ (@@ device@@ F@@ e@@ at@@ ur@@ es.@@ str@@ eam@@ ().@@ fil@@ ter@@ (("@@ N@@ E@@ at@@ ur@@ es@@ : f@@ e@@ ature@@ ) -@@ > curr@@ S@@ lo@@ t@@ Id
public boolean start@@ () { android.content.@@ Int@@ ent im@@ s@@ Service@@ Int@@ ent = new android.content.@@ Intent@@ (m@@ Intent@@ Filter@@ ).set@@ Comp@@ onent@@ (m@@ Name); int service@@ Flag@@ s = (android.@@ content.@@ Context.@@ B@@ IN@@ D_@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D_@@ S@@ ER@@ V@@ IC@@ E@@ ) | (android.@@ content.@@ Context.@@ B@@ IN@@ D_@@ I@@ M@@ P@@ OR@@ TA@@ N@@ T@@ ); boolean b@@ ind@@ St@@ ar@@ ted = m@@ Context.@@ b@@ ind@@ Service@@ (@@ im@@ s@@ Service@@ Intent@@ , this@@ , service@@ Flag@@ s); if (!@@ b@@ ind@@ St@@ ar@@ ted@@ ) { m@@ Context.@@ un@@ b@@ ind@@ Service@@ (@@ this@@ ); } return b@@ ind@@ St@@ ar@@ ted@@ ; }
void on@@ Im@@ s@@ Service@@ Q@@ u@@ er@@ y@@ Result@@ (java.lang.String name@@ , java.util.@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > f@@ e@@ at@@ ur@@ es@@ );
private boolean is@@ Im@@ s@@ Service@@ Info@@ Equal@@ (android.@@ content.@@ Comp@@ onent@@ Name name@@ , java.util.@@ Set@@ <java.lang.String@@ > f@@ e@@ at@@ ur@@ es@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info s@@ Info@@ ) { if (!(@@ java.util.@@ Object@@ s.@@ equals(@@ s@@ Info.@@ name@@ , name@@ ))) { return false@@ ; } for (java.lang.String f : f@@ e@@ at@@ ur@@ es) { switch (f@@ ) { case Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ _@@ F@@ E@@ AT@@ UR@@ E : if (!@@ (s@@ Info@@ .@@ sup@@ port@@ s@@ E@@ merg@@ enc@@ y@@ M@@ m@@ T@@ el@@ )) { return false@@ ; } break@@ ; case Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _M@@ M@@ TE@@ L@@ _@@ F@@ E@@ AT@@ UR@@ E : if (!@@ (s@@ Info@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ()@@ .@@ contain@@ s@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ U@@ RE@@ _M@@ M@@ TE@@ L@@ ))) { return false@@ ; } break@@ ; case Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _@@ R@@ C@@ S_@@ F@@ E@@ AT@@ UR@@ E : if (!@@ (s@@ Info@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ()@@ .@@ contain@@ s@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ UR@@ E_@@ R@@ C@@ S@@ ))) { return false@@ ; } break@@ ; } } return true@@ ; }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Add@@ Package@@ To@@ Cach@@ e@@ () { set@@ up@@ Res@@ ol@@ ver@@ (1@@ ); java.util.List<@@ android.content.@@ p@@ m.@@ Res@@ ol@@ ve@@ Info@@ > in@@ f@@ o = new java.util.ArrayList<@@ >(); java.util.@@ Set@@ <java.lang.String@@ > f@@ e@@ ature@@ s = new java.util.@@ Hash@@ Set@@ <@@ >(); f@@ e@@ at@@ ur@@ es.@@ add(@@ Im@@ s@@ Res@@ ol@@ ver@@ .@@ ME@@ TA@@ DA@@ TA@@ _@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ _@@ F@@ E@@ AT@@ U@@ RE@@ ); f@@ e@@ at@@ ur@@ es.@@ add(@@ Im@@ s@@ Res@@ ol@@ ver@@ .@@ ME@@ TA@@ DA@@ TA@@ _M@@ M@@ TE@@ L@@ _@@ F@@ E@@ AT@@ U@@ RE@@ ); f@@ e@@ at@@ ur@@ es.@@ add(@@ Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _@@ R@@ C@@ S_@@ F@@ E@@ AT@@ U@@ RE@@ ); in@@ f@@ o.@@ add(@@ get@@ Res@@ ol@@ ve@@ Info@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ DE@@ V@@ IC@@ E_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, f@@ e@@ at@@ ur@@ es@@ , true@@ )); when@@ (m@@ Mock@@ P@@ M@@ .@@ qu@@ er@@ y@@ Intent@@ Ser@@ vices@@ As@@ User@@ (@@ an@@ y@@ (), an@@ y@@ Int@@ ()@@ )).@@ thenReturn@@ (in@@ fo@@ ); set@@ Config@@ C@@ ar@@ ri@@ er@@ String(@@ 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ()); m@@ Test@@ Im@@ s@@ Res@@ ol@@ ver.@@ po@@ p@@ ul@@ ate@@ Cach@@ e@@ And@@ Start@@ B@@ ind@@ (); wait@@ For@@ Handler@@ Action@@ (m@@ Test@@ Im@@ s@@ Res@@ ol@@ ver.@@ get@@ Handler@@ (), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ TI@@ ME@@ O@@ UT@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info test@@ Cach@@ ed@@ Ser@@ vice = m@@ Test@@ Im@@ s@@ Res@@ ol@@ ver.@@ get@@ Im@@ s@@ Service@@ Info@@ From@@ Cach@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ DE@@ V@@ IC@@ E_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ()); junit.framework.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (test@@ Cach@@ ed@@ Service@@ ); junit.framework.@@ Asser@@ t@@ .@@ assert@@ True@@ (is@@ Im@@ s@@ Service@@ Info@@ Equal@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ DE@@ V@@ IC@@ E_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, f@@ e@@ at@@ ur@@ es@@ , test@@ Cach@@ ed@@ Service@@ )); }
public void start@@ Q@@ u@@ er@@ y@@ (android.@@ content.@@ Comp@@ onent@@ Name name@@ , java.lang.String int@@ ent@@ Filter@@ ) { if (m@@ Ac@@ tive@@ Q@@ u@@ er@@ i@@ es.@@ contain@@ s@@ Key@@ (@@ name@@ )) { return@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Q@@ u@@ er@@ y@@ Manager.@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Q@@ u@@ er@@ y qu@@ er@@ y = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Q@@ u@@ er@@ y@@ Manager.@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Q@@ u@@ er@@ y@@ (m@@ Context@@ , name@@ , int@@ ent@@ Filter@@ ); m@@ Ac@@ tive@@ Q@@ u@@ er@@ i@@ es.@@ put@@ (@@ name@@ , qu@@ er@@ y@@ ); qu@@ er@@ y.@@ exec@@ ute@@ (); }
@java.lang.Override public void on@@ Service@@ Dis@@ connect@@ (android.@@ content.@@ Comp@@ onent@@ Name name@@ ) { }
private void can@@ cel@@ All@@ No@@ t@@ if@@ ic@@ ation@@ s() { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ D@@ B@@ G) log@@ ("@@ can@@ cel@@ All@@ No@@ t@@ if@@ ic@@ ation@@ s android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ "); not@@ if@@ ic@@ ation@@ Manager = ((@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager@@ ) (m@@ Ph@@ on@@ e.get@@ Context@@ ().get@@ System@@ Service@@ (@@ Context.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ ))); not@@ if@@ ic@@ ation@@ Manager.@@ can@@ cel@@ (@@ java.lang.Integ@@ er.@@ toString@@ (m@@ Sub@@ Id@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ P@@ S@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ ); not@@ if@@ ic@@ ation@@ Manager.@@ can@@ cel@@ (@@ java.lang.Integ@@ er.@@ toString@@ (m@@ Sub@@ Id@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S@@ _N@@ O@@ TI@@ F@@ IC@@ AT@@ ION@@ ); not@@ if@@ ic@@ ation@@ Manager.@@ can@@ cel@@ (@@ java.lang.Integ@@ er.@@ toString@@ (m@@ Sub@@ Id@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S@@ _RE@@ J@@ EC@@ T_@@ C@@ A@@ US@@ E_@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ ); }
private void process@@ Co@@ dec@@ Config@@ Event@@ (android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Statu@@ s new@@ Co@@ dec@@ Statu@@ s) { android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Con@@ fi@@ g pre@@ v@@ Co@@ dec@@ Con@@ fi@@ g = null@@ ; synchronized@@ (@@ this@@ ) { if ((m@@ Co@@ dec@@ Statu@@ s) != null@@ ) { pre@@ v@@ Co@@ dec@@ Con@@ fi@@ g = m@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ Config@@ (); } m@@ Co@@ dec@@ Statu@@ s = new@@ Co@@ dec@@ Statu@@ s; } if (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ process@@ Co@@ dec@@ Config@@ Event@@ () Code@@ c Config@@ : " + pre@@ v@@ Co@@ dec@@ Config@@ ) + "@@ -@@ >@@ ") + (@@ new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ Config@@ ()))); for (android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Con@@ fi@@ g cod@@ ec@@ Con@@ fi@@ g : new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ s@@ Local@@ Cap@@ abili@@ ties@@ ()) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ process@@ Co@@ dec@@ Config@@ Event@@ : Code@@ c abili@@ ty@@ : " + cod@@ ec@@ Config@@ )); } for (android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Con@@ fi@@ g cod@@ ec@@ Con@@ fi@@ g : new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ s@@ Se@@ le@@ ct@@ able@@ Cap@@ abili@@ ties@@ ()) { android.util.Log.d@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ process@@ Co@@ dec@@ Config@@ Event@@ () Code@@ c Se@@ le@@ ct@@ able Cap@@ abili@@ ty@@ : " + cod@@ ec@@ Config@@ )); } } if (m@@ A@@ 2@@ d@@ p@@ O@@ ff@@ load@@ Enabled@@ ) { com.android.@@ bluetooth.@@ a@@ 2@@ d@@ p.@@ b@@ oo@@ l up@@ d@@ ate = false@@ ; android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Con@@ fi@@ g new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ Config@@ (); if ((@@ pre@@ v@@ Co@@ dec@@ Con@@ fi@@ g != null@@ ) && ((@@ pre@@ v@@ Co@@ dec@@ Config.@@ get@@ Co@@ dec@@ Type@@ ()) != (@@ new@@ Co@@ dec@@ Config.@@ get@@ Co@@ dec@@ Type@@ ()))) { up@@ d@@ ate = true@@ ; } if (!@@ (@@ new@@ Co@@ dec@@ Config.@@ s@@ ame@@ Au@@ dio@@ F@@ e@@ ed@@ ing@@ Parameter@@ s(@@ pre@@ v@@ Co@@ dec@@ Config@@ ))) { up@@ d@@ ate = true@@ ; } if ((@@ (@@ new@@ Co@@ dec@@ Config.@@ get@@ Co@@ dec@@ Config.@@ get@@ Co@@ dec@@ Type@@ ()) == (android.@@ bluetooth.@@ Bluetooth@@ Co@@ dec@@ Config.@@ S@@ O@@ UR@@ C@@ E_@@ C@@ OD@@ EC@@ _@@ TYP@@ E_@@ L@@ D@@ AC@@ )) && ((@@ pre@@ v@@ Co@@ dec@@ Config.@@ get@@ Co@@ dec@@ Statu@@ s) != (@@ new@@ Co@@ dec@@ S@@ pe@@ c@@ if@@ ic@@ 1@@ ()) { up@@ d@@ ate = true@@ ; } if (@@ update@@ ) { m@@ A@@ 2@@ d@@ p@@ Service.@@ cod@@ ec@@ Config@@ Up@@ dat@@ ed@@ (m@@ Device@@ , m@@ Co@@ dec@@ Statu@@ s, false@@ ); } return@@ ; } boolean s@@ ame@@ Au@@ dio@@ F@@ e@@ ed@@ ing@@ Parameter@@ s = new@@ Co@@ dec@@ Statu@@ s.get@@ Co@@ dec@@ Config@@ ().@@ s@@ ame@@ Au@@ dio@@ F@@ e@@ ed@@ ing@@ Parameter@@ s(@@ pre@@ v@@ Co@@ dec@@ Config@@ ); m@@ A@@ 2@@ d@@ p@@ Service.@@ cod@@ ec@@ Config@@ ); m@@ Co@@ dec@@ Statu@@ s, s@@ ame@@ Au@@ dio@@ F@@ e@@ ed@@ ing@@ Parameter@@ s); }
private void remove@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ (android.@@ util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ > f@@ e@@ ature@@ Pair@@ ) throw@@ s android.os.@@ Remote@@ Exception { if ((@@ !@@ (is@@ Service@@ Control@@ ler@@ A@@ va@@ il@@ able@@ ())) || ((m@@ Callback@@ s) == null@@ )) { android.util.Log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ LO@@ G_@@ TAG, "@@ S@@ end@@ ing cal@@ le@@ d wit@@ h null valu@@ es@@ . return@@ ; } if ((@@ f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ ) != (android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ UR@@ E_@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ )) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ Im@@ s@@ F@@ e@@ ature@@ Statu@@ s@@ Call@@ b@@ ac@@ k call@@ back@@ To@@ Remo@@ v@@ e = m@@ F@@ e@@ ature@@ Statu@@ s@@ Callback@@ s.@@ str@@ eam@@ ().@@ fil@@ ter@@ (("@@ remove@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ : m@@ F@@ e@@ ature@@ Typ@@ e) == (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ ))); if ((@@ c.@@ m@@ F@@ e@@ ature@@ Typ@@ e) == (f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ ))@@ ).@@ find@@ Fi@@ rst@@ ().@@ or@@ E@@ l@@ se@@ (@@ null@@ ); if (c@@ all@@ back@@ To@@ Remo@@ v@@ e != null@@ ) { m@@ F@@ e@@ ature@@ Statu@@ s@@ Callback@@ s.@@ remove@@ (c@@ all@@ back@@ To@@ Remo@@ ve@@ ); } remove@@ Im@@ s@@ F@@ e@@ ature@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ , (c@@ all@@ back@@ To@@ Remo@@ v@@ e != null ? call@@ back@@ To@@ Remo@@ v@@ e.get@@ Callback@@ () : null@@ )); remove@@ Im@@ s@@ F@@ e@@ ature@@ B@@ in@@ der@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ ); m@@ Callback@@ s.@@ im@@ s@@ Service@@ F@@ e@@ ature@@ Remo@@ v@@ ed@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ , this@@ ); } else { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ LO@@ G_@@ TAG, ("@@ S@@ end@@ ing sup@@ por@@ t " + (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ ))); } send@@ Im@@ s@@ F@@ e@@ ature@@ Remo@@ v@@ ed@@ Callback@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ ); }
public void add@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Listener@@ (com.android.@@ im@@ s@@ .@@ int@@ er@@ n@@ al.@@ I@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Call@@ b@@ ac@@ k call@@ back@@ ) { synchronized@@ (m@@ Lock) { m@@ Im@@ s@@ Statu@@ s@@ Callback@@ s.@@ add@@ (c@@ all@@ back@@ ); for (android.@@ util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ > i : m@@ Im@@ s@@ F@@ e@@ at@@ ur@@ es) { call@@ back@@ .@@ im@@ s@@ F@@ e@@ ature@@ Cre@@ ated@@ (@@ i.@@ fi@@ rst@@ , i.@@ sec@@ ond@@ ); } }
private void not@@ if@@ y@@ All@@ F@@ e@@ at@@ ur@@ es@@ Remo@@ v@@ ed@@ () { if ((m@@ Callback@@ s) == null@@ ) { android.util.Log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ LO@@ G_@@ TAG, "@@ N@@ e@@ at@@ ur@@ es@@ Remo@@ v@@ ed@@ "); return@@ ; } synchronized@@ (m@@ Lock) { for (android.@@ util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ > f@@ e@@ at@@ ur@@ e : m@@ Im@@ s@@ F@@ e@@ at@@ ur@@ es) { if ((@@ f@@ e@@ ature@@ .@@ sec@@ ond@@ ) != (android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ UR@@ E_@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ )) { m@@ Callback@@ s.@@ im@@ s@@ Service@@ F@@ e@@ ature@@ Remo@@ v@@ ed@@ (f@@ e@@ ature@@ .@@ fi@@ rst@@ , f@@ e@@ ature@@ .@@ sec@@ ond@@ , this@@ ); } send@@ Im@@ s@@ F@@ e@@ ature@@ Remo@@ v@@ ed@@ Callback@@ (f@@ e@@ ature@@ .@@ fi@@ rst@@ , f@@ e@@ ature@@ .@@ sec@@ ond@@ ); } } }
private boolean is@@ Im@@ s@@ Service@@ Info@@ Equal@@ (android.@@ content.@@ Comp@@ onent@@ Name name@@ , java.util.@@ Set@@ <java.lang.String@@ > f@@ e@@ at@@ ur@@ es@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info s@@ Info@@ ) { if (!(@@ java.util.@@ Object@@ s.@@ equals(@@ s@@ Info.@@ name@@ , name@@ ))) { return false@@ ; } for (java.lang.String f : f@@ e@@ at@@ ur@@ es) { switch (f@@ ) { case Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ _@@ F@@ E@@ AT@@ UR@@ E : if (!@@ (s@@ Info@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ().@@ contain@@ s@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ UR@@ E_@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ )) { return false@@ ; } break@@ ; case Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _M@@ M@@ TE@@ L@@ _@@ F@@ E@@ AT@@ UR@@ E : if (!@@ (s@@ Info@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ().@@ contain@@ s@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ U@@ RE@@ _M@@ M@@ TE@@ L@@ )@@ ))) { return false@@ ; } break@@ ; case Im@@ s@@ Res@@ ol@@ ver.@@ ME@@ TA@@ DA@@ TA@@ _@@ R@@ C@@ S_@@ F@@ E@@ AT@@ UR@@ E : if (!@@ (s@@ Info@@ .get@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ ().@@ contain@@ s@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ UR@@ E_@@ R@@ C@@ S@@ )@@ ))) { return false@@ ; } break@@ ; } } return true@@ ; }
private void add@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ (android.@@ util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ > f@@ e@@ ature@@ Pair@@ ) throw@@ s android.os.@@ Remote@@ Exception { if ((@@ !@@ (is@@ Service@@ Control@@ ler@@ A@@ va@@ il@@ able@@ ())) || ((m@@ Callback@@ s) == null@@ )) { android.util.Log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ LO@@ G_@@ TAG, "@@ add@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ "); return@@ ; } if ((@@ f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ ) != (android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ UR@@ E_@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ )) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ Im@@ s@@ F@@ e@@ ature@@ Statu@@ s@@ Call@@ b@@ ac@@ k c = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ Im@@ s@@ F@@ e@@ ature@@ Statu@@ s@@ Callback@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ ); m@@ F@@ e@@ ature@@ Statu@@ s@@ Callback@@ s.@@ add@@ (c@@ ); android.os.@@ I@@ Inter@@ face f = create@@ Im@@ s@@ F@@ e@@ ature@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ , c@@ .get@@ Callback@@ ()); add@@ Im@@ s@@ F@@ e@@ ature@@ B@@ in@@ der@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ , f@@ ); m@@ Callback@@ s.@@ im@@ s@@ Service@@ F@@ e@@ ature@@ Cre@@ ated@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ , this@@ ); } else { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Control@@ ler.@@ LO@@ G_@@ TAG, ("@@ add@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ : e@@ merg@@ enc@@ y call@@ ing on s@@ lo@@ t " + (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ ))); } send@@ Im@@ s@@ F@@ e@@ ature@@ Cre@@ ated@@ Callback@@ (f@@ e@@ ature@@ Pa@@ ir.@@ fi@@ rst@@ , f@@ e@@ ature@@ Pa@@ ir.@@ sec@@ ond@@ ); }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ C@@ ar@@ ri@@ er@@ Package@@ Chang@@ e@@ E@@ merg@@ enc@@ y@@ Call@@ ing@@ () throw@@ s android.os.@@ Remote@@ Exception { set@@ up@@ Res@@ ol@@ ver@@ (1@@ ); set@@ Config@@ C@@ ar@@ ri@@ er@@ String(@@ 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ()); java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > f@@ e@@ ature@@ s = new java.util.@@ Hash@@ Set@@ <@@ >(); f@@ e@@ at@@ ur@@ es.@@ add@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ U@@ RE@@ _M@@ M@@ TE@@ L@@ )); set@@ up@@ Package@@ Q@@ u@@ er@@ y@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, new java.util.@@ Hash@@ Set@@ (), true@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = set@@ up@@ Control@@ ler@@ (); start@@ B@@ ind@@ (); set@@ up@@ D@@ yn@@ am@@ ic@@ Q@@ u@@ er@@ y@@ F@@ e@@ at@@ ur@@ es@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, f@@ e@@ at@@ ur@@ es@@ , 1); ve@@ r@@ if@@ y@@ (@@ cont@@ ro@@ l@@ ler@@ ).@@ b@@ ind@@ (f@@ e@@ at@@ ur@@ es@@ ); ve@@ r@@ if@@ y@@ (@@ cont@@ ro@@ l@@ ler@@ , ne@@ ver@@ ()).@@ un@@ b@@ ind@@ (); junit.framework.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, cont@@ ro@@ l@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ()); android.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ()); java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > new@@ F@@ e@@ ature@@ s = new java.util.@@ Hash@@ Set@@ <@@ >(); new@@ F@@ e@@ at@@ ur@@ es.@@ add@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ U@@ RE@@ _M@@ M@@ TE@@ L@@ )); new@@ F@@ e@@ at@@ ur@@ es.@@ add@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ UR@@ E_@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y@@ _M@@ M@@ TE@@ L@@ )); set@@ up@@ D@@ yn@@ am@@ ic@@ Q@@ u@@ er@@ y@@ F@@ e@@ at@@ ur@@ es@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, new@@ F@@ e@@ at@@ ur@@ es@@ , 2@@ ); ve@@ r@@ if@@ y@@ (@@ cont@@ ro@@ l@@ ler@@ , new@@ F@@ e@@ at@@ ur@@ es@@ ); }
private void update@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info new@@ Info@@ ) { if (@@ new@@ Info == null@@ ) { return@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ Control@@ ler@@ By@@ Service@@ Info@@ (m@@ Ac@@ tive@@ Control@@ ler@@ s, new@@ Info@@ ); java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > f@@ e@@ ature@@ s = cal@@ c@@ ul@@ ate@@ F@@ e@@ at@@ ur@@ es@@ To@@ Create@@ (@@ new@@ Info@@ ); if (@@ sho@@ ul@@ d@@ F@@ e@@ at@@ ur@@ es@@ C@@ au@@ se@@ B@@ ind@@ (f@@ e@@ at@@ ur@@ es) { try { if (@@ cont@@ ro@@ lle@@ r != null@@ ) { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ update@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ : " + (@@ cont@@ ro@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ()))); android.util.Log.d@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ update@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ : " + f@@ e@@ at@@ ur@@ es@@ )); cont@@ ro@@ l@@ ler.@@ ch@@ ang@@ e@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ (f@@ e@@ at@@ ur@@ es@@ ); } else { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, "@@ S@@ k@@ ip@@ p@@ ing un@@ bo@@ un@@ d wit@@ h ac@@ tiv@@ e f@@ e@@ at@@ ur@@ es@@ , re@@ b@@ ind@@ ing b@@ ind@@ Im@@ s@@ Service@@ With@@ F@@ e@@ at@@ ur@@ es@@ (@@ new@@ Info@@ , f@@ e@@ at@@ ur@@ es@@ ); } if ((@@ is@@ Ac@@ tive@@ C@@ ar@@ ri@@ er@@ Service@@ (@@ new@@ Info@@ )) && (!@@ (android.@@ text.@@ Text@@ Utils.@@ equal@@ s@@ (@@ new@@ Info.@@ nam@@ e.get@@ Package@@ Name@@ (), m@@ Device@@ Service@@ )@@ ))) { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, "@@ No@@ t de@@ vice default update@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ (get@@ Im@@ s@@ Service@@ Info@@ From@@ Cach@@ e@@ (m@@ Device@@ Service@@ )); } } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ update@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ e Remo@@ t@@ e Exception@@ : " + (@@ e.get@@ Message@@ ()))); } } else if (@@ cont@@ ro@@ lle@@ r != null@@ ) { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ update@@ Im@@ s@@ Service@@ : f@@ e@@ ature@@ s = for Im@@ s@@ Service@@ : " + (@@ cont@@ ro@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ()))); un@@ b@@ ind@@ Im@@ s@@ Service@@ (@@ new@@ Info@@ ); } } }
private boolean sho@@ ul@@ d@@ F@@ e@@ at@@ ur@@ es@@ C@@ au@@ se@@ B@@ in@@ d@@ F@@ e@@ ature@@ (java.lang.String java.lang.Integ@@ er@@ > f@@ e@@ ature@@ s) { return b@@ ind@@ able@@ F@@ e@@ ature@@ s.@@ f@@ e@@ at@@ ur@@ es.@@ str@@ e@@ ature@@ (@@ " "); }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ C@@ ar@@ ri@@ er@@ Package@@ B@@ ind@@ With@@ E@@ merg@@ enc@@ y@@ Call@@ ing@@ () throw@@ s android.os.@@ Remote@@ Exception { set@@ up@@ Res@@ ol@@ ver@@ (1@@ ); set@@ Config@@ C@@ ar@@ ri@@ er@@ String(@@ 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E@@ .get@@ Package@@ Name@@ ()); java.util.@@ Hash@@ Set@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > f@@ e@@ ature@@ s = new java.util.@@ Hash@@ Set@@ <@@ >(); f@@ e@@ at@@ ur@@ es.@@ add@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ U@@ RE@@ _M@@ M@@ TE@@ L@@ )); f@@ e@@ at@@ ur@@ es.@@ add@@ (@@ new android.util.@@ Pair@@ (@@ 0, android.@@ telephony.@@ im@@ s.@@ f@@ e@@ ature@@ .@@ Im@@ s@@ F@@ e@@ ature@@ .@@ F@@ E@@ AT@@ UR@@ E_@@ R@@ C@@ S@@ )); set@@ up@@ Package@@ Q@@ u@@ er@@ y@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, new java.util.@@ Hash@@ Set@@ (), true@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = set@@ up@@ Control@@ ler@@ (); start@@ B@@ ind@@ (); set@@ up@@ D@@ yn@@ am@@ ic@@ Q@@ u@@ er@@ y@@ F@@ e@@ ature@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, f@@ e@@ at@@ ur@@ es@@ , 1); ve@@ r@@ if@@ y@@ (@@ cont@@ ro@@ l@@ l@@ ler@@ ).@@ b@@ ind@@ (f@@ e@@ at@@ ur@@ es@@ ); ve@@ r@@ if@@ y@@ (@@ cont@@ ro@@ l@@ ler@@ , ne@@ ver@@ ()).@@ un@@ b@@ ind@@ (); junit.framework.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver@@ Test.@@ TEST_@@ C@@ AR@@ R@@ I@@ ER_@@ DE@@ FA@@ UL@@ T_@@ N@@ AM@@ E, cont@@ ro@@ l@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ()); }
private void b@@ ind@@ Im@@ s@@ Service@@ With@@ F@@ e@@ at@@ ur@@ es@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ Im@@ s@@ Service@@ Info in@@ fo@@ , java.util.@@ Hash@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > f@@ e@@ at@@ ur@@ es) { if (@@ sho@@ ul@@ d@@ F@@ e@@ at@@ ur@@ es@@ C@@ au@@ se@@ B@@ ind@@ (f@@ e@@ at@@ ur@@ es) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Service@@ Contro@@ lle@@ r cont@@ ro@@ lle@@ r = get@@ Control@@ ler@@ By@@ Service@@ Info@@ (m@@ Ac@@ tive@@ Control@@ ler@@ s, in@@ fo@@ ); if (@@ cont@@ ro@@ lle@@ r != null@@ ) { android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ S@@ D@@ B@@ G) connec@@ tion exist@@ s, up@@ dat@@ ing f@@ e@@ ature@@ s " + f@@ e@@ at@@ ur@@ es@@ )); try { cont@@ ro@@ l@@ ler.@@ ch@@ ang@@ e@@ Im@@ s@@ Service@@ F@@ e@@ at@@ ur@@ es@@ (f@@ e@@ at@@ ur@@ es@@ ); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ w@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ("@@ S@@ end@@ ing error@@ =@@ " + (@@ e.get@@ Message@@ ()))); } } else { cont@@ ro@@ lle@@ r = in@@ f@@ o.@@ cont@@ ro@@ l@@ ler@@ Fa@@ ctory.@@ create@@ (m@@ Context@@ , in@@ f@@ o.@@ name@@ , this@@ ); android.util.Log.@@ i@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ im@@ s.@@ Im@@ s@@ Res@@ ol@@ ver.@@ TAG, ((@@ ("@@ Im@@ s@@ Service@@ : " + (@@ cont@@ ro@@ l@@ er.get@@ Comp@@ onent@@ Name@@ ())) + " wit@@ h f@@ e@@ at@@ ur@@ es@@ : ") + f@@ e@@ at@@ ur@@ es@@ )); cont@@ ro@@ l@@ ler.@@ b@@ ind@@ (f@@ e@@ at@@ ur@@ es@@ ); } m@@ Ac@@ tive@@ Control@@ ler@@ s.@@ put@@ (in@@ f@@ o.@@ name@@ , cont@@ ro@@ l@@ ler@@ ); } }
void re@@ pla@@ ce@@ F@@ e@@ at@@ ur@@ es@@ (java.util.@@ Set@@ <@@ android.util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ >@@ > m@@ New@@ F@@ e@@ at@@ ur@@ es) { m@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es.@@ clear@@ (); m@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es.@@ add@@ All@@ (m@@ New@@ F@@ e@@ at@@ ur@@ es@@ ); }
@java.lang.Override public java.lang.String toString@@ () { java.lang.String@@ Builder re@@ s = new java.lang.String@@ Builder@@ (); res@@ .@@ append@@ ("@@ name@@ =@@ res@@ .@@ append(@@ name@@ ); res@@ .@@ append@@ ("@@ S@@ ho@@ ul@@ d sup@@ ported@@ F@@ e@@ at@@ ur@@ es@@ =@@ [@@ for (android.@@ util.@@ Pair@@ <@@ java.lang.Integ@@ er, java.lang.Integ@@ er@@ > f@@ e@@ at@@ ur@@ e : m@@ Sup@@ ported@@ F@@ e@@ at@@ ur@@ es) { res@@ .@@ append@@ ("@@ ); res@@ .@@ append(@@ f@@ e@@ ature@@ .@@ fi@@ rst@@ ); res@@ .@@ append@@ ("@@ ,@@ "); res@@ .@@ append(@@ f@@ e@@ ature@@ .@@ sec@@ ond@@ ); res@@ .@@ append@@ ("@@ )@@ "); } return res@@ .@@ toString@@ (); }
private boolean se@@ le@@ ct@@ AC@@ R@@ ul@@ es@@ Cont@@ ain@@ er@@ (@@ byte@@ [] a@@ id@@ ) throw@@ s com.android.s@@ e.@@ security.@@ ar@@ f.@@ Sec@@ ure@@ Element@@ Exception, com.android.s@@ e.@@ security.@@ ar@@ f.@@ p@@ k@@ c@@ s@@ 1@@ 5@@ .@@ P@@ K@@ C@@ S@@ 1@@ 5@@ Exception@@ , java.util.@@ No@@ Su@@ ch@@ Element@@ Exception { if (@@ a@@ id == null@@ ) { m@@ Ar@@ f@@ Channe@@ l = m@@ SE@@ Hand@@ le.@@ open@@ Log@@ ic@@ al@@ Ar@@ f@@ Channel@@ (@@ new byte@@ []{ }); if ((m@@ Ar@@ f@@ Channel@@ ) != null@@ ) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , channe@@ l@@ s ar@@ e u@@ se@@ d to ac@@ ces@@ s to P@@ K@@ C@@ 1@@ 5 } else { return false@@ ; } if ((m@@ P@@ k@@ c@@ s@@ 1@@ 5@@ Path@@ ) == null@@ ) { m@@ AC@@ M@@ ain@@ Path = null@@ ; com.android.s@@ e.@@ security.@@ ar@@ f.@@ p@@ k@@ c@@ s@@ 1@@ 5@@ .@@ E@@ F@@ DI@@ R DI@@ RO@@ b@@ ject = new com.android.s@@ e.@@ security.@@ ar@@ f.@@ p@@ k@@ c@@ s@@ 1@@ 5@@ .@@ E@@ F@@ DI@@ R@@ (m@@ SE@@ Handle@@ ); m@@ P@@ k@@ c@@ s@@ 1@@ 5@@ Path = DI@@ RO@@ b@@ ject.@@ lo@@ ok@@ up@@ A@@ ID@@ (com.android.s@@ e.@@ security.@@ ar@@ f.@@ p@@ k@@ c@@ s@@ 1@@ 5@@ .@@ P@@ K@@ C@@ S@@ 1@@ 5@@ Handler.@@ P@@ K@@ C@@ S@@ 1@@ 5@@ _@@ A@@ ID@@ ); if ((m@@ P@@ k@@ c@@ s@@ 1@@ 5@@ Path@@ ) == null@@ ) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , u@@ se AR@@ F@@ : can@@ not se@@ lec@@ t P@@ K@@ C@@ S di@@ re@@ ctor@@ y vi@@ a E@@ F Di@@ r throw new java.util.@@ No@@ Su@@ ch@@ Element@@ Exception@@ ("@@ se@@ lec@@ t P@@ K@@ C@@ S di@@ re@@ ctor@@ y vi@@ a E@@ F Di@@ r "); } } else { m@@ Ar@@ f@@ Channe@@ l = m@@ SE@@ Hand@@ le.@@ open@@ Log@@ ic@@ al@@ Ar@@ f@@ Channel@@ (@@ a@@ id@@ ); if ((m@@ Ar@@ f@@ Channel@@ ) == null@@ ) { android.util.Log.@@ w@@ (m@@ T@@ ag@@ , "@@ AD@@ F not fo@@ und@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ !@@ has@@ has@@ has@@ Array@@ (); } m@@ P@@ k@@ c@@ s@@ 1@@ 5@@ Path = null@@ ; } return true@@ ; }
public com.android.s@@ e.@@ Channe@@ l open@@ Log@@ ic@@ al@@ Channel@@ With@@ out@@ Channel@@ Access@@ (@@ byte@@ [] a@@ id@@ ) throw@@ s android.os.@@ Remote@@ Exception { try { return open@@ Log@@ ic@@ al@@ Channel@@ (@@ null@@ , a@@ id, (@@ byte@@ ) (0@@ )), null@@ , null@@ , 0); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { if ((@@ e.@@ error@@ Code@@ ) == (android.@@ s@@ e.@@ om@@ api.@@ SE@@ Service.@@ NO@@ _S@@ U@@ CH@@ _@@ E@@ LE@@ M@@ ENT_@@ ER@@ RO@@ R@@ )) { throw new java.util.@@ No@@ Su@@ ch@@ Element@@ Exception(@@ e.get@@ Message@@ ()); } throw e@@ ; }
public synchronized void in@@ iti@@ aliz@@ e@@ () throw@@ s java.lang.Exception { if ((m@@ State@@ ) == null@@ ) { throw new java.security.@@ Access@@ Control@@ Exception@@ ("@@ N@@ o not op@@ e@@ n channe@@ l "); } com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s ar@@ a@@ Channel@@ Ac@@ ces@@ s = new com.android.s@@ e.@@ security.@@ Channel@@ Access@@ (); ar@@ a@@ Channel@@ Ac@@ ces@@ s.@@ set@@ Ac@@ ces@@ s(@@ Channel@@ Ac@@ ces@@ s.@@ AC@@ CE@@ SS@@ .@@ AL@@ LO@@ W@@ E@@ D@@ , m@@ T@@ ag@@ ); ar@@ a@@ Channel@@ Ac@@ ces@@ s.@@ set@@ Ap@@ du@@ Ac@@ ces@@ s(@@ Channel@@ Ac@@ ces@@ s.@@ AC@@ CE@@ SS@@ .@@ AL@@ LO@@ W@@ E@@ D@@ ); channe@@ l.@@ set@@ Channel@@ Ac@@ ces@@ s(@@ ar@@ a@@ Channel@@ Access@@ ); try { m@@ App@@ le@@ t = new com.android.s@@ e.@@ security.@@ ar@@ a.@@ Access@@ R@@ ule@@ App@@ let@@ (@@ channe@@ l@@ ); byte@@ [] t@@ a@@ g = m@@ App@@ let@@ .@@ read@@ Ref@@ res@@ h@@ T@@ ag@@ (); if (m@@ Access@@ R@@ ule@@ C@@ ache.@@ is@@ Ref@@ res@@ h@@ T@@ ag@@ Equal@@ (@@ t@@ ag@@ )) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , t@@ a@@ g unch@@ ang@@ ed@@ . U@@ s@@ ing ac@@ ces@@ s r@@ ule@@ s f@@ ro@@ m c@@ ach@@ e@@ . return@@ ; } android.util.Log.@@ i@@ (m@@ T@@ ag@@ , t@@ a@@ g h@@ a@@ g h@@ a@@ s ch@@ ang@@ ed@@ . m@@ Access@@ R@@ ule@@ C@@ ache.@@ set@@ Ref@@ res@@ h@@ T@@ ag@@ (@@ t@@ ag@@ ); m@@ Access@@ R@@ ule@@ C@@ ache.@@ clear@@ Cach@@ e@@ (); android.util.Log.@@ i@@ (m@@ T@@ ag@@ , AR@@ s f@@ ro@@ m AR@@ A read@@ All@@ Access@@ R@@ ul@@ es@@ (); } catch (java.lang.Exception e) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , ("@@ Can't error@@ : " + (@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()))); throw new java.security.@@ Access@@ Control@@ Exception(@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()); } final@@ l@@ y { if (@@ channe@@ l != null@@ ) { channe@@ l.@@ close(); } }
private boolean update@@ AC@@ R@@ ul@@ es@@ () throw@@ s com.android.s@@ e.@@ security.@@ ar@@ f.@@ Sec@@ ure@@ Element@@ Exception, com.android.s@@ e.@@ security.@@ ar@@ f.@@ p@@ k@@ c@@ s@@ 1@@ 5@@ .@@ P@@ K@@ C@@ S@@ 1@@ 5@@ Exception, java.lang.Exception { byte@@ [] AC@@ R@@ ul@@ es@@ Path = null@@ ; if (!(m@@ AC@@ M@@ F@@ fo@@ und@@ )) { m@@ SE@@ Hand@@ le.@@ res@@ et@@ Access@@ R@@ ul@@ es@@ (); m@@ AC@@ M@@ ain@@ Path = null@@ ; if ((m@@ Ar@@ f@@ Channel@@ ) != null@@ ) m@@ SE@@ Hand@@ le.@@ close@@ Ar@@ f@@ Channel@@ (); this@@ .@@ init@@ AC@@ E@@ n@@ try@@ P@@ o@@ int@@ (); } try { AC@@ R@@ ul@@ es@@ Path = m@@ AC@@ M@@ ain@@ Ob@@ ject.@@ an@@ al@@ y@@ se@@ File@@ (); m@@ AC@@ M@@ F@@ fo@@ un@@ d = true@@ ; } catch (java.lang.Exception e) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , No@@ t fo@@ un@@ d !@@ m@@ AC@@ M@@ ain@@ Ob@@ ject = null@@ ; m@@ SE@@ Hand@@ le.@@ res@@ et@@ Access@@ R@@ ul@@ es@@ (); m@@ AC@@ M@@ F@@ fo@@ un@@ d = false@@ ; throw e@@ ; } if (@@ AC@@ R@@ ul@@ es@@ Path != null@@ ) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , R@@ ule@@ s ne@@ ed@@ s to b@@ e up@@ dat@@ ed.@@ .@@ .@@ .@@ .@@ .@@ .@@ . if ((m@@ AC@@ R@@ ul@@ es@@ Object@@ ) == null@@ ) { m@@ AC@@ R@@ ul@@ es@@ Ob@@ ject = new com.android.s@@ e.@@ security.@@ ar@@ f.@@ p@@ k@@ c@@ s@@ 1@@ 5@@ .@@ E@@ F@@ AC@@ R@@ ul@@ es@@ (m@@ SE@@ Handle@@ ); } m@@ SE@@ Hand@@ le.@@ clear@@ Access@@ R@@ ule@@ Cach@@ e@@ (); m@@ AC@@ M@@ ain@@ Path = null@@ ; if ((m@@ Ar@@ f@@ Channel@@ ) != null@@ ) m@@ SE@@ Hand@@ le.@@ close@@ Ar@@ f@@ Channel@@ (); this@@ .@@ init@@ AC@@ E@@ n@@ try@@ P@@ o@@ int@@ (); try { m@@ AC@@ R@@ ul@@ es@@ Ob@@ ject.@@ an@@ al@@ y@@ se@@ File@@ (@@ AC@@ R@@ ul@@ es@@ Path@@ ); } catch (java.lang.Exception e) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , cle@@ ar ac@@ ces@@ s r@@ ul@@ e c@@ ach@@ e an@@ d ref@@ res@@ h t@@ a@@ g m@@ SE@@ Hand@@ le.@@ res@@ et@@ Access@@ R@@ ul@@ es@@ (); throw e@@ ; } return true@@ ; } else { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , "@@ C@@ S@@ ER@@ M@@ a@@ g h@@ a@@ s not b@@ ee@@ n ch@@ ang@@ ed.@@ .@@ .@@ .@@ .@@ .@@ .@@ .@@ "); return false@@ ; } }
public synchronized boolean load@@ Access@@ Control@@ R@@ ul@@ es@@ (java.lang.String sec@@ ure@@ Element@@ ) throw@@ s java.util.@@ No@@ Su@@ ch@@ Element@@ Exception { m@@ SE@@ L@@ ab@@ e@@ l = sec@@ ure@@ Element@@ ; android.util.Log.@@ i@@ (m@@ T@@ ag@@ , (("@@ N@@ e@@ ed Load@@ ing " + (m@@ SE@@ L@@ ab@@ el@@ )) + ", r@@ ul@@ es.@@ .@@ . try { init@@ AC@@ E@@ n@@ try@@ P@@ o@@ int@@ (); return update@@ AC@@ R@@ ul@@ es@@ (); } catch (java.lang.Exception e) { throw e@@ ; } catch (java.lang.Exception e) { if (@@ e instanceof java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ) { throw ((@@ java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ) (@@ e@@ )); } android.util.Log.@@ e@@ (m@@ T@@ ag@@ , ((@@ (m@@ SE@@ L@@ ab@@ el@@ ) + r@@ ule@@ s not cor@@ re@@ ct@@ l@@ y in@@ iti@@ aliz@@ ed@@ !@@ ") + (@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()))); throw new java.security.@@ Access@@ Control@@ Exception(@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()); } final@@ l@@ y { if ((m@@ Ar@@ f@@ Channel@@ ) != null@@ ) m@@ SE@@ Hand@@ le.@@ close@@ Ar@@ f@@ Channel@@ (); } }
public com.android.s@@ e.@@ Channe@@ l open@@ Log@@ ic@@ al@@ Ar@@ f@@ Channel@@ (@@ byte@@ [] a@@ id@@ ) throw@@ s java.util.@@ No@@ Su@@ ch@@ Element@@ Exception { try { m@@ Ar@@ f@@ Channe@@ l = m@@ T@@ er@@ min@@ al@@ Hand@@ le.@@ open@@ Log@@ ic@@ al@@ Channel@@ With@@ out@@ Channel@@ Ac@@ ces@@ s(@@ a@@ id@@ ); if ((m@@ Ar@@ f@@ Channel@@ ) == null@@ ) { return null@@ ; } set@@ Up@@ Channel@@ Access@@ (m@@ Ar@@ f@@ Channel@@ ); return m@@ Ar@@ f@@ Channe@@ l@@ ; } catch (java.util.@@ No@@ Su@@ ch@@ Element@@ Exception e) { throw e@@ ; } catch (java.lang.Exception e) { if (@@ e instanceof java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ) { android.util.Log.@@ e@@ (m@@ T@@ ag@@ , ("@@ Can't channe@@ l@@ s le@@ f@@ t to ac@@ ces@@ s AR@@ F@@ : " + (@@ e.get@@ Message@@ ()))); throw ((@@ java.util.@@ M@@ is@@ sing@@ Resource@@ Exception@@ ) (@@ e@@ )); } else { android.util.Log.@@ e@@ (m@@ T@@ ag@@ , ("@@ Er@@ ror open@@ ing log@@ ic@@ al channe@@ l '@@ " + (@@ e.get@@ Loc@@ aliz@@ ed@@ Message@@ ()))); } m@@ Ar@@ f@@ Channe@@ l = null@@ ; return null@@ ; } }
@@@ android.@@ annotation.@@ Sup@@ p@@ ress@@ A@@ ut@@ o@@ Do@@ c @@@ android.@@ telephony.@@ Requ@@ i@@ res@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ ) public android.@@ telephony.@@ Sub@@ s@@ cription@@ Info get@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ (@@ int sub@@ Id@@ ) { if (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ V@@ D@@ B@@ G) android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ log@@ d@@ (("@@ get@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ : sub@@ Id@@ =@@ " + sub@@ Id@@ )); if (!@@ (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ is@@ Valid@@ Sub@@ s@@ cription@@ Id@@ (s@@ u@@ b@@ Id@@ ))) { if (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ D@@ B@@ G) { android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ log@@ d@@ ("@@ sub@@ Id in@@ va@@ li@@ d sub@@ Id "); } return null@@ ; } android.@@ telephony.@@ Sub@@ s@@ cription@@ Info sub@@ Info = null@@ ; try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ Su@@ b i@@ Su@@ b = I@@ Su@@ b.@@ St@@ u@@ b.@@ as@@ Interface@@ (android.os.@@ Service@@ Manager.@@ get@@ Service@@ ("@@ is@@ u@@ b@@ ")); if (i@@ Su@@ b != null@@ ) { sub@@ Info = i@@ Sub@@ .get@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ (s@@ u@@ b@@ Id, m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ ()); } } catch (android.os.@@ Remote@@ Exception ex@@ ) { } return sub@@ Info@@ ; }
@@@ android.@@ annotation.@@ Sup@@ p@@ ress@@ A@@ ut@@ o@@ Do@@ c @@@ android.@@ telephony.@@ Requ@@ i@@ res@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ ) public android.@@ telephony.@@ Sub@@ s@@ cription@@ Info get@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ For@@ Sim@@ S@@ lo@@ t@@ Index@@ (@@ int s@@ lo@@ t@@ Index@@ ) { if (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ V@@ D@@ B@@ G) android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ log@@ d@@ (("@@ get@@ S@@ lo@@ t@@ Index@@ : s@@ lo@@ t@@ Index@@ =@@ " + s@@ lo@@ t@@ Index@@ )); if (!@@ (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ is@@ Valid@@ S@@ lo@@ t@@ Index@@ (s@@ lo@@ t@@ Index@@ ))) { android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ log@@ d@@ ("@@ get@@ Service@@ s in@@ va@@ li@@ d s@@ lo@@ t@@ In@@ dex return null@@ ; } android.@@ telephony.@@ Sub@@ s@@ cription@@ Info result = null@@ ; try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ Su@@ b i@@ Su@@ b = I@@ Su@@ b.@@ St@@ u@@ b.@@ as@@ Interface@@ (android.os.@@ Service@@ Manager.@@ get@@ Service@@ ("@@ is@@ u@@ b@@ ")); if (i@@ Su@@ b != null@@ ) { result = i@@ Sub@@ .get@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ For@@ Sim@@ S@@ lo@@ t@@ Index@@ (s@@ lo@@ t@@ Index@@ , m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ ()); } } catch (android.os.@@ Remote@@ Exception ex@@ ) { } return result@@ ; }
@@@ android.@@ telephony.@@ Requ@@ i@@ res@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ ) public void add@@ On@@ Sub@@ s@@ cription@@ s@@ Changed@@ Listener@@ (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ On@@ Sub@@ s@@ cription@@ s@@ Changed@@ List@@ en@@ er list@@ ener@@ ) { java.lang.String p@@ kg@@ Name = ((m@@ Context@@ ) != null@@ ) ? m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ () : "@@ <@@ un@@ k@@ no@@ wn@@ >@@ "; if (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ D@@ B@@ G) { android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ log@@ d@@ ((@@ (("@@ Requ@@ i@@ res@@ Permission@@ (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ D@@ B@@ G) + " On@@ Sub@@ s@@ cription@@ s@@ cription@@ s@@ Changed@@ List@@ en@@ er p@@ kg@@ Name@@ =@@ ") + p@@ kg@@ Name@@ ) + " list@@ ener@@ =@@ ") + list@@ ener@@ )); } try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ Telephony@@ Reg@@ is@@ try t@@ r = I@@ Telephony@@ Reg@@ is@@ try@@ .@@ St@@ u@@ b.@@ as@@ Interface@@ (android.os.@@ Service@@ Manager.@@ get@@ Service@@ ("@@ telephony.@@ reg@@ is@@ try@@ ")); if (@@ t@@ r != null@@ ) { tr@@ .@@ add@@ On@@ Sub@@ s@@ cription@@ s@@ Changed@@ Listener@@ (p@@ kg@@ Name, list@@ en@@ er.@@ call@@ back@@ ); } } catch (android.os.@@ Remote@@ Exception ex@@ ) { } }
@@@ android.@@ annotation.@@ Sup@@ p@@ ress@@ A@@ ut@@ o@@ Do@@ c @@@ android.@@ telephony.@@ Requ@@ i@@ res@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ ) public java.util.List<@@ android.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ > get@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ List@@ () { java.util.List<@@ android.@@ telephony.@@ Sub@@ s@@ cription@@ Info@@ > result = null@@ ; try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ Su@@ b i@@ Su@@ b = I@@ Su@@ b.@@ St@@ u@@ b.@@ as@@ Interface@@ (android.os.@@ Service@@ Manager.@@ get@@ Service@@ ("@@ is@@ u@@ b@@ ")); if (i@@ Su@@ b != null@@ ) { result = i@@ Sub@@ .get@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ List@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ ()); } } catch (android.os.@@ Remote@@ Exception ex@@ ) { } return result@@ ; }
@@@ android.@@ annotation.@@ Sup@@ p@@ ress@@ A@@ ut@@ o@@ Do@@ c @@@ android.@@ telephony.@@ Requ@@ i@@ res@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ ) public int get@@ Ac@@ tive@@ Sub@@ s@@ cription@@ Info@@ Count@@ () { int result = 0; try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ Su@@ b i@@ Su@@ b = I@@ Su@@ b.@@ St@@ u@@ b.@@ as@@ Interface@@ (android.os.@@ Service@@ Manager.@@ get@@ Service@@ ("@@ is@@ u@@ b@@ ")); if (i@@ Su@@ b != null@@ ) { result = i@@ Sub@@ .get@@ Ac@@ tive@@ Sub@@ Info@@ Count@@ (m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ ()); } } catch (android.os.@@ Remote@@ Exception ex@@ ) { } return result@@ ; }
private void do@@ St@@ op@@ () { if (!(m@@ Pro@@ file@@ St@@ ar@@ ted@@ )) { android.util.Log.@@ w@@ (m@@ Name, cal@@ le@@ d@@ , bu@@ t the pro@@ fi@@ le is not run@@ ning@@ . "); } m@@ Pro@@ file@@ St@@ ar@@ ted = false@@ ; if ((m@@ Adap@@ ter@@ Service@@ ) != null@@ ) { m@@ Adap@@ ter@@ Service.@@ on@@ Pro@@ file@@ Service@@ State@@ Changed@@ (@@ this@@ , Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ); m@@ Adap@@ ter@@ Service.@@ remove@@ Pro@@ file@@ (@@ this@@ ); } if (!(@@ st@@ op@@ ())) { android.util.Log.@@ e@@ (m@@ Name, "@@ Un@@ able to st@@ o@@ p pro@@ fi@@ le } if ((m@@ User@@ S@@ wit@@ ch@@ ed@@ Recei@@ ver@@ ) != null@@ ) { get@@ Application@@ Context@@ ().@@ un@@ register@@ Recei@@ ver@@ (m@@ User@@ S@@ wit@@ ch@@ ed@@ Recei@@ ver@@ ); m@@ User@@ S@@ wit@@ ch@@ ed@@ Recei@@ ve@@ r = null@@ ; } st@@ op@@ S@@ el@@ f@@ (); }
boolean is@@ Connec@@ ted@@ () { return m@@ De@@ le@@ g@@ at@@ e.@@ is@@ Connec@@ ted@@ (); }
void dis@@ connect@@ () { m@@ De@@ le@@ g@@ at@@ e.@@ dis@@ connect@@ (); }
java.lang.String get@@ Root@@ () { return m@@ De@@ le@@ g@@ at@@ e.get@@ Root@@ (); }
public static com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a to@@ M@@ et@@ ad@@ ata@@ (android.@@ media.@@ session@@ .@@ Media@@ Session@@ .@@ Q@@ ue@@ ue@@ I@@ te@@ m item@@ ) { if (@@ ite@@ m == null@@ ) { return com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ e@@ mpty@@ _@@ data@@ (); } android.os.@@ Bund@@ le b@@ und@@ le = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ des@@ cription@@ To@@ Bund@@ le@@ (i@@ tem@@ .get@@ Des@@ cription@@ ()); if (com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ DE@@ B@@ U@@ G) { for (java.lang.String k@@ ey : b@@ und@@ le@@ .@@ key@@ Set@@ ()) { android.util.@@ Log@@ .@@ e@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Util.@@ TAG, ("@@ M@@ et@@ ad@@ at@@ a Q@@ ue@@ ue@@ ue@@ ue@@ ue@@ ue@@ ue@@ ue@@ ue@@ : Cont@@ ain@@ s@@ Key@@ : " + key@@ )); } } com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a re@@ t = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ b@@ und@@ le@@ To@@ M@@ et@@ ad@@ ata@@ (b@@ und@@ le@@ ); r@@ et@@ .@@ m@@ edia@@ Id = "@@ No@@ w@@ Play@@ ing@@ Id@@ " + (i@@ tem@@ .get@@ Q@@ ue@@ ue@@ Id@@ ()); return r@@ et@@ ; }
Media@@ Media@@ Session@@ To@@ k@@ e@@ n get@@ Session@@ To@@ k@@ en@@ () { return m@@ De@@ le@@ g@@ at@@ e.get@@ Session@@ To@@ k@@ en@@ (); }
public static com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a to@@ M@@ et@@ ad@@ ata@@ (android.@@ media.@@ b@@ row@@ s@@ e.@@ Media@@ B@@ row@@ ser.@@ Media@@ I@@ te@@ m item@@ ) { if (@@ ite@@ m == null@@ ) { return com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ e@@ mpty@@ _@@ data@@ (); } android.os.@@ Bund@@ le b@@ und@@ le = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ des@@ cription@@ To@@ Bund@@ le@@ (i@@ tem@@ .get@@ Des@@ cription@@ ()); if (com.android.bluetooth.@@ av@@ rc@@ p.@@ Util.@@ DE@@ B@@ U@@ G) { for (java.lang.String k@@ ey : b@@ und@@ le.@@ key@@ Set@@ ()) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Util.@@ TAG, ("@@ to@@ M@@ et@@ ad@@ ata@@ : Media@@ Item@@ : Cont@@ ain@@ s@@ Key@@ : " + key@@ )); } } com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a re@@ t = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ b@@ und@@ le@@ To@@ M@@ et@@ ad@@ ata@@ (b@@ und@@ le@@ ); r@@ et@@ .@@ m@@ edia@@ Id = item@@ .get@@ Media@@ Id@@ (); return r@@ et@@ ; }
android.content.@@ Comp@@ onent@@ Name get@@ Service@@ Comp@@ onent@@ () { return m@@ De@@ le@@ g@@ at@@ e.get@@ Service@@ Comp@@ onent@@ (); }
@java.lang.Override protected boolean remove@@ E@@ l@@ d@@ est@@ E@@ n@@ try@@ (@@ Map@@ .@@ E@@ n@@ try@@ <java.lang.String, java.util.List<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ List@@ Item@@ >@@ > eld@@ est@@ ) { return (@@ size@@ ()) > (com.android.bluetooth.@@ av@@ rc@@ p.@@ B@@ row@@ sed@@ Play@@ er@@ W@@ r@@ app@@ er.@@ N@@ U@@ M@@ _C@@ AC@@ H@@ E@@ D_@@ F@@ O@@ L@@ DE@@ RS@@ ); }
void sub@@ s@@ cri@@ b@@ e@@ (java.lang.String parent@@ Id, com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ B@@ row@@ ser.@@ Sub@@ s@@ cription@@ Call@@ b@@ ac@@ k call@@ back@@ ) { m@@ De@@ le@@ g@@ at@@ e.@@ sub@@ s@@ cri@@ b@@ e(@@ parent@@ Id, call@@ back@@ ); }
void get@@ Item@@ (java.lang.String m@@ edia@@ Id, com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ B@@ row@@ ser.@@ Item@@ Call@@ b@@ ac@@ k call@@ back@@ ) { m@@ De@@ le@@ g@@ at@@ e.get@@ Item@@ (m@@ edia@@ Id, call@@ back@@ ); }
android.os.@@ Bund@@ le get@@ Ex@@ tr@@ as@@ () { return m@@ De@@ le@@ g@@ at@@ e.get@@ Ex@@ tr@@ as@@ (); }
void sub@@ s@@ cri@@ b@@ e@@ (java.lang.String parent@@ Id, android.os.@@ Bund@@ le option@@ s, com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ B@@ row@@ ser.@@ Sub@@ s@@ cription@@ Call@@ b@@ ac@@ k call@@ back@@ ) { m@@ De@@ le@@ g@@ at@@ e.@@ sub@@ s@@ cri@@ b@@ e(@@ parent@@ Id, option@@ s, call@@ back@@ ); }
void un@@ sub@@ s@@ cri@@ b@@ e@@ (java.lang.String parent@@ Id@@ ) { m@@ De@@ le@@ g@@ at@@ e.@@ un@@ sub@@ s@@ cri@@ b@@ e(@@ parent@@ Id@@ ); }
public static com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a to@@ M@@ et@@ ad@@ ata@@ (android.@@ media.@@ Media@@ M@@ et@@ ad@@ at@@ a data@@ ) { if (@@ dat@@ a == null@@ ) { return com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ e@@ mpty@@ _@@ data@@ (); } android.@@ media.@@ Media@@ Des@@ cri@@ pti@@ on des@@ c = data@@ .get@@ Des@@ cription@@ (); android.os.@@ Bund@@ le data@@ Bund@@ le = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ m@@ edia@@ M@@ et@@ ad@@ ata@@ To@@ Bund@@ le@@ (@@ data@@ ); android.os.@@ Bund@@ le b@@ und@@ le = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ des@@ cription@@ To@@ Bund@@ le@@ (@@ data@@ .get@@ Des@@ cription@@ ()); b@@ und@@ le.@@ put@@ All@@ (@@ data@@ Bund@@ le@@ ); if (com.android.bluetooth.@@ av@@ rc@@ p.@@ Util.@@ DE@@ B@@ U@@ G) { for (java.lang.String k@@ ey : b@@ und@@ le.@@ key@@ Set@@ ()) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Util.@@ TAG, ("@@ M@@ et@@ ad@@ ata@@ : " + key@@ )); } } com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a re@@ t = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ b@@ und@@ le@@ To@@ M@@ et@@ ad@@ ata@@ (b@@ und@@ le@@ ); r@@ et@@ .@@ m@@ edia@@ Id = "@@ curr@@ s@@ on@@ g@@ "; return r@@ et@@ ; }
void connect@@ () { m@@ De@@ le@@ g@@ at@@ e.@@ connect@@ (); }
void un@@ sub@@ s@@ cri@@ b@@ e@@ (java.lang.String parent@@ Id, com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ B@@ row@@ ser.@@ Sub@@ s@@ cription@@ Call@@ b@@ ac@@ k call@@ back@@ ) { m@@ De@@ le@@ g@@ at@@ e.@@ un@@ sub@@ s@@ cri@@ b@@ e(@@ parent@@ Id, call@@ back@@ ); }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing void test@@ In@@ it@@ (android.@@ content.@@ Context context@@ , android.content.@@ Comp@@ onent@@ Name service@@ Comp@@ onent@@ , com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ B@@ row@@ ser.@@ Connection@@ Call@@ b@@ ac@@ k call@@ back@@ , android.os.@@ Bund@@ le ro@@ ot@@ H@@ int@@ s) { android.util.Log.@@ w@@ t@@ f@@ Stack@@ ("@@ Av@@ rc@@ p@@ Mock@@ Media@@ B@@ row@@ ser@@ ", "@@ Th@@ is f@@ un@@ c@@ tion sho@@ ul@@ d ne@@ ve@@ r b@@ e cal@@ le@@ d@@ "); }
void set@@ System@@ Au@@ dio@@ Mode@@ (@@ boolean on@@ , boolean update@@ Setting@@ ) { com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Logg@@ er.@@ debu@@ g@@ ("@@ W@@ AR@@ N@@ ING@@ : Au@@ di@@ o Mod@@ e ch@@ ang@@ e@@ [@@ old@@ :@@ %@@ b new@@ :@@ %@@ b@@ ]@@ ", m@@ System@@ Au@@ dio@@ Ac@@ tiv@@ ated@@ , on@@ ); if (@@ update@@ Setting@@ ) { m@@ Service.@@ write@@ Boolean@@ Setting@@ (@@ G@@ lo@@ b@@ al.@@ H@@ D@@ M@@ I@@ _S@@ Y@@ S@@ TE@@ M@@ _@@ A@@ U@@ D@@ IO@@ _@@ EN@@ AB@@ LE@@ D@@ , on@@ ); } update@@ Au@@ dio@@ Manager@@ For@@ System@@ Au@@ dio@@ (@@ on@@ ); synchronized@@ (m@@ Lock) { if ((m@@ System@@ Au@@ dio@@ Ac@@ tiv@@ ated@@ ) != on@@ ) { m@@ System@@ Au@@ dio@@ Ac@@ tiv@@ ate@@ d = on@@ ; if ((@@ get@@ Av@@ r@@ Device@@ Info@@ ()) != null@@ ) { com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Ac@@ tion ac@@ tion = new com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ (@@ this@@ , get@@ Av@@ r@@ Device@@ Info@@ ().get@@ Log@@ ic@@ al@@ Address@@ (), get@@ Av@@ r@@ Device@@ Info@@ ().get@@ P@@ ort@@ Id@@ (), on@@ ); add@@ And@@ Start@@ Action@@ (@@ action@@ ); } m@@ Service.@@ an@@ no@@ un@@ ce@@ System@@ Au@@ dio@@ Mode@@ Chang@@ e(@@ on@@ ); } }
@java.lang.Override boolean start@@ () { if (m@@ Enabled@@ ) { m@@ State = com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ STATE_@@ W@@ A@@ I@@ T@@ ING@@ _@@ TI@@ ME@@ O@@ UT@@ ; add@@ Tim@@ er@@ (m@@ State@@ , H@@ d@@ m@@ i@@ Config.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); if ((@@ com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ param@@ s@@ B@@ ack@@ up@@ ) != null@@ ) { com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Logg@@ er.@@ debu@@ g@@ ("@@ Se@@ t ol@@ d au@@ di@@ o for@@ mat@@ "); set@@ Au@@ dio@@ Format@@ (); } else { com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Logg@@ er.@@ debu@@ g@@ ("@@ N@@ o ol@@ d au@@ di@@ o for@@ mat@@ . S@@ en@@ d a com@@ man@@ d to re@@ q@@ e@@ us@@ t.@@ "); send@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ (); } } else { res@@ et@@ Short@@ Au@@ dio@@ Des@@ criptor@@ (); fin@@ is@@ h@@ (); } return true@@ ; }
private void res@@ et@@ Short@@ Au@@ dio@@ Des@@ criptor@@ () { java.lang.String au@@ dio@@ Param@@ et@@ er = "@@ set_@@ AR@@ C@@ _@@ for@@ mat@@ =@@ "; java.lang.String key@@ Value@@ Pair@@ s; byte@@ [] buff@@ er = new byte@@ [@@ 2@@ ]; buff@@ er@@ [0@@ ] = (@@ (@@ byte@@ ) (0@@ )); buff@@ er@@ [@@ 1@@ ] = (@@ (@@ byte@@ ) (m@@ Av@@ r@@ P@@ ort@@ )); key@@ Value@@ Pair@@ s = au@@ dio@@ Param@@ et@@ er + (@@ java.util.Arrays.@@ toString@@ (@@ buff@@ er@@ )); t@@ v@@ ().@@ set@@ Au@@ dio@@ Parameter@@ s(@@ key@@ Value@@ Pair@@ s); }
private void send@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ () { byte@@ [] param@@ s = new byte@@ [@@ 4@@ ]; param@@ s@@ [0@@ ] = (@@ (@@ byte@@ ) (@@ M@@ S@@ AP@@ I@@ _C@@ OD@@ EC@@ _@@ D@@ D@@ )); param@@ s@@ [@@ 1@@ ] = (@@ (@@ byte@@ ) (@@ M@@ S@@ AP@@ I@@ _C@@ OD@@ EC@@ _@@ A@@ AC@@ )); param@@ s@@ [@@ 2@@ ] = (@@ (@@ byte@@ ) (@@ M@@ S@@ AP@@ I@@ _C@@ OD@@ EC@@ _@@ D@@ T@@ S@@ )); param@@ s@@ [@@ 3@@ ] = (@@ (@@ byte@@ ) (@@ M@@ S@@ AP@@ I@@ _C@@ OD@@ EC@@ _@@ D@@ D@@ P@@ )); com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ C@@ ec@@ Mess@@ age com@@ man@@ d = com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ C@@ ec@@ Message@@ Builder.@@ build@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ (get@@ Source@@ Address@@ (), m@@ Av@@ r@@ Addres@@ s, param@@ s); send@@ Command@@ (@@ command@@ , new com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Control@@ Service.@@ S@@ end@@ Message@@ Callback@@ () { @java.lang.Override public void on@@ S@@ end@@ Comp@@ let@@ ed@@ (@@ int error@@ ) { switch (@@ error@@ ) { case Constants.@@ S@@ END@@ _RE@@ S@@ UL@@ T_@@ S@@ U@@ C@@ CE@@ S@@ S : case Constants.@@ S@@ END@@ _RE@@ S@@ UL@@ T_@@ B@@ US@@ Y : case Constants.@@ S@@ END@@ _RE@@ S@@ UL@@ T_@@ FA@@ IL@@ UR@@ E : break@@ ; case Constants.@@ S@@ END@@ _RE@@ S@@ UL@@ T_@@ N@@ A@@ K : com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Logg@@ er.@@ debu@@ g@@ ("@@ Faile@@ d to s@@ en@@ d <@@ Requ@@ est Sh@@ or@@ t Au@@ di@@ o Des@@ criptor@@ >@@ .@@ "); fin@@ is@@ h@@ (); break@@ ; } } }); }
public static void remove@@ Au@@ dio@@ Format@@ () { com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Logg@@ er.@@ debu@@ g@@ ("@@ Remo@@ v@@ e au@@ di@@ o for@@ mat@@ .@@ "); com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ param@@ s@@ B@@ ack@@ u@@ p = null@@ ; }
@java.lang.Override boolean process@@ Command@@ (com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ C@@ ec@@ Mess@@ age c@@ m@@ d@@ ) { if ((m@@ State@@ ) != (com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ STATE_@@ W@@ A@@ I@@ T@@ ING@@ _@@ TI@@ ME@@ O@@ UT@@ )) { return false@@ ; } int op@@ cod@@ e = c@@ m@@ d@@ .get@@ Op@@ code@@ (); byte@@ [] param@@ s = c@@ m@@ d@@ .get@@ Param@@ s(); if (@@ op@@ cod@@ e == (@@ Constants.@@ ME@@ SS@@ A@@ G@@ E_@@ F@@ E@@ AT@@ UR@@ E_@@ AB@@ O@@ RT@@ )) { int or@@ ig@@ in@@ al@@ Op@@ cod@@ e = (c@@ m@@ d@@ .get@@ Param@@ s@@ ()@@ [0@@ ]@@ ) & 25@@ 5@@ ; if (@@ or@@ ig@@ in@@ al@@ Op@@ cod@@ e == (@@ Constants.@@ ME@@ SS@@ A@@ G@@ E_@@ RE@@ Q@@ UE@@ ST_@@ S@@ H@@ O@@ RT@@ _@@ A@@ U@@ D@@ IO@@ _@@ DE@@ S@@ C@@ R@@ IP@@ T@@ OR@@ )) { com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Logg@@ er.@@ debu@@ g@@ ("@@ F@@ e@@ at@@ ur@@ e ab@@ or@@ ted for <@@ Requ@@ est Sh@@ or@@ t Au@@ di@@ o Des@@ criptor@@ >@@ "); fin@@ is@@ h@@ (); return true@@ ; } } else if (@@ op@@ cod@@ e == (@@ Constants.@@ ME@@ SS@@ A@@ G@@ E_@@ RE@@ P@@ O@@ RT@@ _S@@ H@@ O@@ RT@@ _@@ A@@ U@@ D@@ IO@@ _@@ DE@@ S@@ C@@ R@@ IP@@ T@@ OR@@ )) { com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Logg@@ er.@@ debu@@ g@@ ("@@ Process@@ Command@@ : <@@ Re@@ por@@ t Au@@ di@@ o Des@@ criptor@@ >@@ "); com.android.server.@@ h@@ d@@ m@@ i.@@ H@@ d@@ m@@ i@@ Logg@@ er.@@ debu@@ g@@ (("@@ length@@ :@@ " + (@@ param@@ s.@@ length@@ ))); if (((@@ param@@ s.@@ length) == 0) || ((@@ param@@ s.@@ length) > (@@ S@@ A@@ D_@@ L@@ EN@@ _M@@ A@@ X@@ ))) { fin@@ is@@ h@@ (); return false@@ ; } if (((@@ param@@ s@@ [0@@ ]@@ ) & 25@@ 5@@ ) == (@@ M@@ S@@ AP@@ I@@ _C@@ OD@@ EC@@ _N@@ ON@@ E@@ )) { res@@ et@@ Short@@ Au@@ dio@@ Des@@ criptor@@ (); fin@@ is@@ h@@ (); return true@@ ; } com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ param@@ s@@ B@@ ack@@ u@@ p = new byte@@ [@@ param@@ s.@@ length@@ ]; com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ param@@ s@@ B@@ ack@@ u@@ p = java.util.Arrays.@@ copy@@ Of@@ (@@ param@@ s, param@@ s.@@ length); set@@ Au@@ dio@@ Format@@ (); return true@@ ; } return false@@ ; }
private void set@@ Au@@ dio@@ Format@@ () { byte@@ [] buff@@ er = new byte@@ [@@ (com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ param@@ s@@ B@@ ack@@ up@@ .@@ length) + 2@@ ]; java.lang.String au@@ dio@@ Param@@ et@@ er = "@@ set_@@ AR@@ C@@ _@@ for@@ mat@@ =@@ "; java.lang.String key@@ Value@@ Pair@@ s; buff@@ er@@ [0@@ ] = (@@ (@@ byte@@ ) (com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ param@@ s@@ B@@ ack@@ up@@ .@@ length@@ )); buff@@ er@@ [@@ 1@@ ] = (@@ (@@ byte@@ ) (m@@ Av@@ r@@ P@@ ort@@ )); for (@@ int in@@ dex = 0; in@@ dex < (com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ param@@ s@@ B@@ ack@@ up@@ .@@ length); index@@ ++) { buff@@ er@@ [@@ (in@@ dex + 2@@ )@@ ] = com.android.server.@@ h@@ d@@ m@@ i.@@ Request@@ Short@@ Au@@ dio@@ Des@@ criptor@@ Action@@ .@@ param@@ s@@ B@@ ack@@ up@@ [@@ index@@ ]; } key@@ Value@@ Pair@@ s = au@@ dio@@ Param@@ et@@ er + (@@ java.util.Arrays.@@ toString@@ (@@ buff@@ er@@ )); t@@ v@@ ().@@ set@@ Au@@ dio@@ Parameter@@ s(@@ key@@ Value@@ Pair@@ s); fin@@ is@@ h@@ (); }
public libcore.@@ Re@@ positor@@ y current@@ U@@ ps@@ tr@@ eam@@ (@@ java.nio.@@ file.@@ Path re@@ l@@ Path@@ ) { boolean is@@ J@@ s@@ r@@ 16@@ 6 = re@@ l@@ Path@@ .@@ start@@ sWith@@ ("@@ java@@ /@@ uti@@ l@@ /@@ con@@ current@@ /@@ "); java.lang.String j@@ u = "@@ java@@ /@@ uti@@ l@@ /@@ "; java.lang.String su@@ f@@ fi@@ x = ".@@ java@@ "; if ((@@ !@@ is@@ J@@ s@@ r@@ 16@@ 6@@ ) && (re@@ l@@ Path@@ .@@ start@@ sWith@@ (@@ j@@ u@@ ))) { java.lang.String name = re@@ l@@ Path@@ .@@ toString@@ ().@@ sub@@ string@@ (@@ j@@ u@@ .@@ length@@ ()); if (@@ nam@@ e.@@ end@@ sWith@@ (s@@ u@@ f@@ fix@@ )) { name = nam@@ e.@@ sub@@ string@@ (@@ 0, ((@@ nam@@ e.@@ length@@ ()) - (s@@ u@@ f@@ fi@@ x.@@ length@@ ()))); is@@ J@@ s@@ r@@ 16@@ 6 = libcore.@@ St@@ and@@ ard@@ Re@@ positor@@ i@@ es.@@ j@@ u@@ Files@@ From@@ J@@ s@@ r@@ 16@@ 6@@ .@@ contain@@ s(@@ name@@ ); } } if (is@@ J@@ s@@ r@@ 16@@ 6@@ ) { return j@@ s@@ r@@ 16@@ 6@@ U@@ ps@@ tr@@ e@@ am@@ ; } else if ((@@ re@@ l@@ Path@@ .@@ start@@ sWith@@ ("@@ java@@ /@@ s@@ q@@ l@@ /@@ ")) || (re@@ l@@ Path@@ .@@ start@@ sWith@@ ("@@ java@@ x@@ /@@ s@@ q@@ l@@ /@@ "@@ ))) { return java@@ Uti@@ l@@ S@@ q@@ l@@ U@@ ps@@ tr@@ eam@@ ; } else { return default@@ U@@ ps@@ tr@@ eam@@ ; } }
public void test@@ Get@@ P@@ y@@ th@@ on@@ B@@ inary@@ N@@ or@@ m@@ al@@ On@@ W@@ in@@ do@@ w@@ s() { java.lang.String or@@ ig@@ in@@ al@@ Name = java.lang.@@ System@@ .get@@ Property@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ O@@ S@@ _N@@ AM@@ E); if (!(@@ or@@ ig@@ in@@ al@@ Nam@@ e.@@ contain@@ s@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ W@@ IN@@ D@@ O@@ W@@ S@@ ))) { java.lang.System.@@ set@@ Property@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ O@@ S@@ _N@@ AM@@ E, com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ W@@ IN@@ D@@ O@@ W@@ S@@ ); } try { run@@ Test@@ P@@ y@@ th@@ on@@ B@@ inary@@ N@@ or@@ m@@ al@@ (@@ true@@ ); } catch (java.io.IOException e) { fail@@ (); } final@@ l@@ y { java.lang.System.@@ set@@ Property@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ O@@ S@@ _N@@ AM@@ E, or@@ ig@@ in@@ al@@ Name); } }
public void test@@ Process@@ Run@@ Time@@ out@@ () { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult command@@ Res@@ ult = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (); m@@ Process@@ Hel@@ p@@ er = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ create@@ Mock@@ Process@@ Hel@@ per@@ (@@ Command@@ Statu@@ s.@@ TI@@ ME@@ D_@@ O@@ UT@@ ); java.lang.String int@@ er@@ rup@@ t@@ Mess@@ age = m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ run@@ P@@ y@@ th@@ on@@ Runner@@ (m@@ P@@ y@@ th@@ on@@ C@@ m@@ d@@ , command@@ Result@@ , m@@ Test@@ Time@@ out); assert@@ Equal@@ s@@ (@@ int@@ er@@ rup@@ t@@ Message@@ , null@@ ); assert@@ Equal@@ s(@@ command@@ Res@@ ul@@ t.get@@ Statu@@ s@@ (), Command@@ Statu@@ s.@@ TI@@ ME@@ D_@@ O@@ UT@@ ); }
@java.lang.Override public java.lang.String get@@ P@@ y@@ th@@ on@@ B@@ inary@@ () { return (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ V@@ ts@@ Multi@@ Device@@ Test@@ Test.@@ P@@ Y@@ TH@@ ON@@ _@@ DI@@ R@@ ) + (m@@ P@@ y@@ th@@ on@@ ); }
public void test@@ Run@@ N@@ or@@ m@@ al@@ Input@@ () { m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er = create@@ Mock@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er@@ (@@ Command@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ); m@@ Test.@@ set@@ Device@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ V@@ ts@@ Multi@@ Device@@ Test@@ Test.@@ create@@ Mock@@ Device@@ ()); m@@ Test@@ .@@ set@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er@@ (m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er@@ ); try { m@@ Test.@@ run@@ (m@@ Mock@@ In@@ vo@@ cation@@ Listener@@ ); } catch (java.lang.@@ Illegal@@ Argument@@ Exception e) { fail@@ (); e.@@ p@@ r@@ int@@ Stack@@ Trace@@ (); } catch (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception e) { fail@@ (); e.@@ p@@ r@@ int@@ Stack@@ Trace@@ (); } }
public void test@@ Get@@ P@@ y@@ th@@ on@@ B@@ inary@@ P@@ y@@ th@@ on@@ B@@ inary@@ Not@@ Ex@@ ist@@ s() { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult find@@ P@@ y@@ th@@ on@@ result = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (); find@@ P@@ y@@ th@@ on@@ res@@ ult.@@ set@@ Statu@@ s(@@ Command@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ); find@@ P@@ y@@ th@@ on@@ res@@ ult.@@ set@@ S@@ t@@ do@@ ut@@ ("@@ /@@ user@@ /@@ b@@ in@@ /@@ p@@ y@@ th@@ on@@ "); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ I@@ Run@@ Uti@@ l run@@ Uti@@ l = create@@ Mock@@ Run@@ Uti@@ l@@ (@@ find@@ P@@ y@@ th@@ on@@ result@@ ); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Build@@ Info mock@@ Build@@ Info = org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ create@@ N@@ i@@ ce@@ Mock@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Build@@ Info@@ .@@ class@@ ); org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ exp@@ ect@@ (m@@ ock@@ Build@@ Info@@ .get@@ File@@ (@@ org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ e@@ q@@ ("@@ V@@ I@@ RT@@ U@@ AL@@ EN@@ V@@ P@@ AT@@ H@@ "@@ ))@@ ).@@ and@@ Return@@ (@@ new java.io.File@@ ("@@ Non@@ Ex@@ ist@@ s@@ "@@ )).@@ at@@ Le@@ ast@@ On@@ ce@@ (); org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ re@@ play@@ (m@@ ock@@ Build@@ Info@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ (m@@ ock@@ Build@@ Info@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ set@@ Run@@ Uti@@ l@@ (@@ run@@ Uti@@ l@@ ); try { java.lang.String p@@ y@@ th@@ on@@ B@@ in@@ ar@@ y = m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er.get@@ P@@ y@@ th@@ on@@ B@@ inary@@ (); assert@@ Equal@@ s(@@ p@@ y@@ th@@ on@@ B@@ inary@@ , "@@ /@@ user@@ /@@ b@@ in@@ /@@ p@@ y@@ th@@ on@@ "); } catch (java.lang.@@ Runtime@@ Exception e) { fail@@ (); } }
public void test@@ Get@@ P@@ y@@ th@@ on@@ B@@ inary@@ Exception@@ () { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult find@@ P@@ y@@ th@@ on@@ result = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (); find@@ P@@ y@@ th@@ on@@ res@@ ult.@@ set@@ Statu@@ s(@@ Command@@ Statu@@ s.@@ FA@@ IL@@ E@@ D@@ ); find@@ P@@ y@@ th@@ on@@ res@@ ult.@@ set@@ S@@ t@@ do@@ ut@@ ("@@ "); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ I@@ Run@@ Uti@@ l run@@ Uti@@ l = create@@ Mock@@ Run@@ Uti@@ l@@ (@@ find@@ P@@ y@@ th@@ on@@ result@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ (@@ null@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ set@@ Run@@ Uti@@ l@@ (@@ run@@ Uti@@ l@@ ); try { java.lang.String p@@ y@@ th@@ on@@ B@@ in@@ ar@@ y = m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er.get@@ P@@ y@@ th@@ on@@ B@@ inary@@ (); } catch (java.lang.@@ Runtime@@ Exception e) { assert@@ Equal@@ s("@@ Co@@ ul@@ d not fin@@ d p@@ y@@ th@@ on b@@ in@@ ar@@ y on ho@@ s@@ t m@@ ach@@ ine@@ ", e.get@@ Message@@ ()); return@@ ; } fail@@ (); }
public void test@@ Process@@ Run@@ Su@@ c@@ cess@@ () { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult command@@ Res@@ ult = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (); m@@ Process@@ Hel@@ p@@ er = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ create@@ Mock@@ Process@@ Hel@@ per@@ (@@ Command@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ); java.lang.String int@@ er@@ rup@@ t@@ Mess@@ age = m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ run@@ P@@ y@@ th@@ on@@ Runner@@ (m@@ P@@ y@@ th@@ on@@ C@@ m@@ d@@ , command@@ Result@@ , m@@ Test@@ Time@@ out); assert@@ Equal@@ s@@ (@@ int@@ er@@ rup@@ t@@ Message@@ , null@@ ); assert@@ Equal@@ s(@@ command@@ Res@@ ul@@ t.get@@ Statu@@ s@@ (), Command@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ); }
@java.lang.Override protected void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Folder@@ Build@@ Info build@@ Info = org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ create@@ N@@ i@@ ce@@ Mock@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Folder@@ Build@@ Info@@ .@@ class@@ ); org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ re@@ play@@ (@@ build@@ Info@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ (@@ build@@ Info@@ ) { @java.lang.Override protected com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Process@@ Hel@@ p@@ er create@@ Process@@ Hel@@ per@@ (@@ java.lang.String[] c@@ m@@ d@@ ) { return m@@ Process@@ Hel@@ per@@ ; } }; }
public void test@@ Get@@ P@@ y@@ th@@ on@@ B@@ inary@@ N@@ or@@ m@@ al@@ On@@ Lin@@ u@@ x@@ () { java.lang.String or@@ ig@@ in@@ al@@ Name = java.lang.@@ System@@ .get@@ Property@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ O@@ S@@ _N@@ AM@@ E); if (@@ or@@ ig@@ in@@ al@@ Nam@@ e.@@ contain@@ s@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ W@@ IN@@ D@@ O@@ W@@ S@@ )) { java.lang.System.@@ set@@ Property@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ O@@ S@@ _N@@ AM@@ E, com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ L@@ IN@@ U@@ X@@ ); } try { run@@ Test@@ P@@ y@@ th@@ on@@ B@@ inary@@ N@@ or@@ m@@ al@@ (@@ false@@ ); } catch (java.io.IOException e) { fail@@ (); } final@@ l@@ y { java.lang.System.@@ set@@ Property@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ O@@ S@@ _N@@ AM@@ E, or@@ ig@@ in@@ al@@ Name); } }
public void test@@ Process@@ Run@@ Faile@@ d@@ () { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult command@@ Res@@ ult = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (); m@@ Process@@ Hel@@ p@@ er = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ create@@ Mock@@ Process@@ Hel@@ per@@ (@@ Command@@ Statu@@ s.@@ FA@@ IL@@ E@@ D@@ ); java.lang.String int@@ er@@ rup@@ t@@ Mess@@ age = m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ run@@ P@@ y@@ th@@ on@@ Runner@@ (m@@ P@@ y@@ th@@ on@@ C@@ m@@ d@@ , command@@ Result@@ , m@@ Test@@ Time@@ out); assert@@ Equal@@ s@@ (@@ int@@ er@@ rup@@ t@@ Message@@ , null@@ ); assert@@ Equal@@ s(@@ command@@ Res@@ ul@@ t.get@@ Statu@@ s@@ (), Command@@ Statu@@ s.@@ FA@@ IL@@ E@@ D@@ ); }
public java.lang.String get@@ P@@ y@@ th@@ on@@ Path@@ () { java.lang.String@@ Builder s@@ b = new java.lang.String@@ Builder@@ (); java.lang.String se@@ par@@ at@@ or = java.io.File@@ .@@ path@@ Se@@ par@@ ator@@ ; if ((@@ java.lang.@@ System@@ .get@@ en@@ v@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ P@@ Y@@ TH@@ ON@@ P@@ AT@@ H@@ )) != null@@ ) { sb.@@ append(@@ se@@ par@@ ator@@ ); sb.@@ append@@ (java.lang.@@ System@@ .get@@ en@@ v@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ P@@ Y@@ TH@@ ON@@ P@@ AT@@ H@@ )); } if ((m@@ Build@@ Info@@ ) != null@@ ) { com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ Comp@@ ati@@ b@@ ili@@ ty@@ Build@@ Hel@@ p@@ er build@@ Hel@@ p@@ er = new com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ Comp@@ ati@@ b@@ ili@@ ty@@ Build@@ Hel@@ per@@ (m@@ Build@@ Info@@ ); java.io.File test@@ Di@@ r = null@@ ; try { test@@ Di@@ r = build@@ Hel@@ p@@ er.get@@ Test@@ s@@ Dir@@ (); } catch (@@ java.io.File@@ Not@@ F@@ ound@@ Exception e) { } if (test@@ Di@@ r != null@@ ) { sb.@@ append(@@ se@@ par@@ ator@@ ); java.lang.String test@@ C@@ ase@@ Data@@ Di@@ r = test@@ Dir@@ .get@@ Absolute@@ Path@@ (); sb.@@ append(@@ test@@ C@@ ase@@ Data@@ Dir@@ ); } else if ((m@@ Build@@ Info@@ .get@@ File@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ V@@ T@@ S@@ )) != null@@ ) { sb.@@ append(@@ se@@ par@@ ator@@ ); sb.@@ append@@ (m@@ Build@@ Info@@ .get@@ File@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ V@@ T@@ S@@ )@@ .get@@ Absolute@@ Path@@ ()).@@ append@@ ("@@ /@@ .@@ .@@ "); } if ((m@@ Build@@ Info@@ .get@@ File@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ P@@ Y@@ TH@@ ON@@ P@@ AT@@ H@@ )) != null@@ ) { sb.@@ append(@@ se@@ par@@ ator@@ ); sb.@@ append@@ (m@@ Build@@ Info@@ .get@@ File@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ P@@ Y@@ TH@@ ON@@ P@@ AT@@ H@@ )@@ .get@@ Absolute@@ Path@@ ()); } if ((@@ java.lang.@@ System@@ .get@@ en@@ v@@ ("@@ AN@@ D@@ RO@@ ID@@ _@@ B@@ U@@ IL@@ D_@@ TO@@ P@@ ")) != null@@ ) { sb.@@ append(@@ se@@ par@@ ator@@ ); sb.@@ append@@ (java.lang.@@ System@@ .get@@ en@@ v@@ ("@@ AN@@ D@@ RO@@ ID@@ _@@ B@@ U@@ IL@@ D_@@ TO@@ P@@ "@@ )).@@ append@@ ("@@ /@@ test@@ "); } if ((@@ sb.@@ length@@ ()) == 0) { throw new java.lang.@@ RuntimeException@@ ("@@ Co@@ ul@@ d not fin@@ d p@@ y@@ th@@ on pat@@ h on pat@@ h on ho@@ s@@ t m@@ ach@@ ine@@ "); } return sb.@@ sub@@ string@@ (1@@ ); }
private com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er create@@ Mock@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Statu@@ s statu@@ s) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Build@@ Info build@@ Info = org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ create@@ Mock@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Build@@ Info@@ .@@ class@@ ); return new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ (@@ build@@ Info@@ ) { @java.lang.Override public java.lang.String run@@ P@@ y@@ th@@ on@@ Runner@@ (@@ java.lang.String[] c@@ m@@ d@@ , com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult command@@ Result@@ , long test@@ Time@@ out@@ ) { assert@@ Command@@ (c@@ m@@ d@@ ); try { create@@ Result@@ (c@@ m@@ d@@ [@@ 3@@ ]@@ ); } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } command@@ Result.@@ set@@ Statu@@ s@@ (@@ statu@@ s); return null@@ ; } @java.lang.Override public java.lang.String get@@ P@@ y@@ th@@ on@@ B@@ inary@@ () { return (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ V@@ ts@@ Multi@@ Device@@ Test@@ Test.@@ P@@ Y@@ TH@@ ON@@ _@@ DI@@ R@@ ) + (m@@ P@@ y@@ th@@ on@@ ))); } @java.lang.Override public java.lang.String get@@ P@@ y@@ th@@ on@@ Path@@ () { return "@@ p@@ y@@ th@@ on@@ "; } }; }
@java.lang.Override protected void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (); m@@ Mock@@ In@@ vo@@ cation@@ List@@ en@@ er = org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ create@@ Mock@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ I@@ Test@@ In@@ vo@@ cation@@ Listener@@ .@@ class@@ ); m@@ P@@ y@@ th@@ on = "@@ p@@ y@@ th@@ on@@ "; m@@ Test = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ V@@ ts@@ Multi@@ Device@@ Test@@ () { @java.lang.Override protected void update@@ V@@ ts@@ Runner@@ Test@@ Config@@ (@@ or@@ g@@ ed.@@ j@@ s@@ on@@ .@@ J@@ S@@ ON@@ Ob@@ ject@@ j@@ s) { return@@ ; } }; m@@ Test.@@ set@@ Build@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ V@@ ts@@ Multi@@ Device@@ Test@@ Test.@@ create@@ Mock@@ Build@@ Info@@ ()); m@@ Test.@@ set@@ Test@@ C@@ ase@@ Path@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ V@@ ts@@ Multi@@ Device@@ Test@@ Test.@@ TEST_@@ C@@ A@@ S@@ E_@@ P@@ AT@@ H@@ ); m@@ Test.@@ set@@ Test@@ Config@@ Path@@ (@@ V@@ ts@@ Multi@@ Device@@ Test.@@ DE@@ FA@@ UL@@ T_@@ TE@@ S@@ T@@ C@@ A@@ S@@ E_@@ C@@ ON@@ FI@@ G@@ _P@@ AT@@ H@@ ); }
@java.lang.Override public java.lang.String get@@ P@@ y@@ th@@ on@@ Path@@ () { return "@@ p@@ y@@ th@@ on@@ "; }
public void test@@ Get@@ P@@ y@@ th@@ on@@ B@@ inary@@ Null@@ Build@@ Info@@ () { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult find@@ P@@ y@@ th@@ on@@ result = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (); find@@ P@@ y@@ th@@ on@@ res@@ ult.@@ set@@ Statu@@ s(@@ Command@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ); find@@ P@@ y@@ th@@ on@@ res@@ ult.@@ set@@ S@@ t@@ do@@ ut@@ ("@@ /@@ user@@ /@@ b@@ in@@ /@@ p@@ y@@ th@@ on@@ "); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ I@@ Run@@ Uti@@ l run@@ Uti@@ l = create@@ Mock@@ Run@@ Uti@@ l@@ (@@ find@@ P@@ y@@ th@@ on@@ result@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ (@@ null@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ set@@ Run@@ Uti@@ l@@ (@@ run@@ Uti@@ l@@ ); java.lang.String p@@ y@@ th@@ on@@ B@@ in@@ ar@@ y = m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er.get@@ P@@ y@@ th@@ on@@ B@@ inary@@ (); assert@@ Equal@@ s(@@ p@@ y@@ th@@ on@@ B@@ inary@@ , "@@ /@@ user@@ /@@ b@@ in@@ /@@ p@@ y@@ th@@ on@@ "); }
public void test@@ Process@@ Run@@ Interrup@@ ted@@ () { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult command@@ Res@@ ult = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (); m@@ Process@@ Hel@@ p@@ er = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ Test.@@ create@@ Mock@@ Process@@ Hel@@ per@@ (@@ null@@ , true@@ ); java.lang.String int@@ er@@ rup@@ t@@ Mess@@ age = m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ run@@ P@@ y@@ th@@ on@@ Runner@@ (m@@ P@@ y@@ th@@ on@@ C@@ m@@ d@@ , command@@ Result@@ , m@@ Test@@ Time@@ out); assert@@ False@@ (@@ int@@ er@@ rup@@ t@@ Mess@@ age == null@@ )); assert@@ Equal@@ s(@@ command@@ Res@@ ul@@ t.get@@ Statu@@ s@@ (), Command@@ Statu@@ s.@@ TI@@ ME@@ D_@@ O@@ UT@@ ); }
public void run@@ Test@@ P@@ y@@ th@@ on@@ B@@ inary@@ N@@ or@@ m@@ al@@ (@@ boolean is@@ W@@ in@@ do@@ w@@ s) throw@@ s java.io.IOException { java.lang.String p@@ y@@ th@@ on = (is@@ W@@ in@@ do@@ w@@ s) ? "@@ p@@ y@@ th@@ on@@ .@@ ex@@ e@@ " : "@@ p@@ y@@ th@@ on@@ "; java.lang.String b@@ in@@ Di@@ r = (is@@ W@@ in@@ do@@ w@@ s) ? "@@ Script@@ s@@ " : "@@ b@@ in@@ "; java.io.File test@@ Di@@ r = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ File@@ Util.@@ create@@ Temp@@ Dir@@ ("@@ test@@ V@@ ir@@ t@@ ual@@ En@@ v@@ "); java.io.File test@@ P@@ y@@ th@@ on = new java.io.File@@ (test@@ Dir@@ , ((@@ b@@ in@@ Di@@ r + (@@ java.io.File@@ .@@ se@@ par@@ ator@@ )) + p@@ y@@ th@@ on@@ )); test@@ P@@ y@@ th@@ on@@ .get@@ Parent@@ File@@ ().@@ m@@ k@@ d@@ ir@@ s(); test@@ P@@ y@@ th@@ on@@ .@@ create@@ New@@ File@@ (); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ i@@ (("@@ cre@@ at@@ ing t@@ est file@@ : " + (test@@ P@@ y@@ th@@ on@@ .get@@ Absolute@@ Path@@ ()))); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Build@@ Info mock@@ Build@@ Info = org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ create@@ N@@ i@@ ce@@ Mock@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Build@@ Info@@ .@@ class@@ ); org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ exp@@ ect@@ (m@@ ock@@ Build@@ Info@@ .get@@ File@@ (@@ org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ e@@ q@@ ("@@ V@@ I@@ RT@@ U@@ AL@@ EN@@ V@@ P@@ AT@@ H@@ "@@ ))@@ ).@@ and@@ Return@@ (test@@ Dir@@ ).@@ at@@ Le@@ ast@@ On@@ ce@@ (); org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ re@@ play@@ (m@@ ock@@ Build@@ Info@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ (m@@ ock@@ Build@@ Info@@ ); java.lang.String p@@ y@@ th@@ on@@ B@@ in@@ ar@@ y = m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er.get@@ P@@ y@@ th@@ on@@ B@@ inary@@ (); assert@@ Equal@@ s(@@ p@@ y@@ th@@ on@@ B@@ inary@@ , test@@ P@@ y@@ th@@ on@@ .get@@ Absolute@@ Path@@ ()); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ File@@ Util.@@ re@@ c@@ ur@@ si@@ ve@@ D@@ el@@ et@@ e(@@ test@@ Dir@@ ); }
@java.lang.Override public void set@@ V@@ ol@@ um@@ e@@ (@@ int vo@@ l@@ um@@ e) { vo@@ l@@ um@@ e = ((@@ vo@@ l@@ um@@ e * 5@@ 12@@ ) / 1@@ 00@@ ) - 12@@ 8@@ ; }
java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (@@ int@@ [] st@@ at@@ es) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H per@@ mission@@ "); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > device@@ s = new java.util.ArrayList<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ >(); java.util.@@ Set@@ <@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > b@@ ond@@ ed@@ Device@@ s = m@@ Adap@@ t@@ er.get@@ B@@ ond@@ ed@@ De@@ vices@@ (); for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice : b@@ ond@@ ed@@ De@@ vices@@ ) { android.os.@@ Par@@ cel@@ U@@ u@@ id@@ [] f@@ e@@ ature@@ U@@ u@@ id@@ s = device@@ .get@@ U@@ u@@ id@@ s(); if (!@@ (android.@@ bluetooth.@@ Bluetooth@@ U@@ u@@ id@@ .is@@ U@@ u@@ id@@ P@@ res@@ ent@@ (f@@ e@@ ature@@ U@@ u@@ id@@ s, Bluetooth@@ U@@ u@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ ))) { continue@@ ; } int connection@@ State = android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ; com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m != null@@ ) { connection@@ State = s@@ m@@ .get@@ Connection@@ State@@ (); } for (@@ int i = 0; i < (@@ st@@ at@@ es.@@ length); i++) { if (@@ connection@@ State == (@@ st@@ at@@ es@@ [i@@ ]@@ )) { de@@ vices@@ .@@ add(@@ device@@ ); } } return de@@ vices@@ ; }
private com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e get@@ Or@@ Create@@ State@@ M@@ ach@@ ine@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (@@ de@@ vice == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ get@@ G@@ o@@ ing fa@@ ile@@ d@@ : de@@ vice can@@ not b@@ e null@@ "); return null@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m != null@@ ) { return s@@ m@@ ; } if ((m@@ State@@ M@@ ach@@ in@@ es.@@ size@@ ()) > (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ MA@@ X@@ _@@ H@@ E@@ AR@@ ING@@ _@@ A@@ ID@@ _@@ STA@@ TE@@ _M@@ AC@@ H@@ IN@@ E@@ S@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ N@@ umb@@ er of He@@ ar@@ ing@@ A@@ id st@@ ate m@@ ach@@ ine@@ s re@@ ach@@ ed@@ : " + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ MA@@ X@@ _@@ H@@ E@@ AR@@ ING@@ _@@ A@@ ID@@ _@@ STA@@ TE@@ _M@@ AC@@ H@@ IN@@ E@@ S@@ ))); return null@@ ; } if (com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ S@@ ho@@ ul@@ d a new st@@ ate m@@ ach@@ in@@ e for " + device@@ )); } s@@ m = com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ m@@ ake@@ (@@ device@@ , this@@ , m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .get@@ L@@ oo@@ per@@ ()); m@@ State@@ M@@ ach@@ in@@ es.@@ put@@ (@@ device@@ , s@@ m@@ ); return s@@ m@@ ; }
public android.@@ bluetooth.@@ le.@@ Bluetooth@@ Le@@ Ad@@ verti@@ se@@ r get@@ Bluetooth@@ Le@@ Ad@@ verti@@ ser@@ () { if (!(@@ get@@ Le@@ Access@@ ())) { return null@@ ; } if ((@@ !@@ (is@@ Multi@@ ple@@ Ad@@ verti@@ se@@ ment@@ Sup@@ ported@@ ())) && (!(@@ is@@ Per@@ iph@@ er@@ al@@ Mode@@ Sup@@ ported@@ ()))) { android.util.Log.@@ e@@ (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ TAG, "@@ Le@@ av@@ ing L@@ E ad@@ verti@@ s@@ ing not sup@@ por@@ ted@@ "); return null@@ ; } synchronized@@ (m@@ Lock) { if ((@@ android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ s@@ Bluetooth@@ Le@@ Ad@@ verti@@ ser@@ ) == null@@ ) { android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ s@@ Bluetooth@@ Le@@ Ad@@ verti@@ se@@ r = new android.@@ bluetooth.@@ le.@@ Bluetooth@@ Le@@ Ad@@ verti@@ ser@@ (m@@ Manager@@ Service@@ ); } } return android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ s@@ Bluetooth@@ Le@@ Ad@@ verti@@ ser@@ ; }
private void on@@ Device@@ Load@@ ed@@ (@@ byte c@@ ap@@ abili@@ ties@@ , byte s@@ in@@ k@@ Id, byte@@ [] addres@@ s) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent ev@@ ent = new com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Event@@ (@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ DE@@ V@@ IC@@ E_@@ LO@@ A@@ DE@@ D@@ ); ev@@ ent.@@ de@@ vice = get@@ Device@@ (@@ addres@@ s); ev@@ ent.@@ value@@ Int@@ 1 = c@@ ap@@ abili@@ ties@@ ; ev@@ ent.@@ value@@ Int@@ 2 = s@@ in@@ k@@ Id@@ ; if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .@@ TAG, ("@@ on@@ Au@@ dio@@ State@@ Changed@@ : " + event@@ )); } send@@ Message@@ To@@ Service@@ (@@ event@@ ); }
public boolean dis@@ connect@@ He@@ ar@@ ing@@ A@@ id@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { return dis@@ connect@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ (get@@ Byte@@ Addres@@ s(@@ device@@ )); }
public static void set@@ V@@ ol@@ um@@ e@@ (@@ int vo@@ l@@ um@@ e) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .set@@ V@@ ol@@ um@@ e@@ Native@@ (@@ vo@@ l@@ um@@ e); }
@java.lang.Override protected boolean start@@ () { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ start@@ ()@@ "); } if ((@@ com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ s@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ ) != null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ start@@ ()@@ "); } if ((@@ com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ s@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ ) != null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ S@@ av@@ ing cal@@ le@@ d t@@ w@@ ic@@ e } m@@ Adap@@ ter = java.util.@@ Object@@ s.@@ requ@@ i@@ re@@ Non@@ Null@@ (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (), "@@ can@@ not b@@ e null@@ "); } wh@@ e@@ n He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice start@@ s m@@ He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice = java.util.@@ Object@@ s.@@ requ@@ i@@ re@@ Non@@ Null@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .get@@ Instance@@ (), can@@ not b@@ e null wh@@ e@@ n He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice start@@ s m@@ State@@ M@@ ach@@ in@@ es.@@ clear@@ (); m@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ State@@ M@@ ach@@ in@@ es@@ "); m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .@@ start@@ (); m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .@@ init@@ (); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _@@ B@@ ON@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ve@@ r = new com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ B@@ ond@@ State@@ Changed@@ Recei@@ ver@@ (); register@@ Recei@@ ver@@ (m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ver@@ , fil@@ ter@@ ); fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); m@@ Connection@@ State@@ Changed@@ Recei@@ ve@@ r = new com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ (); register@@ Recei@@ ver@@ (m@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ , fil@@ ter@@ ); com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ (@@ this@@ ); set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); return true@@ ; }
private void on@@ Device@@ A@@ va@@ il@@ able@@ (@@ byte@@ [] addres@@ s, byte@@ [] c@@ ap@@ abili@@ ti@@ es@@ , int native@@ h@@ i@@ S@@ ync@@ Id@@ ) { }
void message@@ From@@ Native@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent st@@ ack@@ Event@@ ) { java.util.@@ Object@@ s.@@ requ@@ i@@ re@@ Non@@ Null@@ (@@ st@@ ack@@ Ev@@ ent.@@ device@@ , ("@@ De@@ vice sho@@ ul@@ d ne@@ ve@@ r b@@ e null@@ , event@@ : " + st@@ ack@@ Event@@ )); if ((@@ st@@ ack@@ Ev@@ ent.@@ typ@@ e) == (@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ DE@@ V@@ IC@@ E_@@ LO@@ A@@ DE@@ D@@ )) { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = st@@ ack@@ Ev@@ ent.@@ device@@ ; int c@@ ap@@ abili@@ ti@@ es = st@@ ack@@ Ev@@ ent.@@ value@@ Int@@ 1; int h@@ i@@ S@@ ync@@ Id = st@@ ack@@ Ev@@ ent.@@ value@@ Int@@ 2@@ ; m@@ Device@@ Cap@@ abili@@ ties@@ Map@@ .@@ put@@ (@@ device@@ , c@@ ap@@ abili@@ ties@@ ); m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Map@@ .@@ put@@ (@@ device@@ , (@@ long@@ ) (@@ h@@ i@@ S@@ ync@@ Id@@ ))); return@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = st@@ ack@@ Ev@@ ent.@@ device@@ ; com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = get@@ Or@@ Create@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); if (s@@ m == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ Can@@ not pro@@ ces@@ s st@@ ac@@ k event@@ : n@@ o st@@ ate m@@ ach@@ ine@@ : " + st@@ ack@@ Event@@ )); return@@ ; } s@@ m.@@ send@@ Message@@ (@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , st@@ ack@@ Event@@ ); } }
@java.lang.Override protected boolean st@@ op@@ () { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ st@@ op@@ ()@@ "); } if ((@@ com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ s@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ ) == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, "@@ st@@ op@@ () cal@@ le@@ d b@@ e@@ for@@ e start@@ () return true@@ ; } set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ .set@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ (@@ null@@ ); un@@ register@@ Recei@@ ver@@ (m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ver@@ ); m@@ B@@ ond@@ State@@ Changed@@ Recei@@ ve@@ r = null@@ ; un@@ register@@ Recei@@ ver@@ (m@@ Connection@@ State@@ Changed@@ Recei@@ ver@@ ); m@@ Connection@@ State@@ Changed@@ Recei@@ ve@@ r = null@@ ; m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .@@ cle@@ an@@ up@@ (); m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Inter@@ face = null@@ ; synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { for (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m : m@@ State@@ M@@ ach@@ in@@ es.@@ valu@@ es@@ ()) { s@@ m@@ .@@ do@@ Q@@ u@@ it@@ (); s@@ m.@@ cle@@ an@@ up@@ (); } m@@ State@@ M@@ ach@@ in@@ es.@@ clear@@ (); } if ((m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ ) != null@@ ) { m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .@@ qu@@ it@@ S@@ a@@ f@@ el@@ y(); m@@ State@@ M@@ ach@@ in@@ es@@ Th@@ re@@ ad = null@@ ; } m@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Inter@@ face = null@@ ; m@@ Adap@@ ter@@ Ser@@ vice = null@@ ; m@@ Adap@@ ter = null@@ ; return true@@ ; }
private boolean is@@ Ac@@ tive@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { return (@@ de@@ vice != null@@ ) && (m@@ Ac@@ tive@@ Device@@ s.@@ contain@@ s(@@ device@@ )); } }
private void send@@ Message@@ To@@ Service@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent event@@ ) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice ser@@ vice = com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ .get@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ (); if (@@ ser@@ vice != null@@ ) { service@@ .@@ message@@ From@@ Native@@ (@@ event@@ ); } else { android.util.Log.@@ w@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ Interface@@ .@@ TAG, ("@@ Ev@@ ent ign@@ or@@ ed@@ , ser@@ vice not ava@@ il@@ able@@ : " + event@@ )); } }
@java.lang.Override public java.lang.String toString@@ () { java.lang.String@@ Builder result = new java.lang.String@@ Builder@@ (); res@@ ult.@@ append@@ (("@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent {@@ type@@ :@@ " + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ event@@ Type@@ To@@ String(@@ type@@ )))); res@@ ult.@@ append@@ ((@@ ", device@@ :@@ " + (@@ device@@ ))); res@@ ult.@@ append@@ ((@@ ", value@@ 1@@ :@@ " + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ event@@ Type@@ Value@@ Int@@ To@@ String(@@ type@@ , value@@ Int@@ 1@@ )))); res@@ ult.@@ append@@ ((@@ ", value@@ 2@@ :@@ " + (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ event@@ Type@@ Value@@ Int@@ To@@ String(@@ type@@ , value@@ Int@@ 2@@ )))); if ((@@ cod@@ ec@@ Statu@@ s) != null@@ ) { res@@ ult.@@ append@@ ((@@ ", cod@@ ec@@ Statu@@ s@@ :@@ " + (@@ cod@@ ec@@ Statu@@ s@@ ))); } res@@ ult.@@ append@@ ("@@ }@@ "); return res@@ ult.@@ toString@@ (); }
private static java.lang.String event@@ Type@@ To@@ String@@ (@@ int typ@@ e) { switch (@@ typ@@ e) { case com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ N@@ ON@@ E : return "@@ EV@@ ENT_@@ TYP@@ E_@@ N@@ ON@@ E@@ "; case com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D : return "@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ "; case com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ A@@ U@@ D@@ IO@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D : return "@@ EV@@ ENT_@@ TYP@@ E_@@ A@@ U@@ D@@ IO@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ "; case com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ OD@@ EC@@ _C@@ ON@@ FI@@ G@@ _C@@ H@@ AN@@ GE@@ D : return "@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ OD@@ EC@@ _C@@ ON@@ FI@@ G@@ _C@@ H@@ AN@@ GE@@ D@@ "; default : return "@@ EV@@ ENT_@@ TYP@@ E_@@ UN@@ K@@ NO@@ W@@ N@@ :@@ " + type@@ ; } }
public synchronized boolean set@@ Ac@@ tive@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if (!(m@@ Ac@@ tive@@ De@@ vices@@ .@@ contain@@ s(@@ device@@ ))) { return true@@ ; } return false@@ ; }
public boolean connect@@ He@@ ar@@ ing@@ A@@ id@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { return connect@@ He@@ ar@@ ing@@ A@@ id@@ Native@@ (get@@ Byte@@ Addres@@ s(@@ device@@ )); }
private static native void set@@ V@@ ol@@ um@@ e@@ Native@@ (@@ int vo@@ l@@ um@@ e);
boolean dis@@ connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ dis@@ connect@@ () " + device@@ )); } long c@@ ust@@ om@@ er@@ Id = m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Ma@@ p@@ .get@@ (@@ device@@ ); for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice st@@ or@@ ed@@ De@@ vice : m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Ma@@ p@@ .@@ key@@ Set@@ ()) { if ((m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ ) == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ dis@@ connect@@ : dis@@ connec@@ t for " + device@@ ) + " : n@@ o st@@ ate m@@ ach@@ in@@ e continue@@ ; } s@@ m.@@ send@@ Message@@ (@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); } } return true@@ ; }
void dum@@ p@@ (@@ java.lang.String@@ Builder s@@ b@@ ) { sb.@@ append@@ ("@@ Lis@@ t of play@@ er@@ s@@ : \n@@ "); for (java.lang.String k@@ ey : m@@ Media@@ Play@@ er@@ Id@@ s.@@ key@@ Set@@ ()) { if ((m@@ Media@@ Play@@ er@@ s@@ Id@@ s.get@@ (@@ key@@ )) == (m@@ Ac@@ tive@@ Play@@ er@@ Id@@ )) { sb.@@ append@@ ("@@ *@@ "); } sb.@@ append@@ ((((@@ ("@@ Play@@ er " + (m@@ Media@@ Play@@ er@@ Id@@ s.get@@ (@@ key@@ ))) + "@@ : ") + key@@ ) + "@@ \n@@ ")); } sb.@@ append@@ ("@@ \n@@ "); sb.@@ append@@ ((@@ ("@@ Lis@@ t of medi@@ a cont@@ ro@@ l@@ ler@@ s size@@ : " + (m@@ Media@@ Play@@ er@@ s.@@ size@@ ())) + "@@ \n@@ ")); for (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er play@@ er : m@@ Media@@ Play@@ er@@ s.@@ valu@@ es@@ ()) { play@@ er.@@ dum@@ p@@ (s@@ b@@ ); } sb.@@ append@@ ("@@ \n@@ "); sb.@@ append@@ ((@@ ("@@ B@@ row@@ s@@ able Play@@ er li@@ s@@ t size@@ : " + (m@@ B@@ row@@ s@@ able@@ Play@@ er@@ s.@@ size@@ ())) + "@@ \n@@ ")); for (com.android.bluetooth.@@ av@@ rc@@ p.@@ B@@ row@@ sed@@ Play@@ er@@ W@@ r@@ app@@ er play@@ er : m@@ B@@ row@@ s@@ able@@ Play@@ er@@ s.@@ valu@@ es@@ ()) { play@@ er.@@ dum@@ p@@ (s@@ b@@ ); } }
void remove@@ Media@@ Play@@ er@@ (@@ int play@@ er@@ Id@@ ) { if (!(m@@ Media@@ Play@@ er@@ s.@@ contain@@ s@@ Key@@ (p@@ lay@@ er@@ Id@@ ))) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ e@@ (("@@ Tr@@ y@@ ing to remo@@ v@@ e n@@ on@@ exist@@ ent medi@@ a play@@ er@@ : " + play@@ er@@ Id@@ )); return@@ ; } if (p@@ lay@@ er@@ Id == (m@@ Ac@@ tive@@ Play@@ er@@ Id@@ )) { get@@ Ac@@ tive@@ Play@@ er@@ ().@@ un@@ register@@ Callback@@ (); m@@ Ac@@ tive@@ Play@@ er@@ Id = 0; } com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er w@@ r@@ app@@ er = m@@ Media@@ Play@@ er@@ s.get@@ (p@@ lay@@ er@@ Id@@ ); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ (("@@ Remo@@ v@@ ing medi@@ a play@@ er " + (@@ w@@ r@@ app@@ er.get@@ Package@@ Name@@ ()))); m@@ Media@@ Play@@ er@@ Id@@ s.@@ remove@@ (@@ w@@ r@@ app@@ er.get@@ Package@@ Name@@ ()); m@@ Media@@ Play@@ er@@ s.@@ remove@@ (p@@ lay@@ er@@ Id@@ ); m@@ Media@@ Play@@ er@@ s.get@@ (p@@ lay@@ er@@ Id@@ ).@@ cle@@ an@@ up@@ (); }
private void send@@ Media@@ Up@@ date@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Data data@@ ) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ ("@@ send@@ Media@@ Up@@ date@@ "); if ((m@@ Callback@@ ) == null@@ ) { return@@ ; } if ((@@ data@@ .@@ q@@ ue@@ u@@ e.@@ size@@ ()) == 0) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ TAG, "@@ send@@ Media@@ Up@@ date@@ : Cre@@ at@@ ing a on@@ e ite@@ m q@@ ue@@ u@@ e for a play@@ er wit@@ h n@@ o q@@ ue@@ ue@@ ue@@ u@@ e.@@ add(@@ data@@ .@@ m@@ et@@ ad@@ ata@@ ); } m@@ Callback@@ .@@ on@@ Media@@ Up@@ dat@@ ed@@ (@@ data@@ ); }
void get@@ Folder@@ Item@@ s@@ (@@ int play@@ er@@ Id, java.lang.String m@@ edia@@ Id, com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Get@@ Folder@@ Item@@ s@@ Call@@ b@@ ac@@ k c@@ b@@ ) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ ((@@ (("@@ get@@ Folder@@ Item@@ s@@ ()@@ : play@@ er@@ Id@@ =@@ " + play@@ er@@ Id@@ ) + ", m@@ edia@@ Id@@ =@@ ") + m@@ edia@@ Id@@ )); if (m@@ edia@@ Id@@ .@@ equal@@ s("@@ ")) { get@@ Folder@@ Item@@ s@@ Media@@ Play@@ er@@ List@@ (c@@ b@@ ); return@@ ; } if (!(m@@ edia@@ Id@@ .@@ match@@ es@@ ("@@ ^@@ \@@ d@@ \@@ d.@@ *@@ $@@ "@@ ))) { android.util.Log.@@ w@@ t@@ f@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ TAG, ("@@ get@@ Folder@@ Item@@ s@@ : m@@ edia@@ Id d@@ id@@ n@@ 't mat@@ ch pat@@ tern@@ : m@@ edia@@ Id@@ =@@ " + m@@ edia@@ Id@@ )); } int play@@ er@@ In@@ dex = java.lang.Integ@@ er.@@ parse@@ Int@@ (m@@ edia@@ Id@@ .@@ sub@@ string@@ (@@ 0, 2@@ )); java.lang.String item@@ Id = m@@ edia@@ Id@@ .@@ sub@@ string@@ (@@ 2@@ ); if (m@@ B@@ row@@ s@@ able@@ Play@@ er@@ s.@@ contain@@ s@@ Key@@ (p@@ lay@@ er@@ Index@@ )) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ B@@ row@@ sed@@ Play@@ er@@ W@@ r@@ app@@ er w@@ r@@ app@@ er = m@@ B@@ row@@ s@@ able@@ Play@@ er@@ s.get@@ (p@@ lay@@ er@@ Index@@ ); if (i@@ tem@@ Id@@ .@@ equal@@ s("@@ ")) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ TAG, ("@@ E@@ mp@@ t@@ y medi@@ a id, get@@ t@@ ing the ro@@ o@@ t for " + (m@@ Media@@ Play@@ er@@ Id@@ s.get@@ (p@@ lay@@ er@@ Index@@ )))); item@@ Id = w@@ r@@ app@@ er.get@@ Root@@ Id@@ (); } w@@ r@@ app@@ er.get@@ Folder@@ Item@@ s(@@ item@@ Id, ( statu@@ s, id, result@@ s) -@@ > { if (@@ statu@@ s != B@@ row@@ sed@@ Play@@ er@@ W@@ r@@ app@@ er.@@ STAT@@ US@@ _S@@ U@@ C@@ CE@@ SS@@ ) { c@@ b.@@ run@@ (m@@ edia@@ Id, new Array@@ List<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ List@@ Item@@ >@@ ()); return@@ ; } java.lang.String play@@ er@@ Pre@@ fi@@ x = java.lang.String@@ .@@ for@@ mat@@ ("@@ %@@ 0@@ 2@@ d@@ ", play@@ er@@ Index@@ ); for (com.android.bluetooth.@@ av@@ rc@@ p.@@ List@@ I@@ te@@ m ite@@ m : result@@ s) { if (i@@ tem@@ .is@@ Folder@@ ) { item@@ .@@ fo@@ l@@ d@@ er.@@ m@@ edia@@ Id = play@@ er@@ Pre@@ fi@@ x.@@ con@@ cat@@ (i@@ tem@@ .@@ fo@@ l@@ d@@ er.@@ m@@ edia@@ Id@@ ); } else { item@@ .@@ s@@ on@@ g.@@ m@@ edia@@ Id = play@@ er@@ Pre@@ fi@@ x.@@ con@@ cat@@ (i@@ tem@@ .@@ s@@ on@@ g.@@ m@@ edia@@ Id@@ ); } } c@@ b.@@ run@@ (m@@ edia@@ Id, result@@ s); }); return@@ ; } else { c@@ b.@@ run@@ (m@@ edia@@ Id, new java.util.ArrayList<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ List@@ Item@@ >@@ ()); } }
int get@@ Current@@ Play@@ er@@ Id@@ () { return 0; }
void send@@ Media@@ Key@@ Event@@ (@@ int key@@ , int state@@ ) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ ((@@ (("@@ send@@ Media@@ Key@@ Event@@ : key@@ =@@ " + key@@ ) + " state@@ =@@ ") + state@@ )); int ac@@ tion = (@@ st@@ ate == 0) ? android.@@ view@@ .@@ Key@@ Ev@@ ent.@@ AC@@ TION@@ _@@ D@@ O@@ W@@ N : android.@@ view@@ .@@ Key@@ Ev@@ ent.@@ AC@@ TION@@ _@@ U@@ P@@ ; android.@@ view@@ .@@ Key@@ Ev@@ ent ev@@ ent = new android.@@ view@@ .@@ Key@@ Event@@ (@@ action@@ , com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Hel@@ per@@ s.@@ av@@ rc@@ p@@ P@@ as@@ st@@ h@@ ro@@ u@@ g@@ h@@ To@@ Key@@ Code@@ (@@ key@@ )); m@@ Media@@ Session@@ Manager.@@ dis@@ p@@ atch@@ Media@@ Key@@ Event@@ (@@ event@@ ); }
void on@@ Media@@ Up@@ dat@@ ed@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Data data@@ );
void get@@ Folder@@ Item@@ s@@ Media@@ Play@@ er@@ List@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Get@@ Folder@@ Item@@ s@@ Call@@ b@@ ac@@ k c@@ b@@ ) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ ("@@ get@@ Folder@@ Item@@ s@@ Media@@ Play@@ er@@ List@@ : S@@ end@@ ing M@@ edi@@ a Play@@ er li@@ s@@ t for ro@@ o@@ t di@@ re@@ ctory@@ "); java.util.ArrayList<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ List@@ Item@@ > play@@ er@@ Lis@@ t = new java.util.ArrayList<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ List@@ Item@@ >(); for (com.android.bluetooth.@@ av@@ rc@@ p.@@ B@@ row@@ sed@@ Play@@ er@@ W@@ r@@ app@@ er play@@ er : m@@ B@@ row@@ s@@ able@@ Play@@ er@@ s.@@ valu@@ es@@ ()) { java.lang.String dis@@ play@@ Name = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Uti@@ l.get@@ Display@@ Name@@ (m@@ Context@@ , play@@ er.get@@ Package@@ Name@@ ()); int id = m@@ Media@@ Play@@ er@@ Id@@ s.get@@ (p@@ lay@@ er.get@@ Package@@ Name@@ ()); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ (("@@ get@@ Folder@@ Item@@ s@@ Media@@ Play@@ er@@ List@@ : Add@@ ing play@@ er " + dis@@ play@@ Name@@ )); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Fol@@ der play@@ er@@ Fol@@ der = new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Folder@@ (@@ java.lang.String@@ .@@ for@@ mat@@ ("@@ %@@ 0@@ 2@@ d@@ ", id@@ ), false@@ , dis@@ play@@ Name); play@@ er@@ List.@@ add@@ (@@ new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ List@@ Item@@ (p@@ lay@@ er@@ Folder@@ )); } c@@ b.@@ run@@ ("@@ ", play@@ er@@ List@@ ); return@@ ; }
void get@@ Play@@ er@@ Root@@ (@@ int play@@ er@@ Id, com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Get@@ Play@@ er@@ Root@@ Call@@ b@@ ac@@ k c@@ b@@ ) { c@@ b.@@ run@@ (p@@ lay@@ er@@ Id, true@@ , "@@ ", m@@ B@@ row@@ s@@ able@@ Play@@ er@@ s.@@ size@@ ()); }
private void play@@ No@@ w@@ Play@@ ing@@ Item@@ (java.lang.String m@@ edia@@ Id@@ ) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ (("@@ play@@ No@@ w@@ Play@@ ing@@ Item@@ : m@@ edia@@ Id@@ =@@ " + m@@ edia@@ Id@@ )); java.util.@@ reg@@ ex@@ .@@ Pat@@ ter@@ n reg@@ e@@ x = java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ("@@ No@@ w@@ Play@@ ing@@ Id@@ (@@ [0@@ -@@ 9@@ ]@@ *@@ )@@ "); java.util.@@ reg@@ ex@@ .@@ Match@@ er m = reg@@ ex@@ .@@ match@@ er@@ (m@@ edia@@ Id@@ ); if (!(m@@ .@@ find@@ ())) { android.util.Log.@@ w@@ t@@ f@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ TAG, ("@@ play@@ No@@ w@@ Play@@ ing@@ Item@@ : Co@@ ul@@ d@@ n@@ 't mat@@ ch m@@ edia@@ Id to pat@@ tern@@ : m@@ edia@@ Id@@ =@@ " + m@@ edia@@ Id@@ )); } long q@@ ue@@ ue@@ Item@@ Id = java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (m@@ .@@ g@@ roup@@ (1@@ )); if ((@@ get@@ Ac@@ tive@@ Play@@ er@@ ()) != null@@ ) { get@@ Ac@@ tive@@ Play@@ er@@ ().@@ play@@ Item@@ From@@ Q@@ ue@@ ue@@ (@@ q@@ ue@@ ue@@ Item@@ Id@@ ); } }
java.lang.String get@@ Current@@ Media@@ Id@@ () { final com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er play@@ er = get@@ Ac@@ tive@@ Play@@ er@@ (); if (p@@ lay@@ er == null@@ ) return "@@ "; final android.@@ media.@@ session@@ .@@ Play@@ back@@ State st@@ ate = play@@ er.get@@ Current@@ Media@@ Data@@ ().@@ state@@ ; if ((@@ st@@ ate == null@@ ) || ((@@ st@@ at@@ e.get@@ Ac@@ tive@@ Q@@ ue@@ ue@@ ue@@ Item@@ Id@@ ()) == (@@ Media@@ Session@@ .@@ Q@@ ue@@ ue@@ ue@@ Item@@ .@@ UN@@ K@@ NO@@ W@@ N@@ _@@ ID@@ ))) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ (("@@ get@@ Current@@ Media@@ Id@@ : N@@ o ac@@ tiv@@ e q@@ ue@@ u@@ e ite@@ m Id@@ : " + state@@ )); return "@@ "; } return "@@ No@@ w@@ Play@@ ing@@ Id@@ " + (@@ st@@ at@@ e.get@@ Ac@@ tive@@ Q@@ ue@@ Item@@ Id@@ ()); }
private void play@@ Folder@@ Item@@ (java.lang.String m@@ edia@@ Id@@ ) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ d@@ (("@@ play@@ Folder@@ Item@@ : m@@ edia@@ Id@@ =@@ " + m@@ edia@@ Id@@ )); if (!(m@@ edia@@ Id@@ .@@ match@@ es@@ ("@@ ^@@ \@@ d@@ \@@ \@@ \@@ d.@@ *@@ $@@ "@@ ))) { android.util.Log.@@ w@@ t@@ f@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ TAG, ("@@ play@@ Folder@@ Item@@ : m@@ edia@@ Id d@@ id@@ n@@ 't mat@@ ch pat@@ tern@@ : m@@ edia@@ Id@@ =@@ " + m@@ edia@@ Id@@ )); } int play@@ er@@ In@@ dex = java.lang.Integ@@ er.@@ parse@@ Int@@ (m@@ edia@@ Id@@ .@@ sub@@ string@@ (@@ 0, 2@@ )); java.lang.String item@@ Id = m@@ edia@@ Id@@ .@@ sub@@ string@@ (@@ 2@@ ); if (!(m@@ B@@ row@@ s@@ able@@ Play@@ er@@ s.@@ contain@@ s@@ Key@@ (p@@ lay@@ er@@ Index@@ ))) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List.@@ e@@ (("@@ play@@ Folder@@ Item@@ : D@@ o not h@@ av@@ e the a b@@ row@@ s@@ able play@@ er wit@@ h I@@ D " + play@@ er@@ Index@@ )); return@@ ; } m@@ B@@ row@@ s@@ able@@ Play@@ er@@ s.get@@ (p@@ lay@@ er@@ Index@@ ).@@ play@@ Item@@ (i@@ tem@@ Id@@ ); }
@java.lang.Override public void on@@ M@@ et@@ ad@@ ata@@ Changed@@ (android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ M@@ et@@ ad@@ at@@ a m@@ et@@ ad@@ ata@@ ) { if (!(@@ is@@ Read@@ y@@ ())) { android.util.Log.@@ v@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ((m@@ Package@@ Name@@ ) + " tri@@ ed to up@@ d@@ ate wit@@ h in@@ comp@@ let@@ e m@@ et@@ ad@@ at@@ a return@@ ; } android.util.Log.@@ v@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ((@@ ("@@ on@@ M@@ et@@ ad@@ ata@@ : " + (m@@ Package@@ Name@@ )) + " : ") + (m@@ et@@ ad@@ ata@@ .get@@ Des@@ cription@@ ()))); if (!(m@@ et@@ ad@@ ata@@ .@@ equals(@@ get@@ M@@ et@@ ad@@ ata@@ ()))) { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ e@@ ("@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ e@@ ("@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ e@@ ("@@ ) call@@ b@@ ac@@ k m@@ et@@ ad@@ at@@ a do@@ es@@ n@@ 't mat@@ ch cont@@ ro@@ lle@@ r m@@ et@@ ad@@ at@@ a "); } if (m@@ et@@ ad@@ ata@@ .@@ equal@@ s@@ (m@@ Current@@ Data.@@ m@@ et@@ ad@@ ata@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, (("@@ on@@ M@@ et@@ ad@@ ata@@ Changed@@ : " + (m@@ Package@@ Name@@ )) + " tri@@ ed to up@@ d@@ ate wit@@ h n@@ o new dat@@ a return@@ ; } try@@ S@@ end@@ Media@@ Up@@ date@@ (); }
protected android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ M@@ et@@ ad@@ at@@ a get@@ M@@ et@@ ad@@ ata@@ () { return m@@ Media@@ Control@@ l@@ er.get@@ M@@ et@@ ad@@ ata@@ (); }
boolean is@@ M@@ et@@ ad@@ ata@@ S@@ yn@@ ce@@ d@@ () { if ((@@ get@@ Ac@@ tive@@ Q@@ ue@@ ue@@ ID@@ ()) != null@@ ) && ((@@ get@@ Ac@@ tive@@ Q@@ ue@@ ue@@ ID@@ ()) != (-1@@ ))) { android.@@ media.@@ session@@ .@@ Media@@ Session@@ .@@ Q@@ ue@@ ue@@ I@@ te@@ m curr@@ I@@ te@@ m = null@@ ; for (android.@@ media.@@ session@@ .@@ Media@@ Session@@ .@@ Q@@ ue@@ ue@@ I@@ te@@ m ite@@ m : get@@ Q@@ ue@@ ue@@ ()) { if ((@@ item@@ .get@@ Q@@ ue@@ ue@@ Id@@ ()) == (get@@ Ac@@ tive@@ Q@@ ue@@ ue@@ ID@@ ())) { curr@@ I@@ te@@ m = item@@ ; break@@ ; } } com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a q@@ ite@@ m = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ to@@ M@@ et@@ ad@@ ata@@ (@@ curr@@ Item@@ ); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a m@@ dat@@ a = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ to@@ M@@ et@@ ad@@ ata@@ (get@@ M@@ et@@ ad@@ ata@@ ()); q@@ item@@ .@@ m@@ edia@@ Id = "@@ "; m@@ data@@ .@@ m@@ edia@@ Id = "@@ "; if ((@@ curr@@ I@@ te@@ m == null@@ ) || (!@@ q@@ ite@@ m@@ .@@ equal@@ s@@ (m@@ dat@@ a@@ )@@ ))) { if (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ is@@ M@@ et@@ ad@@ ata@@ : current@@ l@@ y out of s@@ yn@@ c for " + (m@@ Package@@ Name@@ ))); android.util.Log.d@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ is@@ M@@ et@@ ad@@ ata@@ S@@ yn@@ c for " + (m@@ Package@@ Name@@ ))); android.util.Log.d@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ is@@ M@@ et@@ ad@@ ata@@ : Curr@@ ent q@@ ue@@ ue@@ Item@@ : " + curr@@ Item@@ )); android.util.Log.d@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ is@@ M@@ et@@ ad@@ ata@@ S@@ yn@@ ce@@ d@@ () Curr@@ ent m@@ et@@ ad@@ at@@ a : " + (get@@ M@@ et@@ ad@@ ata@@ ().get@@ Des@@ cription@@ ()))); } return false@@ ; }
java.util.List<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Play@@ er@@ Info@@ > get@@ Media@@ Play@@ er@@ List@@ () { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Play@@ er@@ Info in@@ f@@ o = new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Play@@ er@@ Info@@ (); in@@ f@@ o.@@ id = 0; in@@ f@@ o.@@ name = "@@ B@@ luetoo@@ th Play@@ er@@ "; in@@ f@@ o.@@ b@@ row@@ s@@ able = true@@ ; java.util.List<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Play@@ er@@ Info@@ > re@@ t = new java.util.ArrayList<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Play@@ er@@ Info@@ >(); r@@ et@@ .@@ add@@ (in@@ fo@@ ); return r@@ et@@ ; }
public void test@@ Pro@@ c@@ Files@@ () throw@@ s android.system.Errno@@ Exception, java.io.IO@@ Exception, java.lang.@@ Number@@ Format@@ Exception { int valu@@ e = get@@ Value@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ S@@ ys@@ ct@@ l@@ Test.@@ S@@ P@@ I@@ _@@ TI@@ ME@@ O@@ U@@ T_@@ S@@ Y@@ S@@ C@@ T@@ L); assert@@ At@@ Le@@ ast@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ S@@ ys@@ ct@@ l@@ Test.@@ S@@ P@@ I@@ _@@ TI@@ ME@@ O@@ U@@ T_@@ S@@ Y@@ S@@ C@@ T@@ L@@ , value@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ S@@ ys@@ ct@@ l@@ Test.@@ M@@ IN@@ _@@ AC@@ Q@@ _@@ EX@@ P@@ I@@ RE@@ S@@ ); }
protected java.lang.String read@@ File@@ (java.lang.String file@@ Name@@ ) throw@@ s android.system.Errno@@ Exception, java.io.IOException { byte@@ [] bu@@ f = new byte@@ [@@ 10@@ 24@@ ]; java.io.FileDescriptor f@@ d = android.system.@@ O@@ s.@@ open@@ (file@@ Name, 0, O@@ s@@ Constants.@@ O@@ _@@ R@@ D@@ ON@@ L@@ Y@@ ); int byte@@ s@@ Re@@ ad = android.system.@@ O@@ s.@@ read@@ (@@ fd, bu@@ f@@ , 0, bu@@ f.@@ length); assert@@ L@@ ess@@ ((@@ ("@@ l@@ eng@@ th of " + file@@ Name@@ ) + "@@ :@@ "), byte@@ s@@ Read@@ , bu@@ f.@@ length); return new java.lang.String@@ (@@ bu@@ f@@ ); }
protected int get@@ Value@@ (java.lang.String fil@@ en@@ ame@@ ) throw@@ s android.system.Errno@@ Exception, java.io.IOException { check@@ S@@ ys@@ ct@@ l@@ Permission@@ s(@@ fil@@ en@@ ame@@ ); return java.lang.Integ@@ er.@@ parse@@ Int@@ (@@ read@@ File@@ (@@ fil@@ en@@ ame@@ ).@@ tr@@ im@@ ()); }
public void test@@ Pro@@ c@@ Files@@ () throw@@ s android.system.Errno@@ Exception, java.io.IO@@ Exception, java.lang.@@ Number@@ Format@@ Exception { for (java.lang.String s@@ ys@@ ct@@ l : android.net.@@ cts.@@ M@@ ult@@ in@@ et@@ work@@ S@@ ys@@ ct@@ l@@ Test.@@ G@@ LO@@ B@@ AL@@ _S@@ Y@@ S@@ C@@ T@@ L@@ S@@ ) { int valu@@ e = get@@ Value@@ (s@@ ys@@ ct@@ l@@ ); assert@@ Equal@@ s(@@ s@@ ys@@ ct@@ l@@ , 1, value@@ ); } java.io.File@@ [] int@@ er@@ face@@ Dir@@ s = new java.io.File@@ (android.net.@@ cts.@@ M@@ ult@@ in@@ et@@ work@@ S@@ ys@@ ct@@ l@@ Test.@@ IP@@ V@@ 6@@ _S@@ Y@@ S@@ C@@ T@@ L@@ _@@ DI@@ R@@ ).@@ list@@ Files@@ (); for (@@ java.io.File int@@ er@@ face@@ Di@@ r : int@@ er@@ face@@ Dir@@ s) { if (@@ int@@ er@@ face@@ Dir@@ .getName@@ ().@@ equal@@ s("@@ all@@ ")) || (@@ int@@ er@@ face@@ Dir@@ .getName@@ ().@@ equal@@ s("@@ lo@@ "@@ ))) { continue@@ ; } java.lang.String s@@ ys@@ ct@@ l = new java.io.File@@ (@@ int@@ er@@ face@@ Dir@@ , android.net.@@ cts.@@ M@@ ult@@ in@@ et@@ work@@ S@@ ys@@ ct@@ l@@ Test.@@ A@@ UT@@ O@@ C@@ ON@@ F@@ _S@@ Y@@ S@@ C@@ T@@ L@@ )@@ .get@@ Absolute@@ Path@@ (); int valu@@ e = get@@ Value@@ (s@@ ys@@ ct@@ l@@ ); assert@@ L@@ ess@@ (s@@ ys@@ ct@@ l@@ ); } }
protected void check@@ S@@ ys@@ ct@@ l@@ Permission@@ s(@@ java.lang.String file@@ Name@@ ) throw@@ s android.system.Errno@@ Exception { android.system.@@ Str@@ u@@ ct@@ St@@ at st@@ at = android.system.@@ O@@ s.@@ st@@ at@@ (file@@ Name); assert@@ Equal@@ s@@ ((@@ ("@@ mo@@ de of " + file@@ Name@@ ) + "@@ :@@ "), android.net.@@ cts.@@ S@@ ys@@ ct@@ l@@ B@@ ase@@ Test.@@ S@@ Y@@ S@@ C@@ T@@ L@@ _MOD@@ E, st@@ at@@ .@@ st@@ _@@ mode@@ ); assert@@ Equal@@ s@@ ((@@ ("@@ U@@ I@@ D of " + file@@ Name@@ ) + "@@ :@@ "), android.net.@@ cts.@@ S@@ ys@@ ct@@ l@@ B@@ ase@@ Test.@@ S@@ Y@@ S@@ C@@ T@@ L@@ _@@ U@@ ID@@ , st@@ at@@ .@@ st@@ _@@ u@@ id@@ ); assert@@ Equal@@ s@@ ((@@ ("@@ G@@ I@@ D of " + file@@ Name@@ ) + "@@ :@@ "), android.net.@@ cts.@@ S@@ ys@@ ct@@ l@@ B@@ ase@@ Test.@@ S@@ Y@@ S@@ C@@ T@@ L@@ _@@ G@@ ID@@ , st@@ at@@ .@@ st@@ _@@ g@@ id@@ ); }
public static Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Res@@ ult ve@@ r@@ if@@ y@@ (com.android.@@ ap@@ k@@ si@@ g.@@ util.@@ Data@@ S@@ our@@ ce ap@@ k@@ , com.android.@@ ap@@ k@@ si@@ g.@@ ap@@ k.@@ Apk@@ Utils.@@ Zip@@ Sec@@ tion@@ s z@@ ip@@ Sec@@ tion@@ s, int min@@ Sdk@@ Version@@ , int max@@ Sdk@@ Version@@ ) throw@@ s Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Sign@@ ature@@ Not@@ F@@ ound@@ Exception, com.android.@@ ap@@ k@@ si@@ g.@@ ap@@ k.@@ Apk@@ Format@@ Exception, java.io.IO@@ Exception, java.security.@@ No@@ Su@@ ch@@ Al@@ gorithm@@ Exception { com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Res@@ ult result = new com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Result@@ (com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ V@@ E@@ RS@@ ION@@ _@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 2@@ ); com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Sign@@ ature@@ Info sign@@ ature@@ Info = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ find@@ Sign@@ ature@@ (@@ ap@@ k@@ , z@@ ip@@ Sec@@ tion@@ s, com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 2.@@ V@@ 2@@ S@@ ch@@ e@@ me@@ V@@ er@@ if@@ i@@ er.@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 2@@ _@@ B@@ LO@@ C@@ K@@ _@@ ID@@ , result@@ ); com.android.@@ ap@@ k@@ si@@ g.@@ util.@@ Data@@ S@@ our@@ ce b@@ e@@ for@@ e@@ Apk@@ Sign@@ ing@@ B@@ loc@@ k = ap@@ k.@@ s@@ li@@ ce@@ (@@ 0, sign@@ ature@@ Info.@@ ap@@ k@@ Sign@@ ing@@ Block@@ Offset@@ ); com.android.@@ ap@@ k@@ si@@ g.@@ util.@@ Data@@ S@@ our@@ ce c@@ en@@ tr@@ al@@ Di@@ r = ap@@ k.@@ s@@ li@@ ce@@ (@@ sign@@ ature@@ Info.@@ c@@ en@@ tr@@ al@@ Dir@@ Offset@@ , ((@@ sign@@ ature@@ Info.@@ e@@ o@@ c@@ d@@ Offset@@ ) - (@@ sign@@ ature@@ Info.@@ c@@ en@@ tr@@ al@@ Dir@@ Offset@@ ))); java.nio.Byte@@ Buffer e@@ o@@ c@@ d = sign@@ ature@@ Info.@@ e@@ o@@ c@@ d@@ ; com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 2.@@ V@@ 2@@ S@@ ch@@ e@@ me@@ V@@ er@@ if@@ i@@ er.@@ ve@@ r@@ if@@ y@@ (b@@ e@@ for@@ e@@ Apk@@ Sign@@ ing@@ Block@@ , sign@@ ature@@ Info.@@ sign@@ ature@@ Block@@ , c@@ en@@ tr@@ al@@ Dir@@ , e@@ o@@ c@@ d@@ , min@@ Sdk@@ Version@@ , max@@ Sdk@@ Version@@ , result@@ ); return result@@ ; }
public static Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Res@@ ult ve@@ r@@ if@@ y@@ (com.android.@@ ap@@ k@@ si@@ g.@@ util.@@ Data@@ S@@ our@@ ce ap@@ k@@ , com.android.@@ ap@@ k@@ si@@ g.@@ ap@@ k.@@ Apk@@ Utils.@@ Zip@@ Sec@@ tion@@ s z@@ ip@@ Sec@@ tion@@ s, int min@@ Sdk@@ Version@@ , int max@@ Sdk@@ Version@@ ) throw@@ s com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Sign@@ ature@@ Not@@ F@@ ound@@ Exception, java.io.IO@@ Exception, java.security.@@ No@@ Su@@ ch@@ Al@@ gorithm@@ Exception { com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Res@@ ult result = new com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Result@@ (com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ V@@ E@@ RS@@ ION@@ _@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 3@@ ); com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Sign@@ ature@@ Info sign@@ ature@@ Info = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ find@@ Sign@@ ature@@ (@@ ap@@ k@@ , z@@ ip@@ Sec@@ tion@@ s, com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ S@@ ch@@ e@@ me@@ V@@ er@@ if@@ i@@ er.@@ AP@@ K@@ _@@ SI@@ G@@ N@@ AT@@ UR@@ E_@@ S@@ CH@@ E@@ M@@ E_@@ V@@ 3@@ _@@ B@@ LO@@ C@@ K@@ _@@ ID@@ , result@@ ); com.android.@@ ap@@ k@@ si@@ g.@@ util.@@ Data@@ S@@ our@@ ce b@@ e@@ for@@ e@@ Apk@@ Sign@@ ing@@ B@@ loc@@ k = ap@@ k.@@ s@@ li@@ ce@@ (@@ 0, sign@@ ature@@ Info.@@ ap@@ k@@ Sign@@ ing@@ Block@@ Offset@@ ); com.android.@@ ap@@ k@@ si@@ g.@@ util.@@ Data@@ S@@ our@@ ce c@@ en@@ tr@@ al@@ Di@@ r = ap@@ k.@@ s@@ li@@ ce@@ (@@ sign@@ ature@@ Info.@@ c@@ en@@ tr@@ al@@ Dir@@ Offset@@ , ((@@ sign@@ ature@@ Info.@@ e@@ o@@ c@@ d@@ Offset@@ ) - (@@ sign@@ ature@@ Info.@@ c@@ en@@ tr@@ al@@ Dir@@ Offset@@ ))); java.nio.Byte@@ Buffer e@@ o@@ c@@ d = sign@@ ature@@ Info.@@ e@@ o@@ c@@ d@@ ; com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ S@@ ch@@ e@@ me@@ V@@ er@@ if@@ i@@ er.@@ ve@@ r@@ if@@ y@@ (b@@ e@@ for@@ e@@ Apk@@ Sign@@ ing@@ Block@@ , sign@@ ature@@ Info.@@ sign@@ ature@@ Block@@ , c@@ en@@ tr@@ al@@ Dir@@ , e@@ o@@ c@@ d@@ , min@@ Sdk@@ Version@@ , result@@ ); return result@@ ; }
private static void parse@@ S@@ ig@@ ner@@ s(@@ java.nio.Byte@@ Buffer ap@@ k@@ Sign@@ ature@@ S@@ ch@@ e@@ me@@ V@@ 3@@ Block@@ , java.util.@@ Set@@ <@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Content@@ Dig@@ est@@ Al@@ gorithm@@ > cont@@ ent@@ Dig@@ est@@ s@@ To@@ V@@ er@@ if@@ y@@ , int min@@ Sdk@@ Version@@ , int max@@ Sdk@@ Version@@ , com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Res@@ ult result@@ ) throw@@ s java.security.@@ No@@ Su@@ ch@@ Al@@ gorithm@@ Exception { java.nio.Byte@@ Buffer si@@ g@@ ner@@ s; try { si@@ g@@ ner@@ s = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ get@@ Length@@ Pre@@ fix@@ ed@@ S@@ li@@ ce@@ (@@ ap@@ k@@ Sign@@ ature@@ S@@ ch@@ e@@ me@@ V@@ 3@@ Block@@ ); } catch (com.android.@@ ap@@ k@@ si@@ g.@@ ap@@ k.@@ Apk@@ Format@@ Exception e) { res@@ ult.@@ add@@ Error@@ (@@ I@@ ss@@ u@@ e.@@ V@@ 3@@ _@@ SI@@ G@@ _M@@ AL@@ F@@ OR@@ ME@@ D_@@ SI@@ G@@ N@@ E@@ RS@@ ); return@@ ; } if (!(@@ si@@ g@@ ner@@ s.@@ has@@ Re@@ main@@ ing@@ ())) { res@@ ult.@@ add@@ Error@@ (@@ I@@ ss@@ u@@ e.@@ V@@ 3@@ _@@ SI@@ G@@ _N@@ O@@ _@@ SI@@ G@@ N@@ E@@ RS@@ ); return@@ ; } java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ Fa@@ ctor@@ y cer@@ t@@ Factory@@ ; try { cer@@ t@@ Fa@@ ctor@@ y = java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ Factory@@ .get@@ Instance@@ ("@@ X@@ .@@ 509@@ "); } catch (@@ java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ Exception e) { throw new java.lang.@@ RuntimeException@@ ("@@ Faile@@ d to ob@@ t@@ a@@ in X@@ .@@ 50@@ 9 Cer@@ t@@ if@@ ic@@ ate@@ Factory@@ ", e); } int si@@ g@@ ner@@ Coun@@ t = 0; while (@@ si@@ g@@ ner@@ s.@@ has@@ Re@@ main@@ ing@@ ()) { int si@@ g@@ ner@@ In@@ dex = si@@ g@@ ner@@ Count@@ ; si@@ g@@ ner@@ Count@@ ++@@ ; com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ Result.@@ S@@ ig@@ ner@@ Info si@@ g@@ ner@@ Info = new com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ S@@ ig@@ ner@@ Info@@ (); si@@ g@@ ner@@ Info.@@ in@@ dex = si@@ g@@ ner@@ Index@@ ; res@@ ult.@@ si@@ g@@ ner@@ Info@@ ); try { java.nio.Byte@@ Buffer si@@ g@@ ne@@ r = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ Apk@@ Sign@@ ing@@ Block@@ Utils.@@ get@@ Length@@ Pre@@ fix@@ ed@@ S@@ li@@ ce@@ (@@ si@@ g@@ ner@@ s); com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ S@@ ch@@ e@@ me@@ V@@ er@@ if@@ i@@ er.@@ parse@@ S@@ ig@@ ner@@ (@@ si@@ g@@ ner@@ , cer@@ t@@ Factory@@ , si@@ g@@ ner@@ Info@@ , max@@ Sdk@@ Version@@ ); } catch (com.android.@@ ap@@ k@@ si@@ g.@@ ap@@ k.@@ Apk@@ Format@@ Exception | java.nio.@@ Buffer@@ Un@@ der@@ f@@ low@@ Exception e) { si@@ g@@ ner@@ Info.@@ add@@ Error@@ (@@ I@@ ss@@ u@@ e.@@ V@@ 3@@ _@@ SI@@ G@@ _M@@ AL@@ F@@ OR@@ ME@@ D_@@ SI@@ G@@ N@@ ER@@ ); return@@ ; } }
private void remove@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Listener@@ () { m@@ Im@@ s@@ Statu@@ s@@ Callback@@ s.@@ clear@@ (); }
public void add@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Listener@@ (com.android.@@ im@@ s@@ .@@ int@@ er@@ n@@ al.@@ I@@ Im@@ s@@ Service@@ F@@ e@@ ature@@ Call@@ b@@ ac@@ k call@@ back@@ ) { m@@ Im@@ s@@ Statu@@ s@@ Callback@@ s.@@ add@@ (c@@ all@@ back@@ ); }
private android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent create@@ In@@ com@@ ing@@ Call@@ P@@ end@@ ing@@ Intent@@ () { android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (com.android.@@ im@@ s.@@ Im@@ s@@ Manager.@@ AC@@ TION@@ _@@ I@@ M@@ S_@@ IN@@ C@@ O@@ M@@ ING@@ _C@@ AL@@ L); int@@ ent@@ .@@ set@@ Pack@@ age@@ ("@@ com.android.@@ phon@@ e@@ "@@ ); return android.@@ app.@@ P@@ end@@ ing@@ Int@@ ent.get@@ B@@ roadcast@@ (m@@ Context@@ , 0, int@@ ent@@ , P@@ end@@ ing@@ Int@@ ent.@@ F@@ LA@@ G_@@ U@@ P@@ D@@ AT@@ E_@@ C@@ UR@@ R@@ EN@@ T@@ ); }
@@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ M@@ is@@ c@@ () { android.@@ telephony.@@ Service@@ State s@@ s = new android.@@ telephony.@@ Service@@ State@@ (); s@@ s.@@ set@@ C@@ ss@@ In@@ di@@ cat@@ or@@ (1@@ 00@@ ); assert@@ Equal@@ s(@@ 1, s@@ s.get@@ C@@ ss@@ In@@ di@@ cat@@ or@@ ()); s@@ s.@@ set@@ I@@ s@@ Man@@ ual@@ Selection@@ (@@ true@@ ); assert@@ True@@ (s@@ s.get@@ I@@ s@@ Man@@ ual@@ Selection@@ ()); s@@ s.@@ set@@ System@@ And@@ Network@@ Id@@ (1@@ 2@@ 3@@ , 4@@ 5@@ 6@@ ); assert@@ Equal@@ s(@@ 12@@ 3@@ , ss@@ .get@@ C@@ d@@ ma@@ System@@ Id@@ ()); assert@@ Equal@@ s(@@ 4@@ 5@@ 6@@ , ss@@ .get@@ C@@ d@@ ma@@ Network@@ Id@@ ()); s@@ s.@@ set@@ E@@ merg@@ enc@@ y@@ On@@ ly@@ (@@ true@@ ); assert@@ True@@ (s@@ s.@@ is@@ E@@ merg@@ enc@@ y@@ On@@ ly@@ ()); }
public java.lang.String get@@ P@@ id@@ () { try { java.io.@@ Stream@@ To@@ k@@ en@@ iz@@ er to@@ k@@ s = new java.io.@@ Stream@@ To@@ k@@ en@@ iz@@ er@@ (@@ new java.io.File@@ Read@@ er@@ ("@@ /@@ pro@@ c@@ /@@ se@@ l@@ f@@ /@@ st@@ at@@ ")); to@@ k@@ s.@@ parse@@ Number@@ s(); if ((@@ to@@ k@@ s.@@ next@@ To@@ k@@ en@@ ()) != (@@ java.io.@@ Stream@@ To@@ k@@ en@@ iz@@ er.@@ T@@ T_@@ N@@ U@@ M@@ B@@ ER@@ )) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ Faile@@ d to to@@ k@@ en@@ iz@@ e /@@ pro@@ c@@ /@@ se@@ l@@ f@@ /@@ st@@ at cor@@ re@@ ct@@ ly@@ . Fi@@ rs@@ t to@@ k@@ e@@ n is@@ n@@ 't a n@@ umber@@ "); return "@@ -1@@ "; } return java.lang.Integ@@ er.@@ toString@@ ((@@ (@@ int@@ ) (@@ to@@ k@@ s.@@ n@@ val@@ ))); } catch (java.lang.Exception e) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (("@@ Faile@@ d to g@@ et p@@ id@@ !@@ " + e@@ )); e.@@ p@@ r@@ int@@ Stack@@ Trace@@ (java.lang.@@ System.@@ out); return "@@ -1@@ "; } }
@@@ java.lang.@@ Sup@@ p@@ ress@@ W@@ ar@@ ning@@ s("@@ un@@ u@@ sed@@ ") private static void call@@ Chang@@ e@@ Callback@@ s() { synchronized@@ (android.os.@@ System@@ Proper@@ ti@@ es.@@ s@@ Chang@@ e@@ Callback@@ s) { if ((@@ android.os.@@ System@@ Proper@@ ti@@ es.@@ s@@ Chang@@ e@@ Callback@@ s.@@ size@@ ()) == 0) { return@@ ; } java.util.ArrayList<@@ java.lang.@@ Run@@ n@@ able@@ > call@@ back@@ s = new java.util.ArrayList<@@ java.lang.@@ Run@@ n@@ able@@ >@@ (android.os.@@ System@@ Proper@@ ti@@ es.@@ s@@ Chang@@ e@@ Callback@@ s); for (@@ int i = 0; i < (c@@ all@@ back@@ s.@@ size@@ ()); i++) { try { call@@ back@@ s.get@@ (i@@ ).@@ run@@ (); } catch (java.lang.Exception e) { } catch (java.lang.@@ Throw@@ able t@@ ) { android.util.Log.@@ e@@ (android.os.@@ System@@ Proper@@ ti@@ es.@@ TAG, "@@ Start@@ ing d@@ ur@@ ing call@@ Chang@@ e@@ Callback@@ s t@@ ); return@@ ; } } }
public boolean@@ [] is@@ N@@ fc@@ Event@@ Al@@ low@@ ed@@ (android.@@ content.@@ p@@ m.@@ Package@@ Manager package@@ Manager@@ , byte@@ [] a@@ id, java.lang.String[] package@@ Nam@@ es@@ , boolean check@@ Ref@@ res@@ h@@ T@@ ag@@ ) { if ((m@@ Access@@ Control@@ E@@ n@@ for@@ cer@@ ) == null@@ ) { try { in@@ iti@@ aliz@@ e@@ Access@@ Control@@ (); } catch (java.lang.Exception e) { android.util.@@ Log@@ .@@ check@@ (m@@ T@@ ag@@ , ("@@ N@@ o Exception@@ : " + (@@ e.get@@ Message@@ ()))); return null@@ ; } m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.@@ set@@ Package@@ Manager@@ (@@ package@@ Manager@@ ); synchronized@@ (m@@ Lock) { try { return m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.@@ is@@ N@@ fc@@ Event@@ Al@@ low@@ ed@@ (@@ a@@ id, package@@ Nam@@ es@@ , check@@ Ref@@ res@@ h@@ T@@ ag@@ ); } catch (java.lang.Exception e) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , ("@@ Exception Exception : " + (@@ e.get@@ Message@@ ()))); return null@@ ; } } }
private com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s set@@ Up@@ Channel@@ Access@@ (@@ byte@@ [] a@@ id, java.lang.String package@@ Name, int p@@ id@@ ) throw@@ s java.io.IO@@ Exception, java.util.@@ M@@ is@@ sing@@ Resource@@ Exception { boolean check@@ Ref@@ res@@ h@@ T@@ a@@ g@@ ; if ((m@@ Access@@ Control@@ E@@ n@@ for@@ cer@@ ) == null@@ ) { in@@ iti@@ aliz@@ e@@ Access@@ Control@@ (); check@@ Ref@@ res@@ h@@ T@@ a@@ g = false@@ ; } m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.@@ set@@ Package@@ Manager@@ (m@@ Contex@@ t.get@@ Package@@ Manager@@ ()); synchronized@@ (m@@ Lock) { try { com.android.s@@ e.@@ security.@@ Channel@@ Ac@@ ces@@ s channe@@ l@@ Ac@@ ces@@ s = m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.@@ set@@ Up@@ Channel@@ Ac@@ ces@@ s(@@ a@@ id, package@@ Name, check@@ Ref@@ res@@ h@@ T@@ ag@@ ); channe@@ l@@ Ac@@ ces@@ s.@@ set@@ Call@@ ing@@ P@@ id@@ (@@ p@@ id@@ ); return channe@@ l@@ Access@@ ; } catch (java.io.IOException e) { throw e@@ ; } catch (java.lang.Exception e) { throw new java.lang.@@ Sec@@ ur@@ ity@@ Exception@@ (("@@ Un@@ able in set@@ Up@@ Channel@@ Access@@ () " + e@@ )); } } }
private synchronized void in@@ iti@@ aliz@@ e@@ Access@@ Control@@ () throw@@ s java.io.IO@@ Exception, java.util.@@ M@@ is@@ sing@@ Resource@@ Exception { if ((m@@ Access@@ Control@@ E@@ n@@ for@@ cer@@ ) == null@@ ) { m@@ Access@@ Control@@ E@@ n@@ for@@ ce@@ r = new com.android.s@@ e.@@ security.@@ Access@@ Control@@ E@@ n@@ for@@ cer@@ (@@ this@@ ); } try { m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.@@ in@@ iti@@ aliz@@ e@@ (); } catch (java.io.IOException e) { m@@ Access@@ Control@@ E@@ n@@ for@@ ce@@ r = null@@ ; throw e@@ ; } catch (java.util.@@ M@@ is@@ sing@@ Resource@@ Exception e) { m@@ Access@@ Control@@ E@@ n@@ for@@ ce@@ r = null@@ ; throw e@@ ; } }
@java.lang.Override public synchronized void add@@ Address@@ To@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ int t@@ un@@ ne@@ l@@ Resource@@ Id, android.util.@@ Lin@@ k@@ Address@@ ) { com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ T@@ un@@ ne@@ l@@ Interface@@ Re@@ cor@@ d t@@ un@@ ne@@ l@@ Interface@@ Info = user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ t@@ un@@ ne@@ l@@ Resource@@ Id@@ ); try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ()@@ .@@ int@@ er@@ face@@ Add@@ Addres@@ s(@@ t@@ un@@ ne@@ l@@ Interface@@ Info.@@ m@@ Interface@@ Name, local@@ Add@@ r@@ .get@@ Address@@ ().get@@ Host@@ Address@@ (), local@@ Add@@ r@@ .get@@ Pre@@ fix@@ Length@@ ()); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception(@@ e); } }
private static final int create@@ V@@ ti@@ (@@ int resource@@ Id, java.lang.String int@@ f@@ Name@@ ) throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Respon@@ se dum@@ my@@ Respon@@ se = new android.net.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Response@@ (@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ O@@ K@@ , resource@@ Id, int@@ f@@ Name); when@@ (m@@ Mock@@ I@@ p@@ Sec@@ Service.@@ create@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ e@@ q@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ G@@ O@@ O@@ G@@ L@@ E_@@ D@@ N@@ S_@@ 4@@ .get@@ Host@@ Address@@ ()@@ ), e@@ q@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ G@@ O@@ G@@ L@@ E_@@ D@@ N@@ S_@@ 4@@ _@@ AL@@ T@@ .get@@ Host@@ Address@@ ()@@ ), an@@ y@@ Object@@ (), an@@ y@@ Object@@ ()@@ )).@@ thenReturn@@ (d@@ um@@ my@@ Response@@ ); return m@@ I@@ p@@ Sec@@ Manager.@@ create@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ G@@ O@@ G@@ L@@ E_@@ D@@ N@@ S_@@ 4@@ , android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ G@@ O@@ O@@ G@@ L@@ E_@@ D@@ N@@ S_@@ 4@@ _@@ AL@@ T@@ , mock@@ (android.net.@@ Network@@ .@@ class@@ )); }
@org.junit.Test public void test@@ Add@@ Remo@@ ve@@ Address@@ es@@ From@@ V@@ ti@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Manager.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Inter@@ face t@@ un@@ ne@@ l@@ Int@@ f = create@@ V@@ ti@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ D@@ U@@ M@@ Y@@ _RE@@ S@@ O@@ UR@@ C@@ E_@@ ID@@ , android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ V@@ TI@@ _@@ IN@@ T@@ F@@ _N@@ AM@@ E); t@@ un@@ ne@@ l@@ Int@@ f.@@ add@@ Addres@@ s(@@ android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ V@@ TI@@ _@@ AD@@ D@@ RE@@ SS@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ I@@ p@@ Sec@@ Service@@ ).@@ add@@ Address@@ To@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ e@@ q@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ D@@ U@@ M@@ Y@@ _RE@@ S@@ O@@ UR@@ C@@ E_@@ ID@@ ), e@@ q@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ V@@ TI@@ _@@ AD@@ D@@ RE@@ SS@@ )); t@@ un@@ ne@@ l@@ Int@@ f.@@ remove@@ Addres@@ s(@@ android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ V@@ TI@@ _@@ AD@@ D@@ RE@@ SS@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ I@@ p@@ Sec@@ Service@@ ).@@ add@@ Address@@ To@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ e@@ q@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ D@@ U@@ M@@ M@@ M@@ Y@@ _RE@@ S@@ O@@ UR@@ C@@ E_@@ ID@@ ), e@@ q@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ V@@ TI@@ _@@ AD@@ D@@ RE@@ SS@@ )); }
private android.net.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Respon@@ se create@@ T@@ un@@ ne@@ l@@ (java.lang.String local@@ Add@@ r@@ , java.lang.String remo@@ te@@ Add@@ r@@ ) { android.net.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Respon@@ se create@@ T@@ un@@ ne@@ l@@ Res@@ p = m@@ I@@ p@@ Sec@@ Service.@@ create@@ T@@ un@@ ne@@ l@@ Interface@@ (m@@ Source@@ Add@@ r@@ , m@@ D@@ est@@ in@@ ation@@ Add@@ r@@ , fa@@ k@@ e@@ Network@@ , new android.os.@@ B@@ in@@ der@@ ()); assert@@ NotNull@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p@@ ); assert@@ Equal@@ s(@@ I@@ p@@ Sec@@ Manager.@@ Statu@@ s.@@ O@@ K@@ , create@@ T@@ un@@ ne@@ l@@ Res@@ p.@@ statu@@ s); return create@@ T@@ un@@ ne@@ l@@ Res@@ p@@ ; }
@org.junit.Test public void test@@ Create@@ V@@ ti@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Manager.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Inter@@ face t@@ un@@ ne@@ l@@ Int@@ f = create@@ V@@ ti@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ D@@ U@@ M@@ M@@ Y@@ _RE@@ S@@ O@@ UR@@ C@@ E_@@ ID@@ , android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ V@@ TI@@ _@@ IN@@ T@@ F@@ _N@@ AM@@ E); assert@@ Equal@@ s(@@ android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ V@@ TI@@ _@@ IN@@ T@@ F@@ _N@@ AM@@ E, t@@ un@@ ne@@ l@@ Int@@ f@@ .get@@ Interface@@ Name@@ ()); t@@ un@@ ne@@ l@@ Int@@ f.@@ close(); ve@@ r@@ if@@ y@@ (m@@ Mock@@ I@@ p@@ Sec@@ Service@@ ).@@ delet@@ e@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ e@@ q@@ (android.net.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ D@@ U@@ M@@ Y@@ _RE@@ S@@ O@@ UR@@ C@@ E_@@ ID@@ )); }
@java.lang.Override public synchronized void remove@@ Address@@ From@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ int t@@ un@@ ne@@ l@@ Resource@@ Id, android.util.@@ Lin@@ k@@ Address@@ ) { com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ T@@ un@@ ne@@ l@@ Interface@@ Re@@ cor@@ d t@@ un@@ ne@@ l@@ Interface@@ Info = user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.get@@ Resource@@ Or@@ Throw@@ (@@ t@@ un@@ ne@@ l@@ Resource@@ Id@@ ); try { mS@@ r@@ v@@ Config.@@ get@@ Net@@ d@@ Instance@@ ()@@ .@@ int@@ er@@ face@@ D@@ el@@ Addres@@ s(@@ t@@ un@@ ne@@ l@@ Interface@@ Info.@@ m@@ Interface@@ Name, local@@ Add@@ r@@ .get@@ Address@@ ().get@@ Host@@ Address@@ (), local@@ Add@@ r@@ .get@@ Pre@@ fix@@ Length@@ ()); } catch (android.os.@@ Remote@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ System@@ Server@@ (); } catch (android.os.@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception e) { throw e.@@ r@@ e@@ throw@@ From@@ Service@@ S@@ pe@@ c@@ if@@ ic@@ Exception(@@ e); } }
@org.junit.Test public void test@@ D@@ el@@ et@@ e@@ T@@ un@@ ne@@ l@@ Interface@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Respon@@ se create@@ T@@ un@@ ne@@ l@@ Res@@ p = create@@ T@@ un@@ ne@@ l@@ (m@@ Source@@ Add@@ r@@ , m@@ D@@ est@@ in@@ ation@@ Add@@ r@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ I@@ p@@ Sec@@ Service.@@ m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.@@ system.@@ O@@ s.get@@ u@@ id@@ ()); m@@ I@@ p@@ Sec@@ Service.@@ delet@@ e@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p.@@ resource@@ Id@@ ); assert@@ Equal@@ s(@@ 0, user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ m@@ Current@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ remove@@ V@@ ir@@ t@@ ual@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ e@@ q@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p@@ .@@ int@@ er@@ face@@ Name@@ )); try { user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p.@@ resource@@ Id@@ ); fail@@ ("@@ Ex@@ pec@@ ted Illegal@@ Argument@@ Exception on at@@ te@@ mp@@ t to ac@@ ces@@ s delet@@ ed resource@@ "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } }
public void add@@ Addres@@ s(@@ android.net.@@ Lin@@ k@@ Address addres@@ s) throw@@ s java.io.IOException { m@@ Service.@@ add@@ Address@@ To@@ T@@ un@@ ne@@ l@@ Interface@@ (m@@ Resource@@ Id, addres@@ s); }
@org.junit.Test public void test@@ T@@ un@@ ne@@ l@@ Interface@@ B@@ in@@ der@@ De@@ ath@@ () throw@@ s java.lang.Exception { I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Respon@@ se create@@ T@@ un@@ ne@@ l@@ Res@@ p = create@@ T@@ un@@ ne@@ l@@ (m@@ Source@@ Add@@ r@@ , m@@ D@@ est@@ in@@ ation@@ Add@@ r@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ I@@ p@@ Sec@@ Service.@@ m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.@@ system.@@ O@@ s.get@@ u@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ Ref@@ coun@@ ted@@ Res@@ our@@ ce ref@@ coun@@ ted@@ Re@@ cor@@ d = user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p.@@ resource@@ Id@@ ); ref@@ coun@@ ted@@ Record@@ .@@ b@@ in@@ der@@ Di@@ ed@@ (); assert@@ Equal@@ s(@@ 0, user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ m@@ Current@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ remove@@ V@@ ir@@ t@@ ual@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ e@@ q@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p@@ .@@ int@@ er@@ face@@ Name@@ )); try { user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p.@@ resource@@ Id@@ ); fail@@ ("@@ Ex@@ pec@@ ted Illegal@@ Argument@@ Exception on at@@ te@@ mp@@ t to ac@@ ces@@ s delet@@ ed resource@@ "); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } }
@org.junit.Test public void test@@ Add@@ Remo@@ ve@@ Address@@ From@@ T@@ un@@ ne@@ l@@ Interface@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Respon@@ se create@@ T@@ un@@ ne@@ l@@ Res@@ p = create@@ T@@ un@@ ne@@ l@@ (m@@ Source@@ Add@@ r@@ , m@@ D@@ est@@ in@@ ation@@ Add@@ r@@ ); m@@ I@@ p@@ Sec@@ Service.@@ add@@ Address@@ To@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p.@@ resource@@ Id, m@@ Local@@ In@@ ner@@ Addres@@ s); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ )@@ .@@ int@@ er@@ face@@ Add@@ Addres@@ s(@@ e@@ q@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p@@ .@@ int@@ er@@ face@@ Name@@ ), e@@ q@@ (m@@ Local@@ In@@ ner@@ Addres@@ s.get@@ Address@@ ().get@@ Host@@ Address@@ ()@@ ), e@@ q@@ (m@@ Local@@ In@@ ner@@ Addres@@ s.get@@ Pre@@ fix@@ Length@@ ())); m@@ I@@ p@@ Sec@@ Service.@@ remove@@ Address@@ From@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p.@@ resource@@ Id, m@@ Local@@ In@@ ner@@ Addres@@ s); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ )@@ .@@ int@@ er@@ face@@ D@@ el@@ Addres@@ s(@@ e@@ q@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p@@ .@@ int@@ er@@ face@@ Name@@ ), e@@ q@@ (m@@ Local@@ In@@ ner@@ Addres@@ s.get@@ Address@@ ().get@@ Host@@ Address@@ ()@@ ), e@@ q@@ (m@@ Local@@ In@@ ner@@ Addres@@ s.get@@ Pre@@ fix@@ Length@@ ())); }
@org.junit.Test public void test@@ Create@@ T@@ un@@ ne@@ l@@ Interface@@ () throw@@ s java.lang.Exception { I@@ p@@ Sec@@ T@@ un@@ ne@@ l@@ Interface@@ Respon@@ se create@@ T@@ un@@ ne@@ l@@ Res@@ p = create@@ T@@ un@@ ne@@ l@@ (m@@ Source@@ Add@@ r@@ , m@@ D@@ est@@ in@@ ation@@ Add@@ r@@ ); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ User@@ Re@@ cor@@ d user@@ Re@@ cor@@ d = m@@ I@@ p@@ Sec@@ Service.@@ m@@ User@@ Resource@@ Tr@@ ack@@ er.get@@ User@@ Record@@ (android.@@ system.@@ O@@ s.get@@ u@@ id@@ ()); com.android.server.@@ I@@ p@@ Sec@@ Service.@@ Ref@@ coun@@ ted@@ Res@@ our@@ ce ref@@ coun@@ ted@@ Re@@ cor@@ d = user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Interface@@ Record@@ s.get@@ Ref@@ coun@@ ted@@ Resource@@ Or@@ Throw@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p.@@ resource@@ Id@@ ); assert@@ Equal@@ s(@@ 1, user@@ Record@@ .@@ m@@ T@@ un@@ ne@@ l@@ Q@@ u@@ ot@@ a@@ Tr@@ ack@@ er.@@ m@@ Current@@ ); ve@@ r@@ if@@ y@@ (m@@ Mock@@ Net@@ d@@ ).@@ add@@ V@@ ir@@ t@@ ual@@ T@@ un@@ ne@@ l@@ Interface@@ (@@ e@@ q@@ (@@ create@@ T@@ un@@ ne@@ l@@ Res@@ p@@ .@@ int@@ er@@ face@@ Name@@ ), e@@ q@@ (m@@ Source@@ Add@@ r@@ ), e@@ q@@ (m@@ D@@ est@@ in@@ ation@@ Add@@ r@@ ), an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); }
public void remove@@ Addres@@ s(@@ android.net.@@ Lin@@ k@@ Address addres@@ s) throw@@ s java.io.IOException { m@@ Service.@@ remove@@ Address@@ From@@ T@@ un@@ ne@@ l@@ Interface@@ (m@@ Resource@@ Id, addres@@ s); }
@java.lang.Override public void on@@ Res@@ um@@ e@@ () { super@@ .@@ on@@ Res@@ um@@ e@@ (); start@@ For@@ eg@@ round@@ Ser@@ vice (@@ new android.content.@@ Intent@@ (@@ this@@ , android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ Service@@ .@@ class@@ )); start@@ For@@ eg@@ round@@ Ser@@ vice (@@ new android.content.@@ Intent@@ (@@ this@@ , android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ I@@ s@@ ol@@ ated@@ Service@@ .@@ class@@ )); java.lang.System.@@ load@@ Library@@ ("@@ per@@ f@@ et@@ to@@ ct@@ s@@ _@@ j@@ n@@ i@@ "); new java.lang.@@ Thread@@ (@@ new java.lang.@@ Run@@ n@@ able@@ () { public void run() { try { android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ Ac@@ tivity.@@ set@@ up@@ Pro@@ du@@ cer@@ (); } catch (java.lang.Exception ex@@ ) { ex@@ .@@ p@@ r@@ int@@ Stack@@ Trace@@ (); } } }@@ ).@@ start@@ (); }
@java.lang.Override public void on@@ Create@@ () { if (!(m@@ No@@ t@@ if@@ ic@@ ation@@ Manager man@@ age@@ r = ((@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager@@ ) (get@@ System@@ Service@@ (@@ Context.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ ))); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Channe@@ l not@@ if@@ ic@@ ation@@ Channe@@ l = new android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Channel@@ (android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ Service.@@ NO@@ TI@@ F@@ _C@@ H@@ AN@@ N@@ E@@ L@@ _@@ ID@@ , android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ Service.@@ NO@@ TI@@ F@@ _C@@ H@@ AN@@ N@@ E@@ L@@ _N@@ AM@@ E, android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager.@@ I@@ M@@ P@@ OR@@ TA@@ N@@ C@@ E_@@ H@@ I@@ G@@ H@@ ); not@@ if@@ ic@@ ation@@ Channe@@ l.@@ en@@ able@@ Li@@ g@@ h@@ ts@@ (@@ true@@ ); not@@ if@@ ic@@ ation@@ Channe@@ l.@@ set@@ Des@@ cription@@ ("@@ Th@@ is ser@@ vice not@@ if@@ ic@@ ation@@ Channe@@ l.@@ en@@ able@@ Vi@@ b@@ r@@ ation@@ (@@ true@@ ); not@@ if@@ ic@@ ation@@ Channe@@ l.@@ set@@ Lock@@ s@@ creen@@ Vi@@ si@@ b@@ ili@@ ty@@ (@@ No@@ t@@ if@@ ic@@ ation.@@ V@@ I@@ SI@@ B@@ IL@@ I@@ TY@@ _P@@ U@@ B@@ L@@ IC@@ ); manag@@ er.@@ create@@ No@@ t@@ if@@ ic@@ ation@@ Channel@@ (@@ not@@ if@@ ic@@ ation@@ Channel@@ ); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation.@@ Builder bu@@ ilder = new android.@@ app.@@ No@@ t@@ if@@ ic@@ ation.@@ Builder@@ (@@ this@@ , android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ Service.@@ NO@@ TI@@ F@@ _C@@ H@@ AN@@ N@@ E@@ L@@ _@@ ID@@ ); builder.@@ set@@ Content@@ T@@ it@@ le@@ ("@@ ser@@ vice start@@ For@@ eg@@ round@@ (android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ Service.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ ID@@ , builder.@@ build@@ ()); java.lang.System.@@ load@@ Library@@ ("@@ per@@ f@@ et@@ to@@ ct@@ s@@ _@@ j@@ n@@ i@@ "); new java.lang.@@ Thread@@ (@@ new java.lang.@@ Run@@ n@@ able@@ () { @java.lang.Override public void run() { try { android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ Service@@ .set@@ up@@ Pro@@ du@@ cer@@ (); } catch (java.lang.Exception ex@@ ) { ex@@ .@@ p@@ r@@ int@@ Stack@@ Trace@@ (); } } }@@ ).@@ start@@ (); }
@java.lang.Override public void on@@ Create@@ () { if (!(m@@ No@@ t@@ if@@ ic@@ ation@@ Manager man@@ age@@ r = ((@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager@@ ) (get@@ System@@ Service@@ (@@ Context.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ ))); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Channe@@ l not@@ if@@ ic@@ ation@@ Channe@@ l = new android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Channel@@ (android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ I@@ s@@ ol@@ ated@@ Service.@@ NO@@ TI@@ F@@ _C@@ H@@ AN@@ N@@ E@@ L@@ _@@ ID@@ , android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ du@@ cer@@ I@@ s@@ ol@@ ated@@ Service.@@ NO@@ TI@@ F@@ _C@@ H@@ AN@@ N@@ E@@ L@@ _N@@ AM@@ E, android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager.@@ I@@ M@@ P@@ OR@@ TA@@ N@@ C@@ E_@@ H@@ I@@ G@@ H@@ ); not@@ if@@ ic@@ ation@@ Channe@@ l.@@ en@@ able@@ Li@@ g@@ h@@ ts@@ (@@ true@@ ); not@@ if@@ ic@@ ation@@ Channe@@ l.@@ set@@ Des@@ cription@@ ("@@ h@@ av@@ e is@@ ol@@ ate@@ d ser@@ vice not@@ if@@ ic@@ ation@@ Channe@@ l.@@ en@@ able@@ Vi@@ b@@ r@@ ation@@ (@@ true@@ ); not@@ if@@ ic@@ ation@@ Channe@@ l.@@ set@@ Lock@@ s@@ creen@@ Vi@@ si@@ b@@ ili@@ ty@@ (@@ No@@ t@@ if@@ ic@@ ation.@@ V@@ I@@ SI@@ B@@ IL@@ I@@ TY@@ _P@@ U@@ B@@ L@@ IC@@ ); manag@@ er.@@ create@@ No@@ t@@ if@@ ic@@ ation@@ Channel@@ (@@ not@@ if@@ ic@@ ation@@ Channel@@ ); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation.@@ Builder bu@@ ilder = new android.@@ app.@@ No@@ t@@ if@@ ic@@ ation.@@ Builder@@ (@@ this@@ , android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ I@@ s@@ ol@@ ated@@ Service.@@ NO@@ TI@@ F@@ _C@@ H@@ AN@@ N@@ E@@ L@@ _@@ ID@@ ); builder.@@ set@@ Content@@ T@@ it@@ le@@ ("@@ ol@@ ate@@ d ser@@ vice start@@ For@@ eg@@ round@@ (android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ c@@ er.@@ Pro@@ du@@ cer@@ I@@ s@@ ol@@ ated@@ Service.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _@@ ID@@ , builder.@@ build@@ ()); java.lang.System.@@ load@@ Library@@ ("@@ per@@ f@@ et@@ to@@ ct@@ s@@ _@@ j@@ n@@ i@@ "); new java.lang.@@ Thread@@ (@@ new java.lang.@@ Run@@ n@@ able@@ () { @java.lang.Override public void run() { try { android.@@ per@@ f@@ et@@ to.@@ pro@@ du@@ er.@@ Pro@@ du@@ cer@@ I@@ s@@ ol@@ ated@@ Service@@ .set@@ up@@ Pro@@ du@@ cer@@ (); } catch (java.lang.Exception ex@@ ) { ex@@ .@@ p@@ r@@ int@@ Stack@@ Trace@@ (); } } }@@ ).@@ start@@ (); }
public static libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e create@@ (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ pro@@ to.@@ Co@@ u@@ n@@ try@@ Z@@ on@@ es@@ File@@ .@@ Co@@ u@@ n@@ try co@@ u@@ n@@ try@@ , java.@@ tim@@ e.@@ In@@ stan@@ t start@@ In@@ c@@ lu@@ si@@ ve@@ , java.@@ tim@@ e.@@ In@@ stan@@ t end@@ Ex@@ c@@ lu@@ si@@ ve@@ ) { com.@@ i@@ b@@ m.@@ icu@@ .@@ text.@@ TimeZone@@ Name@@ s time@@ Zone@@ Name@@ s = com.@@ i@@ b@@ m.@@ icu@@ .@@ text.@@ TimeZone@@ Nam@@ es@@ .get@@ Instance@@ (@@ U@@ Loc@@ a@@ le.@@ US@@ ); java.util.List<@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ pro@@ to.@@ Co@@ u@@ n@@ try@@ Z@@ on@@ es@@ File@@ .@@ TimeZone@@ M@@ app@@ ing@@ > time@@ Zone@@ M@@ app@@ ing@@ s = co@@ u@@ n@@ try@@ .get@@ TimeZone@@ M@@ app@@ ing@@ s@@ List@@ (); java.util.List<@@ com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ on@@ e.@@ Zone@@ Info@@ > z@@ one@@ Info@@ s = new java.util.ArrayList<@@ >(); for (@@ int i = 0; i < (@@ time@@ Zone@@ M@@ app@@ ing@@ s.@@ size@@ ()); i++) { com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ pro@@ to.@@ Co@@ u@@ n@@ try@@ Z@@ on@@ es@@ File@@ .@@ TimeZone@@ M@@ app@@ ing time@@ Zone@@ M@@ app@@ ing = time@@ Zone@@ M@@ app@@ ing@@ s.get@@ (i@@ ); int p@@ ri@@ or@@ it@@ y = time@@ Zone@@ M@@ app@@ ing.@@ get@@ Pri@@ or@@ ity@@ (); com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Bas@@ ic@@ Time@@ Z@@ on@@ e time@@ Z@@ on@@ e = ((@@ com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Bas@@ ic@@ Time@@ Z@@ on@@ e) (@@ com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Time@@ Z@@ on@@ e.get@@ TimeZone@@ (@@ time@@ Zone@@ M@@ app@@ ing.@@ get@@ Id@@ ()))); if (@@ time@@ Z@@ on@@ e == (@@ com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Time@@ Z@@ on@@ e.@@ UN@@ K@@ NO@@ W@@ N@@ _@@ Z@@ ON@@ E@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ Un@@ k@@ no@@ w@@ n z@@ on@@ e id@@ : " + time@@ Zone@@ )); } libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ on@@ e.@@ t@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Info z@@ one@@ Info = com.android.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Info.@@ create@@ (@@ time@@ Zone@@ Nam@@ es@@ , time@@ Zone@@ , p@@ ri@@ or@@ ity@@ , start@@ In@@ c@@ lu@@ si@@ ve@@ ); z@@ one@@ Info@@ s.@@ add(@@ z@@ one@@ Info@@ ); } return com.android.@@ time@@ z@@ on@@ e.@@ t@@ z@@ on@@ e.@@ t@@ z@@ on@@ e.@@ t@@ z@@ on@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ create@@ (@@ co@@ u@@ n@@ try@@ .get@@ I@@ so@@ Code@@ (), z@@ one@@ Info@@ s); }
@java.lang.Override public void vi@@ s@@ it@@ (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node no@@ de@@ ) { if ((@@ no@@ d@@ e.get@@ Parent@@ ()) == null@@ ) { return@@ ; } java.lang.String no@@ de@@ Name = en@@ qu@@ o@@ te@@ (@@ no@@ d@@ e.get@@ Id@@ ()); java.@@ tim@@ e.@@ In@@ stan@@ t start@@ In@@ stan@@ t = no@@ d@@ e.get@@ Start@@ In@@ stan@@ t@@ (); java.@@ tim@@ e.@@ In@@ stan@@ t end@@ In@@ stan@@ t = no@@ d@@ e.get@@ En@@ d@@ In@@ stan@@ t@@ (); boolean p@@ ri@@ or@@ ity@@ Clas@@ h = no@@ d@@ e.@@ has@@ Pri@@ or@@ ity@@ Clas@@ h@@ (); java.lang.String f@@ rom@@ Tim@@ est@@ am@@ p = start@@ In@@ stan@@ t.@@ toString@@ (); java.lang.String to@@ Tim@@ est@@ am@@ p = (@@ end@@ In@@ stan@@ t == null@@ ) ? ".@@ .@@ " : end@@ In@@ stan@@ t.@@ toString@@ (); java.lang.String option@@ al@@ Co@@ lo@@ r = (p@@ ri@@ or@@ ity@@ Clas@@ h@@ ) ? "@@ ,@@ col@@ or@@ =@@ \"@@ re@@ d@@ \"@@ " : "@@ "; java.lang.String l@@ ab@@ e@@ l = ((((@@ ((@@ no@@ d@@ e.get@@ Zone@@ Info@@ s@@ String@@ ()) + "@@ \n@@ From@@ =@@ ") + f@@ rom@@ Tim@@ est@@ amp@@ ) + " to ") + to@@ Tim@@ est@@ amp@@ ) + "@@ \n@@ Per@@ io@@ d count@@ =@@ ") + (@@ no@@ d@@ e.get@@ Per@@ io@@ d@@ Count@@ ()); write@@ Line@@ ((((@@ ((@@ no@@ de@@ Name + "@@ [@@ l@@ ab@@ el@@ =@@ \"@@ ") + l@@ ab@@ el@@ ) + "@@ \"@@ ") + option@@ al@@ Col@@ or@@ ) + "@@ ]@@ ;@@ ")); for (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node ch@@ il@@ d : no@@ d@@ e.get@@ Ch@@ ild@@ r@@ en@@ ()) { write@@ Line@@ ((((@@ no@@ de@@ Name + " -@@ > ") + (@@ en@@ qu@@ o@@ te@@ (@@ ch@@ ild@@ .get@@ Id@@ ()))) + "@@ ;@@ ")); } }
@java.lang.Override public void vi@@ s@@ it@@ (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node no@@ de@@ ) { if ((@@ no@@ d@@ e.get@@ Parent@@ ()) == null@@ ) { return@@ ; } if ((@@ no@@ d@@ e.get@@ Ch@@ ild@@ r@@ en@@ Count@@ ()) == 1@@ ) { com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node ch@@ il@@ d = no@@ d@@ e.get@@ Ch@@ ild@@ r@@ en@@ ().@@ iter@@ ator@@ ().@@ next@@ (); no@@ d@@ e.@@ remove@@ Ch@@ ild@@ (@@ ch@@ ild@@ ); int per@@ io@@ d@@ Count@@ Ad@@ j@@ ust@@ m@@ ent = ch@@ ild@@ .get@@ Per@@ io@@ d@@ Count@@ (); com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node des@@ c@@ end@@ an@@ t = ch@@ ild@@ ; while ((@@ des@@ c@@ end@@ an@@ t.get@@ Ch@@ ild@@ r@@ en@@ Count@@ ()) == 1@@ ) { des@@ c@@ end@@ an@@ t = des@@ c@@ end@@ an@@ t.get@@ Ch@@ ild@@ r@@ en@@ ().@@ iter@@ ator@@ ().@@ next@@ (); per@@ io@@ d@@ Count@@ Ad@@ j@@ ust@@ m@@ ent +@@ = des@@ c@@ end@@ an@@ t.get@@ Per@@ io@@ d@@ Count@@ (); } for (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node new@@ Ch@@ il@@ d : des@@ c@@ end@@ an@@ t.get@@ Ch@@ ild@@ r@@ en@@ ()) { no@@ d@@ e.@@ add@@ Ch@@ ild@@ (@@ new@@ Ch@@ ild@@ ); } no@@ d@@ e.@@ ad@@ j@@ ust@@ Per@@ io@@ d@@ Count@@ (@@ per@@ io@@ d@@ Count@@ Ad@@ j@@ ust@@ ment@@ ); } }
java.@@ tim@@ e.@@ In@@ stan@@ t get@@ Start@@ In@@ stan@@ t@@ () { int in@@ dex = (p@@ ri@@ m@@ ary@@ Zone@@ Info@@ .get@@ Zone@@ Offset@@ Per@@ io@@ d@@ Count@@ ()) - (((@@ per@@ io@@ d@@ Offset@@ ) + (@@ per@@ io@@ d@@ Count@@ )) - 1); return p@@ ri@@ m@@ ary@@ Zone@@ Info@@ .get@@ Zone@@ Offset@@ Per@@ io@@ d@@ (in@@ dex@@ )@@ .get@@ Start@@ In@@ stan@@ t@@ (); }
public java.lang.String get@@ Id@@ () { return time@@ Z@@ on@@ e.get@@ ID@@ (); }
java.lang.String get@@ Zone@@ Info@@ s@@ String@@ () { return z@@ one@@ Info@@ s.@@ str@@ eam@@ ().@@ m@@ ap@@ (("@@ -@@ > z@@ ) -@@ > (((@@ z@@ .get@@ Id@@ ()) + "@@ ("@@ ) + (@@ z@@ .get@@ Pri@@ or@@ ity@@ ())) + "@@ )@@ ").@@ co@@ lle@@ ct@@ (java.util.@@ str@@ eam@@ .@@ Co@@ lle@@ ctor@@ s.@@ to@@ List@@ ()).@@ toString@@ (); }
public static libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Info create@@ (@@ com.@@ i@@ b@@ m.@@ icu@@ .@@ text.@@ TimeZone@@ Name@@ s time@@ Zone@@ Nam@@ es@@ , com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Bas@@ ic@@ Time@@ Z@@ on@@ e time@@ Zone@@ , int p@@ ri@@ or@@ ity@@ , java.@@ tim@@ e.@@ In@@ stan@@ t start@@ In@@ c@@ lu@@ si@@ ve@@ , java.@@ tim@@ e.@@ In@@ stan@@ t end@@ Ex@@ c@@ lu@@ si@@ ve@@ ) { java.util.List<@@ com.android.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d@@ > z@@ one@@ Offset@@ Per@@ io@@ d@@ s = new java.util.ArrayList<@@ >(); java.@@ tim@@ e.@@ In@@ stan@@ t st@@ ar@@ t = start@@ In@@ c@@ lu@@ si@@ ve@@ ; do { com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ TimeZone@@ Tr@@ an@@ si@@ tion tr@@ an@@ si@@ tion = time@@ Z@@ on@@ e.get@@ Next@@ Tr@@ an@@ sition@@ (@@ st@@ ar@@ t.@@ to@@ E@@ po@@ ch@@ Milli@@ (), true@@ ); java.@@ tim@@ e.@@ In@@ stan@@ t end@@ ; if (@@ tr@@ an@@ si@@ tion == null@@ ) { en@@ d = end@@ Ex@@ c@@ lu@@ si@@ ve@@ ; } else { com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ TimeZone@@ Tr@@ an@@ si@@ tion next@@ Tr@@ an@@ si@@ tion = time@@ Z@@ on@@ e.get@@ Next@@ Tr@@ an@@ sition@@ (@@ tr@@ an@@ sition@@ .get@@ Time@@ (), false@@ ); if (@@ next@@ Tr@@ an@@ si@@ tion != null@@ ) { en@@ d = java.@@ tim@@ e.@@ In@@ stan@@ t.@@ o@@ f@@ E@@ po@@ ch@@ Milli@@ (@@ next@@ Tr@@ an@@ sition@@ .get@@ Time@@ ()); } else { en@@ d = end@@ Ex@@ c@@ lu@@ si@@ ve@@ ; } } com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d z@@ one@@ Offset@@ Per@@ io@@ d = com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d.@@ create@@ (@@ time@@ Zone@@ Nam@@ es@@ , time@@ Zone@@ , start@@ , end@@ ); z@@ one@@ Offset@@ Per@@ io@@ d@@ s.@@ add(@@ z@@ one@@ Offset@@ Per@@ io@@ d@@ ); st@@ ar@@ t = end@@ ; } while (@@ st@@ ar@@ t.@@ is@@ B@@ e@@ for@@ e(@@ end@@ Ex@@ c@@ lu@@ si@@ ve@@ ) ); return new com.android.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Info@@ (@@ time@@ Zone@@ , p@@ ri@@ or@@ ity@@ , z@@ one@@ Offset@@ Per@@ io@@ d@@ s); }
@java.lang.Override public java.lang.String toString@@ () { return ((@@ (("@@ Zone@@ Info@@ {@@ " + "@@ p@@ ri@@ or@@ ity@@ =@@ ") + (p@@ ri@@ or@@ ity@@ )) + ", time@@ Zone@@ =@@ ") + (@@ time@@ Z@@ on@@ e.get@@ ID@@ ())) + '@@ }@@ '@@ ; }
public static libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d create@@ (@@ com.@@ i@@ b@@ m.@@ icu@@ .@@ text.@@ TimeZone@@ Name@@ s time@@ Zone@@ Nam@@ es@@ , com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Bas@@ ic@@ Time@@ Z@@ on@@ e time@@ Zone@@ , java.@@ tim@@ e.@@ In@@ stan@@ t start@@ , java.@@ tim@@ e.@@ In@@ stan@@ t end@@ ) { int@@ [] offset@@ s = new int@@ [@@ 2@@ ]; long start@@ Milli@@ s = st@@ ar@@ t.@@ to@@ E@@ po@@ ch@@ Milli@@ (); time@@ Z@@ on@@ e.get@@ Offset@@ (@@ start@@ Milli@@ s, false@@ , offset@@ s); java.lang.String can@@ on@@ ic@@ al@@ I@@ D = com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Time@@ Z@@ on@@ e.get@@ Can@@ on@@ ic@@ al@@ ID@@ (@@ time@@ Z@@ on@@ e.get@@ ID@@ ()); com.@@ i@@ b@@ m.@@ icu@@ .@@ text.@@ TimeZone@@ Nam@@ es.@@ Name@@ Type long@@ Name@@ Type = ((@@ offset@@ s@@ [@@ 1@@ ]@@ ) == 0) ? TimeZone@@ Nam@@ es.@@ Name@@ Type.@@ L@@ ON@@ G_@@ STA@@ N@@ D@@ AR@@ D : TimeZone@@ Nam@@ es.@@ Name@@ Type.@@ L@@ ON@@ G_@@ DA@@ Y@@ L@@ I@@ G@@ H@@ T@@ ; java.lang.String long@@ Name = time@@ Zone@@ Nam@@ es@@ .get@@ Display@@ Name@@ (@@ can@@ on@@ ic@@ al@@ ID@@ , long@@ Name@@ Type, start@@ Milli@@ s); return new com.android.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d@@ (@@ start@@ , end@@ , offset@@ s@@ [0@@ ]@@ , offset@@ s@@ [@@ 1@@ ]@@ , long@@ Name); }
private void d@@ eter@@ m@@ ine@@ Node@@ Pri@@ or@@ ity@@ (@@ java.util.List<@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Info@@ > z@@ one@@ Info@@ s) { com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ on@@ e.@@ t@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Info p@@ ri@@ m@@ ary@@ C@@ and@@ id@@ ate = null@@ ; int p@@ ri@@ or@@ ity@@ Coun@@ t = 0; for (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Info z@@ one@@ Info : z@@ one@@ Info@@ s) { if ((@@ p@@ ri@@ m@@ ary@@ C@@ and@@ id@@ ate == null@@ ) || ((@@ p@@ ri@@ m@@ ary@@ C@@ and@@ id@@ at@@ e.get@@ Pri@@ or@@ ity@@ ()) < (@@ z@@ one@@ Info@@ .get@@ Pri@@ or@@ ity@@ ()))) { p@@ ri@@ m@@ ary@@ C@@ and@@ id@@ ate = z@@ one@@ Info@@ ; p@@ ri@@ or@@ ity@@ Coun@@ t = 1; } else if ((@@ p@@ ri@@ m@@ ary@@ C@@ and@@ id@@ at@@ e.get@@ Pri@@ or@@ ity@@ ()) == (@@ z@@ one@@ Info@@ .get@@ Pri@@ or@@ ity@@ ())) { p@@ ri@@ or@@ ity@@ Count@@ ++@@ ; } } p@@ ri@@ m@@ ary@@ Zone@@ Info = p@@ ri@@ m@@ ary@@ C@@ and@@ id@@ ate@@ ; p@@ ri@@ or@@ ity@@ Clas@@ h = p@@ ri@@ or@@ ity@@ Coun@@ t > 1; }
public void comp@@ ress@@ T@@ ree@@ () { class Comp@@ res@@ sion@@ V@@ is@@ it@@ or implements com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node@@ V@@ is@@ it@@ or { @java.lang.Override public void vi@@ s@@ it@@ (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node no@@ de@@ ) { if ((@@ no@@ d@@ e.get@@ Parent@@ ()) == null@@ ) { return@@ ; } if ((@@ no@@ d@@ e.get@@ Ch@@ ild@@ r@@ en@@ Count@@ ()) == 1@@ ) { com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node ch@@ il@@ d = no@@ d@@ e.get@@ Ch@@ ild@@ r@@ en@@ ().@@ iter@@ ator@@ ().@@ next@@ (); no@@ d@@ e.@@ remove@@ Ch@@ ild@@ (@@ ch@@ ild@@ ); int per@@ io@@ d@@ Count@@ Ad@@ j@@ ust@@ m@@ ent = ch@@ ild@@ .get@@ Per@@ io@@ d@@ Count@@ (); com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node des@@ c@@ end@@ an@@ t = ch@@ ild@@ ; while ((@@ des@@ c@@ end@@ an@@ t.get@@ Ch@@ ild@@ r@@ en@@ Count@@ ()) == 1@@ ) { des@@ c@@ end@@ an@@ t = des@@ c@@ end@@ an@@ t.get@@ Ch@@ ild@@ r@@ en@@ ().@@ iter@@ ator@@ ().@@ next@@ (); per@@ io@@ d@@ Count@@ Ad@@ j@@ ust@@ m@@ ent +@@ = des@@ c@@ end@@ an@@ t.get@@ Per@@ io@@ d@@ Count@@ (); } for (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ Zone@@ Node new@@ Ch@@ il@@ d : des@@ c@@ end@@ an@@ t.get@@ Ch@@ ild@@ r@@ en@@ ()) { no@@ d@@ e.@@ add@@ Ch@@ ild@@ (@@ new@@ Ch@@ ild@@ ); } no@@ d@@ e.@@ ad@@ j@@ ust@@ Per@@ io@@ d@@ Count@@ (@@ per@@ io@@ d@@ Count@@ Ad@@ j@@ ust@@ ment@@ ); } } } ro@@ o@@ t.@@ vi@@ s@@ it@@ S@@ el@@ f@@ Th@@ en@@ Ch@@ ild@@ r@@ en@@ R@@ ec@@ ur@@ si@@ ve@@ (@@ new Comp@@ res@@ sion@@ V@@ is@@ itor@@ ()); }
public void b@@ in@@ der@@ Di@@ ed@@ () { if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, ("@@ on@@ de@@ d is de@@ ad - un@@ reg@@ is@@ ter " + (m@@ Package@@ Name@@ ))); } java.util.@@ I@@ ter@@ ator@@ <@@ android.os.@@ I@@ B@@ in@@ der@@ > list@@ _@@ iter@@ at@@ or = m@@ B@@ le@@ App@@ s.@@ key@@ Set@@ ().@@ iter@@ ator@@ (); while (@@ list@@ _@@ iter@@ ator.@@ has@@ Next@@ ()) { android.os.@@ I@@ B@@ in@@ der to@@ k@@ e@@ n = list@@ _@@ iter@@ ator.@@ next@@ (); com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ Client@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent de@@ ath@@ Re@@ c = m@@ B@@ le@@ App@@ s.get@@ (@@ to@@ k@@ en@@ ); if (@@ de@@ ath@@ R@@ ec@@ .@@ equal@@ s@@ (@@ this@@ )) { if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, ("@@ B@@ L@@ E ap@@ p " + (m@@ Package@@ Name@@ ))); } m@@ B@@ le@@ App@@ s.@@ remove@@ (@@ to@@ k@@ en@@ ); break@@ ; } } if (is@@ B@@ le@@ App@@ P@@ res@@ ent@@ ()) { return@@ ; } if (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ D@@ B@@ G@@ ) { android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ N@@ o L@@ E on@@ l@@ y mo@@ de a@@ f@@ ter app@@ lic@@ ation c@@ r@@ as@@ h "); } try { m@@ Bluetooth@@ Lock@@ .@@ read@@ Lock@@ ().@@ lock@@ (); if ((@@ (m@@ Bluetooth@@ ) != null@@ ) && ((m@@ Bluetooth@@ .get@@ State@@ ()) == (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ B@@ L@@ E_@@ ON@@ ))) { m@@ En@@ able = false@@ ; m@@ Bluetooth@@ .@@ on@@ B@@ r@@ E@@ d@@ r@@ Do@@ wn@@ (); } } catch (android.os.@@ Remote@@ Exception e) { android.util.@@ S@@ log.@@ e@@ (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ TAG, "@@ Faile@@ d to cal@@ l on@@ B@@ r@@ E@@ d@@ r@@ Do@@ w@@ n ", e); } final@@ l@@ y { m@@ Bluetooth@@ Lock@@ .@@ read@@ Lock@@ ().@@ un@@ lock@@ (); } }
private boolean connect@@ Socket@@ () { try { if ((m@@ P@@ se@@ R@@ ec@@ ) == null@@ ) { if (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ D@@ B@@ G) android.util.Log.@@ v@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ TAG, ("@@ connect@@ Socket@@ : U@@ ID@@ : " + (@@ Bluetooth@@ U@@ u@@ id@@ .@@ P@@ B@@ AP@@ _P@@ SE@@ .get@@ U@@ u@@ id@@ ()))); mS@@ ock@@ et = m@@ Device@@ .@@ create@@ R@@ f@@ comm@@ Socket@@ To@@ Service@@ Record@@ (@@ Bluetooth@@ U@@ u@@ id@@ .@@ P@@ B@@ AP@@ _P@@ SE@@ .get@@ U@@ u@@ id@@ ()); } else if ((m@@ P@@ se@@ R@@ ec@@ .get@@ L@@ 2@@ c@@ ap@@ P@@ s@@ m@@ ()) != (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ L@@ 2@@ C@@ AP@@ _@@ IN@@ V@@ AL@@ ID@@ _P@@ S@@ M@@ )) { if (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ D@@ B@@ G) android.util.Log.@@ v@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ TAG, ("@@ connect@@ Socket@@ : P@@ S@@ M@@ : " + (m@@ P@@ se@@ R@@ ec@@ .get@@ L@@ 2@@ c@@ ap@@ P@@ s@@ m@@ ()))); mS@@ ock@@ et = m@@ Device@@ .@@ create@@ L@@ 2@@ c@@ ap@@ Socket@@ (m@@ P@@ se@@ R@@ ec@@ .get@@ L@@ 2@@ c@@ ap@@ P@@ s@@ m@@ ()); } else { if (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ D@@ B@@ G) android.util.Log.@@ v@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ TAG, ("@@ connect@@ Socket@@ : channe@@ l@@ : " + (m@@ P@@ se@@ R@@ ec@@ .get@@ R@@ f@@ comm@@ Channel@@ Number@@ ()))); mS@@ ock@@ et = m@@ Device@@ .@@ create@@ R@@ f@@ comm@@ Socket@@ (m@@ P@@ se@@ R@@ ec@@ .get@@ R@@ f@@ comm@@ Channel@@ Number@@ ()); } if ((m@@ Socket@@ ) != null@@ ) { m@@ Socket@@ .@@ connect@@ (); return true@@ ; } else { android.util.Log.@@ w@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ TAG, "@@ S@@ M@@ : not cre@@ ate s@@ ock@@ et "); } } catch (java.io.IOException e) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Connection@@ Handler.@@ TAG, "@@ S@@ ock@@ et while connect@@ ing s@@ ock@@ et ", e); } return false@@ ; }
private void remove@@ Un@@ cle@@ an@@ Ac@@ count@@ s() { android.@@ ac@@ count@@ s.@@ Ac@@ count@@ Manager ac@@ count@@ Manager = android.@@ ac@@ count@@ s.@@ Ac@@ count@@ Manager.@@ get@@ (@@ this@@ ); android.@@ ac@@ count@@ s.@@ Ac@@ count@@ [] ac@@ count@@ s = ac@@ count@@ Manager.@@ get@@ Ac@@ count@@ s@@ By@@ Type@@ (get@@ String(@@ R.@@ str@@ ing.@@ p@@ b@@ ap@@ _@@ ac@@ count@@ _@@ type@@ )); if (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Service.@@ D@@ B@@ G) android.util.@@ Log@@ .@@ d@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Service.@@ TAG, (("@@ remove@@ Un@@ cle@@ an@@ Ac@@ count@@ s() " + (@@ ac@@ count@@ s.@@ length@@ )) + " un@@ cle@@ an ac@@ count@@ s for (android.@@ ac@@ count@@ s.@@ Ac@@ coun@@ t ac@@ c : ac@@ count@@ s) { android.util.@@ Log@@ .@@ w@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Service.@@ TAG, ("@@ remove@@ Un@@ cle@@ an@@ Ac@@ count@@ () " + ac@@ c@@ )); ac@@ count@@ Manager.@@ remove@@ Ac@@ count@@ Ex@@ pli@@ c@@ it@@ ly@@ (@@ ac@@ c@@ ); } try { get@@ Content@@ Res@@ ol@@ ver@@ ().@@ delet@@ e(@@ Call@@ Log.@@ Call@@ s.@@ C@@ ON@@ T@@ ENT_@@ UR@@ I@@ , null@@ , null@@ ); } catch (java.lang.@@ Illegal@@ Argument@@ Exception e) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ Service.@@ TAG, "@@ Can't Log@@ s co@@ ul@@ d not b@@ e delet@@ ed@@ , th@@ ey ma@@ y not ex@@ is@@ t y@@ et@@ .@@ "); } }
java.lang.String get@@ Ar@@ t@@ if@@ act@@ F@@ et@@ ch@@ er@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Build@@ Info build@@ Info@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ V@@ e@@ n@@ do@@ r@@ Config@@ File@@ Uti@@ l config@@ File@@ Uti@@ l = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ V@@ e@@ n@@ do@@ r@@ Config@@ File@@ Uti@@ l@@ (); if (@@ config@@ File@@ Util.@@ Load@@ V@@ e@@ n@@ do@@ r@@ Config@@ (@@ build@@ Info@@ )) { return config@@ File@@ Util.@@ Get@@ V@@ e@@ n@@ do@@ r@@ Config@@ Vari@@ able@@ ("@@ build@@ _@@ ar@@ t@@ if@@ act@@ _@@ f@@ et@@ ch@@ er@@ "); } return null@@ ; }
java.io.File create@@ Temp@@ Dir@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ I@@ Test@@ De@@ vice device@@ ) throw@@ s java.io.IOException { return com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ File@@ Util.@@ create@@ Temp@@ Dir@@ (@@ device@@ .get@@ Ser@@ i@@ al@@ Number@@ ()); }
@java.lang.Override protected boolean start@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ TAG, "@@ st@@ ar@@ t the AV@@ R@@ C@@ P T@@ arg@@ et Ser@@ vice m@@ Current@@ Data = new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Data@@ (@@ null@@ , null@@ ); m@@ Native@@ Inter@@ face = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Native@@ Interface@@ .get@@ Interface@@ (); m@@ Recei@@ ve@@ r = new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ Av@@ rc@@ p@@ B@@ roadcast@@ Recei@@ ver@@ (); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ A@@ 2@@ d@@ p.@@ AC@@ TION@@ _@@ AC@@ TI@@ V@@ E_@@ DE@@ V@@ IC@@ E_@@ CH@@ AN@@ GE@@ D@@ ); register@@ Recei@@ ver@@ (m@@ Recei@@ ver@@ , fil@@ ter@@ ); return true@@ ; }
private void add@@ Ac@@ tive@@ Log@@ (@@ int re@@ as@@ on@@ , java.lang.String package@@ Name, boolean en@@ able@@ ) { synchronized@@ (m@@ Ac@@ tive@@ Log@@ s) { if ((m@@ Ac@@ tive@@ Log@@ s.@@ size@@ ()) > (com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ AC@@ TI@@ V@@ E_@@ LO@@ G@@ _M@@ A@@ X@@ _@@ SIZ@@ E@@ )) { m@@ Ac@@ tive@@ Log@@ s.@@ remove@@ (); } m@@ Ac@@ tive@@ Log@@ s.@@ add@@ (@@ new com.android.server.@@ Bluetooth@@ Manager@@ Service.@@ Ac@@ tive@@ Log@@ (re@@ as@@ on@@ , package@@ Name, en@@ able@@ , java.lang.System.@@ current@@ Time@@ Milli@@ s@@ ())); if (@@ en@@ able@@ ) { android.util.@@ Stat@@ s@@ Log.@@ write@@ _@@ n@@ on@@ _@@ ch@@ ain@@ ed@@ (@@ Stat@@ s@@ Log.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ EN@@ AB@@ LE@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (), null@@ , Stat@@ s@@ Log.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ EN@@ AB@@ LE@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D_@@ _@@ STATE_@@ _@@ EN@@ AB@@ LE@@ D@@ , re@@ as@@ on@@ , package@@ Name); } else { android.util.@@ Stat@@ s@@ Log.@@ write@@ _@@ n@@ on@@ _@@ ch@@ ain@@ ed@@ (@@ Stat@@ s@@ Log.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ EN@@ AB@@ LE@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (), null@@ , Stat@@ s@@ Log.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ EN@@ AB@@ LE@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D_@@ _@@ STATE_@@ _@@ D@@ IS@@ AB@@ LE@@ D@@ , re@@ as@@ on@@ , package@@ Name); } } }
@@@ android.@@ annotation.@@ NonNull public java.io.FileDescriptor get@@ Socket@@ () { if ((m@@ P@@ fd@@ ) == null@@ ) { return null@@ ; } return m@@ P@@ fd@@ .get@@ File@@ Des@@ criptor@@ (); }
public void add@@ Address@@ (java.lang.String add@@ Address@@ ) throw@@ s java.io.IOException { if (!(@@ is@@ S@@ ho@@ ul@@ d@@ Run@@ ())) { throw new java.lang.@@ Error@@ (); } }
public void remove@@ Address@@ (java.lang.String add@@ ress@@ ) throw@@ s java.io.IOException { if (!(@@ is@@ Address@@ ())) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ P@@ o@@ int@@ er@@ Exception@@ "); } }
public void set@@ Ac@@ tive@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ set@@ Ac@@ tive@@ Device@@ " + device@@ )); } if (@@ de@@ vice == null@@ ) { m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ ) { (android.@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ )) { re@@ port@@ Ac@@ tive@@ Device@@ (@@ null@@ ); m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id = and@@ ro@@ id@@ .@@ .@@ m@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ ; return@@ ; } java.lang.@@ Lon@@ g device@@ H@@ i@@ S@@ ync@@ Id = m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Map@@ .get@@ Or@@ De@@ fa@@ ult@@ (@@ device@@ , Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ )); if (@@ device@@ H@@ i@@ S@@ ync@@ Id != (m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ )) { re@@ port@@ Ac@@ tive@@ Device@@ (@@ device@@ ); m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id = device@@ H@@ i@@ S@@ ync@@ Id@@ ; } }
boolean is@@ Ac@@ tive@@ De@@ vice device@@ ) { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ is@@ Ac@@ tive@@ Device@@ :@@ " + device@@ )); } return (m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ ) == (m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Map@@ .get@@ Or@@ Default@@ (@@ device@@ , Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ )); }
boolean dis@@ connect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ dis@@ connect@@ () " + device@@ )); } long h@@ i@@ S@@ ync@@ Id = m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Map@@ .get@@ Or@@ Default@@ (@@ device@@ , Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ ); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ device@@ ); if (s@@ m == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ dis@@ connec@@ t requ@@ est for " + device@@ ) + " : n@@ o st@@ ate m@@ ach@@ in@@ e } else { s@@ m.@@ send@@ Message@@ (@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); } } if (@@ h@@ i@@ S@@ ync@@ Id == (android.@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ )) { return true@@ ; } for (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice st@@ or@@ ed@@ De@@ vice : m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Map@@ .@@ key@@ Set@@ ()) { if ((@@ (m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Map@@ .get@@ Or@@ Default@@ (@@ st@@ or@@ ed@@ Device@@ , Bluetooth@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ )) != h@@ i@@ S@@ ync@@ Id@@ ) || (@@ st@@ or@@ ed@@ Device@@ .@@ equals(@@ device@@ ))) { continue@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (@@ st@@ or@@ ed@@ Device@@ ); if (s@@ m == null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ dis@@ connec@@ t requ@@ est for " + device@@ ) + " : n@@ o st@@ ate m@@ ach@@ in@@ e@@ ")); continue@@ ; } s@@ m.@@ send@@ Message@@ (@@ He@@ ar@@ ing@@ A@@ id@@ State@@ M@@ ach@@ in@@ e.@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ T@@ ); } } return true@@ ; }
private synchronized void connection@@ State@@ Changed@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int f@@ rom@@ State@@ , int to@@ State@@ ) { if ((@@ de@@ vice == null@@ ) || (f@@ rom@@ State == to@@ State@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ((((@@ ("@@ connection@@ State@@ Changed@@ : u@@ ne@@ x@@ pec@@ ted in@@ vo@@ cation@@ . device@@ =@@ " + device@@ ) + " f@@ rom@@ State@@ =@@ ") + f@@ rom@@ State@@ ) + " to@@ State@@ =@@ ") + to@@ State@@ )); return@@ ; } if (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { set@@ Ac@@ tive@@ Device@@ (@@ device@@ ); } if ((@@ f@@ rom@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (get@@ Connec@@ ted@@ De@@ vices@@ ().@@ isEmpty@@ ())) { set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); } if (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { int b@@ ond@@ State = m@@ Adap@@ ter@@ Service@@ .get@@ B@@ ond@@ State@@ (@@ device@@ ); if (b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E@@ )) { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (@@ de@@ vice + " is un@@ b@@ ond@@ . Remo@@ v@@ e st@@ ate m@@ ach@@ in@@ e } remove@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); } }
long get@@ H@@ i@@ S@@ ync@@ Id@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { return m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Map@@ .@@ to@@ Lo@@ w@@ er@@ C@@ ase@@ (@@ de@@ vice != null ? 0 : Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ ; }
synchronized boolean register@@ App@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ S@@ d@@ p@@ Setting@@ s s@@ d@@ p@@ , android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ Q@@ os@@ Setting@@ s in@@ Q@@ o@@ s, android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ Q@@ os@@ Setting@@ s out@@ Q@@ o@@ s, android.@@ bluetooth.@@ I@@ Bluetooth@@ H@@ id@@ Device@@ Call@@ b@@ ac@@ k call@@ back@@ ) { android.@@ app.@@ Activity@@ Manager ac@@ tivity@@ Manager = ((@@ android.@@ app.@@ Activity@@ Manager@@ ) (get@@ System@@ Service@@ (com.android.bluetooth.@@ h@@ id@@ .@@ AC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E@@ ))); if ((m@@ User@@ U@@ id@@ ) != 0) { int current@@ User@@ Imp@@ ort@@ an@@ ce = ac@@ tivity@@ Manager.@@ get@@ U@@ id@@ Imp@@ ort@@ an@@ ce@@ (m@@ User@@ U@@ id@@ ); if (@@ current@@ User@@ Imp@@ ort@@ an@@ ce > (@@ Activity@@ Manager.@@ Run@@ ning@@ App@@ Process@@ Info.@@ I@@ M@@ P@@ OR@@ TA@@ N@@ C@@ E_@@ V@@ I@@ SI@@ B@@ LE@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, "@@ S@@ k@@ ip@@ p@@ ing curr@@ ent u@@ se@@ r is not vi@@ si@@ b@@ le un@@ register@@ App@@ (); } else { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, "@@ S@@ k@@ ip@@ p@@ ing fa@@ ile@@ d@@ "); return an@@ oth@@ er ap@@ p is register@@ ed@@ "); return false@@ ; } if (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, ("@@ register@@ App@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ Ser@@ vice call@@ ing u@@ id@@ =@@ " + (m@@ User@@ U@@ id@@ ))); } int call@@ ing@@ U@@ id@@ =@@ android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (); m@@ User@@ U@@ id@@ =@@ call@@ ing@@ U@@ id@@ ;@@ m@@ Call@@ b@@ ac@@ k = call@@ back@@ ; return m@@ H@@ id@@ Device@@ Native@@ Interface@@ .@@ register@@ App@@ (s@@ d@@ p.@@ name@@ , s@@ d@@ p.@@ des@@ cription@@ , s@@ d@@ p.@@ provid@@ er, s@@ d@@ p.@@ su@@ b@@ class@@ , s@@ d@@ p.@@ des@@ criptor@@ s, (in@@ Q@@ o@@ s == null ? null : in@@ Q@@ os.@@ to@@ Array@@ ()@@ ), (@@ out@@ Q@@ o@@ s == null ? null : out@@ Q@@ os.@@ to@@ Array@@ ())); }
public boolean register@@ App@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ S@@ d@@ p@@ Setting@@ s s@@ d@@ p@@ , android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ Q@@ os@@ Setting@@ s in@@ Q@@ o@@ s, android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ Q@@ os@@ Setting@@ s out@@ Q@@ o@@ s, java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ .@@ Call@@ b@@ ac@@ k call@@ back@@ ) { android.util.Log.@@ v@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ .@@ TAG, ((((@@ ((((@@ ((@@ ("@@ register@@ App@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ .@@ Callback@@ W@@ rap@@ per@@ : s@@ d@@ p@@ ) + " in@@ Q@@ os@@ =@@ ") + in@@ Q@@ o@@ s) + " out@@ Q@@ os@@ =@@ ") + out@@ Q@@ o@@ s) + ", exec@@ ut@@ or@@ =@@ ") + exec@@ ut@@ or@@ ) + ", call@@ back@@ =@@ ") + call@@ back@@ )); boolean result = false@@ ; if (s@@ d@@ p == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ N@@ o param@@ et@@ er can@@ not b@@ e null@@ "); } if (@@ exec@@ ut@@ or == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ B@@ ad param@@ et@@ er can@@ not b@@ e null@@ "); } if (c@@ all@@ b@@ ac@@ k == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ B@@ ad param@@ et@@ er can@@ not b@@ e null@@ "); } final android.@@ bluetooth.@@ I@@ Bluetooth@@ H@@ id@@ De@@ vice ser@@ vice = m@@ Service@@ ; if (@@ ser@@ vice != null@@ ) { try { android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ .@@ Callback@@ W@@ r@@ app@@ er c@@ b@@ w = new android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ .@@ Callback@@ W@@ rap@@ per@@ (@@ exec@@ ut@@ or@@ , call@@ back@@ ); result = service@@ .@@ register@@ App@@ (s@@ d@@ p@@ , in@@ Q@@ o@@ s, out@@ Q@@ o@@ s, c@@ b@@ w@@ ); } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ e@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ .@@ TAG, "@@ Un@@ able e.toString@@ ()); } } else { android.util.Log.@@ w@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ .@@ TAG, "@@ S@@ D@@ P not att@@ ach@@ ed to ser@@ vice }@@ "); } return result@@ ; }
public void test@@ Service@@ For@@ eg@@ round@@ D@@ ur@@ ation@@ () throw@@ s java.lang.Exception { b@@ at@@ ter@@ y@@ On@@ S@@ creen@@ O@@ ff@@ (); in@@ stall@@ Package@@ (com.android.server.@@ cts.@@ B@@ at@@ ter@@ y@@ Stat@@ s@@ Valid@@ ation@@ Test.@@ DE@@ V@@ IC@@ E_@@ SI@@ D@@ E_@@ TEST_@@ AP@@ K@@ , true@@ ); get@@ Device@@ ().@@ exec@@ ute@@ Sh@@ ell@@ Command@@ ("@@ in@@ st@@ ar@@ t -@@ n com.android.server.@@ cts.@@ device@@ .@@ b@@ at@@ ter@@ y@@ st@@ at@@ s@@ /@@ .@@ Sim@@ ple@@ Ac@@ tiv@@ it@@ y assert@@ Value@@ R@@ ang@@ e@@ ("@@ st@@ ", "@@ ", 5, 0, 0); final long start@@ Tim@@ e = java.lang.System.@@ current@@ Time@@ Milli@@ s(); run@@ Device@@ Test@@ s@@ (com.android.server.@@ cts.@@ B@@ at@@ ter@@ y@@ Stat@@ s@@ Valid@@ ation@@ Test.@@ DE@@ V@@ IC@@ E_@@ SI@@ D@@ E_@@ TEST_@@ P@@ AC@@ K@@ A@@ G@@ E, ".@@ B@@ at@@ ter@@ y@@ Stat@@ s@@ Process@@ State@@ Test@@ s@@ ", "@@ test@@ For@@ eg@@ round@@ Service@@ "); assert@@ Value@@ R@@ ang@@ e@@ ("@@ st@@ ", "@@ ", 5, (@@ long@@ ) (@@ 2@@ 00@@ 0 * 0.@@ 8@@ )), ((@@ java.lang.System.@@ current@@ Time@@ Milli@@ s()) - start@@ Tim@@ e); b@@ at@@ ter@@ y@@ O@@ ff@@ S@@ creen@@ On@@ (); }
@java.lang.Override public android.net.@@ Network@@ Stat@@ s get@@ D@@ eta@@ ile@@ d@@ U@@ id@@ Stat@@ s@@ (@@ int li@@ m@@ it@@ U@@ id, java.lang.String[] li@@ m@@ it@@ I@@ fa@@ ces@@ , int li@@ m@@ it@@ T@@ ag@@ ) { try { android.net.@@ Network@@ Stat@@ s st@@ at@@ s = get@@ Network@@ Stat@@ s@@ U@@ id@@ D@@ eta@@ il@@ (); st@@ at@@ s.@@ fil@@ ter@@ (@@ li@@ m@@ it@@ U@@ id, li@@ m@@ it@@ I@@ fa@@ ces@@ , li@@ m@@ it@@ T@@ ag@@ ); return st@@ at@@ s; } catch (android.os.@@ Remote@@ Exception e) { android.util.Log.@@ w@@ t@@ f@@ (com.android.server.@@ net.@@ Network@@ Stat@@ s@@ Service.@@ TAG, "@@ Er@@ ror comp@@ il@@ ing U@@ I@@ D st@@ at@@ s@@ ", e); return new android.net.@@ Network@@ Stat@@ s(@@ 0@@ L@@ , 0); } }
private void set@@ Valu@@ es@@ (@@ int i@@ , android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try valu@@ es) { if@@ ace@@ [i@@ ] = valu@@ es@@ .@@ if@@ ace@@ ; u@@ id@@ [i@@ ] = valu@@ es.@@ u@@ id@@ ; set@@ [i@@ ] = valu@@ es.@@ set@@ ; t@@ ag@@ [i@@ ] = valu@@ es.@@ t@@ ag@@ ; m@@ eter@@ ed@@ [i@@ ] = valu@@ es.@@ m@@ eter@@ ed@@ ; ro@@ am@@ ing@@ [i@@ ] = valu@@ es.@@ ro@@ am@@ ing@@ ; default@@ Network@@ [i@@ ] = valu@@ es@@ .@@ default@@ Network@@ ; r@@ x@@ Bytes@@ [i@@ ] = valu@@ es.@@ r@@ x@@ Bytes@@ ; r@@ x@@ Pack@@ et@@ s@@ [i@@ ] = valu@@ es.@@ r@@ x@@ Pack@@ et@@ s; t@@ x@@ Bytes@@ [i@@ ] = valu@@ es.@@ t@@ x@@ Bytes@@ ; t@@ x@@ Pack@@ et@@ s@@ [i@@ ] = valu@@ es.@@ t@@ x@@ Pack@@ et@@ s; o@@ per@@ ation@@ s@@ [i@@ ] = valu@@ es.@@ o@@ per@@ ation@@ s; }
@org.junit.Test public void test@@ Filter@@ _@@ U@@ id@@ Filter@@ () { final int test@@ U@@ id = 10@@ 10@@ 10@@ 1; android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 1 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 1@@ ", 10@@ 1@@ 00@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 25@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 2 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 2@@ ", test@@ U@@ id, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 25@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 50@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 3 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 2@@ ", test@@ U@@ id, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 12@@ 3@@ , android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 25@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 50@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.net.@@ Network@@ Stat@@ s@@ Test.@@ TEST_@@ START@@ , 3@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 1@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 2@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 3@@ ); st@@ at@@ s.@@ fil@@ ter@@ (test@@ U@@ id, null@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _@@ AL@@ L); assert@@ Equal@@ s(@@ 2, st@@ at@@ s.@@ size@@ ()); assert@@ Equal@@ s(@@ e@@ n@@ try@@ 2, st@@ at@@ s.get@@ Valu@@ es@@ (@@ 0, null@@ )); assert@@ Equal@@ s(@@ e@@ n@@ try@@ 3@@ , st@@ at@@ s.get@@ Valu@@ es@@ (1@@ , null@@ )); }
@org.junit.Test public void test@@ Filter@@ _@@ T@@ ag@@ Filter@@ () { final int test@@ T@@ a@@ g = 12@@ 3@@ ; final int oth@@ er@@ T@@ a@@ g = 4@@ 5@@ 6@@ ; android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 1 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 1@@ ", 10@@ 1@@ 00@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , test@@ T@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 25@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 50@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 2 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 2@@ ", 10@@ 1, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , test@@ T@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 25@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 3 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 2@@ ", 10@@ 1, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , oth@@ er@@ T@@ ag@@ , android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 50@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.net.@@ Network@@ Stat@@ s@@ Test.@@ TEST_@@ START@@ , 3@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 1@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 2@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 3@@ ); st@@ at@@ s.@@ fil@@ ter@@ (android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , null@@ , test@@ T@@ ag@@ ); assert@@ Equal@@ s(@@ 2, st@@ at@@ s.@@ size@@ ()); assert@@ Equal@@ s(@@ e@@ n@@ try@@ 1, st@@ at@@ s.get@@ Valu@@ es@@ (@@ 0, null@@ )); assert@@ Equal@@ s(@@ e@@ n@@ try@@ 2, st@@ at@@ s.get@@ Valu@@ es@@ (1@@ , null@@ )); }
@org.junit.Test public void test@@ Filter@@ _@@ No@@ Filter@@ () { android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 1 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 1@@ ", 10@@ 1@@ 00@@ , android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 25@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 50@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 2 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 2@@ ", 10@@ 1, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E, android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 50@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try@@ 3 = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ ("@@ test@@ 2@@ ", 10@@ 1, android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 12@@ 3@@ , android.net.@@ Network@@ Stat@@ s.@@ ME@@ TER@@ E@@ D_@@ NO@@ , android.net.@@ Network@@ Stat@@ s.@@ RO@@ AM@@ ING@@ _N@@ O@@ , android.net.@@ Network@@ Stat@@ s.@@ DE@@ FA@@ UL@@ T_@@ N@@ E@@ T@@ W@@ OR@@ K@@ _N@@ O@@ , 5@@ 0000@@ L@@ , 25@@ L@@ , 1@@ 0000@@ 0@@ L@@ , 50@@ L@@ , 0@@ L); android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.net.@@ Network@@ Stat@@ s@@ Test.@@ TEST_@@ START@@ , 3@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 1@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 2@@ ).@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ 3@@ ); st@@ at@@ s.@@ fil@@ ter@@ (android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , null@@ , android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _@@ AL@@ L); assert@@ Equal@@ s(@@ 3@@ , st@@ at@@ s.@@ size@@ ()); assert@@ Equal@@ s(@@ e@@ n@@ try@@ 1, st@@ at@@ s.get@@ Valu@@ es@@ (@@ 0, null@@ )); assert@@ Equal@@ s(@@ e@@ n@@ try@@ 2, st@@ at@@ s.get@@ Valu@@ es@@ (1@@ , null@@ )); assert@@ Equal@@ s(@@ e@@ n@@ try@@ 3@@ , st@@ at@@ s.get@@ Valu@@ es@@ (@@ 2, null@@ )); }
@java.lang.Override public android.net.@@ Network@@ Requ@@ est list@@ en@@ For@@ Network@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es network@@ Cap@@ abili@@ ties@@ , android.os.@@ Mess@@ eng@@ er mess@@ eng@@ er, android.os.@@ I@@ B@@ in@@ der b@@ in@@ der@@ ) { if (!(@@ has@@ W@@ if@@ i@@ Network@@ List@@ en@@ Permission@@ (@@ network@@ Cap@@ abili@@ ties@@ ))) { e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); } android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ Cap@@ abili@@ ties@@ ); res@@ tri@@ ct@@ Request@@ U@@ id@@ s@@ For@@ Call@@ er(@@ n@@ c@@ ); res@@ tri@@ ct@@ B@@ ack@@ g@@ round@@ Request@@ For@@ Call@@ er(@@ n@@ c@@ ); en@@ su@@ re@@ Valid@@ Network@@ S@@ pe@@ c@@ if@@ i@@ er(@@ network@@ Cap@@ abili@@ ties@@ ); android.net.@@ Network@@ Requ@@ est network@@ Requ@@ est = new android.net.@@ Network@@ Request@@ (@@ n@@ c@@ , TYP@@ E_@@ N@@ ON@@ E, next@@ Network@@ Request@@ Id@@ (), Network@@ Requ@@ est.@@ Type.@@ L@@ IS@@ T@@ EN@@ ); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (m@@ ess@@ eng@@ er, network@@ Request@@ , b@@ in@@ der@@ ); if (!(@@ has@@ W@@ if@@ i@@ Network@@ List@@ en@@ Permission@@ (@@ network@@ Cap@@ abili@@ ties@@ ))) { e@@ n@@ for@@ ce@@ Access@@ Permission@@ (); } android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); network@@ Cap@@ abili@@ ti@@ es = new android.net.@@ Network@@ Request@@ (@@ n@@ c@@ , TYP@@ E_@@ N@@ ON@@ E, next@@ Network@@ Request@@ Id@@ (), Network@@ Requ@@ est.@@ Type.@@ L@@ IS@@ T@@ EN@@ ); com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info n@@ r@@ i = new com.android.server.@@ Connectivity@@ Service.@@ Network@@ Request@@ Info@@ (m@@ ess@@ eng@@ er, network@@ Request@@ , b@@ in@@ der@@ ); if (@@ com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ (("@@ request@@ ing for " + n@@ ri@@ )); m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ RE@@ G@@ IS@@ TER@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ L@@ IS@@ T@@ EN@@ ER@@ , n@@ ri@@ )); return network@@ Request@@ ; }
public boolean has@@ U@@ se@@ B@@ ack@@ g@@ round@@ Network@@ s@@ Permission@@ (@@ int u@@ id@@ ) { final java.lang.String[] name@@ s = m@@ Package@@ Manager.@@ get@@ Pack@@ ag@@ es@@ For@@ U@@ id@@ (@@ u@@ id@@ ); if (@@ (@@ null == nam@@ es) || ((@@ nam@@ es.@@ length) <@@ = 0@@ )) return false@@ ; try { final android.content.@@ p@@ m.@@ Package@@ Info ap@@ p = m@@ Package@@ Manager.@@ get@@ Package@@ Info@@ (@@ nam@@ es@@ [0@@ ]@@ , com.android.server.@@ connec@@ tivity.@@ GE@@ T_@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ S@@ ); return has@@ U@@ se@@ B@@ ack@@ g@@ round@@ Network@@ s@@ Permission@@ (@@ app@@ ); } catch (android.@@ content.@@ p@@ m.@@ Package@@ Manager.@@ Name@@ Not@@ F@@ ound@@ Exception e) { com.android.server.@@ connec@@ tivity.@@ Permission@@ Monitor@@ .@@ log@@ e@@ (("@@ Name@@ Not@@ F@@ ound@@ Exception " + (@@ nam@@ es@@ [0@@ ]@@ ))); return false@@ ; } }
public void test@@ On@@ ly@@ C@@ ryp@@ t@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ J@@ ust@@ Au@@ th@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ , null@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , false@@ , 1, true@@ ); }
public static void update@@ Tr@@ ac@@ ing@@ (android.@@ content.@@ Context context@@ , boolean for@@ ce@@ ) { android.content.@@ S@@ har@@ ed@@ Pre@@ ference@@ s pre@@ f@@ s = android.@@ pre@@ ference@@ .@@ Pre@@ ference@@ Manager.@@ get@@ Default@@ S@@ har@@ ed@@ Pre@@ feren@@ ces@@ (@@ context@@ ); if (((@@ pre@@ f@@ s.get@@ Boolean@@ (@@ con@@ tex@@ t.get@@ String(@@ R.@@ str@@ ing.@@ pre@@ f@@ _@@ key@@ _@@ tr@@ ac@@ ing@@ _@@ on@@ ), false@@ )) != (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ is@@ Tr@@ ac@@ ing@@ On@@ ())) || for@@ ce@@ ) { if (p@@ ref@@ s.get@@ Boolean@@ (@@ con@@ tex@@ t.get@@ String(@@ R.@@ str@@ ing.@@ pre@@ f@@ _@@ key@@ _@@ tr@@ ac@@ ing@@ _@@ on@@ ), false@@ )) { java.lang.String ac@@ tive@@ A@@ va@@ il@@ able@@ T@@ ag@@ s = com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ get@@ Ac@@ tive@@ T@@ ag@@ s(@@ context@@ , pre@@ f@@ s, true@@ ); if (!@@ (android.@@ text.@@ Text@@ Utils.@@ equals(@@ ac@@ tive@@ A@@ va@@ il@@ able@@ T@@ ag@@ s, com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ get@@ Ac@@ tive@@ T@@ ag@@ s(@@ context@@ , pre@@ f@@ s, false@@ )@@ ))) { com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ po@@ st@@ Root@@ No@@ t@@ if@@ ic@@ ation@@ (@@ context@@ , pre@@ f@@ s); } else { com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ can@@ cel@@ Root@@ No@@ t@@ if@@ ic@@ ation@@ (@@ context@@ ); } java.util.@@ Set@@ <java.lang.String@@ > app@@ s = pre@@ f@@ s.get@@ String@@ Set@@ (@@ con@@ tex@@ t.get@@ String(@@ R.@@ str@@ ing.@@ pre@@ f@@ _@@ key@@ _@@ ap@@ ps@@ ), java.util.Collection@@ s.@@ E@@ M@@ P@@ TY@@ _S@@ E@@ T@@ ); com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ at@@ r@@ ace@@ Start@@ (@@ ac@@ tive@@ A@@ va@@ il@@ able@@ T@@ ag@@ s, com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ B@@ U@@ F@@ ER_@@ SIZ@@ E_@@ K@@ B@@ , app@@ s); } else { com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ at@@ r@@ ace@@ St@@ op@@ (); com.android.@@ trace@@ ur@@ .@@ Recei@@ ver.@@ can@@ cel@@ Root@@ No@@ t@@ if@@ ic@@ ation@@ (@@ context@@ ); } } }
public static void at@@ r@@ ace@@ Start@@ (java.lang.String t@@ ag@@ s, int buff@@ er@@ Size@@ K@@ b@@ , java.util.@@ Set@@ <java.lang.String@@ > ap@@ ps@@ ) { java.lang.String app@@ Param@@ et@@ er = (@@ app@@ s.@@ isEmpty@@ ()) ? "@@ " : -@@ a " + (android.@@ text.@@ Text@@ Utils.@@ j@@ o@@ in@@ ("@@ ,@@ ", ap@@ ps@@ )); java.lang.String c@@ m@@ d = (("@@ --@@ as@@ ync@@ _@@ st@@ ar@@ t -@@ c -@@ b " + buff@@ er@@ Size@@ K@@ b@@ ) + " t@@ ag@@ s@@ =@@ ") + t@@ ag@@ s) + " app@@ Param@@ et@@ er@@ ; android.util.Log.@@ v@@ (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ TAG, ("@@ S@@ D@@ K as@@ yn@@ c at@@ r@@ ace@@ : " + c@@ m@@ d@@ )); try { java.lang.@@ Pro@@ ces@@ s at@@ r@@ ac@@ e = com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ exec@@ (c@@ m@@ d@@ ); if ((@@ at@@ r@@ ace@@ .@@ wait@@ For@@ ()) != 0) { android.util.Log.@@ e@@ (com.android.@@ trace@@ ur@@ .@@ A@@ trace@@ Utils.@@ TAG, ("@@ I@@ gn@@ or@@ e fa@@ ile@@ d w@@ ith@@ : " + (@@ at@@ r@@ ace@@ .@@ ex@@ it@@ Value@@ ()))); } } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } }
@java.lang.Override public int com@@ par@@ e(@@ Application@@ Info one@@ , Application@@ Info t@@ w@@ o@@ ) { return one@@ .@@ package@@ Nam@@ e.@@ com@@ par@@ e@@ To@@ I@@ gn@@ ore@@ C@@ ase@@ (@@ t@@ w@@ o@@ .@@ package@@ Name); }
private void ref@@ res@@ h@@ Ap@@ ps@@ () { android.content.@@ p@@ m.@@ Package@@ Manager package@@ Manager = get@@ Context@@ ().get@@ Package@@ Manager@@ (); java.util.List<@@ android.content.@@ p@@ m.@@ Application@@ Info@@ > ava@@ il@@ able@@ App@@ s = package@@ Manager.@@ get@@ In@@ st@@ al@@ le@@ d@@ Application@@ s(@@ 0); java.util.Collection@@ s.@@ s@@ ort@@ (@@ ava@@ il@@ able@@ Ap@@ ps@@ , com.android.@@ trace@@ ur@@ .@@ M@@ ain@@ F@@ r@@ ag@@ m@@ ent.@@ m@@ Package@@ Comp@@ ar@@ ator@@ ); java.util.ArrayList<@@ java.lang.String> en@@ tri@@ es = new java.util.ArrayList<@@ java.lang.String@@ >@@ (@@ ava@@ il@@ able@@ App@@ s.@@ size@@ ()); java.util.ArrayList<@@ java.lang.String> value@@ s = new java.util.ArrayList<@@ java.lang.String@@ >@@ (@@ ava@@ il@@ able@@ App@@ s.@@ size@@ ()); for (android.@@ content.@@ p@@ m.@@ Application@@ Info ap@@ p : ava@@ il@@ able@@ Ap@@ ps@@ ) { en@@ tri@@ es.@@ add(@@ app@@ .@@ package@@ Name); valu@@ es.@@ add(@@ app@@ .@@ package@@ Name); } m@@ Ref@@ res@@ h@@ ing = true@@ ; try { m@@ App@@ s.@@ set@@ En@@ tri@@ es@@ (@@ en@@ tri@@ es.@@ to@@ Array@@ (@@ new java.lang.String@@ [0@@ ]@@ )); m@@ App@@ s.@@ set@@ E@@ n@@ try@@ Valu@@ es@@ (@@ valu@@ es.@@ to@@ Array@@ (@@ new java.lang.String@@ [0@@ ]@@ )); } final@@ l@@ y { m@@ Ref@@ res@@ h@@ ing = false@@ ; } }
@org.junit.Test @@@ android.@@ support.@@ test.@@ fil@@ ter@@ s.@@ M@@ edi@@ um@@ Test public void test@@ Element@@ s@@ On@@ M@@ ain@@ S@@ creen@@ () throw@@ s java.lang.Exception { assert@@ NotNull@@ ("@@ Can@@ not tr@@ ac@@ e switch not fo@@ und@@ .@@ wait@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ Un@@ ti@@ l.@@ find@@ Object@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ text@@ ("@@ Can@@ not tr@@ ac@@ e com.android.@@ trace@@ ur@@ .@@ u@@ it@@ est.@@ Trace@@ ur@@ App@@ Tests.@@ TI@@ ME@@ O@@ UT@@ )); assert@@ NotNull@@ ("@@ Can@@ not an@@ d sh@@ ar@@ e tr@@ ac@@ e elem@@ ent not fo@@ und@@ .@@ ", m@@ Device@@ .@@ wait@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ Un@@ ti@@ l.@@ find@@ Object@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ text@@ ("@@ Can@@ not an@@ d sh@@ ar@@ e tr@@ ac@@ e com.android.@@ trace@@ ur@@ .@@ u@@ it@@ est.@@ Trace@@ ur@@ App@@ Tests.@@ TI@@ ME@@ O@@ UT@@ )); assert@@ NotNull@@ ("@@ Can@@ not elem@@ ent not fo@@ und@@ . m@@ Device@@ .@@ wait@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ Un@@ ti@@ l.@@ find@@ Object@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ text@@ ("@@ C@@ ate@@ gor@@ ies@@ "@@ )), com.android.@@ trace@@ ur@@ .@@ u@@ it@@ est.@@ Trace@@ ur@@ App@@ Tests.@@ TI@@ ME@@ O@@ UT@@ )); assert@@ NotNull@@ ("@@ Can@@ not fo@@ und@@ . m@@ Device@@ .@@ wait@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ Un@@ ti@@ l.@@ find@@ Object@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ text@@ ("@@ Res@@ ult default cate@@ gor@@ i@@ es com.android.@@ trace@@ ur@@ .@@ u@@ it@@ est.@@ Trace@@ ur@@ App@@ Tests.@@ TI@@ ME@@ O@@ UT@@ )); assert@@ NotNull@@ ("@@ Can@@ not fo@@ und@@ . m@@ Device@@ .@@ wait@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ Un@@ ti@@ l.@@ find@@ Object@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ text@@ ("@@ Application@@ s@@ "@@ )), com.android.@@ trace@@ ur@@ .@@ u@@ it@@ est.@@ Trace@@ ur@@ App@@ Tests.@@ TI@@ ME@@ O@@ UT@@ )); assert@@ NotNull@@ ("@@ Can@@ not u@@ ic@@ k Setting@@ s ti@@ le not fo@@ und@@ . m@@ Device@@ .@@ wait@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ Un@@ ti@@ l.@@ find@@ Object@@ (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ text@@ ("@@ Res@@ ult Q@@ u@@ ic@@ k Setting@@ s ti@@ le com.android.@@ trace@@ ur@@ .@@ u@@ it@@ est.@@ Trace@@ ur@@ App@@ Tests.@@ TI@@ ME@@ O@@ UT@@ )); }
@java.lang.Override public void set@@ D@@ n@@ s@@ Configuration@@ For@@ Network@@ (@@ int net@@ Id, java.lang.String[] ser@@ ver@@ s, java.lang.String[] do@@ main@@ s, int@@ [] param@@ s, boolean u@@ se@@ T@@ l@@ s, java.lang.String t@@ l@@ s@@ Host@@ name@@ , java.lang.String[] t@@ l@@ s@@ Server@@ s) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ C@@ ON@@ N@@ EC@@ TI@@ V@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ AL@@ , com.android.server.@@ Network@@ Manage@@ ment@@ Service.@@ TAG@@ ); final java.lang.String[] t@@ l@@ s@@ F@@ ing@@ er@@ p@@ r@@ int@@ s = new java.lang.String@@ [0@@ ]; try { m@@ Net@@ d@@ Service@@ .set@@ Res@@ ol@@ ver@@ Configuration@@ (@@ net@@ Id, ser@@ ver@@ s, do@@ main@@ s, param@@ s, u@@ se@@ T@@ l@@ s, t@@ l@@ s@@ Host@@ name@@ , t@@ l@@ s@@ Server@@ s, t@@ l@@ s@@ F@@ ing@@ er@@ p@@ r@@ int@@ s); } catch (android.os.@@ Remote@@ Exception e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } }
public void set@@ D@@ n@@ s@@ Configuration@@ For@@ Network@@ (@@ int net@@ Id, android.net.@@ Lin@@ k@@ Proper@@ ti@@ es l@@ p@@ , boolean is@@ Default@@ Network@@ ) { final com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g private@@ D@@ n@@ s@@ C@@ f@@ g = m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Map@@ .get@@ (@@ net@@ Id@@ ); final boolean u@@ se@@ T@@ l@@ s = (@@ private@@ D@@ n@@ s@@ C@@ f@@ g != null@@ ) && (@@ private@@ D@@ n@@ s@@ C@@ f@@ g.@@ u@@ se@@ T@@ l@@ s); final boolean str@@ i@@ ct@@ Mod@@ e = (@@ private@@ D@@ n@@ s@@ C@@ f@@ g != null@@ ) && (@@ private@@ D@@ n@@ s@@ C@@ f@@ g.@@ in@@ Str@@ i@@ ct@@ Mode@@ ()); final java.lang.String t@@ l@@ s@@ Host@@ name = (@@ str@@ i@@ ct@@ Mode@@ ) ? private@@ D@@ n@@ s@@ C@@ f@@ g.@@ ho@@ st@@ name : "@@ "; final java.lang.String[] t@@ l@@ s@@ Server@@ s = (@@ str@@ i@@ ct@@ Mode@@ ) ?@@ Network@@ Utils.@@ m@@ ake@@ String@@ s(@@ java.util.Arrays.@@ str@@ eam@@ (@@ private@@ D@@ n@@ s@@ C@@ f@@ g.@@ i@@ ps@@ ).@@ fil@@ ter@@ (@@ ( ip@@ ) -@@ > l@@ p.@@ is@@ Re@@ ach@@ able@@ (@@ ip@@ )).@@ co@@ lle@@ ct@@ (java.util.@@ str@@ eam@@ .@@ Co@@ lle@@ ctor@@ s.@@ to@@ List@@ ())) : new java.lang.String@@ [0@@ ]; final java.lang.String[] as@@ si@@ g@@ ne@@ d@@ Server@@ s = android.net.@@ Network@@ Utils.@@ m@@ ake@@ String@@ s(@@ l@@ p@@ .get@@ D@@ n@@ s@@ Server@@ s()); final java.lang.String[] do@@ main@@ Str@@ s = com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ get@@ Do@@ main@@ String@@ s(@@ l@@ p@@ .get@@ Do@@ main@@ s()); update@@ Parameter@@ s@@ Setting@@ s(); final int@@ [] param@@ s = new int@@ []{ mS@@ amp@@ le@@ Valid@@ ity@@ , m@@ Su@@ c@@ cess@@ Th@@ res@@ ho@@ l@@ d@@ , m@@ Min@@ S@@ amp@@ l@@ es@@ , m@@ Ma@@ x@@ S@@ amp@@ le@@ s }; android.util.@@ S@@ log.@@ d@@ (com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ TAG, java.lang.String@@ .@@ for@@ mat@@ ("@@ In@@ va@@ li@@ d %@@ s, %@@ s, %@@ s, %@@ s, %@@ s, %@@ s, %@@ s@@ ", net@@ Id, java.util.Arrays.@@ toString@@ (@@ do@@ main@@ Str@@ s@@ ), java.util.Arrays.@@ toString@@ (@@ param@@ s@@ ), u@@ se@@ T@@ l@@ s, t@@ l@@ s@@ Host@@ name@@ , java.util.Arrays.@@ toString@@ (@@ t@@ l@@ s@@ Server@@ )); try { m@@ N@@ M@@ S@@ .set@@ D@@ n@@ s@@ Configuration@@ For@@ Network@@ (@@ net@@ Id, as@@ si@@ g@@ ne@@ d@@ Server@@ s, do@@ main@@ Str@@ s, param@@ s, u@@ se@@ T@@ l@@ s, t@@ l@@ s@@ Host@@ name@@ , t@@ l@@ s@@ Server@@ s@@ ); } catch (java.lang.Exception e) { android.util.@@ S@@ log.@@ e@@ (com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ TAG, ("@@ set@@ t@@ ing set@@ t@@ ing D@@ N@@ S configur@@ ation@@ : " + e@@ )); return@@ ; } if (is@@ Default@@ Network@@ ) set@@ Default@@ D@@ n@@ s@@ System@@ Properties@@ (@@ l@@ p@@ .get@@ D@@ n@@ s@@ Server@@ s()); f@@ lu@@ sh@@ V@@ m@@ D@@ n@@ s@@ Cach@@ e@@ (); }
public void dis@@ po@@ se@@ () { synchronized@@ (m@@ Lock) { if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ D@@ B@@ G) com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ Pro@@ file.@@ log@@ ("@@ dis@@ po@@ se@@ "); un@@ register@@ All@@ App@@ Event@@ s(); un@@ register@@ Curr@@ App@@ Event@@ s(); if ((m@@ U@@ ic@@ c@@ C@@ ard@@ ) instanceof com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ ) { ((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ e@@ u@@ ic@@ c.@@ E@@ u@@ ic@@ c@@ C@@ ard@@ ) (m@@ U@@ ic@@ c@@ C@@ ard@@ )).@@ un@@ register@@ For@@ E@@ id@@ Read@@ y@@ (m@@ Handle@@ r@@ ); } mC@@ i.@@ un@@ register@@ For@@ O@@ ff@@ Or@@ Not@@ A@@ va@@ il@@ able@@ (m@@ Handle@@ r@@ ); if ((m@@ C@@ at@@ Service@@ ) != null@@ ) mC@@ at@@ Service.@@ dis@@ po@@ se@@ (); for (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ u@@ ic@@ c.@@ U@@ ic@@ c@@ C@@ ard@@ Appli@@ c@@ ation ap@@ p : m@@ U@@ ic@@ c@@ Application@@ s) { if (@@ ap@@ p != null@@ ) { app.@@ dis@@ po@@ se@@ (); } } mC@@ at@@ Ser@@ vice = null@@ ; m@@ U@@ ic@@ c@@ Application@@ s = null@@ ; mC@@ ar@@ ri@@ er@@ Pri@@ vi@@ le@@ g@@ e@@ R@@ ule@@ s = null@@ ; m@@ Dis@@ po@@ se@@ d = true@@ ; } }
@java.lang.Override public void re@@ le@@ ase@@ Connection@@ Service@@ (com.android.server.@@ telecom.@@ Connection@@ Service@@ F@@ o@@ c@@ us@@ Manager.@@ Connection@@ Service@@ F@@ o@@ c@@ u@@ s connection@@ Service@@ ) { m@@ Call@@ s.@@ str@@ eam@@ ().@@ fil@@ ter@@ (@@ ( c@@ ) -@@ > c@@ .get@@ Connection@@ Service@@ W@@ rap@@ per@@ ().@@ equals(@@ connection@@ Service@@ ))@@ .@@ for@@ Each@@ (@@ ( c@@ ) -@@ > c.@@ dis@@ connect@@ (@@ " + (@@ connection@@ Service@@ .get@@ Comp@@ onent@@ Name@@ ())); }
public int register@@ Statu@@ s@@ List@@ en@@ er(@@ @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est request@@ , @@@ android.@@ annotation.@@ NonNull java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ ms@@ .@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er list@@ en@@ er@@ ) { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ I@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Ser@@ vice do@@ wn@@ load@@ Ser@@ vice = m@@ Service@@ .get@@ (); if (@@ do@@ wn@@ load@@ Ser@@ vice == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ request@@ ing not y@@ et bo@@ un@@ d } android.@@ telephony.@@ m@@ b@@ ms@@ .@@ In@@ ternal@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er int@@ er@@ n@@ al@@ List@@ en@@ er = new android.@@ telephony.@@ m@@ b@@ ms@@ .@@ In@@ ternal@@ Do@@ wn@@ load@@ Statu@@ s@@ Listener@@ (@@ list@@ en@@ er@@ , exec@@ ut@@ or@@ ); try { int result = do@@ wn@@ load@@ Service@@ .@@ register@@ Statu@@ s@@ List@@ en@@ er(@@ request@@ , int@@ er@@ n@@ al@@ List@@ en@@ er@@ ); if (@@ result != (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { if (@@ result == (@@ M@@ b@@ ms@@ Error@@ s.@@ Do@@ wn@@ load@@ Error@@ s.@@ ER@@ RO@@ R@@ _@@ UN@@ K@@ NO@@ W@@ N@@ _@@ D@@ O@@ W@@ N@@ LO@@ A@@ D_@@ RE@@ Q@@ UE@@ S@@ T@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ request@@ ing do@@ wn@@ lo@@ ad request@@ .@@ "); } return result@@ ; } catch (android.os.@@ Remote@@ Exception e) { m@@ Service@@ .set@@ (@@ null@@ ); android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed.@@ set@@ (@@ false@@ ); return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ ER@@ RO@@ R@@ _M@@ ID@@ D@@ LE@@ W@@ AR@@ E_@@ LO@@ S@@ T@@ ; } m@@ In@@ ternal@@ Do@@ wn@@ load@@ Statu@@ s@@ Listener@@ s.@@ put@@ (@@ list@@ ener@@ , int@@ er@@ n@@ al@@ List@@ en@@ er@@ ); return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ; }
@java.lang.Override public int register@@ Pro@@ g@@ ress@@ Listener@@ (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est do@@ wn@@ load@@ Request@@ , android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er list@@ ener@@ ) throw@@ s android.os.@@ Remote@@ Exception { m@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er = list@@ ener@@ ; return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ; }
public int un@@ register@@ Statu@@ s@@ List@@ en@@ er(@@ @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est request@@ , @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ ms@@ .@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er list@@ en@@ er@@ ) { try { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ I@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Ser@@ vice do@@ wn@@ load@@ Ser@@ vice = m@@ Service@@ .get@@ (); if (@@ do@@ wn@@ load@@ Ser@@ vice == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ N@@ o not y@@ et bo@@ un@@ d "); } android.@@ telephony.@@ m@@ b@@ ms@@ .@@ In@@ ternal@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er int@@ er@@ n@@ al@@ List@@ en@@ er = m@@ In@@ ternal@@ Do@@ wn@@ load@@ Statu@@ s@@ Listener@@ s.get@@ (@@ list@@ ener@@ ); if (@@ int@@ er@@ n@@ al@@ List@@ en@@ er == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ list@@ en@@ er w@@ a@@ s ne@@ ve@@ r register@@ ed@@ "); } try { int result = do@@ wn@@ load@@ Service@@ .@@ un@@ register@@ Statu@@ s@@ List@@ en@@ er(@@ request@@ , int@@ er@@ n@@ al@@ Listener@@ ); if (@@ result != (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { if (@@ result == (@@ M@@ b@@ ms@@ Error@@ s.@@ Do@@ wn@@ load@@ Error@@ s.@@ ER@@ RO@@ R@@ _@@ UN@@ K@@ NO@@ W@@ N@@ _@@ D@@ O@@ W@@ N@@ LO@@ A@@ D_@@ RE@@ Q@@ UE@@ S@@ T@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ N@@ o do@@ wn@@ lo@@ ad request@@ .@@ "); } return result@@ ; } catch (android.os.@@ Remote@@ Exception e) { m@@ Service@@ .set@@ (@@ null@@ ); android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed.@@ set@@ (@@ false@@ ); return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ ER@@ RO@@ R@@ _M@@ ID@@ D@@ LE@@ W@@ AR@@ E_@@ LO@@ S@@ T@@ ; } } final@@ l@@ y { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ In@@ ternal@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er int@@ er@@ n@@ al@@ Call@@ b@@ ac@@ k = m@@ In@@ ternal@@ Do@@ wn@@ load@@ Statu@@ s@@ Listener@@ s.@@ remove@@ (@@ list@@ ener@@ ); if (@@ int@@ er@@ n@@ al@@ Call@@ b@@ ac@@ k != null@@ ) { int@@ er@@ n@@ al@@ Callback@@ .@@ st@@ op@@ (); } } return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ S@@ ; }
public int un@@ register@@ Pro@@ g@@ ress@@ Listener@@ (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est do@@ wn@@ load@@ Request@@ , android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er list@@ ener@@ ) throw@@ s android.os.@@ Remote@@ Exception { return 0; }
public int register@@ Pro@@ g@@ ress@@ Listener@@ (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est do@@ wn@@ load@@ Request@@ , android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er list@@ ener@@ ) throw@@ s android.os.@@ Remote@@ Exception { return 0; }
public int un@@ register@@ Statu@@ s@@ Listener@@ (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est do@@ wn@@ load@@ Request@@ , android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er list@@ ener@@ ) throw@@ s android.os.@@ Remote@@ Exception { return 0; }
public final int un@@ register@@ Statu@@ s@@ Listener@@ (@@ final android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est do@@ wn@@ load@@ Request@@ , final android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ID@@ o@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er list@@ en@@ er@@ ) throw@@ s android.os.@@ Remote@@ Exception { if (@@ do@@ wn@@ load@@ Requ@@ est == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ list@@ en@@ er requ@@ est m@@ us@@ t not b@@ e null@@ "); } if (@@ list@@ en@@ er == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ list@@ en@@ er m@@ us@@ t not b@@ e null@@ "); } android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent de@@ ath@@ R@@ ec@@ ip@@ i@@ ent = m@@ Do@@ wn@@ load@@ Callback@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ s.@@ remove@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ()); if (@@ de@@ ath@@ R@@ ec@@ ip@@ i@@ ent == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ list@@ en@@ er "); } list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ().@@ un@@ lin@@ k@@ To@@ De@@ ath@@ (@@ de@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ , 0); android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er ex@@ po@@ sed@@ Call@@ b@@ ac@@ k = m@@ Do@@ wn@@ load@@ Statu@@ s@@ Listener@@ B@@ in@@ der@@ Map@@ .@@ remove@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ()); if (@@ ex@@ po@@ sed@@ Call@@ b@@ ac@@ k == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ list@@ en@@ er list@@ en@@ er "); } return un@@ register@@ Statu@@ s@@ Listener@@ (@@ do@@ wn@@ load@@ Request@@ , ex@@ po@@ sed@@ Callback@@ ); }
public int un@@ register@@ Pro@@ g@@ ress@@ Listener@@ (@@ @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est request@@ , @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er list@@ ener@@ ) { try { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ I@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Ser@@ vice do@@ wn@@ load@@ Ser@@ vice = m@@ Service@@ .get@@ (); if (@@ do@@ wn@@ load@@ Ser@@ vice == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ M@@ id@@ d@@ le@@ war@@ e not y@@ et bo@@ und@@ "); } android.@@ telephony.@@ m@@ b@@ m@@ s.@@ In@@ ternal@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er int@@ er@@ n@@ al@@ List@@ en@@ er = m@@ In@@ ternal@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ Listener@@ s.get@@ (@@ list@@ ener@@ ); if (@@ int@@ er@@ n@@ al@@ List@@ en@@ er == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Provid@@ ed list@@ en@@ er w@@ a@@ s ne@@ ve@@ r register@@ ed@@ "); } try { int result = do@@ wn@@ load@@ Service.@@ un@@ register@@ Pro@@ g@@ ress@@ Listener@@ (@@ request@@ , int@@ er@@ n@@ al@@ Listener@@ ); if (@@ result != (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { if (@@ result == (@@ M@@ b@@ ms@@ Error@@ s.@@ Do@@ wn@@ load@@ Error@@ s.@@ ER@@ RO@@ R@@ _@@ UN@@ K@@ NO@@ W@@ N@@ _@@ D@@ O@@ W@@ N@@ LO@@ A@@ D_@@ RE@@ Q@@ UE@@ S@@ T@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Un@@ k@@ no@@ w@@ n do@@ wn@@ lo@@ ad requ@@ est.@@ "); } return result@@ ; } catch (android.os.@@ Remote@@ Exception e) { m@@ Service@@ .set@@ (@@ null@@ ); android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed.@@ set@@ (@@ false@@ ); return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ ER@@ RO@@ R@@ _M@@ ID@@ D@@ LE@@ W@@ AR@@ E_@@ LO@@ S@@ T@@ ; } } final@@ l@@ y { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ In@@ ternal@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er int@@ er@@ n@@ al@@ Call@@ b@@ ac@@ k = m@@ In@@ ternal@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ Listener@@ s.@@ remove@@ (@@ list@@ ener@@ ); if (@@ int@@ er@@ n@@ al@@ Call@@ b@@ ac@@ k != null@@ ) { int@@ er@@ n@@ al@@ Callback@@ .@@ st@@ op@@ (); } } return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ; }
public final int un@@ register@@ Pro@@ g@@ ress@@ List@@ en@@ er@@ (@@ final android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est do@@ wn@@ load@@ Request@@ , final android.@@ telephony.@@ m@@ b@@ ms@@ .@@ ID@@ o@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er list@@ en@@ er@@ ) throw@@ s android.os.@@ Remote@@ Exception { if (@@ do@@ wn@@ load@@ Requ@@ est == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ list@@ en@@ er requ@@ est m@@ us@@ t not b@@ e null@@ "); } if (@@ list@@ en@@ er == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ list@@ en@@ er m@@ us@@ t not b@@ e null@@ "); } android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent de@@ ath@@ R@@ ec@@ ip@@ i@@ ent = m@@ Do@@ wn@@ load@@ Callback@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ s.@@ remove@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ()); if (@@ de@@ ath@@ R@@ ec@@ ip@@ i@@ ent == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ list@@ en@@ er list@@ en@@ er "); } list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ().@@ un@@ lin@@ k@@ To@@ De@@ ath@@ (@@ de@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ , 0); android.@@ telephony.@@ m@@ b@@ ms@@ .@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er ex@@ po@@ sed@@ Call@@ b@@ ac@@ k = m@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ Listener@@ B@@ in@@ der@@ Ma@@ p@@ .@@ remove@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ()); if (@@ ex@@ po@@ sed@@ Call@@ b@@ ac@@ k == null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ list@@ en@@ er list@@ en@@ er "); } return un@@ register@@ Pro@@ g@@ ress@@ List@@ en@@ er.@@ on@@ (@@ do@@ wn@@ load@@ Request@@ , ex@@ po@@ sed@@ Callback@@ ); }
public int register@@ Pro@@ g@@ ress@@ Listener@@ (@@ @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est request@@ , @@@ android.@@ annotation.@@ NonNull java.util.@@ concurrent.@@ Exec@@ ut@@ or exec@@ ut@@ or@@ , @@@ android.@@ annotation.@@ NonNull android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er list@@ ener@@ ) { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ I@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Ser@@ vice do@@ wn@@ load@@ Ser@@ vice = m@@ Service@@ .get@@ (); if (@@ do@@ wn@@ load@@ Ser@@ vice == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ M@@ id@@ d@@ le@@ war@@ e not y@@ et bo@@ und@@ "); } android.@@ telephony.@@ m@@ b@@ m@@ s.@@ In@@ ternal@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er int@@ er@@ n@@ al@@ List@@ en@@ er = new android.@@ telephony.@@ m@@ b@@ m@@ s.@@ In@@ ternal@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ Listener@@ (@@ list@@ ener@@ , exec@@ ut@@ or@@ ); try { int result = do@@ wn@@ load@@ Service.@@ register@@ Pro@@ g@@ ress@@ Listener@@ (@@ request@@ , int@@ er@@ n@@ al@@ Listener@@ ); if (@@ result != (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { if (@@ result == (@@ M@@ b@@ ms@@ Error@@ s.@@ Do@@ wn@@ load@@ Error@@ s.@@ ER@@ RO@@ R@@ _@@ UN@@ K@@ NO@@ W@@ N@@ _@@ D@@ O@@ W@@ N@@ LO@@ A@@ D_@@ RE@@ Q@@ UE@@ S@@ T@@ )) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Un@@ k@@ no@@ w@@ n do@@ wn@@ lo@@ ad requ@@ est.@@ "); } return result@@ ; } catch (android.os.@@ Remote@@ Exception e) { m@@ Service@@ .set@@ (@@ null@@ ); android.@@ telephony.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Session@@ .@@ s@@ I@@ s@@ In@@ iti@@ aliz@@ ed.@@ set@@ (@@ false@@ ); return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ ER@@ RO@@ R@@ _M@@ ID@@ D@@ LE@@ W@@ AR@@ E_@@ LO@@ S@@ T@@ ; } m@@ In@@ ternal@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ Listener@@ s.@@ put@@ (@@ list@@ ener@@ , int@@ er@@ n@@ al@@ Listener@@ ); return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ; }
public int register@@ Statu@@ s@@ List@@ en@@ er list@@ en@@ er@@ ) throw@@ s android.os.@@ Remote@@ Exception { return 0; }
@java.lang.Override public final int register@@ Statu@@ s@@ List@@ en@@ er@@ (@@ final android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est do@@ wn@@ load@@ Request@@ , final android.@@ telephony.@@ m@@ b@@ ms@@ .@@ ID@@ o@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er list@@ ener@@ ) throw@@ s android.os.@@ Remote@@ Exception { final int u@@ id = os@@ .@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (); if (@@ do@@ wn@@ load@@ Requ@@ est == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ Requ@@ est requ@@ est m@@ us@@ t not b@@ e null@@ "); } if (@@ list@@ en@@ er == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ list@@ en@@ er m@@ us@@ t not b@@ e null@@ "); } android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er ex@@ po@@ sed@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Service@@ Bas@@ e.@@ V@@ e@@ n@@ do@@ r@@ Do@@ wn@@ load@@ Statu@@ s@@ Listener@@ (@@ list@@ ener@@ ) { @java.lang.Override protected void on@@ Remote@@ Exception@@ (android.@@ os@@ .@@ Remote@@ Exception e) { on@@ App@@ Callback@@ Di@@ ed@@ (@@ u@@ id, do@@ wn@@ load@@ Requ@@ est.@@ get@@ Sub@@ s@@ cription@@ Id@@ ()); } int result = register@@ Statu@@ s@@ Listener@@ (@@ do@@ wn@@ load@@ Request@@ , ex@@ po@@ sed@@ Callback@@ ); if (@@ result == (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent = new android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ () { @java.lang.Override public void b@@ in@@ der@@ Di@@ ed@@ () { on@@ App@@ Callback@@ Di@@ ed@@ (@@ u@@ id@@ , do@@ wn@@ load@@ Requ@@ est.@@ get@@ Sub@@ s@@ cription@@ Id@@ ()); m@@ Do@@ wn@@ load@@ Statu@@ s@@ Listener@@ B@@ in@@ der@@ Map@@ .@@ remove@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ()); m@@ Do@@ wn@@ load@@ Callback@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ s.@@ remove@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ()); } }; m@@ Do@@ wn@@ load@@ Callback@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ s.@@ put@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ (), de@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ ); list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ().@@ lin@@ k@@ To@@ De@@ ath@@ (@@ de@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ , 0); m@@ Do@@ wn@@ load@@ Statu@@ s@@ Listener@@ B@@ in@@ der@@ Map@@ .@@ put@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ); } return@@ ; } result@@ ; }
public void test@@ F@@ ull@@ Callback@@ () throw@@ s java.lang.Exception { int s@@ amp@@ le@@ In@@ t = 1@@ 0; android.@@ telephony.@@ em@@ b@@ m@@ s.@@ cts.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test.@@ Test@@ D@@ S@@ Call@@ b@@ ac@@ k statu@@ s@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ em@@ b@@ m@@ s.@@ ct@@ s@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test@@ D@@ S@@ Callback@@ (); android.@@ telephony.@@ em@@ b@@ m@@ s.@@ cts.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test.@@ Test@@ D@@ P@@ Call@@ b@@ ac@@ k pro@@ g@@ ress@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ em@@ b@@ m@@ s.@@ cts.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test.@@ Test@@ D@@ P@@ Callback@@ (); android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est requ@@ est = do@@ wn@@ load@@ Request@@ Temp@@ lat@@ e.@@ build@@ (); m@@ Do@@ wn@@ load@@ Session@@ .@@ register@@ Statu@@ s@@ List@@ en@@ er(@@ request@@ , m@@ Callback@@ Exec@@ ut@@ or@@ , statu@@ s@@ Callback@@ ); m@@ Do@@ wn@@ load@@ Session@@ .@@ register@@ Pro@@ g@@ ress@@ Listener@@ (@@ request@@ , m@@ Callback@@ Exec@@ ut@@ or@@ , pro@@ g@@ ress@@ Call@@ b@@ ac@@ ); m@@ M@@ id@@ d@@ le@@ war@@ e@@ Contro@@ l.@@ fi@@ re@@ On@@ Pro@@ g@@ ress@@ Up@@ dat@@ ed@@ (@@ request@@ , C@@ ts@@ Do@@ wn@@ load@@ Service.@@ F@@ IL@@ E_@@ IN@@ F@@ O@@ , s@@ amp@@ le@@ Int@@ , s@@ amp@@ le@@ Int@@ , s@@ amp@@ le@@ Int@@ , s@@ amp@@ le@@ Int@@ , s@@ amp@@ le@@ Int@@ , s@@ amp@@ le@@ Int@@ , s@@ amp@@ le@@ Int@@ , s@@ amp@@ le@@ Int@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ S@@ o@@ me@@ Arg@@ s pro@@ g@@ ress@@ Arg@@ s = pro@@ g@@ ress@@ Call@@ b@@ ac@@ k@@ .@@ wait@@ On@@ Pro@@ g@@ ress@@ Up@@ dat@@ ed@@ (android.@@ telephony.@@ em@@ b@@ m@@ s.@@ cts.@@ A@@ S@@ Y@@ N@@ C@@ _@@ TI@@ ME@@ O@@ UT@@ ); assert@@ Equal@@ s(@@ request@@ , pro@@ g@@ ress@@ Arg@@ s.@@ arg@@ 1); assert@@ Equal@@ s(@@ C@@ ts@@ Do@@ wn@@ load@@ Service.@@ F@@ IL@@ E_@@ IN@@ F@@ O@@ , pro@@ g@@ ress@@ Arg@@ s.@@ arg@@ 2@@ ); assert@@ Equal@@ s(@@ s@@ amp@@ le@@ Int@@ , pro@@ g@@ ress@@ Arg@@ s.@@ arg@@ 3@@ ); assert@@ Equal@@ s(@@ s@@ amp@@ le@@ Int@@ , pro@@ g@@ ress@@ Arg@@ s.@@ arg@@ 4@@ ); assert@@ Equal@@ s(@@ s@@ amp@@ le@@ Int@@ , pro@@ g@@ ress@@ Arg@@ s.@@ arg@@ 5@@ ); assert@@ Equal@@ s(@@ s@@ amp@@ le@@ Int@@ , pro@@ g@@ ress@@ Arg@@ s.@@ arg@@ 6@@ ); m@@ M@@ id@@ d@@ le@@ war@@ e@@ Contro@@ l.@@ fi@@ re@@ On@@ State@@ Up@@ dat@@ ed@@ (@@ request@@ , C@@ ts@@ Do@@ wn@@ load@@ Service.@@ F@@ IL@@ E_@@ IN@@ F@@ O@@ , s@@ amp@@ le@@ Int@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ os.@@ S@@ o@@ me@@ Arg@@ s state@@ Arg@@ s = statu@@ s@@ Call@@ b@@ ac@@ k@@ .@@ wait@@ On@@ State@@ Up@@ dat@@ ed@@ (android.@@ telephony.@@ em@@ b@@ m@@ s.@@ cts.@@ A@@ S@@ Y@@ N@@ C@@ _@@ TI@@ ME@@ O@@ UT@@ ); assert@@ Equal@@ s(@@ request@@ , state@@ ); assert@@ Equal@@ s(@@ C@@ ts@@ Do@@ wn@@ load@@ Service.@@ F@@ IL@@ E_@@ IN@@ F@@ O@@ , state@@ Arg@@ s.@@ arg@@ 2@@ ); assert@@ Equal@@ s(@@ s@@ amp@@ le@@ Int@@ , state@@ Arg@@ s.@@ arg@@ 2@@ ); }
public void test@@ D@@ er@@ eg@@ is@@ tr@@ ation@@ () throw@@ s java.lang.Exception { android.@@ telephony.@@ em@@ b@@ m@@ s.@@ ct@@ s@@ .@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test@@ .@@ Test@@ D@@ S@@ Call@@ b@@ ac@@ k statu@@ s@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ em@@ b@@ m@@ s.@@ ct@@ s@@ .@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test@@ D@@ S@@ Callback@@ (); android.@@ telephony.@@ em@@ b@@ m@@ s.@@ cts.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test.@@ Test@@ D@@ P@@ Call@@ b@@ ac@@ k pro@@ g@@ ress@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ em@@ b@@ m@@ s.@@ cts.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test.@@ Test@@ D@@ P@@ Callback@@ (); android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est requ@@ est = do@@ wn@@ load@@ Request@@ Temp@@ lat@@ e.@@ build@@ (); m@@ Do@@ wn@@ load@@ Session@@ .@@ register@@ Pro@@ g@@ ress@@ List@@ en@@ er@@ (@@ request@@ , m@@ Callback@@ Exec@@ ut@@ or@@ , pro@@ g@@ ress@@ Callback@@ ); m@@ Do@@ wn@@ load@@ Session@@ .@@ register@@ Statu@@ s@@ Listener@@ (@@ request@@ , m@@ Callback@@ Exec@@ ut@@ or@@ , statu@@ s@@ Callback@@ ); m@@ Do@@ wn@@ load@@ Session@@ .@@ un@@ register@@ Pro@@ g@@ ress@@ Listener@@ (@@ request@@ , pro@@ g@@ ress@@ Callback@@ ); m@@ Do@@ wn@@ load@@ Session@@ .@@ un@@ register@@ Statu@@ s@@ Listener@@ (@@ request@@ , statu@@ s@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ R@@ log.@@ w@@ (android.@@ telephony.@@ em@@ b@@ m@@ s.@@ cts.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test.@@ Test@@ D@@ P@@ Callback@@ Test.@@ TAG, "@@ S@@ k@@ ip@@ p@@ ing ac@@ k pro@@ g@@ ress@@ "); m@@ M@@ id@@ d@@ le@@ war@@ e@@ Contro@@ l.@@ fi@@ re@@ On@@ State@@ Up@@ dat@@ ed@@ (@@ null@@ , null@@ , 0, 0, 0, 0); assert@@ Null@@ (@@ pro@@ g@@ ress@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ R@@ b@@ m@@ s.@@ cts.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Callback@@ Test.@@ Test@@ D@@ P@@ Callback@@ Test@@ D@@ P@@ Callback@@ (); android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Callback@@ Test.@@ Do@@ wn@@ load@@ Callback@@ Test@@ D@@ P@@ Callback@@ Test@@ D@@ um@@ p@@ Do@@ wn@@ load@@ Callback@@ Test@@ D@@ ct@@ s(); m@@ Do@@ wn@@ load@@ Session@@ .@@ register@@ Statu@@ s@@ Listener@@ (@@ request@@ , m@@ Callback@@ Exec@@ ut@@ or@@ , pro@@ g@@ ress@@ Callback@@ ); m@@ Do@@ wn@@ load@@ Session@@ .@@ register@@ Statu@@ s@@ Listener@@ (@@ request@@ , m@@ Callback@@ Exec@@ ut@@ or@@ , statu@@ s@@ Callback@@ ); m@@ Do@@ wn@@ load@@ Session@@ .@@ un@@ register@@ Pro@@ g@@ ress@@ Listener@@ (@@ request@@ , pro@@ g@@ ress@@ Callback@@ ); m@@ Do@@ wn@@ load@@ Session@@ .@@ un@@ register@@ Statu@@ s@@ Listener@@ (@@ request@@ , statu@@ s@@ Call@@ b@@ ac@@ ); m@@ M@@ id@@ d@@ le@@ war@@ e@@ Contro@@ l.@@ fi@@ re@@ On@@ Pro@@ g@@ ress@@ Up@@ dat@@ ed@@ (@@ null@@ , 0, 0, 0, 0, 0); assert@@ Null@@ (@@ pro@@ g@@ ress@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ R@@ log.@@ pi@@ i@@ (@@ statu@@ s@@ Callback@@ Test.@@ S@@ H@@ O@@ RT@@
@java.lang.Override public int register@@ Statu@@ s@@ List@@ en@@ er list@@ ener@@ ) throw@@ s android.os.@@ Remote@@ Exception { m@@ Do@@ wn@@ load@@ Statu@@ s@@ List@@ en@@ er = list@@ ener@@ ; return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ; }
@java.lang.Override public int un@@ register@@ Statu@@ s@@ List@@ en@@ er(@@ int call@@ back@@ ) { m@@ Do@@ wn@@ load@@ Requ@@ est = null@@ ; return android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ; }
@java.lang.Override public final int register@@ Pro@@ g@@ ress@@ Listener@@ (@@ final android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Requ@@ est do@@ wn@@ load@@ Request@@ , final android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ID@@ o@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er list@@ ener@@ ) throw@@ s android.os.@@ Remote@@ Exception { final int u@@ id = android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (); if (@@ do@@ wn@@ load@@ Requ@@ est == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ Do@@ wn@@ lo@@ ad requ@@ est m@@ us@@ t not b@@ e null@@ "); } if (@@ list@@ en@@ er == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ Call@@ b@@ ac@@ k m@@ us@@ t not b@@ e null@@ "); } android.@@ telephony.@@ m@@ b@@ m@@ s.@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ List@@ en@@ er ex@@ po@@ sed@@ Call@@ b@@ ac@@ k = new android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ M@@ b@@ ms@@ Do@@ wn@@ load@@ Service@@ Bas@@ e.@@ V@@ e@@ n@@ do@@ r@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ Listener@@ (@@ list@@ ener@@ ) { @java.lang.Override protected void on@@ Remote@@ Exception@@ (android.os.@@ Remote@@ Exception e) { on@@ App@@ Callback@@ Di@@ ed@@ (@@ u@@ id, do@@ wn@@ load@@ Requ@@ est.@@ get@@ Sub@@ s@@ cription@@ Id@@ ()); } }; int result = register@@ Pro@@ g@@ ress@@ Listener@@ (@@ do@@ wn@@ load@@ Request@@ , ex@@ po@@ sed@@ Callback@@ ); if (@@ result == (android.@@ telephony.@@ m@@ b@@ m@@ s.@@ M@@ b@@ ms@@ Error@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent = new android.@@ telephony.@@ m@@ b@@ m@@ s.@@ ve@@ n@@ do@@ r.@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ () { @java.lang.Override public void b@@ in@@ der@@ Di@@ ed@@ () { on@@ App@@ Callback@@ Di@@ ed@@ (@@ u@@ id, do@@ wn@@ load@@ Requ@@ est.@@ get@@ Sub@@ s@@ cription@@ Id@@ ()); m@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ Listener@@ B@@ in@@ der@@ Map@@ .@@ remove@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ()); m@@ Do@@ wn@@ load@@ Callback@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ s.@@ remove@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ()); } }; m@@ Do@@ wn@@ load@@ Callback@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ s.@@ put@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ (), de@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ ); list@@ en@@ er.@@ as@@ B@@ in@@ der@@ ().@@ lin@@ k@@ To@@ De@@ ath@@ (@@ de@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ , 0); m@@ Do@@ wn@@ load@@ Pro@@ g@@ ress@@ Listener@@ B@@ in@@ der@@ Map@@ .@@ put@@ (@@ list@@ en@@ er.@@ as@@ B@@ in@@ der@@ (), ex@@ po@@ sed@@ Callback@@ ); } return result@@ ; }
private void run@@ W@@ or@@ k@@ ing@@ Mo@@ b@@ ile@@ U@@ s@@ b@@ T@@ ether@@ ing@@ (android.net.@@ Network@@ State up@@ str@@ eam@@ State@@ ) { when@@ (m@@ Connectivity@@ Manager.@@ is@@ T@@ ether@@ ing@@ Sup@@ ported@@ ()).@@ thenReturn@@ (@@ true@@ ); when@@ (m@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ .@@ se@@ le@@ ct@@ Pre@@ fer@@ re@@ d@@ U@@ ps@@ tr@@ eam@@ Type@@ (@@ an@@ y@@ ()@@ )).@@ thenReturn@@ (@@ up@@ str@@ eam@@ State@@ ); m@@ T@@ ether@@ ing.@@ start@@ T@@ ether@@ ing@@ (com.android.server.@@ connec@@ tivity.@@ TE@@ TH@@ ER@@ ING@@ _@@ US@@ B@@ , null@@ , false@@ ); m@@ L@@ oo@@ per.@@ dis@@ p@@ atch@@ All@@ (); ve@@ r@@ if@@ y@@ (m@@ U@@ s@@ b@@ Manager@@ , tim@@ es@@ (1@@ )@@ ).set@@ Current@@ F@@ un@@ c@@ tion@@ (@@ U@@ s@@ b@@ Manager.@@ US@@ B@@ _@@ F@@ UN@@ C@@ TION@@ _@@ R@@ N@@ D@@ IS@@ , false@@ ); m@@ T@@ ether@@ ing@@ .@@ int@@ er@@ face@@ Statu@@ s@@ Changed@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, true@@ ); send@@ U@@ s@@ b@@ B@@ roadcast@@ (@@ true@@ , true@@ ); m@@ L@@ oo@@ per.@@ dis@@ p@@ atch@@ All@@ (); m@@ T@@ ether@@ ing@@ Dependenc@@ ies@@ .get@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ M@@ as@@ ter@@ S@@ M@@ ().@@ send@@ Message@@ (@@ T@@ ether@@ ing.@@ T@@ ether@@ M@@ as@@ ter@@ S@@ M@@ .@@ EV@@ ENT_@@ U@@ P@@ S@@ T@@ RE@@ AM@@ _C@@ AL@@ L@@ B@@ AC@@ K@@ , U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ .@@ EV@@ ENT_@@ ON@@ _@@ AV@@ A@@ IL@@ AB@@ LE@@ , 0, up@@ str@@ eam@@ State@@ ); ve@@ r@@ if@@ y@@ (m@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ , tim@@ es@@ (1@@ )).@@ se@@ le@@ ct@@ Pre@@ fer@@ re@@ d@@ U@@ ps@@ tr@@ eam@@ Type@@ (@@ an@@ y@@ ()); ve@@ r@@ if@@ y@@ (m@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ , tim@@ es@@ (1@@ )@@ ).set@@ Current@@ U@@ ps@@ tr@@ eam@@ (@@ up@@ str@@ eam@@ State.@@ network@@ ); }
@java.lang.Override public com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ IP@@ v@@ 6@@ T@@ ether@@ ing@@ Co@@ or@@ d@@ in@@ at@@ or get@@ I@@ p@@ v@@ 6@@ T@@ ether@@ ing@@ Co@@ or@@ d@@ in@@ ator@@ (@@ java.util.ArrayList<@@ com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ T@@ ether@@ Interface@@ State@@ M@@ ach@@ ine@@ > not@@ if@@ y@@ List@@ , android.net.@@ util.@@ S@@ har@@ ed@@ Lo@@ g log@@ ) { m@@ IP@@ v@@ 6@@ Co@@ or@@ d@@ in@@ ator@@ No@@ t@@ if@@ y@@ Lis@@ t = not@@ if@@ y@@ List@@ ; return m@@ IP@@ v@@ 6@@ T@@ ether@@ ing@@ Co@@ or@@ d@@ in@@ ator@@ ; }
@java.lang.Override public android.net.@@ util.@@ Interface@@ Param@@ s get@@ Interface@@ Param@@ s(@@ java.lang.String if@@ Name@@ ) { final java.lang.String[] if@@ ace@@ s = new java.lang.String@@ []{ com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ W@@ L@@ AN@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E }; final int in@@ dex = java.util.Arrays.@@ as@@ List@@ (@@ if@@ a@@ ces@@ ).@@ index@@ Of@@ (@@ if@@ Name); assert@@ True@@ (("@@ Non@@ -@@ mock@@ ed int@@ er@@ face@@ : " + if@@ Name@@ ), (in@@ dex >@@ = 0@@ )); return new android.net.@@ util.@@ Interface@@ Param@@ s@@ (@@ if@@ Name, (in@@ dex + 1@@ ), android.net.@@ M@@ ac@@ Addres@@ s.@@ AL@@ L@@ _@@ Z@@ ER@@ O@@ S_@@ AD@@ D@@ RE@@ SS@@ ); }
private static android.net.@@ Network@@ State build@@ Mo@@ b@@ ile@@ I@@ p@@ v@@ 4@@ U@@ ps@@ tr@@ eam@@ State@@ () { return com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ build@@ Mo@@ b@@ ile@@ U@@ ps@@ tr@@ eam@@ State@@ (@@ true@@ , false@@ ); }
public com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ IP@@ v@@ 6@@ T@@ ether@@ ing@@ Co@@ or@@ d@@ in@@ at@@ or get@@ I@@ p@@ v@@ 6@@ T@@ ether@@ ing@@ Co@@ or@@ d@@ in@@ ator@@ (@@ java.util.ArrayList<@@ com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ T@@ ether@@ Interface@@ State@@ M@@ ach@@ ine@@ > not@@ if@@ y@@ List@@ , android.net.@@ util.@@ S@@ har@@ ed@@ Lo@@ g log@@ ) { return new com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ IP@@ v@@ 6@@ T@@ ether@@ ing@@ Co@@ or@@ d@@ in@@ ator@@ (@@ not@@ if@@ y@@ List@@ , log@@ ); }
public com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ U@@ ps@@ tr@@ eam@@ Network@@ Mon@@ it@@ or get@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ (android.@@ content.@@ Context ct@@ x@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ State@@ M@@ ach@@ in@@ e t@@ g@@ t@@ , android.net.@@ util.@@ S@@ har@@ ed@@ Lo@@ g log@@ , int wh@@ at@@ ) { return new com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ (@@ ct@@ x@@ , t@@ g@@ t@@ , log@@ , "@@ In@@ va@@ li@@ d wh@@ at@@ ); }
private void send@@ IP@@ v@@ 6@@ T@@ ether@@ Up@@ dat@@ es@@ (android.net.@@ Network@@ State up@@ str@@ eam@@ State@@ ) { ve@@ r@@ if@@ y@@ (m@@ IP@@ v@@ 6@@ T@@ ether@@ ing@@ Co@@ or@@ d@@ in@@ ator@@ , tim@@ es@@ (1@@ )).@@ add@@ Ac@@ tive@@ Do@@ wn@@ str@@ eam@@ (@@ arg@@ Th@@ at@@ (("@@ send@@ IP@@ v@@ 6@@ T@@ ether@@ ing s@@ m@@ )@@ : s@@ m.@@ lin@@ k@@ Properties@@ ().get@@ Interface@@ Name@@ ().@@ equal@@ s@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E@@ )), e@@ q@@ (@@ I@@ Control@@ s@@ T@@ ether@@ ing.@@ STATE_@@ TE@@ TH@@ ER@@ E@@ D@@ )); for (com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ T@@ ether@@ Interface@@ State@@ M@@ ach@@ in@@ e ti@@ s@@ m : m@@ T@@ ether@@ ing@@ Dependenc@@ ies@@ .get@@ IP@@ v@@ 6@@ Co@@ or@@ d@@ in@@ ator@@ No@@ t@@ if@@ y@@ List@@ ()) { android.net.@@ Network@@ State ip@@ v@@ 6@@ On@@ ly@@ State = com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ build@@ Mo@@ b@@ ile@@ U@@ ps@@ tr@@ eam@@ State@@ (@@ false@@ , true@@ ); ti@@ s@@ m.@@ send@@ Message@@ (@@ T@@ ether@@ Interface@@ State@@ M@@ ach@@ in@@ e.@@ C@@ M@@ D_@@ IP@@ V@@ 6@@ _@@ TE@@ TH@@ ER_@@ U@@ P@@ DA@@ TE@@ , 0, 0, (@@ up@@ str@@ eam@@ State.@@ lin@@ k@@ Proper@@ ti@@ es.@@ is@@ IP@@ v@@ 6@@ Pro@@ vision@@ ed@@ () ? ip@@ v@@ 6@@ On@@ ly@@ State.@@ lin@@ k@@ Proper@@ ti@@ es : null@@ )); } m@@ L@@ oo@@ per.@@ dis@@ p@@ atch@@ All@@ (); }
private static android.net.@@ Network@@ State build@@ Mo@@ b@@ ile@@ U@@ ps@@ tr@@ eam@@ State@@ (@@ boolean w@@ ith@@ I@@ p@@ v@@ 4@@ , boolean w@@ ith@@ I@@ p@@ v@@ 6@@ ) { final android.net.@@ Network@@ Info in@@ f@@ o = new android.net.@@ Network@@ Info@@ (android.net.@@ Connectivity@@ Manager.@@ TYP@@ E@@ _M@@ O@@ B@@ IL@@ E, 0, null@@ , null@@ ); in@@ f@@ o.@@ set@@ D@@ eta@@ ile@@ d@@ State@@ (@@ Network@@ Info.@@ D@@ eta@@ ile@@ d@@ State.@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , null@@ , null@@ ); final android.net.@@ Lin@@ k@@ Proper@@ ti@@ es pro@@ p = new android.net.@@ Lin@@ k@@ Properties@@ (); pro@@ p.@@ set@@ Interface@@ Name@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); if (@@ w@@ ith@@ I@@ p@@ v@@ 4@@ ) { pro@@ p.@@ add@@ R@@ ou@@ te@@ (@@ new android.net.@@ R@@ ou@@ te@@ Info@@ (@@ new android.net.@@ I@@ p@@ Pre@@ fix@@ (@@ AN@@ Y@@ , 0@@ ), android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s("@@ 1@@ 0.@@ 0.@@ 0.@@ 0.@@ 1@@ "), com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E@@ )); } if (@@ w@@ ith@@ I@@ p@@ v@@ 6@@ ) { pro@@ p.@@ add@@ D@@ n@@ s@@ Server@@ (android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s("@@ 2@@ 00@@ 1@@ :@@ d@@ b@@ 8@@ :@@ :@@ 2@@ ")); pro@@ p.@@ add@@ Lin@@ k@@ Address@@ (@@ new android.net.@@ Lin@@ k@@ Addres@@ s(@@ android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s("@@ 2@@ 00@@ 1@@ :@@ d@@ b@@ 8@@ :@@ :@@ :@@ "), 6@@ 4@@ )); pro@@ p.@@ add@@ R@@ ou@@ te@@ (@@ new android.net.@@ R@@ ou@@ te@@ Info@@ (@@ new android.net.@@ I@@ p@@ Pre@@ fix@@ (@@ AN@@ Y@@ , 0@@ ), android.net.@@ Network@@ Utils.@@ n@@ um@@ er@@ ic@@ To@@ Inet@@ Addres@@ s("@@ 2@@ 00@@ 1@@ :@@ d@@ b@@ 8@@ :@@ 1@@ "), com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E@@ )); } final android.net.@@ Network@@ Cap@@ abili@@ ti@@ es c@@ ap@@ abili@@ ti@@ es = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ ().@@ add@@ Trans@@ port@@ Type@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ TR@@ AN@@ S@@ P@@ O@@ RT@@ _C@@ E@@ L@@ L@@ UL@@ AR@@ ); return new android.net.@@ Network@@ State@@ (in@@ fo@@ , pro@@ p@@ , c@@ ap@@ abili@@ ties@@ , new android.net.@@ Network@@ (1@@ 00@@ ), null@@ , "@@ net@@ id@@ "); }
@org.junit.Test public void work@@ ing@@ Mo@@ b@@ ile@@ U@@ s@@ b@@ T@@ ether@@ ing@@ _@@ IP@@ v@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ Network@@ State up@@ str@@ eam@@ State = com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ build@@ Mo@@ b@@ ile@@ I@@ p@@ v@@ 4@@ U@@ ps@@ tr@@ eam@@ State@@ (); run@@ W@@ or@@ k@@ ing@@ Mo@@ b@@ ile@@ U@@ s@@ b@@ T@@ ether@@ ing@@ (@@ up@@ str@@ eam@@ State@@ ); ve@@ r@@ if@@ y@@ (m@@ N@@ M@@ Service@@ , tim@@ es@@ (1@@ )).@@ en@@ able@@ N@@ at@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); ve@@ r@@ if@@ y@@ (m@@ N@@ M@@ Service@@ , tim@@ es@@ (1@@ )).@@ start@@ Interface@@ For@@ w@@ ard@@ ing@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); send@@ IP@@ v@@ 6@@ T@@ ether@@ Up@@ dat@@ es@@ (@@ up@@ str@@ eam@@ State@@ ); ve@@ r@@ if@@ y@@ (m@@ R@@ ou@@ ter@@ Ad@@ verti@@ se@@ ment@@ D@@ a@@ e@@ mon@@ , ne@@ ver@@ ()).@@ build@@ New@@ R@@ a@@ (@@ an@@ y@@ (), not@@ Null@@ ()); }
@java.lang.Override public com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ U@@ ps@@ tr@@ eam@@ Network@@ Mon@@ it@@ or get@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ (android.@@ content.@@ Context ct@@ x@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ State@@ M@@ ach@@ in@@ e t@@ g@@ t@@ , android.net.@@ util.@@ S@@ har@@ ed@@ Lo@@ g log@@ , int wh@@ at@@ ) { m@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ M@@ as@@ ter@@ S@@ M = t@@ g@@ t@@ ; return m@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ ; }
@org.junit.Test public void work@@ ing@@ Mo@@ b@@ ile@@ U@@ s@@ b@@ T@@ ether@@ ing@@ _@@ D@@ ual@@ Stack@@ () throw@@ s java.lang.Exception { android.net.@@ Network@@ State up@@ str@@ eam@@ State = com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ build@@ Mo@@ b@@ ile@@ D@@ ual@@ Stack@@ U@@ ps@@ tr@@ eam@@ State@@ (); run@@ W@@ or@@ k@@ ing@@ Mo@@ b@@ ile@@ U@@ s@@ b@@ T@@ ether@@ ing@@ (@@ up@@ str@@ eam@@ State@@ ); ve@@ r@@ if@@ y@@ (m@@ N@@ M@@ Service@@ , tim@@ es@@ (1@@ )).@@ en@@ able@@ N@@ at@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); ve@@ r@@ if@@ y@@ (m@@ N@@ M@@ Service@@ , tim@@ es@@ (1@@ )).@@ start@@ Interface@@ For@@ w@@ ard@@ ing@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); ve@@ r@@ if@@ y@@ (m@@ R@@ ou@@ ter@@ Ad@@ verti@@ se@@ ment@@ D@@ a@@ e@@ mon@@ , tim@@ es@@ (1@@ )).@@ start@@ (); send@@ IP@@ v@@ 6@@ T@@ ether@@ Up@@ dat@@ es@@ (@@ up@@ str@@ eam@@ State@@ ); ve@@ r@@ if@@ y@@ (m@@ R@@ ou@@ ter@@ Ad@@ verti@@ se@@ ment@@ D@@ a@@ e@@ mon@@ , tim@@ es@@ (1@@ )).@@ build@@ New@@ R@@ a@@ (@@ an@@ y@@ (), not@@ Null@@ ()); ve@@ r@@ if@@ y@@ (m@@ Net@@ d@@ , tim@@ es@@ (1@@ )).@@ t@@ ether@@ App@@ ly@@ D@@ n@@ s@@ Inter@@ fa@@ ces@@ (); }
public void test@@ Control@@ ler@@ Up@@ date@@ () { com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er w@@ r@@ app@@ er = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ w@@ rap@@ (m@@ Mock@@ Control@@ ler@@ , m@@ Thread@@ .get@@ L@@ oo@@ per@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (@@ w@@ r@@ app@@ er.@@ is@@ Read@@ y@@ ()); w@@ r@@ app@@ er.@@ register@@ Callback@@ (m@@ Test@@ C@@ b@@ s); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Contro@@ lle@@ r m@@ Up@@ dat@@ ed@@ Contro@@ lle@@ r = mock@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Control@@ ler@@ .@@ class@@ ); do@@ Return@@ (m@@ Test@@ State@@ ).@@ when@@ (m@@ Up@@ dat@@ ed@@ Control@@ ler@@ )@@ .get@@ Play@@ back@@ State@@ (); m@@ Test@@ M@@ et@@ ad@@ ata@@ .@@ put@@ String(@@ Media@@ M@@ et@@ ad@@ ata@@ .@@ ME@@ TA@@ _@@ KE@@ Y_@@ TI@@ T@@ LE@@ , "@@ N@@ e@@ w T@@ it@@ le@@ "); do@@ Return@@ (m@@ Test@@ M@@ et@@ ad@@ ata@@ .@@ build@@ ()).@@ when@@ (m@@ Up@@ dat@@ ed@@ Control@@ ler@@ )@@ .get@@ M@@ et@@ ad@@ ata@@ (); do@@ Return@@ (@@ null@@ ).@@ when@@ (m@@ Mock@@ Control@@ ler@@ )@@ .get@@ Q@@ ue@@ (); w@@ r@@ app@@ er.@@ update@@ Media@@ Control@@ ler@@ (m@@ Up@@ dat@@ ed@@ Control@@ ler@@ ); ve@@ r@@ if@@ y@@ (m@@ Up@@ dat@@ ed@@ Control@@ ler@@ ).@@ register@@ Callback@@ (m@@ Control@@ ler@@ C@@ b@@ s.@@ c@@ ap@@ t@@ ure@@ (), an@@ y@@ ()); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Control@@ ler.@@ Call@@ b@@ ac@@ k cont@@ ro@@ l@@ ler@@ Callback@@ s = m@@ Control@@ ler@@ C@@ b@@ s.get@@ Value@@ (); cont@@ ro@@ l@@ ler@@ Callback@@ s.@@ on@@ M@@ et@@ ad@@ ata@@ Changed@@ (m@@ Test@@ M@@ et@@ ad@@ ata@@ .@@ build@@ ()); ve@@ r@@ if@@ y@@ (m@@ Test@@ C@@ b@@ s, ne@@ ver@@ ()).@@ m@@ edia@@ Up@@ dat@@ ed@@ Callback@@ (@@ an@@ y@@ ()); }
private boolean send@@ B@@ roadcast@@ To@@ Recei@@ ver@@ (android.@@ content.@@ Int@@ ent int@@ ent@@ , boolean is@@ Local@@ In@@ vo@@ c@@ ation@@ ) { int@@ ent.@@ put@@ Extra@@ (@@ Call@@ Intent@@ Process@@ or.@@ KE@@ Y_@@ IS@@ _@@ IN@@ C@@ O@@ M@@ ING@@ _C@@ AL@@ L@@ , false@@ ); int@@ ent.@@ set@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER_@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D@@ ); int@@ ent.@@ set@@ Class@@ (m@@ Context@@ , com.android.server.@@ telecom.@@ comp@@ onent@@ s.@@ Pri@@ m@@ ary@@ Call@@ Recei@@ ver@@ .@@ class@@ ); if (is@@ Local@@ In@@ vo@@ cation@@ ) { android.telecom.@@ Log@@ .@@ i@@ (@@ this@@ , s@@ en@@ d@@ en@@ d to Tele@@ com@@ m di@@ re@@ ct@@ ly@@ . synchronized@@ (com.android.server.@@ telecom.@@ Tele@@ com@@ System@@ .get@@ Instance@@ ().get@@ Lock@@ ()) { com.android.server.@@ telecom.@@ Tele@@ com@@ System@@ .get@@ Instance@@ ().get@@ Call@@ Intent@@ Process@@ or@@ ().@@ process@@ Intent@@ (@@ int@@ ent@@ ); } } else { android.telecom.@@ Log.@@ i@@ (@@ this@@ , "@@ S@@ ys@@ te@@ m tr@@ am@@ po@@ lin@@ e to Tele@@ com@@ .@@ "); m@@ Context.@@ send@@ B@@ roadcast@@ As@@ User@@ (@@ int@@ ent@@ , User@@ Hand@@ le.@@ S@@ Y@@ S@@ TE@@ M@@ ); } return true@@ ; }
void update@@ Adap@@ ter@@ State@@ (@@ int pre@@ v@@ State@@ , int new@@ State@@ ) { m@@ Adap@@ ter@@ Proper@@ ti@@ es.@@ set@@ State@@ (@@ new@@ State@@ ); if (@@ new@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ B@@ L@@ E_@@ T@@ UR@@ N@@ ING@@ _@@ ON@@ )) { mS@@ n@@ oo@@ p@@ Log@@ Setting@@ At@@ En@@ able = android.os.@@ System@@ Properties@@ .get@@ Boolean@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ B@@ T@@ S@@ NO@@ O@@ P@@ _@@ EN@@ AB@@ L@@ E_@@ P@@ RO@@ P@@ E@@ RT@@ Y@@ , false@@ ); } if ((m@@ Callback@@ s) != null@@ ) { int n = m@@ Callback@@ s.@@ b@@ e@@ gin@@ B@@ roadcast@@ (); debu@@ g@@ Log@@ ((((@@ ("@@ update@@ Adap@@ ter@@ State@@ : - B@@ roadcast@@ ing st@@ ate " + (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ name@@ For@@ State@@ (@@ new@@ State@@ ))) + " to ") + n@@ ) + " re@@ cei@@ ver@@ s@@ . for (@@ int i = 0; i < n@@ ; i++) { try { m@@ Callback@@ s.get@@ B@@ roadcast@@ Item@@ (i@@ ).@@ on@@ Bluetooth@@ State@@ Chang@@ e@@ (p@@ re@@ v@@ State@@ , new@@ State@@ ); } catch (android.os.@@ Remote@@ Exception e) { debu@@ g@@ Log@@ ((((@@ ("@@ No@@ t - Call@@ b@@ ac@@ k " + i@@ ) + " fa@@ ile@@ d (@@ " )@@ ")); } } m@@ Callback@@ s.@@ fin@@ is@@ h@@ B@@ roadcast@@ (); } if (@@ new@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ B@@ L@@ E_@@ ON@@ )) && (p@@ re@@ v@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ O@@ F@@ ))) { boolean s@@ n@@ oo@@ p@@ Log@@ Set@@ t@@ ing = android.os.@@ System@@ Properties@@ .get@@ Boolean@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Adap@@ ter@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ B@@ T@@ S@@ NO@@ O@@ P@@ _@@ EN@@ AB@@ L@@ E_@@ P@@ RO@@ P@@ E@@ RT@@ Y@@ , false@@ ); if ((m@@ S@@ n@@ oo@@ p@@ Log@@ Setting@@ At@@ En@@ able@@ ) != s@@ n@@ oo@@ p@@ Log@@ Setting@@ ) { m@@ Adap@@ ter@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ Adap@@ ter@@ State.@@ B@@ L@@ E_@@ T@@ UR@@ N@@ _@@ O@@ F@@ F@@ ); } } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ G@@ u@@ ard@@ ed@@ By@@ ("@@ m@@ Lock@@ ") private android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ Z@@ y@@ go@@ te@@ State open@@ Z@@ y@@ go@@ te@@ Socket@@ I@@ f@@ N@@ e@@ ed@@ ed@@ ed@@ (java.lang.String ab@@ i@@ ) throw@@ s android.os.@@ Z@@ y@@ go@@ te@@ Start@@ Faile@@ d@@ E@@ x { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pre@@ con@@ di@@ tion@@ s.@@ check@@ State@@ (java.lang.@@ Thread@@ .@@ ho@@ l@@ d@@ s@@ Lock@@ (m@@ Lock@@ ), loc@@ k not hel@@ d if (((@@ p@@ ri@@ m@@ ary@@ Z@@ y@@ go@@ te@@ State@@ ) == null@@ ) || (p@@ ri@@ m@@ ary@@ Z@@ y@@ go@@ te@@ State.@@ is@@ Clo@@ sed@@ ())) { try { p@@ ri@@ m@@ ary@@ Z@@ y@@ go@@ te@@ State = android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ Z@@ y@@ go@@ te@@ State.@@ connect@@ (m@@ Socket@@ ); } catch (java.io.IOException io@@ e) { throw new android.os.@@ Z@@ y@@ go@@ te@@ Start@@ Faile@@ d@@ Ex@@ ("@@ Faile@@ d to p@@ ri@@ m@@ ar@@ y z@@ y@@ g@@ ot@@ e io@@ ", e); } m@@ ay@@ b@@ e@@ S@@ end@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s(@@ p@@ ri@@ m@@ ary@@ Z@@ y@@ go@@ te@@ State@@ , false@@ ); } if (p@@ ri@@ m@@ ary@@ Z@@ y@@ go@@ te@@ State.@@ match@@ es@@ (@@ ab@@ i@@ )) { return p@@ ri@@ m@@ ary@@ Z@@ y@@ go@@ te@@ State@@ ; } if ((@@ (s@@ ec@@ ond@@ ary@@ Z@@ y@@ go@@ te@@ State@@ ) == null@@ ) || (s@@ ec@@ ond@@ ary@@ Z@@ y@@ go@@ te@@ State.@@ is@@ Clo@@ sed@@ ())) { try { sec@@ ond@@ ary@@ Z@@ y@@ go@@ te@@ State = android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ Z@@ y@@ go@@ te@@ State.@@ connect@@ (m@@ Sec@@ ond@@ ary@@ Socket@@ ); } catch (java.io.IOException io@@ e) { throw new android.os.@@ Z@@ y@@ go@@ te@@ Start@@ Faile@@ d@@ Ex@@ ("@@ Faile@@ d to sec@@ ond@@ ar@@ y z@@ y@@ g@@ ot@@ e io@@ e); } m@@ ay@@ b@@ e@@ S@@ end@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s(@@ sec@@ ond@@ ary@@ Z@@ y@@ go@@ te@@ State@@ , false@@ ); } if (s@@ ec@@ ond@@ ary@@ Z@@ y@@ go@@ te@@ State.@@ match@@ es@@ (@@ ab@@ i@@ )) { return sec@@ ond@@ ary@@ Z@@ y@@ go@@ te@@ State@@ ; } throw new android.os.@@ Z@@ y@@ go@@ te@@ Start@@ Faile@@ d@@ Ex@@ (("@@ C@@ au@@ g@@ ot@@ e AB@@ I@@ : " + ab@@ i@@ )); }
public void set@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s(@@ java.lang.String ex@@ em@@ ption@@ s) { synchronized@@ (m@@ Lock) { m@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s = (android.@@ text.@@ Text@@ Utils.@@ isEmpty@@ (@@ ex@@ em@@ ption@@ s@@ )) ? java.util.Collection@@ s.@@ e@@ mpty@@ List@@ () : java.util.Arrays.@@ as@@ List@@ (@@ ex@@ em@@ ption@@ s.@@ s@@ pli@@ t@@ ("@@ \@@ s@@ +@@ ")); m@@ ay@@ b@@ e@@ S@@ end@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s(@@ p@@ ri@@ m@@ ary@@ Z@@ y@@ go@@ te@@ State@@ , true@@ ); m@@ ay@@ b@@ e@@ S@@ end@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s(@@ sec@@ ond@@ ary@@ Z@@ y@@ go@@ te@@ State@@ , true@@ ); } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ G@@ u@@ ard@@ ed@@ By@@ ("@@ m@@ Lock@@ ") private void m@@ ay@@ b@@ e@@ S@@ end@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s(@@ android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ Z@@ y@@ go@@ te@@ State state@@ , boolean send@@ I@@ f@@ Empty@@ ) { if ((@@ st@@ ate == null@@ ) || (@@ st@@ at@@ e.@@ is@@ Clo@@ sed@@ ())) { return@@ ; } if ((@@ !@@ send@@ I@@ f@@ Empty@@ ) && (m@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s.@@ isEmpty@@ ())) { return@@ ; } try { st@@ at@@ e.@@ wri@@ ter.@@ write@@ (java.lang.@@ Integ@@ er.@@ toString@@ ((@@ (m@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s.@@ size@@ ()) + 1@@ ))); st@@ at@@ e.@@ wri@@ ter@@ .@@ new@@ Line@@ (); st@@ at@@ e.@@ wri@@ ter.@@ write@@ ("@@ --@@ set@@ -@@ ap@@ i@@ -@@ b@@ l@@ ack@@ list@@ -@@ ex@@ em@@ ption@@ s@@ "); st@@ at@@ e.@@ wri@@ ter@@ .@@ new@@ Line@@ (); for (@@ int i = 0; i < (m@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s.@@ size@@ ()); ++@@ i@@ ) { st@@ at@@ e.@@ wri@@ ter.@@ write@@ (m@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s.get@@ (i@@ )); st@@ at@@ e.@@ wri@@ ter@@ .@@ new@@ Line@@ (); } st@@ at@@ e.@@ wri@@ ter.@@ f@@ lu@@ sh@@ (); int statu@@ s = st@@ at@@ e.@@ input@@ Stream@@ .@@ read@@ Int@@ (); if (@@ statu@@ s != 0) { android.util.@@ S@@ log.@@ e@@ (android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ LO@@ G_@@ TAG, ("@@ Faile@@ d to set AP@@ I b@@ l@@ ack@@ li@@ s@@ t ex@@ em@@ ption@@ s@@ l statu@@ s " + statu@@ s@@ )); } } catch (java.io.IOException io@@ e) { android.util.@@ S@@ log.@@ e@@ (android.os.@@ Z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ LO@@ G_@@ TAG, "@@ Faile@@ d to set AP@@ I b@@ l@@ ack@@ li@@ s@@ t ex@@ em@@ ption@@ s@@ ", io@@ e); } }
private void update@@ () { java.lang.String ex@@ em@@ ption@@ s@@ ing = Setting@@ s.@@ G@@ lo@@ b@@ al@@ .get@@ String@@ (m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ (), Setting@@ s.@@ G@@ lo@@ b@@ al.@@ H@@ ID@@ D@@ EN@@ _@@ AP@@ I@@ _@@ B@@ L@@ AC@@ K@@ L@@ I@@ ST_@@ EX@@ E@@ M@@ P@@ TION@@ S@@ ); if (!@@ (android.@@ text.@@ Text@@ Utils.@@ equals(@@ ex@@ em@@ ption@@ s, m@@ Ex@@ em@@ ption@@ s@@ ))) { if ("@@ *@@ ".@@ equals(@@ ex@@ em@@ ption@@ s@@ )) { m@@ B@@ l@@ ack@@ list@@ Dis@@ able@@ d = true@@ ; m@@ Ex@@ em@@ ption@@ s = null@@ ; } else { m@@ B@@ l@@ ack@@ list@@ Dis@@ able@@ d = false@@ ; m@@ Ex@@ em@@ ption@@ s = ex@@ em@@ ption@@ s; } z@@ y@@ go@@ te@@ Pro@@ ces@@ s.@@ set@@ Api@@ B@@ l@@ ack@@ list@@ Ex@@ em@@ ption@@ s@@ (m@@ Ex@@ em@@ ption@@ s); }
private void set@@ Sign@@ al@@ Str@@ ength@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ () { m@@ Ph@@ on@@ e.@@ mC@@ i.@@ set@@ Sign@@ al@@ Str@@ ength@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ H@@ Y@@ S@@ TER@@ E@@ SI@@ S@@ _M@@ IL@@ L@@ IS@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ H@@ Y@@ S@@ TER@@ E@@ SI@@ S_@@ D@@ B@@ , Access@@ Network@@ Th@@ res@@ ho@@ l@@ d@@ s.@@ G@@ ER@@ AN@@ , Access@@ Network@@ Type.@@ G@@ ER@@ AN@@ , null@@ ); m@@ Ph@@ on@@ e.@@ mC@@ i.@@ set@@ Sign@@ al@@ Str@@ ength@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ H@@ Y@@ S@@ TER@@ E@@ SI@@ S@@ _M@@ IL@@ L@@ IS@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ H@@ Y@@ S@@ TER@@ E@@ SI@@ S_@@ D@@ B@@ , Access@@ Network@@ Th@@ res@@ ho@@ l@@ d@@ s.@@ UT@@ R@@ AN@@ , Access@@ Network@@ Type.@@ UT@@ R@@ AN@@ , null@@ ); m@@ Ph@@ on@@ e.@@ mC@@ i.@@ set@@ Sign@@ al@@ Str@@ ength@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ H@@ Y@@ S@@ TER@@ E@@ SI@@ S@@ _M@@ IL@@ L@@ IS@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ H@@ Y@@ S@@ TER@@ E@@ SI@@ S_@@ D@@ B@@ , Access@@ Network@@ Th@@ res@@ ho@@ l@@ d@@ s.@@ E@@ UT@@ R@@ AN@@ , Access@@ Network@@ Type.@@ E@@ UT@@ R@@ AN@@ , null@@ ); m@@ Ph@@ on@@ e.@@ mC@@ i.@@ set@@ Sign@@ al@@ Str@@ ength@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ H@@ Y@@ S@@ TER@@ E@@ SI@@ S@@ _M@@ IL@@ L@@ IS@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ H@@ Y@@ S@@ TER@@ E@@ SI@@ S_@@ D@@ B@@ , Access@@ Network@@ Th@@ res@@ ho@@ l@@ d@@ s.@@ C@@ D@@ MA@@ 2@@ 00@@ 0, Access@@ Network@@ Type.@@ C@@ D@@ MA@@ 2@@ 00@@ 0, null@@ ); }
private boolean sho@@ ul@@ d@@ T@@ ur@@ n@@ O@@ ff@@ Lin@@ k@@ Cap@@ ac@@ ity@@ E@@ s@@ tim@@ ate@@ () { return (m@@ I@@ s@@ Po@@ w@@ er@@ S@@ a@@ ve@@ On@@ ) || ((@@ (!(m@@ I@@ s@@ Ch@@ arg@@ ing@@ )) && (!(m@@ I@@ s@@ T@@ ether@@ ing@@ On@@ ))) && (!(m@@ I@@ s@@ S@@ creen@@ On@@ ))); }
private void update@@ Device@@ State@@ (@@ int event@@ Type, boolean state@@ ) { switch (@@ event@@ Typ@@ e) { case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ EV@@ ENT_@@ S@@ C@@ RE@@ EN@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D : if ((m@@ I@@ s@@ S@@ creen@@ On@@ ) == state@@ ) return@@ ; m@@ I@@ s@@ S@@ creen@@ O@@ n = state@@ ; break@@ ; case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ EV@@ ENT_@@ CH@@ AR@@ G@@ ING@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D : if ((m@@ I@@ s@@ Ch@@ arg@@ ing@@ ) == state@@ ) return@@ ; m@@ I@@ s@@ Ch@@ arg@@ ing = state@@ ; send@@ Device@@ State@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ CH@@ AR@@ G@@ ING@@ _@@ STA@@ TE@@ , m@@ I@@ s@@ Ch@@ arg@@ ing@@ ); break@@ ; case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ EV@@ ENT_@@ TE@@ TH@@ ER@@ ING@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D : if ((m@@ I@@ s@@ T@@ ether@@ ing@@ On@@ ) == state@@ ) return@@ ; m@@ I@@ s@@ T@@ ether@@ ing@@ O@@ n = state@@ ; break@@ ; case com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Device@@ State@@ Monitor@@ .@@ EV@@ ENT_@@ P@@ O@@ W@@ ER@@ _S@@ AV@@ E@@ _MOD@@ E_@@ CH@@ AN@@ GE@@ D : if ((m@@ I@@ s@@ Po@@ w@@ er@@ S@@ a@@ ve@@ On@@ ) == state@@ ) return@@ ; m@@ I@@ s@@ Po@@ w@@ er@@ S@@ a@@ ve@@ O@@ n = state@@ ; send@@ Device@@ State@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ P@@ O@@ W@@ ER@@ _S@@ AV@@ E@@ _MOD@@ E, m@@ I@@ s@@ Po@@ w@@ er@@ S@@ a@@ ve@@ On@@ ); break@@ ; default : return@@ ; } if ((m@@ I@@ s@@ Lo@@ w@@ Data@@ Ex@@ pec@@ ted@@ ) != (is@@ Lo@@ w@@ Data@@ Ex@@ pec@@ ted@@ ())) { m@@ I@@ s@@ Lo@@ w@@ Data@@ Ex@@ pec@@ ted = !@@ (m@@ I@@ s@@ Lo@@ w@@ Data@@ Ex@@ pec@@ ted@@ ); send@@ Device@@ State@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ LO@@ W@@ _@@ DA@@ TA@@ _@@ EX@@ P@@ EC@@ TE@@ D@@ , m@@ I@@ s@@ Lo@@ w@@ Data@@ Ex@@ pec@@ ted@@ ); } int new@@ Fil@@ ter = 0; if (!@@ (s@@ ho@@ ul@@ d@@ T@@ ur@@ n@@ O@@ ff@@ Sign@@ al@@ Str@@ ength@@ ())) { new@@ Fil@@ ter = android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2@@ .@@ In@@ d@@ ic@@ ation@@ Fil@@ ter.@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ ; } if (!@@ (s@@ ho@@ ul@@ d@@ T@@ ur@@ n@@ O@@ ff@@ F@@ ull@@ Network@@ Up@@ date@@ ())) { new@@ Fil@@ ter |@@ = android.@@ h@@ ardwar@@ e.@@ rad@@ io@@ .@@ V@@ 1@@ _@@ 2@@ .@@ In@@ d@@ ic@@ ation@@ Fil@@ ter.@@ F@@ UL@@ L@@ _N@@ E@@ T@@ W@@ OR@@ K@@ _@@ STA@@ TE@@ ; } if (!@@ (s@@ ho@@ ul@@ d@@ T@@ ur@@ n@@ O@@ ff@@ D@@ or@@ man@@ c@@ y@@ Up@@ date@@ ())) { new@@ Fil@@ ter |@@ = android.@@ h@@ ardwar@@ e.@@ rad@@ io@@ .@@ In@@ d@@ ic@@ ation@@ Fil@@ ter.@@ DA@@ TA@@ _C@@ AL@@ L@@ _@@ D@@ OR@@ M@@ AN@@ C@@ Y@@ _C@@ H@@ AN@@ GE@@ D@@ ; } if (!@@ (s@@ ho@@ ul@@ d@@ T@@ ur@@ n@@ O@@ ff@@ Lin@@ kff@@ ; } if ((m@@ I@@ TY@@ ) { new@@ Filter@@ , false@@ ); } if (!@@ (s@@ ho@@ ul@@ d@@ T@@ )) { new@@ Filter@@ , false@@ ); } if ((m@@ I@@ s@@ S@@ creen@@ On@@ ) { new@@ Filter@@ , false@@ ); } if (!@@ (s@@ ho@@ ul@@ d@@ T@@ ur@@ n@@ O@@ ff@@ In@@ d@@ T@@ ur@@ n@@ O@@ ff@@ In@@ d@@ T@@ ur@@ n@@ O@@ ff@@ S@@ C@@ RE@@ EN@@ _@@ 2@@ ) { new@@ Filter@@ , false@@ ); } if (!@@ (s@@ ho@@ ul@@ d@@ T@@ ur@@ n@@ O@@ ff@@ S@@ C@@ RE@@ EN@@ _@@ 2@@ ) { new@@ Filter@@ , false@@ ); } if (!@@ (s@@ ho@@ ul@@ d@@
private void set@@ Lin@@ k@@ Cap@@ ac@@ ity@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ () { }
@java.lang.Override public void set@@ Sign@@ al@@ Str@@ ength@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ (@@ int h@@ y@@ st@@ er@@ es@@ is@@ M@@ s, int h@@ y@@ st@@ er@@ es@@ is@@ D@@ b@@ , int@@ [] th@@ res@@ ho@@ l@@ d@@ s@@ D@@ b@@ m@@ , int r@@ an@@ , android.os.@@ Mess@@ age result@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y = get@@ R@@ ad@@ io@@ Prox@@ y@@ (@@ result@@ ); if (@@ rad@@ io@@ Prox@@ y != null@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y@@ 1@@ 2 = android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ I@@ R@@ ad@@ io.@@ cast@@ From@@ (@@ rad@@ io@@ Prox@@ y@@ ); if (@@ rad@@ io@@ Prox@@ y@@ 1@@ 2 == null@@ ) { ri@@ l@@ j@@ Log@@ e@@ ("@@ R@@ ad@@ i@@ o Prox@@ y 1.@@ 2 is un@@ sup@@ ported@@ !@@ "); return@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Requ@@ est r@@ r = ob@@ t@@ ain@@ Request@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ _RE@@ Q@@ UE@@ ST_@@ SE@@ T_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ _RE@@ P@@ O@@ RT@@ ING@@ _C@@ R@@ I@@ TER@@ I@@ A@@ , result@@ , m@@ R@@ IL@@ Default@@ W@@ or@@ k@@ Source@@ ); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ R@@ IL@@ J@@ _@@ LO@@ G@@ D@@ ) { ri@@ l@@ j@@ Log@@ ((((@@ r@@ r.@@ ser@@ i@@ al@@ String@@ ()) + "@@ > ") + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ request@@ To@@ String(@@ r@@ r.@@ m@@ Request@@ )))); } try { rad@@ io@@ Prox@@ y@@ 1@@ 2.@@ set@@ Sign@@ al@@ Str@@ ength@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ (@@ r@@ r.@@ m@@ Ser@@ i@@ al@@ , h@@ y@@ st@@ er@@ es@@ is@@ M@@ s, h@@ y@@ st@@ er@@ es@@ is@@ D@@ b@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ p@@ ri@@ m@@ iti@@ ve@@ Array@@ To@@ Array@@ List@@ (@@ th@@ res@@ ho@@ l@@ d@@ s@@ D@@ b@@ m@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ con@@ ver@@ t@@ R@@ an@@ To@@ H@@ al@@ R@@ an@@ (@@ r@@ an@@ )); } catch (android.os.@@ Remote@@ Exception | java.lang.@@ Runtime@@ Exception e) { handle@@ R@@ ad@@ io@@ Prox@@ y@@ Exception@@ For@@ R@@ (@@ r@@ r@@ r@@ , "@@ set@@ Sign@@ al@@ Str@@ ength@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ ", e); } }
@java.lang.Override public void set@@ Un@@ s@@ ol@@ Response@@ Filter@@ (@@ int fil@@ ter@@ , android.os.@@ Mess@@ age result@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y = get@@ R@@ ad@@ io@@ Prox@@ y@@ (@@ result@@ ); if (@@ rad@@ io@@ Prox@@ y != null@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Requ@@ est r@@ r = ob@@ t@@ ain@@ Request@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ _RE@@ Q@@ UE@@ ST_@@ SE@@ T_@@ UN@@ S@@ O@@ L@@ IC@@ I@@ TE@@ D_@@ RE@@ S@@ P@@ ON@@ S@@ E_@@ F@@ IL@@ TER@@ , result@@ , m@@ R@@ IL@@ Default@@ W@@ or@@ k@@ Source@@ ); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ R@@ IL@@ J@@ _@@ LO@@ G@@ D@@ ) { ri@@ l@@ j@@ Log@@ ((((@@ ((@@ r@@ r.@@ ser@@ i@@ al@@ String@@ ()) + "@@ > ") + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ request@@ To@@ String(@@ r@@ r.@@ m@@ Request@@ ))) + " fil@@ ter@@ )); } android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y@@ 1@@ 2 = android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ I@@ R@@ ad@@ io.@@ cast@@ From@@ (@@ rad@@ io@@ Prox@@ y@@ ); if (@@ rad@@ io@@ Prox@@ y@@ 1@@ 2 != null@@ ) { try { rad@@ io@@ Prox@@ y@@ 1@@ 2.@@ set@@ In@@ d@@ ic@@ ation@@ Filter@@ _@@ 1@@ _@@ 2@@ (@@ r@@ r.@@ m@@ Ser@@ i@@ al@@ , fil@@ ter@@ ); } catch (android.os.@@ Remote@@ Exception | java.lang.@@ Runtime@@ Exception e) { handle@@ R@@ ad@@ io@@ Prox@@ y@@ Exception@@ For@@ R@@ R@@ R@@ (@@ r@@ r@@ r@@ , "@@ set@@ In@@ d@@ ic@@ ation@@ Filter@@ _@@ 1@@ _@@ 2@@ ", e); } } else { try { rad@@ io@@ Prox@@ y.@@ set@@ In@@ d@@ ic@@ ation@@ Filter@@ (@@ r@@ r.@@ m@@ Ser@@ i@@ al@@ , fil@@ ter@@ ); } catch (android.os.@@ Remote@@ Exception | java.lang.@@ Runtime@@ Exception e) { handle@@ R@@ ad@@ io@@ Prox@@ y@@ Exception@@ For@@ R@@ R@@ R@@ (@@ r@@ r@@ r@@ r@@ , "@@ set@@ In@@ d@@ ic@@ ation@@ Filter@@ ", e); } } }
@java.lang.Override public void set@@ Lin@@ k@@ Cap@@ ac@@ ity@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ (@@ int h@@ y@@ st@@ er@@ es@@ is@@ M@@ s, int h@@ y@@ st@@ er@@ es@@ is@@ D@@ l@@ K@@ b@@ ps@@ , int h@@ y@@ st@@ er@@ es@@ is@@ U@@ l@@ K@@ b@@ ps@@ , int@@ [] th@@ res@@ ho@@ l@@ d@@ s@@ D@@ l@@ K@@ b@@ ps@@ , int@@ [] th@@ res@@ ho@@ l@@ d@@ s@@ U@@ l@@ K@@ b@@ ps@@ , int r@@ an@@ , android.os.@@ Mess@@ age result@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 0.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y = get@@ R@@ ad@@ io@@ Prox@@ y@@ (@@ result@@ ); if (@@ rad@@ io@@ Prox@@ y != null@@ ) { android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ I@@ R@@ ad@@ i@@ o rad@@ io@@ Prox@@ y@@ 1@@ 2 = android.@@ h@@ ardwar@@ e.@@ rad@@ io.@@ V@@ 1@@ _@@ 2.@@ I@@ R@@ ad@@ io.@@ cast@@ From@@ (@@ rad@@ io@@ Prox@@ y@@ ); if (@@ rad@@ io@@ Prox@@ y@@ 1@@ 2 == null@@ ) { ri@@ l@@ j@@ Log@@ e@@ ("@@ R@@ ad@@ i@@ o Prox@@ y 1.@@ 2 is un@@ sup@@ ported@@ !@@ "); return@@ ; } com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Requ@@ est r@@ r = ob@@ t@@ ain@@ Request@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ _RE@@ Q@@ UE@@ ST_@@ SE@@ T_@@ L@@ IN@@ K@@ _C@@ AP@@ AC@@ I@@ TY@@ _RE@@ P@@ O@@ RT@@ ING@@ _C@@ R@@ I@@ TER@@ I@@ A@@ , result@@ , m@@ R@@ IL@@ Default@@ W@@ or@@ k@@ Source@@ ); if (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ R@@ IL@@ J@@ _@@ LO@@ G@@ D@@ ) { ri@@ l@@ j@@ Log@@ ((((@@ r@@ r.@@ ser@@ i@@ al@@ String@@ ()) + "@@ > ") + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ request@@ To@@ String(@@ r@@ r.@@ m@@ Request@@ )))); } try { rad@@ io@@ Prox@@ y@@ 1@@ 2.@@ set@@ Lin@@ k@@ Cap@@ ac@@ ity@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ (@@ r@@ r.@@ m@@ Ser@@ i@@ al@@ , h@@ y@@ st@@ er@@ es@@ is@@ D@@ l@@ K@@ b@@ ps@@ , h@@ y@@ st@@ er@@ es@@ is@@ U@@ l@@ K@@ b@@ ps@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ p@@ ri@@ m@@ iti@@ ve@@ Array@@ To@@ Array@@ List@@ (@@ th@@ res@@ ho@@ l@@ d@@ s@@ D@@ l@@ K@@ b@@ ps@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ p@@ ri@@ m@@ iti@@ ve@@ Array@@ To@@ Array@@ List@@ (@@ th@@ res@@ ho@@ l@@ d@@ s@@ U@@ l@@ K@@ b@@ ps@@ ), com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ .@@ con@@ ver@@ t@@ R@@ an@@ (@@ r@@ an@@ )); } catch (android.os.@@ Remote@@ Exception | java.lang.@@ Runtime@@ Exception e) { handle@@ R@@ ad@@ io@@ Prox@@ y@@ Exception@@ For@@ R@@ (@@ r@@ , "@@ set@@ Lin@@ k@@ Cap@@ ac@@ ity@@ Re@@ port@@ ing@@ C@@ ri@@ ter@@ i@@ a@@ ", e); } } }
private static int con@@ ver@@ t@@ R@@ an@@ To@@ H@@ al@@ R@@ an@@ (@@ int rad@@ io@@ Access@@ Network@@ ) { switch (@@ rad@@ io@@ Access@@ Network@@ ) { case android.@@ telephony.@@ Access@@ Network@@ Constants.@@ Access@@ Network@@ Type.@@ G@@ ER@@ A@@ N : return 1; case android.@@ telephony.@@ Access@@ Network@@ Constants.@@ Access@@ Network@@ Type.@@ UT@@ R@@ A@@ N : return 2@@ ; case android.@@ telephony.@@ Access@@ Network@@ Constants.@@ Access@@ Network@@ Type.@@ E@@ UT@@ R@@ A@@ N : return 3@@ ; case android.@@ telephony.@@ Access@@ Network@@ Constants.@@ Access@@ Network@@ Type.@@ C@@ D@@ MA@@ 2@@ 00@@ 0 : return 4@@ ; case android.@@ telephony.@@ Access@@ Network@@ Constants.@@ Access@@ Network@@ Type.@@ I@@ W@@ LA@@ N : return 5@@ ; case android.@@ telephony.@@ Access@@ Network@@ Constants.@@ Access@@ Network@@ Type.@@ UN@@ K@@ NO@@ W@@ N : default : return 0; } }
private boolean check@@ Statu@@ s@@ Of@@ Po@@ lic@@ y@@ (android.@@ app.@@ In@@ strument@@ ation in@@ strument@@ ation@@ , java.lang.String ad@@ min@@ Po@@ lic@@ y@@ Name@@ ) throw@@ s java.lang.Exception { android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ De@@ vice de@@ vice = android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Device@@ .get@@ Instance@@ (in@@ strument@@ ation@@ ); android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ct@@ or list@@ View@@ Se@@ le@@ ct@@ or = new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ resource@@ Id@@ (@@ Res@@ .@@ AN@@ D@@ RO@@ ID@@ _@@ L@@ I@@ ST_@@ RE@@ S@@ ); new com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ w@@ atch@@ er@@ s.@@ Setting@@ s@@ Test@@ Po@@ pu@@ p@@ W@@ atch@@ er(@@ device@@ ).@@ check@@ For@@ Con@@ di@@ tion@@ (); assert@@ True@@ (@@ device@@ .@@ find@@ Object@@ (@@ list@@ View@@ Se@@ le@@ ctor@@ ).@@ exist@@ s()); int siz@@ e = device@@ .@@ find@@ Object@@ (@@ list@@ View@@ Se@@ le@@ ctor@@ )@@ .get@@ Ch@@ ild@@ Count@@ (); for (@@ int i = 0; i < size@@ ; i++) { android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ct@@ or s@@ amp@@ le@@ Device@@ Se@@ lec@@ tion = list@@ View@@ Se@@ le@@ ctor@@ .@@ ch@@ ild@@ Se@@ le@@ ctor@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ index@@ (i@@ )); android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Object@@ 2 s@@ amp@@ le@@ Device@@ Ad@@ min@@ Check@@ bo@@ x = com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ U@@ i@@ A@@ ut@@ o@@ mat@@ or@@ P@@ lu@@ s.@@ find@@ Object@@ By@@ Re@@ l@@ ative@@ (in@@ strument@@ ation@@ , android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ c@@ la@@ z@@ z@@ ("@@ android.@@ widget@@ .@@ Check@@ B@@ o@@ x@@ "), android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ text@@ (@@ ad@@ min@@ Po@@ lic@@ y@@ Name@@ ), android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ B@@ y.@@ res@@ (@@ Res@@ .@@ AN@@ D@@ RO@@ ID@@ _@@ L@@ I@@ ST_@@ RE@@ S@@ )); if (s@@ amp@@ le@@ Device@@ Ad@@ min@@ Check@@ bo@@ x != null@@ ) { boolean is@@ Check@@ ed = s@@ amp@@ le@@ Device@@ Ad@@ min@@ Check@@ bo@@ x.@@ is@@ Check@@ ed@@ (); return is@@ Check@@ ed@@ ; } } return false@@ ; }
private void re@@ create@@ Sim@@ Info@@ D@@ B@@ (android.@@ dat@@ ab@@ ase.@@ C@@ ur@@ s@@ or c@@ , android.@@ dat@@ ab@@ ase.@@ s@@ q@@ li@@ te@@ .@@ S@@ Q@@ Li@@ te@@ Dat@@ ab@@ as@@ e d@@ b@@ , java.lang.String[] pro@@ j@@ ) { if (com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ V@@ D@@ B@@ G) { c = d@@ b.@@ qu@@ er@@ y@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ SI@@ M@@ IN@@ F@@ O@@ _@@ TA@@ B@@ LE@@ , pro@@ j@@ , null@@ , null@@ , null@@ ); com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ log@@ ((@@ (("@@ S@@ Q@@ Li@@ te@@ mp@@ t b@@ e@@ for@@ e up@@ grad@@ ing " + (com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ SI@@ M@@ IN@@ F@@ O@@ _@@ TA@@ B@@ LE@@ )) + " to@@ t@@ al n@@ umb@@ er of row@@ s@@ : ") + (c@@ .get@@ Count@@ ()))); c.@@ close(); } c = d@@ b.@@ qu@@ er@@ y@@ (com.android.@@ provid@@ er@@ s.@@ telephony.@@ Telephony@@ Provid@@ er.@@ SI@@ M@@ IN@@ F@@ O@@ _@@ TA@@ B@@ LE@@ , null@@ , null@@ , null@@ , null@@ , null@@ , null@@ , null@@ ); if (@@ 0 != null@@ ) { m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ (); } m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ (); m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ (); m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ (); m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ D@@ B@@ G) { m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ D@@ B@@ G) { m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ D@@ B@@ G) { m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ D@@ B@@ G) { m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ D@@ B@@ G) { m@@ Telephony@@ Provid@@ er.@@ re@@ le@@ ase@@ (); } }
protected int eng@@ ine@@ Do@@ F@@ in@@ al@@ (@@ byte@@ [] input@@ , int input@@ Offset@@ , int input@@ L@@ en@@ , byte@@ [] output@@ , int output@@ Offset@@ ) throw@@ s javax.@@ c@@ rypto.@@ B@@ ad@@ P@@ add@@ ing@@ Exception, javax.@@ c@@ rypto.@@ Illegal@@ Block@@ Size@@ Exception { if ((@@ output@@ O@@ ff@@ set + (@@ eng@@ ine@@ Get@@ Output@@ Size@@ (input@@ L@@ en@@ ))) > (@@ out@@ pu@@ t.@@ length@@ )) { throw new javax.@@ c@@ rypto.@@ Short@@ Buffer@@ Exception@@ ("@@ input@@ "); } if (in@@ put@@ Extra@@ != null@@ ) { b@@ O@@ u@@ t.@@ write@@ (input@@ , input@@ Offset@@ , input@@ L@@ en@@ ); } if ((@@ c@@ iph@@ er@@ ) instanceof org.@@ bo@@ un@@ c@@ y@@ cast@@ le.@@ c@@ rypto.@@ eng@@ in@@ es.@@ RS@@ AB@@ lin@@ d@@ ed@@ En@@ gin@@ e) { if ((@@ b@@ O@@ u@@ t.@@ size@@ ()) > ((@@ c@@ iph@@ er.get@@ Input@@ Block@@ Size@@ ()) + 1@@ )) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ("@@ C@@ au@@ g@@ h@@ t m@@ u@@ ch dat@@ a for RS@@ A b@@ loc@@ k } } else { if ((@@ b@@ O@@ u@@ t.@@ size@@ ()) > (c@@ iph@@ er.get@@ Input@@ Block@@ Size@@ ())) { throw new java.lang.@@ Array@@ Index@@ Out@@ Of@@ B@@ ound@@ s@@ Exception@@ ("@@ C@@ au@@ g@@ h@@ t m@@ u@@ ch dat@@ a for RS@@ A b@@ loc@@ k } } byte@@ [] out = get@@ Output@@ (); for (@@ int i = 0; i != (@@ out.@@ length); i++) { output@@ [@@ (@@ output@@ O@@ ff@@ set + i@@ )@@ ] = out@@ [i@@ ]; } return out.@@ length@@ ; }
private void handle@@ In@@ ject@@ S@@ m@@ s(@@ android.os.@@ As@@ ync@@ Res@@ ult ar@@ ) { int result@@ ; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ S@@ ms@@ Dis@@ p@@ atch@@ er@@ s@@ Control@@ ler.@@ S@@ ms@@ In@@ jec@@ tion@@ Call@@ b@@ ac@@ k = null@@ ; android.@@ telephony.@@ S@@ ms@@ Mess@@ age s@@ m@@ s = null@@ ; try { call@@ b@@ ac@@ k = ((@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ S@@ ms@@ Dis@@ p@@ atch@@ er@@ s@@ Control@@ ler.@@ S@@ ms@@ In@@ jec@@ tion@@ Callback@@ ) (@@ ar.@@ user@@ Ob@@ j@@ )); s@@ m@@ s = (android.@@ telephony.@@ S@@ ms@@ Message@@ ) (@@ ar.@@ result@@ )); if (s@@ m@@ s == null@@ ) { result = android.@@ provider.@@ Telephon@@ y.@@ S@@ m@@ s.@@ Intent@@ s.@@ RE@@ S@@ UL@@ T_@@ S@@ M@@ S_@@ G@@ EN@@ ER@@ IC@@ _@@ ER@@ RO@@ R@@ ; } else { result = dis@@ p@@ atch@@ Message@@ (s@@ m@@ s.@@ m@@ W@@ r@@ app@@ ed@@ S@@ ms@@ Message@@ ); } } catch (java.lang.@@ Runtime@@ Exception ex@@ ) { log@@ e@@ ("@@ handle@@ In@@ ject@@ S@@ ms@@ : dis@@ p@@ atch@@ ing mess@@ age ex@@ ); result = android.@@ provider.@@ Telephon@@ y.@@ S@@ m@@ s.@@ Intent@@ s.@@ RE@@ S@@ UL@@ T_@@ S@@ M@@ S_@@ G@@ EN@@ ER@@ IC@@ _@@ ER@@ RO@@ R@@ ; } if (c@@ all@@ b@@ ac@@ k != null@@ ) { call@@ back@@ .@@ on@@ S@@ ms@@ In@@ jec@@ ted@@ Result@@ (s@@ m@@ s, result@@ ); } }
@org.junit.Test @@@ android.@@ support.@@ test.@@ fil@@ ter@@ s.@@ S@@ m@@ all@@ Test public void test@@ Up@@ date@@ I@@ cc@@ C@@ ard@@ Statu@@ s() { int phon@@ e@@ Id = 0; m@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ mC@@ ard@@ State = I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ AB@@ S@@ EN@@ T@@ ; m@@ U@@ ic@@ c@@ S@@ lo@@ t.@@ update@@ (m@@ Sim@@ ul@@ ated@@ Command@@ s, m@@ I@@ cc@@ C@@ ard@@ Statu@@ s, phon@@ e@@ Id@@ ); ve@@ r@@ if@@ y@@ (m@@ Sub@@ Info@@ Record@@ Up@@ dat@@ er, tim@@ es@@ (1@@ )).@@ update@@ In@@ ternal@@ I@@ cc@@ State@@ (@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ AB@@ S@@ EN@@ T@@ , null@@ , phon@@ e@@ Id@@ ); assert@@ Equal@@ s(@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ AB@@ S@@ EN@@ T@@ , m@@ U@@ ic@@ c@@ S@@ lo@@ t.get@@ C@@ ard@@ State@@ ()); assert@@ Equal@@ s@@ (@@ null@@ , m@@ U@@ ic@@ c@@ S@@ lo@@ t.get@@ U@@ ic@@ c@@ C@@ ard@@ ()); m@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ mC@@ ard@@ State = I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ P@@ RE@@ S@@ EN@@ T@@ ; m@@ U@@ ic@@ c@@ S@@ lo@@ t.@@ update@@ (m@@ Sim@@ ul@@ ated@@ Command@@ s, m@@ I@@ cc@@ C@@ ard@@ Statu@@ s, phon@@ e@@ Id@@ ); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Comp@@ onent@@ Factory@@ , tim@@ es@@ (1@@ )).@@ m@@ ake@@ U@@ ic@@ c@@ Pro@@ file@@ (@@ an@@ y@@ Object@@ (), e@@ q@@ (m@@ Sim@@ ul@@ ated@@ Command@@ s@@ ), e@@ q@@ (m@@ I@@ cc@@ C@@ ard@@ Statu@@ s@@ ), an@@ y@@ Int@@ (), an@@ y@@ Object@@ ()); assert@@ Equal@@ s(@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ P@@ RE@@ S@@ EN@@ T@@ , m@@ U@@ ic@@ c@@ S@@ lo@@ t.get@@ C@@ ard@@ State@@ ()); assert@@ True@@ ((@@ (m@@ U@@ ic@@ c@@ C@@ ard@@ ()) != null@@ )); m@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ mC@@ ard@@ State = I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ AB@@ S@@ EN@@ T@@ ; m@@ U@@ ic@@ c@@ S@@ lo@@ t.@@ update@@ (m@@ Sim@@ ul@@ ated@@ Command@@ s, m@@ I@@ cc@@ C@@ ard@@ Statu@@ s, phon@@ e@@ Id@@ ); ve@@ r@@ if@@ y@@ (m@@ Sub@@ Info@@ Record@@ Up@@ dat@@ er, tim@@ es@@ (@@ 2@@ )).@@ update@@ In@@ ternal@@ I@@ cc@@ C@@ ard@@ Constants.@@ IN@@ T@@ ENT_@@ V@@ AL@@ U@@ E_@@ IC@@ C@@ _@@ AB@@ S@@ EN@@ T@@ , null@@ , phon@@ e@@ Id@@ ); ve@@ r@@ if@@ y@@ (m@@ U@@ ic@@ c@@ Pro@@ file@@ , tim@@ es@@ (1@@ )).@@ dis@@ po@@ se@@ (); assert@@ Equal@@ s(@@ I@@ cc@@ C@@ ard@@ Statu@@ s.@@ C@@ ard@@ State.@@ C@@ AR@@ D@@ STATE_@@ AB@@ S@@ EN@@ T@@ , m@@ U@@ ic@@ c@@ S@@ lo@@ t.get@@ C@@ ard@@ State@@ ()); assert@@ Equal@@ s@@ (@@ null@@ , m@@ U@@ ic@@ c@@ S@@ lo@@ t.get@@ U@@ ic@@ c@@ C@@ ard@@ ()); }
@java.lang.Override public void on@@ T@@ ab@@ Changed@@ (java.lang.String t@@ ab@@ Id@@ ) { final int s@@ lo@@ t@@ Id = java.lang.Integ@@ er.@@ parse@@ Int@@ (@@ t@@ ab@@ Id@@ ); mS@@ i@@ r = m@@ Se@@ le@@ ct@@ able@@ Sub@@ Info@@ s.get@@ (s@@ lo@@ t@@ Id@@ ); update@@ Phone@@ Info@@ s(); update@@ Pre@@ ference@@ (@@ true@@ ); m@@ Telephony@@ Manager.@@ list@@ en@@ (m@@ Phone@@ State@@ Listener@@ , ((@@ (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ DA@@ TA@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ )) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ))); update@@ Data@@ State@@ (); update@@ Network@@ Type@@ (); }
private void update@@ Im@@ s@@ Reg@@ is@@ tr@@ ation@@ State@@ () { boolean is@@ Im@@ s@@ Reg@@ ister@@ ed = m@@ Telephony@@ Manager.@@ is@@ Im@@ s@@ Reg@@ ister@@ ed@@ (m@@ S@@ ir@@ .get@@ Sub@@ s@@ cription@@ Id@@ ()); set@@ S@@ um@@ m@@ ary@@ Text@@ (com.android.@@ setting@@ s.@@ device@@ in@@ f@@ o.@@ Sim@@ Statu@@ s.@@ KE@@ Y_@@ I@@ M@@ S@@ _RE@@ G@@ IS@@ TR@@ AT@@ ION@@ _@@ STA@@ TE@@ , m@@ Res@@ .get@@ String@@ ((@@ is@@ Im@@ s@@ Reg@@ ister@@ ed ? R.@@ str@@ ing.@@ im@@ s@@ _@@ reg@@ _@@ statu@@ s@@ _@@ register@@ ed : R.@@ str@@ ing.@@ im@@ s@@ _@@ reg@@ _@@ statu@@ s@@ _@@ not@@ _@@ register@@ ed@@ ))); }
static void load@@ All@@ Cont@@ act@@ s(@@ android.content.@@ Context context@@ , android.os.@@ Handle@@ r hand@@ ler@@ ) { if (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Utils.@@ V@@ ) { android.util.Log.@@ v@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Utils.@@ TAG, "@@ N@@ e@@ ed@@ ed@@ "); } java.lang.String[] pro@@ jec@@ tion = new java.lang.String@@ []{ android.@@ provider.@@ Cont@@ act@@ s@@ Con@@ tr@@ ac@@ t.@@ Data.@@ C@@ ON@@ TA@@ C@@ T_@@ ID@@ , android.@@ provider.@@ Cont@@ act@@ s@@ Con@@ tr@@ ac@@ t.@@ Data.@@ DA@@ TA@@ 1, android.@@ provider.@@ Cont@@ act@@ s@@ Con@@ tr@@ ac@@ t.@@ Data.@@ M@@ I@@ ME@@ TYP@@ E }; com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Utils.@@ s@@ To@@ t@@ al@@ Cont@@ act@@ s = com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Utils.@@ f@@ et@@ ch@@ And@@ Set@@ Cont@@ act@@ s(@@ context@@ , hand@@ ler@@ , pro@@ jec@@ tion@@ , null@@ , true@@ ); if ((@@ com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Utils.@@ s@@ To@@ t@@ al@@ Cont@@ act@@ s) < 0) { com.android.@@ bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Utils.@@ s@@ To@@ t@@ al@@ Cont@@ act@@ s = 0; return@@ ; } hand@@ ler.@@ send@@ Message@@ (@@ hand@@ ler.@@ ob@@ t@@ ain@@ Message@@ (@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ LO@@ A@@ D_@@ C@@ ON@@ TA@@ C@@ T@@ S@@ )); }
@java.lang.Override protected void set@@ Current@@ User@@ (@@ int user@@ Id@@ ) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ Bluetooth@@ P@@ b@@ ap@@ Service.@@ TAG, (("@@ set@@ Current@@ User@@ (@@ " + user@@ Id@@ ) + "@@ )@@ ")); android.os.@@ User@@ Manager user@@ Manager = android.os.@@ User@@ Manager.@@ get@@ (get@@ Application@@ Context@@ ()); if (@@ user@@ Manager.@@ is@@ User@@ Un@@ lock@@ ed@@ (@@ user@@ Id@@ )) { set@@ User@@ Un@@ lock@@ ed@@ (@@ user@@ Id@@ ); } }
public static void main@@ (@@ java.lang.String[] arg@@ s) throw@@ s java.lang.Exception { java.lang.System.@@ load@@ Library@@ (@@ arg@@ s@@ [0@@ ]@@ ); ar@@ t.@@ Local@@ s.@@ En@@ able@@ Access@@ (); Main.@@ run@@ Set@@ (); }
public static int get@@ Sign@@ able@@ Image@@ Size@@ (@@ byte@@ [] data@@ ) throw@@ s java.lang.Exception { if (!(@@ java.util.Arrays.@@ equals(@@ java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ data@@ , 0, 8@@ ), "@@ AN@@ D@@ RO@@ ID@@ !@@ "@@ .get@@ Bytes@@ ("@@ US@@ -@@ A@@ S@@ C@@ I@@ I@@ "@@ )@@ ))) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Im@@ age im@@ age he@@ ader@@ : mis@@ s@@ ing m@@ ag@@ i@@ c } java.nio.Byte@@ Buffer im@@ age = java.nio.Byte@@ Buff@@ er.@@ w@@ rap@@ (@@ data@@ ); im@@ age.@@ or@@ der@@ (@@ java.nio.Byte@@ Or@@ d@@ er.@@ L@@ I@@ T@@ T@@ T@@ L@@ E_@@ END@@ I@@ AN@@ ); im@@ ag@@ e.get@@ Long@@ (); int k@@ er@@ ne@@ l@@ Siz@@ e = im@@ ag@@ e.get@@ Int@@ (); im@@ ag@@ e.get@@ Int@@ (); int ram@@ d@@ s@@ k@@ Siz@@ e = im@@ ag@@ e.get@@ Int@@ (); im@@ ag@@ e.get@@ Int@@ (); im@@ ag@@ e.get@@ Int@@ (); im@@ ag@@ e.get@@ Int@@ (); im@@ ag@@ e.get@@ Int@@ (); im@@ ag@@ e.get@@ Long@@ (); int p@@ age@@ Siz@@ e = im@@ ag@@ e.get@@ Int@@ (); int l@@ eng@@ th = ((@@ p@@ age@@ Siz@@ e + ((((@@ k@@ er@@ ne@@ l@@ Siz@@ e + p@@ age@@ Siz@@ e) - 1@@ ) / p@@ age@@ Siz@@ e) * p@@ age@@ Size@@ )) + ((((@@ ram@@ d@@ s@@ k@@ Siz@@ e + p@@ age@@ Siz@@ e) - 1@@ ) / p@@ age@@ Siz@@ e) * p@@ age@@ Size@@ )) + ((((@@ sec@@ ond@@ Siz@@ e + p@@ age@@ Siz@@ e) - 1@@ ) / p@@ age@@ Siz@@ e) * p@@ age@@ Siz@@ e); int he@@ ader@@ Ver@@ sion = im@@ ag@@ e.get@@ Int@@ (); if (@@ he@@ ader@@ Ver@@ sion > 0) { im@@ ag@@ e.get@@ Int@@ (); byte@@ [] te@@ mp@@ Byte@@ Ar@@ ra@@ y = new byte@@ [@@ 10@@ 24@@ ]; im@@ ag@@ e.get@@ (@@ te@@ mp@@ ByteArray@@ , 0, 16@@ ); im@@ ag@@ e.get@@ (@@ te@@ mp@@ ByteArray@@ , 0, 5@@ 12@@ ); im@@ ag@@ e.get@@ (@@ te@@ mp@@ ByteArray@@ , 0, 32@@ ); im@@ ag@@ e.get@@ (@@ te@@ mp@@ ByteArray@@ , 0, 10@@ 24@@ ); int re@@ co@@ ver@@ y@@ D@@ t@@ bo@@ L@@ eng@@ th = im@@ ag@@ e.get@@ Int@@ (); l@@ eng@@ th +@@ = (((@@ re@@ co@@ ver@@ y@@ D@@ t@@ bo@@ L@@ eng@@ th + p@@ age@@ Siz@@ e) - 1@@ ) / p@@ age@@ Siz@@ e) * p@@ age@@ Size@@ ; } l@@ eng@@ th = (((@@ l@@ eng@@ th + p@@ age@@ Siz@@ e) - 1@@ ) / p@@ age@@ Siz@@ e) / p@@ age@@ Siz@@ e) - 1@@ ) / p@@ age@@ Siz@@ e) - 1@@ ) / p@@ age@@ Siz@@ e) * p@@ age@@ Siz@@ e) * p@@ age@@ Size@@ ; if (@@ l@@ eng@@ th <@@ = 0) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ N@@ o im@@ age he@@ ader@@ : in@@ va@@ li@@ d l@@ eng@@ th } return length@@ ; }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public static android.net.@@ Network@@ Stat@@ s java@@ Read@@ Network@@ Stat@@ s@@ D@@ eta@@ il@@ (@@ java.io.File d@@ eta@@ il@@ Path@@ , int li@@ m@@ it@@ U@@ id, java.lang.String[] li@@ m@@ it@@ I@@ fa@@ ces@@ , int li@@ m@@ it@@ T@@ ag@@ ) throw@@ s java.io.IOException { final android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ Thread@@ Po@@ lic@@ y s@@ av@@ ed@@ Po@@ lic@@ y = android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ al@@ low@@ Thread@@ Dis@@ k@@ Read@@ s(); final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (), 24@@ ); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); int id@@ x = 1; int las@@ t@@ Id@@ x = 1; com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er read@@ er = null@@ ; try { read@@ er = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er@@ (@@ new java.io.File@@ InputStream@@ (d@@ eta@@ il@@ Path@@ )); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); while (@@ read@@ er.@@ has@@ M@@ ore@@ Data@@ ()) { id@@ x = read@@ er.@@ next@@ Int@@ (); if (@@ id@@ x != (@@ las@@ t@@ Id@@ x + 1@@ )) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ ((@@ (("@@ In@@ va@@ li@@ d id@@ x@@ =@@ " + id@@ x@@ ) + " a@@ f@@ ter las@@ t@@ Id@@ x@@ =@@ ") + las@@ t@@ Id@@ x@@ )); } las@@ t@@ Id@@ x = id@@ x@@ ; e@@ n@@ try@@ .@@ if@@ ac@@ e = read@@ er.@@ next@@ String@@ (); e@@ n@@ try@@ .@@ t@@ a@@ g = k@@ er@@ ne@@ l@@ To@@ T@@ ag@@ (@@ read@@ er.@@ next@@ String@@ ()); e@@ n@@ try@@ .@@ u@@ id = read@@ er.@@ next@@ Int@@ (); e@@ n@@ try@@ .@@ set = read@@ er.@@ next@@ Int@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); if ((((@@ li@@ m@@ it@@ Iface@@ s == null@@ ) || (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Array@@ Utils.@@ contain@@ s(@@ li@@ m@@ it@@ I@@ fa@@ ces@@ , e@@ n@@ try@@ .@@ if@@ ace@@ ))) && ((@@ li@@ m@@ it@@ U@@ id == (android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ )) || (@@ li@@ m@@ it@@ U@@ id == (@@ e@@ n@@ try@@ .@@ u@@ id@@ )@@ ))) && ((@@ li@@ m@@ it@@ T@@ a@@ g == (android.net.@@ Network@@ Stat@@ s@@ .@@ t@@ a@@ g == (android.net.@@ Network@@ Stat@@ s@@ .@@ t@@ ag@@ )@@ ))) { st@@ at@@ s.@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); } read@@ er.@@ fin@@ is@@ h@@ Line@@ (); } } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception e) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ (("@@ Er@@ ror par@@ s@@ ing id@@ x " + id@@ x@@ ), e); } final@@ l@@ y { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (@@ read@@ y@@ ); } return st@@ at@@ s; }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public android.net.@@ Network@@ Stat@@ s read@@ Network@@ Stat@@ s@@ Iface@@ De@@ v@@ () throw@@ s java.io.IOException { final android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ Thread@@ Po@@ lic@@ y s@@ av@@ ed@@ Po@@ lic@@ y = android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ al@@ low@@ Thread@@ Dis@@ k@@ Read@@ s(); final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (), 6@@ ); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); java.io.@@ Buffer@@ ed@@ Read@@ er read@@ er = null@@ ; try { read@@ er = new java.io.@@ Buffer@@ ed@@ Read@@ er@@ (@@ new java.io.File@@ Read@@ er@@ (m@@ Stat@@ s@@ Iface@@ De@@ v@@ )); read@@ er.@@ read@@ Line@@ (); java.lang.String line@@ ; while ((@@ lin@@ e = read@@ er.@@ read@@ Line@@ ()) != null@@ ) { java.lang.String[] value@@ s = lin@@ e.@@ tr@@ im@@ ().@@ s@@ pli@@ t@@ ("@@ \@@ :@@ ?@@ \@@ s@@ +@@ "); e@@ n@@ try@@ .@@ if@@ ac@@ e = valu@@ es@@ [0@@ ]; e@@ n@@ try@@ .@@ u@@ id = android.net.@@ Network@@ Stat@@ s@@ .@@ U@@ ID@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ set = android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = android.net.@@ Network@@ Stat@@ s@@ .@@ TAG@@ _N@@ ON@@ E@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (@@ valu@@ es@@ [@@ 1@@ ]@@ ); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (@@ valu@@ es@@ [@@ 2@@ ]@@ ); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (@@ valu@@ es@@ [@@ 9@@ ]@@ ); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (@@ valu@@ es@@ [@@ 10@@ ]@@ ); st@@ at@@ s.@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); } } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception | java.lang.@@ Number@@ Format@@ Exception e) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ ("@@ Er@@ ror par@@ s@@ ing st@@ at@@ s@@ ", e); } final@@ l@@ y { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (@@ read@@ er@@ ); android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ set@@ Thread@@ Po@@ lic@@ y@@ (s@@ av@@ ed@@ Po@@ lic@@ y@@ ); } return st@@ at@@ s; }
public android.net.@@ Network@@ Stat@@ s read@@ Network@@ Stat@@ s@@ D@@ eta@@ il@@ () throw@@ s java.io.IOException { return read@@ Network@@ Stat@@ s@@ D@@ eta@@ il@@ (@@ android@@ .@@ int@@ er@@ n@@ al.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ , null@@ , android.os.@@ Network@@ Stat@@ s.@@ TAG@@ _@@ AL@@ L@@ , null@@ ); }
public android.net.@@ Network@@ Stat@@ s read@@ Network@@ Stat@@ s@@ D@@ eta@@ il@@ (@@ int li@@ m@@ it@@ U@@ id, java.lang.String[] li@@ m@@ it@@ I@@ fa@@ ces@@ , int li@@ m@@ it@@ T@@ ag@@ , android.net.@@ Network@@ Stat@@ s las@@ t@@ Stat@@ s) throw@@ s java.io.IOException { return read@@ Network@@ Stat@@ s@@ D@@ eta@@ il@@ In@@ ternal@@ (@@ li@@ m@@ it@@ U@@ id, li@@ m@@ it@@ I@@ fa@@ ces@@ , li@@ m@@ it@@ T@@ ag@@ , las@@ t@@ Stat@@ s); }
@org.junit.Test public void test@@ D@@ ouble@@ C@@ lat@@ Ac@@ count@@ ing@@ 1@@ 00@@ M@@ B@@ Do@@ wn@@ load@@ () throw@@ s java.lang.Exception { long app@@ R@@ x@@ Bytes@@ B@@ e@@ for@@ e = 32@@ 8@@ 6@@ 8@@ 4@@ 0@@ 2@@ 9@@ L@@ ; long app@@ R@@ x@@ Bytes@@ A@@ f@@ ter = 4@@ 3@@ 9@@ 2@@ 3@@ 7@@ 4@@ 7@@ 8@@ L@@ ; assert@@ Equal@@ s("@@ S@@ EC@@ T tra@@ f@@ fi@@ c sho@@ ul@@ d b@@ e ~@@ 1@@ 00@@ M@@ B 1@@ 10@@ 5@@ 3@@ 4@@ 9@@ , (@@ app@@ R@@ x@@ Bytes@@ A@@ f@@ ter - app@@ R@@ x@@ Bytes@@ B@@ e@@ for@@ e@@ )); long ro@@ ot@@ R@@ x@@ Bytes@@ B@@ e@@ for@@ e = 1@@ 3@@ 9@@ 4@@ 0@@ 1@@ L@@ ; long ro@@ ot@@ R@@ x@@ Bytes@@ A@@ f@@ ter = 1@@ 3@@ 9@@ 8@@ 6@@ 3@@ 4@@ L@@ ; assert@@ Equal@@ s("@@ S@@ EC@@ C@@ lat@@ Ac@@ count@@ ing@@ 1@@ 00@@ ", "@@ w@@ lan@@ 0@@ ", "@@ w@@ lan@@ 0@@ "); android.net.@@ Network@@ Stat@@ s st@@ at@@ s; st@@ at@@ s = parse@@ D@@ eta@@ ile@@ d@@ Stat@@ s(@@ R.@@ raw@@ .@@ xt@@ _@@ q@@ t@@ ag@@ u@@ id@@ _@@ w@@ ith@@ _@@ c@@ lat@@ _@@ 1@@ 00@@ m@@ b@@ _@@ do@@ wn@@ load@@ _@@ b@@ e@@ for@@ e); st@@ at@@ s.@@ app@@ ly@@ 4@@ 6@@ 4@@ x@@ lat@@ Ad@@ j@@ ust@@ ment@@ s(@@ st@@ ack@@ ed@@ Iface@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Factory@@ Test@@ .@@ assert@@ Stat@@ s@@ E@@ n@@ try@@ (@@ st@@ at@@ s, "@@ v@@ 4@@ -@@ w@@ lan@@ 0@@ ", 10@@ 6@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D@@ , 0, app@@ R@@ x@@ Bytes@@ B@@ e@@ for@@ e@@ , 5@@ 1@@ 99@@ 8@@ 7@@ 2@@ L); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Factory@@ Test@@ .@@ assert@@ Stat@@ s@@ E@@ n@@ try@@ (@@ st@@ at@@ s, "@@ w@@ lan@@ 0@@ ", 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ B@@ e@@ for@@ e@@ , 5@@ 1@@ 99@@ 8@@ 7@@ 2@@ L); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Factory@@ Test@@ .@@ assert@@ Stat@@ s@@ E@@ n@@ try@@ (@@ st@@ at@@ s, "@@ w@@ lan@@ 0@@ ", 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ B@@ e@@ for@@ e@@ , 6@@ 4@@ 7@@ 8@@ 8@@ 8@@ 8@@ 8@@ 8@@ 8@@ 8@@ 8@@ 8@@ L); st@@ at@@ s = parse@@ D@@ eta@@ ile@@ d@@ Stat@@ s(@@ R.@@ raw@@ .@@ xt@@ _@@ q@@ t@@ ag@@ u@@ id@@ _@@ w@@ ith@@ _@@ 1@@ 00@@ m@@ b@@ _@@ do@@ wn@@ load@@ _@@ a@@ f@@ ter@@ ); st@@ at@@ s.@@ app@@ ly@@ 4@@ 6@@ 4@@ 6@@ 4@@ 6@@ 4@@ x@@ lat@@ Ad@@ j@@ ust@@ ment@@ s(@@ st@@ ack@@ ed@@ Iface@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Factory@@ Test@@ .@@ assert@@ Stat@@ s@@ E@@ n@@ try@@ (@@ st@@ at@@ s, "@@ v@@ 4@@ -@@ w@@ lan@@ 0@@ ", 10@@ 6@@ , com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ F@@ O@@ RE@@ G@@ RO@@ UN@@ D@@ , 0, app@@ R@@ x@@ Bytes@@ , 0, app@@ R@@ x@@ Bytes@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Factory@@ Test@@ .@@ int@@ er@@ n@@ al.@@ net.@@ Network@@ Stat@@ s@@ Factory@@ Test@@ .@@ assert@@ True@@ (@@ st@@ at@@ s, 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ SE@@ T_@@ DE@@ FA@@ UL@@ T@@ , 0, ro@@ ot@@ R@@ x@@ Bytes@@ B@@
private android.net.@@ Network@@ Stat@@ s get@@ Network@@ Stat@@ s@@ U@@ id@@ D@@ eta@@ il@@ Lock@@ ed@@ () throw@@ s android.os.@@ Remote@@ Exception { final android.net.@@ Network@@ Stat@@ s u@@ id@@ S@@ n@@ ap@@ sho@@ t = m@@ Network@@ Manager.@@ get@@ Network@@ Stat@@ s@@ U@@ id@@ D@@ eta@@ il@@ (android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L); final android.net.@@ Network@@ Stat@@ s t@@ ether@@ S@@ n@@ ap@@ sho@@ t = get@@ Network@@ Stat@@ s@@ T@@ ether@@ ing@@ (android.net.@@ Network@@ Stat@@ s.@@ STAT@@ S@@ _P@@ ER_@@ U@@ ID@@ ); u@@ id@@ S@@ n@@ ap@@ sho@@ t.@@ com@@ b@@ ine@@ All@@ Valu@@ es@@ (@@ t@@ ether@@ S@@ n@@ ap@@ sho@@ t@@ ); final android.@@ telephony.@@ Telephony@@ Manager telephon@@ y@@ Manager = ((@@ android.@@ telephony.@@ Telephony@@ Manager@@ ) (m@@ Contex@@ t.get@@ System@@ Service@@ (@@ Context.@@ TE@@ LE@@ P@@ H@@ ON@@ Y@@ _S@@ ER@@ V@@ IC@@ E@@ ))); final android.net.@@ Network@@ Stat@@ s v@@ t@@ Stat@@ s = telephon@@ y@@ Manager.@@ get@@ V@@ t@@ Data@@ U@@ s@@ age@@ (android.net.@@ Network@@ Stat@@ s.@@ STAT@@ S@@ _P@@ ER_@@ U@@ ID@@ ); if (@@ v@@ t@@ Stat@@ s != null@@ ) { u@@ id@@ S@@ n@@ ap@@ sho@@ t.@@ com@@ b@@ ine@@ All@@ Valu@@ es@@ (@@ v@@ t@@ Stat@@ s); } u@@ id@@ S@@ n@@ ap@@ sho@@ t.@@ com@@ b@@ ine@@ All@@ Valu@@ es@@ (m@@ U@@ id@@ Oper@@ ation@@ s); u@@ id@@ S@@ n@@ ap@@ sho@@ t.@@ app@@ ly@@ 4@@ 6@@ 4@@ x@@ lat@@ Ad@@ j@@ ust@@ ment@@ s@@ (m@@ Stack@@ ed@@ I@@ fa@@ ces@@ ); return u@@ id@@ S@@ n@@ ap@@ sho@@ t@@ ; }
private void re@@ cord@@ S@@ n@@ ap@@ sho@@ t@@ Lock@@ ed@@ (@@ long current@@ Tim@@ e) throw@@ s android.os.@@ Remote@@ Exception { final android.net.@@ Network@@ Stat@@ s u@@ id@@ S@@ n@@ ap@@ sho@@ t = get@@ Network@@ Stat@@ s@@ U@@ id@@ D@@ eta@@ il@@ Lock@@ ed@@ (); final android.net.@@ Network@@ Stat@@ s xt@@ S@@ n@@ ap@@ sho@@ t = get@@ Network@@ Stat@@ s@@ X@@ t@@ (); final android.net.@@ Network@@ Stat@@ s de@@ v@@ S@@ n@@ ap@@ sho@@ t = m@@ Network@@ Manager.@@ get@@ Network@@ Stat@@ s@@ S@@ um@@ m@@ ary@@ De@@ v@@ (); final android.net.@@ Network@@ Stat@@ s t@@ ether@@ S@@ n@@ ap@@ sho@@ t = get@@ Network@@ Stat@@ s@@ T@@ ether@@ ing@@ (android.net.@@ Network@@ Stat@@ s.@@ STAT@@ S@@ _P@@ ER_@@ I@@ F@@ AC@@ E); xt@@ S@@ n@@ ap@@ sho@@ t.@@ com@@ b@@ ine@@ All@@ Valu@@ es@@ (@@ t@@ ether@@ S@@ n@@ ap@@ sho@@ t@@ ); de@@ v@@ S@@ n@@ ap@@ sho@@ t.@@ com@@ b@@ ine@@ All@@ Valu@@ es@@ (@@ t@@ ether@@ S@@ n@@ ap@@ sho@@ t@@ ); m@@ De@@ v@@ Record@@ er.@@ re@@ cord@@ S@@ n@@ ap@@ sho@@ t@@ Lock@@ ed@@ (@@ de@@ v@@ S@@ n@@ ap@@ sho@@ t@@ , m@@ Ac@@ tive@@ I@@ fa@@ ces@@ , null@@ , current@@ Time@@ ); m@@ X@@ t@@ Record@@ er.@@ re@@ cord@@ S@@ n@@ ap@@ sho@@ t@@ Lock@@ ed@@ (@@ xt@@ S@@ n@@ ap@@ sho@@ t@@ , m@@ Ac@@ tive@@ I@@ fa@@ ces@@ , null@@ , current@@ Time@@ ); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ V@@ p@@ n@@ Info@@ [] v@@ p@@ n@@ Ar@@ ra@@ y = m@@ Con@@ n@@ Manager.@@ get@@ All@@ V@@ p@@ n@@ Info@@ (); m@@ U@@ id@@ Record@@ er.@@ re@@ cord@@ S@@ n@@ ap@@ sho@@ t@@ Lock@@ ed@@ (@@ u@@ id@@ S@@ n@@ ap@@ sho@@ t@@ , m@@ Ac@@ tive@@ U@@ id@@ I@@ fa@@ ces@@ , v@@ p@@ n@@ Array@@ , current@@ Time@@ ); m@@ U@@ id@@ T@@ ag@@ Record@@ er.@@ re@@ cord@@ S@@ n@@ ap@@ sho@@ t@@ Lock@@ ed@@ (@@ u@@ id@@ S@@ n@@ ap@@ sho@@ t@@ , m@@ Ac@@ tive@@ U@@ id@@ I@@ fa@@ ces@@ , v@@ p@@ n@@ Array@@ , current@@ Time@@ ); m@@ Stat@@ s@@ Ob@@ ser@@ ver@@ s.@@ update@@ Stat@@ s(@@ xt@@ S@@ n@@ ap@@ sho@@ t@@ , u@@ id@@ S@@ n@@ ap@@ sho@@ t@@ , new android.util.@@ Array@@ Map@@ (m@@ Ac@@ tive@@ I@@ fa@@ ces@@ ), new android.util.@@ Array@@ Map@@ (m@@ Ac@@ tive@@ U@@ id@@ I@@ fa@@ ces@@ ), v@@ p@@ n@@ Array@@ , current@@ Time@@ ); }
public void app@@ ly@@ 4@@ 6@@ 4@@ x@@ lat@@ Ad@@ j@@ ust@@ ment@@ s(@@ java.util.Map@@ <java.lang.String, java.lang.String> st@@ ack@@ ed@@ I@@ fa@@ ces@@ ) { final android.net.@@ Network@@ Stat@@ s ad@@ j@@ ust@@ ment@@ s = new android.net.@@ Network@@ Stat@@ s(@@ 0, st@@ ack@@ ed@@ I@@ fa@@ ces@@ .@@ size@@ ()); android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = null@@ ; android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try ad@@ j@@ us@@ t = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (android.net.@@ Network@@ Stat@@ s.@@ I@@ F@@ AC@@ E_@@ AL@@ L@@ , 0, 0, 0, 0, 0, 0, 0@@ L@@ , 0@@ L@@ , 0@@ L@@ , 0@@ L); for (@@ int i = 0; i < (@@ siz@@ e); i++) { e@@ n@@ try = get@@ Valu@@ es@@ (i@@ , e@@ n@@ try@@ ); if (((@@ e@@ n@@ try@@ .@@ if@@ ace@@ ) == null@@ ) || (!(@@ e@@ n@@ try@@ .@@ if@@ ace@@ .@@ start@@ sWith@@ (android.net.@@ Network@@ Stat@@ s.@@ C@@ L@@ AT@@ D_@@ IN@@ TER@@ F@@ AC@@ E_@@ P@@ RE@@ FI@@ X@@ )@@ ))) { continue@@ ; } final java.lang.String b@@ ase@@ I@@ face = st@@ ack@@ ed@@ I@@ fa@@ ces@@ .get@@ (@@ e@@ n@@ try@@ .@@ if@@ ace@@ ); if (b@@ ase@@ I@@ face == null@@ ) { continue@@ ; } ad@@ j@@ ust@@ .@@ if@@ ac@@ e = b@@ ase@@ Iface@@ ; ad@@ j@@ us@@ t.@@ r@@ x@@ Byte@@ s = -@@ ((@@ e@@ n@@ try@@ .@@ r@@ x@@ Bytes@@ ) + ((@@ e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s) * (android.net.@@ Network@@ Stat@@ s.@@ IP@@ V@@ 4@@ V@@ 6@@ _@@ H@@ E@@ AD@@ ER_@@ DE@@ L@@ TA@@ ))); ad@@ j@@ us@@ t.@@ t@@ x@@ Byte@@ s = -@@ (@@ e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s); ad@@ j@@ us@@ t.@@ t@@ x@@ Pack@@ et@@ s = -@@ (@@ e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s); ad@@ j@@ ust@@ ment@@ s.@@ com@@ b@@ ine@@ Valu@@ es@@ (@@ ad@@ j@@ ust@@ ); e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = (@@ e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s) * (android.net.@@ Network@@ Stat@@ s.@@ IP@@ V@@ 4@@ V@@ 6@@ _@@ H@@ E@@ AD@@ ER_@@ DE@@ L@@ TA@@ ); ad@@ j@@ us@@ t.@@ r@@ x@@ Pack@@ et@@ s = -@@ (@@ e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s); ad@@ j@@ ust@@ ment@@ s.@@ com@@ b@@ ine@@ Valu@@ es@@ (@@ ad@@ j@@ ust@@ ); e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = (@@ e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s) * (android.net.@@ Network@@ Stat@@ s.@@ IP@@ V@@ 4@@ V@@ 4@@ V@@ 6@@ _@@ H@@ E@@ AD@@ ER_@@ DE@@ L@@ TA@@ ); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = (@@ e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s) * (android.net.@@ Network@@ Stat@@ s.@@ IP@@ V@@ 4@@ V@@ 6@@ _@@ H@@ E@@ AD@@ ER_@@ DE@@ L@@ TA@@ ); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = 0; e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = 0; e@@ n@@ try@@ .@@ o@@ per@@ ation@@ s = 0; com@@ b@@ ine@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); } com@@ b@@ ine@@ All@@ Valu@@ es@@ (@@ ad@@ j@@ ust@@ ment@@ s); }
public android.net.@@ Network@@ Stat@@ s read@@ Network@@ Stat@@ s@@ S@@ um@@ m@@ ary@@ De@@ v@@ () throw@@ s java.io.IOException { if (m@@ U@@ se@@ B@@ p@@ f@@ Stat@@ s) return read@@ Network@@ Stat@@ s@@ Iface@@ De@@ v@@ (); final android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ Thread@@ Po@@ lic@@ y s@@ av@@ ed@@ Po@@ lic@@ y = android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ al@@ low@@ Thread@@ Dis@@ k@@ Read@@ s(); final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (), 6@@ ); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er read@@ er = null@@ ; try { read@@ er = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er@@ (@@ new java.io.File@@ InputStream@@ (m@@ Stat@@ s@@ X@@ t@@ Iface@@ All@@ )); while (@@ read@@ er.@@ has@@ M@@ ore@@ Data@@ ()) { e@@ n@@ try@@ .@@ if@@ ac@@ e = read@@ er.@@ next@@ String@@ (); e@@ n@@ try@@ .@@ u@@ id = android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ set = android.net.@@ Network@@ Stat@@ s@@ .@@ SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = android.net.@@ Network@@ Stat@@ s@@ .@@ TAG@@ _N@@ ON@@ E@@ ; final boolean ac@@ tiv@@ e = (@@ read@@ er.@@ next@@ Int@@ ()) != 0; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); if (@@ ac@@ tive@@ ) { e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s +@@ = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s +@@ = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s +@@ = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s +@@ = read@@ er.@@ next@@ Long@@ (); } st@@ at@@ s.@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); } } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception | java.lang.@@ Number@@ Format@@ Exception e) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ ("@@ Er@@ ror par@@ s@@ ing st@@ at@@ s@@ ", e); } final@@ l@@ y { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (@@ read@@ er@@ ); android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ set@@ Thread@@ Po@@ lic@@ y@@ (s@@ av@@ ed@@ Po@@ lic@@ y@@ ); } return st@@ at@@ s; }
public android.net.@@ Network@@ Stat@@ s read@@ Network@@ Stat@@ s@@ S@@ um@@ m@@ ary@@ X@@ t@@ () throw@@ s java.io.IOException { if (m@@ U@@ se@@ B@@ p@@ f@@ Stat@@ s) return read@@ Network@@ Stat@@ s@@ Iface@@ De@@ v@@ (); final android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ Thread@@ Po@@ lic@@ y s@@ av@@ ed@@ Po@@ lic@@ y = android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ al@@ low@@ Thread@@ Dis@@ k@@ Read@@ s(); if (!(m@@ Stat@@ s@@ X@@ t@@ Iface@@ F@@ m@@ t.@@ exist@@ s@@ ())) return null@@ ; final android.net.@@ Network@@ Stat@@ s st@@ at@@ s = new android.net.@@ Network@@ Stat@@ s(@@ android.os.@@ System@@ C@@ lock@@ .@@ el@@ ap@@ sed@@ Re@@ al@@ time@@ (), 6@@ ); final android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try e@@ n@@ try = new android.net.@@ Network@@ Stat@@ s.@@ E@@ n@@ try@@ (); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er read@@ er = null@@ ; try { read@@ er = new com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ Pro@@ c@@ File@@ Read@@ er@@ (@@ new java.io.File@@ InputStream@@ (m@@ Stat@@ s@@ X@@ t@@ Iface@@ F@@ m@@ t@@ )); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); while (@@ read@@ er.@@ has@@ M@@ ore@@ Data@@ ()) { e@@ n@@ try@@ .@@ if@@ ac@@ e = read@@ er.@@ next@@ String@@ (); e@@ n@@ try@@ .@@ u@@ id = android.net.@@ Network@@ Stat@@ s.@@ U@@ ID@@ _@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ set = android.net.@@ Network@@ Stat@@ s.@@ SE@@ T_@@ AL@@ L@@ ; e@@ n@@ try@@ .@@ t@@ a@@ g = android.net.@@ Network@@ Stat@@ s.@@ TAG@@ _N@@ ON@@ E@@ ; e@@ n@@ try@@ .@@ r@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ r@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Byte@@ s = read@@ er.@@ next@@ Long@@ (); e@@ n@@ try@@ .@@ t@@ x@@ Pack@@ et@@ s = read@@ er.@@ next@@ Long@@ (); st@@ at@@ s.@@ add@@ Valu@@ es@@ (@@ e@@ n@@ try@@ ); read@@ er.@@ fin@@ is@@ h@@ Line@@ (); } } catch (java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception | java.lang.@@ Number@@ Format@@ Exception e) { throw new java.net.@@ Pro@@ to@@ col@@ Exception@@ ("@@ Er@@ ror par@@ s@@ ing st@@ at@@ s@@ ", e); } final@@ l@@ y { libcore.@@ io.@@ I@@ o@@ Utils.@@ close@@ Q@@ ui@@ et@@ ly@@ (@@ read@@ er@@ ); android.os.@@ Str@@ i@@ ct@@ Mod@@ e.@@ set@@ Thread@@ Po@@ lic@@ y@@ (s@@ av@@ ed@@ Po@@ lic@@ y@@ ); } return st@@ at@@ s; }
public void run() { int TA@@ R@@ GE@@ T = 4@@ 2@@ ; while (@@ continue@@ Bu@@ s@@ y@@ L@@ oo@@ p@@ ) { in@@ Bu@@ s@@ y@@ L@@ oo@@ p = true@@ ; } int i = 0; while ((@@ Main.@@ is@@ Inter@@ p@@ r@@ et@@ ed@@ ()) && (@@ i < 1@@ 0000@@ )) { Main.@@ en@@ su@@ re@@ J@@ it@@ Comp@@ ile@@ d@@ (@@ Main.@@ Int@@ .@@ class@@ , "@@ run@@ "); i@@ ++@@ ; } if (@@ Main.@@ has@@ J@@ it@@ ()) { boolean in@@ O@@ s@@ r = Main.@@ is@@ In@@ O@@ s@@ r@@ Code@@ ("@@ run@@ "); if ((@@ exp@@ ect@@ O@@ s@@ r@@ ) && (!@@ in@@ O@@ s@@ r@@ )) { throw new java.lang.@@ Error@@ ("@@ Un@@ able to b@@ e in O@@ S@@ R bu@@ t w@@ a@@ s not@@ .@@ "); } else if ((@@ !@@ (@@ exp@@ ect@@ O@@ s@@ r@@ )) && in@@ O@@ s@@ r@@ ) { throw new java.lang.@@ Error@@ ("@@ Un@@ able not to b@@ e in O@@ S@@ R bu@@ t w@@ as@@ .@@ "); } } Main.@@ re@@ port@@ Value@@ (@@ TA@@ R@@ GE@@ T@@ ); }
@org.junit.Test public void test@@ On@@ Set@@ Up@@ Adap@@ ter@@ Faile@@ d@@ () throw@@ s java.lang.Exception { java.io.File test@@ Adap@@ ter = new java.io.File@@ (m@@ Test@@ Dir@@ , ((@@ V@@ T@@ S@@ _N@@ AT@@ I@@ V@@ E_@@ TEST_@@ DI@@ R@@ ) + (@@ TEST_@@ H@@ AL@@ _@@ AD@@ AP@@ T@@ ER_@@ B@@ IN@@ AR@@ Y@@ ))); test@@ Adap@@ ter.@@ create@@ New@@ File@@ (); java.lang.String out@@ put = "@@ android.@@ h@@ ardwar@@ e.@@ f@@ oo@@ @@@ 1.@@ 1@@ :@@ I@@ F@@ oo@@ /@@ default@@ "; do@@ Return@@ (@@ output@@ ).@@ when@@ (m@@ Device@@ ).@@ exec@@ ute@@ Sh@@ ell@@ Command@@ (@@ java.lang.String@@ .@@ for@@ mat@@ (@@ L@@ I@@ ST_@@ H@@ AL@@ _C@@ M@@ D@@ , TEST_@@ H@@ AL@@ _P@@ AC@@ K@@ A@@ GE@@ )); mC@@ m@@ d@@ Util.@@ mC@@ m@@ d@@ Su@@ c@@ ces@@ s = false@@ ; try { m@@ Pre@@ par@@ er.@@ set@@ Up@@ (m@@ Device@@ , m@@ Build@@ Info@@ ); } catch (java.lang.@@ Runtime@@ Exception e) { assert@@ Equal@@ s("@@ C@@ au@@ g@@ h@@ t ad@@ ap@@ ter fa@@ ile@@ d@@ . e.get@@ Message@@ ()); return@@ ; } fail@@ (); }
@org.junit.Test public void test@@ On@@ Set@@ up@@ Adap@@ ter@@ Not@@ F@@ ound@@ () throw@@ s java.lang.Exception { try { m@@ Pre@@ par@@ er.@@ set@@ Up@@ (m@@ Device@@ , m@@ Build@@ Info@@ ); } catch (java.lang.@@ Runtime@@ Exception e) { assert@@ Equal@@ s@@ (("@@ Co@@ ul@@ d not fin@@ d ad@@ ap@@ ter@@ : " + (@@ TEST_@@ H@@ AL@@ _@@ AD@@ AP@@ T@@ ER_@@ B@@ IN@@ AR@@ Y@@ )), e.get@@ Message@@ ()); return@@ ; } fail@@ (); }
private void pu@@ sh@@ Adap@@ ter@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ I@@ Test@@ De@@ vice device@@ , java.lang.String b@@ it@@ n@@ ess@@ ) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception, java.io.IOException { com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ V@@ ts@@ Comp@@ ati@@ b@@ ili@@ ty@@ In@@ vo@@ cation@@ Hel@@ p@@ er in@@ vo@@ cation@@ Hel@@ p@@ er = create@@ V@@ ts@@ Hel@@ per@@ (); java.io.File ad@@ ap@@ ter@@ Di@@ r = new java.io.File@@ (in@@ vo@@ cation@@ Hel@@ p@@ er.get@@ Test@@ s@@ Dir@@ (), java.lang.String@@ .@@ for@@ mat@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ target@@ pre@@ p.@@ V@@ ts@@ H@@ al@@ Adap@@ ter@@ Pre@@ par@@ er.@@ V@@ T@@ S@@ _N@@ AT@@ I@@ V@@ E_@@ TEST_@@ DI@@ R@@ , b@@ it@@ n@@ ess@@ )); java.io.File ad@@ ap@@ ter = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ File@@ Util.@@ find@@ File@@ (@@ ad@@ ap@@ ter@@ Dir@@ , m@@ Adap@@ ter@@ B@@ inary@@ Name); if (@@ ad@@ ap@@ ter != null@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ i@@ ("@@ P@@ u@@ sh@@ ing %@@ s@@ ", m@@ Adap@@ ter@@ B@@ inary@@ Name); device@@ .@@ pu@@ sh@@ File@@ (@@ ad@@ ap@@ ter@@ , ((@@ java.lang.String@@ .@@ for@@ mat@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ target@@ pre@@ p.@@ V@@ ts@@ H@@ al@@ Adap@@ ter@@ Pre@@ par@@ er.@@ TA@@ R@@ GE@@ T_@@ N@@ AT@@ I@@ V@@ E_@@ TEST_@@ DI@@ R@@ , b@@ it@@ n@@ ess@@ )) + (m@@ Adap@@ ter@@ B@@ inary@@ Name@@ ))); } else { throw new java.lang.@@ RuntimeException(("@@ Co@@ ul@@ d not fin@@ d ad@@ ap@@ ter@@ : " + (m@@ Adap@@ ter@@ B@@ inary@@ Name@@ ))); } }
private void send@@ IP@@ v@@ 6@@ T@@ ether@@ Up@@ dat@@ es@@ (android.net.@@ Network@@ State up@@ str@@ eam@@ State@@ ) { ve@@ r@@ if@@ y@@ (m@@ IP@@ v@@ 6@@ T@@ ether@@ ing@@ Co@@ or@@ d@@ in@@ ator@@ , tim@@ es@@ (1@@ )).@@ add@@ Ac@@ tive@@ Do@@ wn@@ str@@ eam@@ (@@ arg@@ Th@@ at@@ (("@@ send@@ IP@@ v@@ 6@@ T@@ ether@@ ing s@@ m@@ )@@ : s@@ m.@@ lin@@ k@@ Properties@@ ().get@@ Interface@@ Name@@ ().@@ equal@@ s@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E@@ )), e@@ q@@ (@@ I@@ Control@@ s@@ T@@ ether@@ ing.@@ STATE_@@ TE@@ TH@@ ER@@ E@@ D@@ )); for (com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ T@@ ether@@ Interface@@ State@@ M@@ ach@@ in@@ e ti@@ s@@ m : m@@ T@@ ether@@ ing@@ Dependenc@@ ies@@ .get@@ IP@@ v@@ 6@@ Co@@ or@@ d@@ in@@ ator@@ No@@ t@@ if@@ y@@ List@@ ()) { android.net.@@ Network@@ State ip@@ v@@ 6@@ On@@ ly@@ State = com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ build@@ Mo@@ b@@ ile@@ U@@ ps@@ tr@@ eam@@ State@@ (@@ false@@ , true@@ , false@@ ); ti@@ s@@ m.@@ send@@ Message@@ (@@ T@@ ether@@ Interface@@ State@@ M@@ ach@@ in@@ e.@@ C@@ M@@ D_@@ IP@@ V@@ 6@@ _@@ TE@@ TH@@ ER_@@ U@@ P@@ DA@@ TE@@ , 0, (@@ up@@ str@@ eam@@ State.@@ lin@@ k@@ Proper@@ ti@@ es.@@ is@@ IP@@ v@@ 6@@ Pro@@ vision@@ ed@@ () ? ip@@ v@@ 6@@ On@@ ly@@ State.@@ lin@@ k@@ Proper@@ ti@@ es : null@@ )); } m@@ L@@ oo@@ per.@@ dis@@ p@@ atch@@ All@@ (); }
private static android.net.@@ Network@@ State build@@ Mo@@ b@@ ile@@ I@@ p@@ v@@ 4@@ U@@ ps@@ tr@@ eam@@ State@@ () { return com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ build@@ Mo@@ b@@ ile@@ U@@ ps@@ tr@@ eam@@ State@@ (@@ true@@ , false@@ ); }
@org.junit.Test public void work@@ ing@@ Mo@@ b@@ ile@@ U@@ s@@ b@@ T@@ ether@@ ing@@ _@@ 4@@ 6@@ 4@@ x@@ lat@@ () throw@@ s java.lang.Exception { android.net.@@ Network@@ State up@@ str@@ eam@@ State = com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ build@@ Mo@@ b@@ ile@@ 4@@ 6@@ 4@@ x@@ lat@@ U@@ ps@@ tr@@ eam@@ State@@ (); run@@ W@@ or@@ k@@ ing@@ Mo@@ b@@ ile@@ U@@ s@@ b@@ T@@ ether@@ ing@@ (@@ up@@ str@@ eam@@ State@@ ); ve@@ r@@ if@@ y@@ (m@@ N@@ M@@ Service@@ , tim@@ es@@ (1@@ )).@@ en@@ able@@ N@@ at@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ X@@ L@@ AT@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); ve@@ r@@ if@@ y@@ (m@@ N@@ M@@ Service@@ , tim@@ es@@ (1@@ )).@@ en@@ able@@ N@@ at@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); ve@@ r@@ if@@ y@@ (m@@ N@@ M@@ Service@@ , tim@@ es@@ (1@@ )).@@ start@@ Interface@@ For@@ w@@ ard@@ ing@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TE@@ S@@ T@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); ve@@ r@@ if@@ y@@ (m@@ N@@ M@@ Service@@ , tim@@ es@@ (1@@ )).@@ start@@ Interface@@ For@@ w@@ ard@@ ing@@ (com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ US@@ B@@ _@@ I@@ F@@ N@@ AM@@ E, com.android.server.@@ connec@@ tivity.@@ T@@ ether@@ ing@@ Test.@@ TEST_@@ X@@ L@@ AT@@ _M@@ O@@ B@@ IL@@ E_@@ I@@ F@@ N@@ AM@@ E); send@@ IP@@ v@@ 6@@ T@@ ether@@ Up@@ dat@@ es@@ (@@ up@@ str@@ eam@@ State@@ ); ve@@ r@@ if@@ y@@ (m@@ R@@ ou@@ ter@@ Ad@@ verti@@ se@@ ment@@ D@@ a@@ e@@ mon@@ , tim@@ es@@ (1@@ )).@@ build@@ New@@ R@@ a@@ (@@ an@@ y@@ (), not@@ Null@@ ()); ve@@ r@@ if@@ y@@ (m@@ Net@@ d@@ , tim@@ es@@ (1@@ )).@@ t@@ ether@@ App@@ ly@@ D@@ n@@ s@@ Inter@@ fa@@ ces@@ (); }
private void handle@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ Callback@@ (@@ int arg@@ 1, java.lang.Object o@@ ) { if (@@ arg@@ 1 == (com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ .@@ NO@@ TI@@ F@@ Y_@@ LO@@ C@@ AL@@ _P@@ RE@@ FI@@ X@@ E@@ S@@ )) { m@@ O@@ ff@@ load@@ .@@ send@@ O@@ ff@@ load@@ Ex@@ e@@ mp@@ t@@ Pre@@ fix@@ es@@ (((@@ java.util.@@ Set@@ <@@ android.net.@@ I@@ p@@ Pre@@ fix@@ >@@ ) (@@ o@@ ))); return@@ ; } final android.net.@@ Network@@ State n@@ s = ((@@ android.net.@@ Network@@ State@@ ) (@@ o@@ )); if ((@@ n@@ s == null@@ ) || (!(@@ per@@ t@@ ain@@ s@@ To@@ Current@@ U@@ ps@@ tr@@ eam@@ (@@ n@@ s@@ )@@ ))) { if ((@@ m@@ Current@@ U@@ ps@@ tr@@ eam@@ Iface@@ Se@@ t@@ ) == null@@ ) { ch@@ oo@@ se@@ U@@ ps@@ tr@@ eam@@ Type@@ (@@ false@@ ); } return@@ ; } switch (@@ arg@@ 1@@ ) { case com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ .@@ EV@@ ENT_@@ ON@@ _@@ AV@@ A@@ IL@@ AB@@ L@@ E : break@@ ; case com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ .@@ EV@@ ENT_@@ ON@@ _C@@ AP@@ AB@@ IL@@ I@@ TI@@ E@@ S : handle@@ New@@ U@@ ps@@ tr@@ eam@@ Network@@ State@@ (@@ n@@ s); break@@ ; case com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ .@@ EV@@ ENT_@@ ON@@ _@@ L@@ IN@@ K@@ P@@ RO@@ P@@ E@@ RT@@ I@@ E@@ S : set@@ D@@ n@@ s@@ For@@ w@@ ard@@ er@@ s(@@ n@@ s.@@ network@@ , n@@ s.@@ lin@@ k@@ Properties@@ ); handle@@ New@@ U@@ ps@@ tr@@ eam@@ Network@@ State@@ (@@ n@@ s); break@@ ; case com.android.server.@@ connec@@ tivity.@@ t@@ ether@@ ing.@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ .@@ EV@@ ENT_@@ ON@@ _@@ LO@@ S@@ T : handle@@ New@@ U@@ ps@@ tr@@ eam@@ Network@@ State@@ (@@ null@@ ); break@@ ; default : m@@ Log.@@ e@@ (("@@ U@@ ps@@ tr@@ eam@@ Network@@ Monitor@@ .@@ EV@@ ENT_@@ ON@@ _@@ AV@@ A@@ IL@@ AB@@ L@@ E : " + arg@@ 1@@ )); break@@ ; } }
@java.lang.Override public boolean equals(@@ java.lang.Object ob@@ j@@ ) { return ((@@ ob@@ j@@ .get@@ Class@@ ()) == (android.net.@@ util.@@ Interface@@ Set@@ .@@ class@@ )) && (@@ if@@ nam@@ es.@@ equals(@@ ob@@ j@@ )); }
private boolean no@@ Chang@@ e@@ In@@ U@@ ps@@ tr@@ eam@@ Iface@@ Set@@ (android.net.@@ util.@@ Interface@@ Se@@ t new@@ I@@ fa@@ ces@@ ) { if ((@@ (m@@ U@@ ps@@ tr@@ eam@@ Iface@@ Set@@ ) == null@@ ) && (@@ new@@ Iface@@ s == null@@ )) return true@@ ; if ((@@ (m@@ U@@ ps@@ tr@@ eam@@ Iface@@ Set@@ ) != null@@ ) && (@@ new@@ Iface@@ s != null@@ )) { return m@@ U@@ ps@@ tr@@ eam@@ Iface@@ Set@@ .@@ if@@ nam@@ es.@@ equal@@ s@@ (@@ new@@ I@@ fa@@ ces@@ .@@ if@@ nam@@ es@@ ); } return false@@ ; }
@org.junit.Test public void test@@ Default@@ Tr@@ un@@ c@@ L@@ en@@ A@@ ut@@ h@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m im@@ pli@@ c@@ i@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , java.util.Arrays.@@ copy@@ Of@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ Test.@@ KE@@ Y@@ _M@@ AT@@ ER@@ I@@ AL@@ , (@@ 25@@ 6 / 8@@ ))); }
@org.junit.Test public void test@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ties@@ () { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es net@@ wor@@ k = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); android.net.@@ Network@@ Cap@@ abili@@ ti@@ es requ@@ est = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); assert@@ True@@ ((@@ (("@@ request@@ ) + request@@ ) + " Network@@ : ") + network@@ ), requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); requ@@ est.@@ add@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ WI@@ FI@@ _P@@ 2@@ P@@ ); requ@@ est.@@ add@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T@@ _M@@ E@@ D@@ ); assert@@ True@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); assert@@ Array@@ Equal@@ s@@ (@@ new int@@ []{ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ WI@@ FI@@ _P@@ 2@@ P@@ , android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T@@ _M@@ E@@ TER@@ E@@ D@@ , android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ O@@ E@@ M@@ _P@@ A@@ I@@ D@@ , requ@@ est.@@ get@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ties@@ ()); assert@@ True@@ (@@ network@@ .@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); requ@@ est.@@ add@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); assert@@ True@@ (@@ requ@@ est.@@ has@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); assert@@ False@@ (@@ requ@@ est.@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); assert@@ False@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); network@@ .@@ remove@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); assert@@ True@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ties@@ (@@ network@@ )); requ@@ est.@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); assert@@ True@@ (@@ requ@@ est.@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); assert@@ False@@ (@@ requ@@ est.@@ has@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); assert@@ False@@ (@@ requ@@ est.@@ s@@ ati@@ s@@ ati@@ s@@ ati@@ s@@ ati@@ s@@ ati@@ s@@ fi@@ ed@@ By@@ Network@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); assert@@ True@@ (@@ network@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ); }
@org.junit.Test public void test@@ O@@ em@@ Pa@@ id@@ () { android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c = new android.net.@@ Network@@ Cap@@ abili@@ ties@@ (); assert@@ True@@ (@@ n@@ c.@@ has@@ Un@@ w@@ an@@ ted@@ Cap@@ abili@@ t@@ y@@ (@@ android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ O@@ E@@ M@@ _P@@ A@@ ID@@ )); assert@@ False@@ (@@ n@@ c.@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ O@@ E@@ M@@ _P@@ A@@ ID@@ ); n@@ c.@@ m@@ ay@@ b@@ e@@ Mark@@ Cap@@ abili@@ ties@@ Res@@ tr@@ ic@@ ted@@ (@@ ); assert@@ True@@ (@@ n@@ c.@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); n@@ c.@@ add@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ O@@ E@@ M@@ _P@@ A@@ ID@@ ); n@@ c.@@ m@@ ay@@ b@@ e@@ Mark@@ Cap@@ abili@@ ties@@ Res@@ tr@@ ic@@ ted@@ (); assert@@ True@@ (@@ n@@ c.@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ O@@ E@@ M@@ _P@@ A@@ ID@@ )); assert@@ False@@ (@@ n@@ c.@@ has@@ Cap@@ abili@@ ty@@ (android.net.@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ )); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 6@@ 4@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 6@@ 4@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ Interface@@ Coun@@ ter@@ s@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ 8@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 9@@ 6@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ ); }
private static android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m build@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ (android.@@ content.@@ Context m@@ Context@@ , android.net.@@ I@@ p@@ Sec@@ Manager.@@ Sec@@ ur@@ ity@@ Parameter@@ In@@ dex s@@ pi@@ , android.net.@@ I@@ p@@ Sec@@ Manager.@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ S@@ ock@@ et enc@@ ap@@ Socket@@ , java.net.Inet@@ Address remo@@ te@@ Add@@ r@@ ) throw@@ s java.lang.Exception { java.lang.String local@@ Add@@ r = (@@ remo@@ te@@ Add@@ r instanceof java.net.Inet@@ 4@@ Addres@@ s) ? android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K : android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ; return new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ Builder@@ (m@@ Context@@ ).set@@ En@@ c@@ r@@ y@@ ption@@ (@@ new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )@@ ).set@@ Au@@ th@@ enti@@ cation@@ (@@ new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ ), ((@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ ))); .@@ length) * 4@@ ))@@ ).set@@ I@@ p@@ v@@ 4@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ (@@ enc@@ ap@@ Socket@@ , enc@@ ap@@ Socket@@ .get@@ P@@ ort@@ ()).@@ build@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (@@ local@@ Add@@ r@@ ), s@@ pi@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 9@@ 6@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
private void check@@ Stat@@ s@@ Check@@ er@@ (@@ int pro@@ to@@ col@@ , int ip@@ H@@ d@@ r@@ L@@ en@@ , int trans@@ port@@ H@@ d@@ r@@ L@@ en@@ , int u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ , int send@@ Count@@ , int i@@ v@@ L@@ en@@ , int b@@ l@@ k@@ Size@@ , int tr@@ un@@ c@@ L@@ en@@ Bit@@ s) throw@@ s java.lang.Exception { int in@@ ner@@ Pack@@ et@@ Siz@@ e = ((@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ TEST_@@ DA@@ TA@@ .@@ length) + trans@@ port@@ H@@ d@@ r@@ L@@ en@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ; int ou@@ ter@@ Pack@@ et@@ Siz@@ e = cal@@ c@@ ul@@ ate@@ E@@ s@@ p@@ Pack@@ et@@ Siz@@ e ((@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ TEST_@@ DA@@ TA@@ .@@ length) + trans@@ port@@ H@@ d@@ r@@ L@@ en@@ ), i@@ v@@ L@@ en@@ , b@@ l@@ k@@ Size@@ , tr@@ un@@ c@@ L@@ en@@ Bit@@ s@@ )) + " u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ ) + " H@@ d@@ r@@ L@@ en@@ ; int expected@@ O@@ u@@ ter@@ Byte@@ s = ou@@ ter@@ Pack@@ et@@ Siz@@ e * send@@ Count@@ ; int expected@@ In@@ ner@@ Byte@@ s = in@@ ner@@ Pack@@ et@@ Siz@@ e * send@@ Count@@ ; int expected@@ Pack@@ et@@ s = send@@ Count@@ ; if (pro@@ to@@ co@@ l == (@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ )) { int enc@@ ryp@@ ted@@ T@@ c@@ p@@ P@@ k@@ t@@ Siz@@ e = cal@@ c@@ ul@@ ate@@ E@@ s@@ p@@ Pack@@ et@@ Siz@@ e.@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ T@@ C@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ _@@ WI@@ TH@@ _@@ O@@ P@@ TION@@ S@@ , i@@ v@@ L@@ en@@ , b@@ l@@ k@@ Size@@ , tr@@ un@@ c@@ L@@ en@@ Bit@@ s); send@@ Coun@@ t *@@ = 2@@ ; expected@@ O@@ u@@ ter@@ Byte@@ s *@@ = 2@@ ; expected@@ In@@ ner@@ Byte@@ s *@@ = 2@@ ; expected@@ Pack@@ et@@ s *@@ = 2@@ ; expected@@ O@@ u@@ ter@@ Byte@@ s +@@ = ((@@ enc@@ ryp@@ ted@@ T@@ c@@ p@@ P@@ k@@ t@@ Siz@@ e + u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ ) + " ip@@ H@@ d@@ r@@ L@@ en@@ ) * send@@ Count@@ ; expected@@ In@@ ner@@ Byte@@ s +@@ = ((@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ T@@ C@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ _@@ O@@ P@@ TION@@ S@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ) * send@@ Count@@ ; expected@@ Pack@@ et@@ s +@@ = send@@ Count@@ ; } android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ wait@@ For@@ N@@ um@@ Pack@@ et@@ s(@@ expected@@ Pack@@ et@@ s); if (@@ send@@ Coun@@ t >@@ = 1@@ 00@@ 0) { android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ Iface@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ O@@ u@@ ter@@ Bytes@@ , expected@@ Pack@@ et@@ s, expected@@ O@@ u@@ ter@@ Bytes@@ , expected@@ Pack@@ et@@ s); } else { if (@@ u@@ d@@ p@@ En@@ c@@ ap@@ Le@@ n != 0) { android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ s@@ Check@@ er@@ .@@ assert@@ U@@ id@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ O@@ u@@ ter@@ , expected@@ Pack@@ et@@ s, expected@@ O@@ u@@ ter@@ s); } else { if (@@ expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ Pack@@ et@@ s, expected@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ Pack@@ et@@ s, expected@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ Pack@@ et@@ Size@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ Pack@@ et@@ Siz@@ es@@ ); } } } }
public void test@@ A@@ es@@ G@@ c@@ m@@ 9@@ 6@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ y.@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 12@@ 8@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ 8@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ y.@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 12@@ 8@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ y.@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 6@@ 4@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 6@@ 4@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ 8@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ y.@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ Interface@@ Coun@@ ter@@ s@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ y.@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1@@ 00@@ 0, false@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 9@@ 6@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 6@@ 4@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 6@@ 4@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ 8@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 12@@ 8@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 6@@ 4@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 6@@ 4@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 12@@ 8@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 6@@ 4@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 6@@ 4@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 6@@ 4@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 6@@ 4@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ 8@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ Interface@@ Coun@@ ter@@ s@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ y.@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1@@ 00@@ 0, false@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 12@@ 8@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 12@@ 8@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 9@@ 6@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ y.@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ e@@ y.@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ , false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , true@@ ); }
public void test@@ A@@ es@@ G@@ c@@ m@@ 9@@ 6@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m au@@ th@@ C@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S_@@ G@@ C@@ M@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ Key@@ (@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , null@@ , au@@ th@@ C@@ ryp@@ t@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager.@@ get@@ Key@@ (@@ 25@@ 6@@ )); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ K@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , a@@ ut@@ h@@ , null@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , null@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , get@@ Au@@ th@@ Key@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , false@@ ); }
@java.lang.Override public void send@@ (@@ byte@@ [] data@@ ) throw@@ s java.io.IOException { m@@ Socket@@ .get@@ Output@@ Stream@@ ().@@ write@@ (@@ data@@ ); }
protected static int get@@ Do@@ main@@ (@@ java.net.Inet@@ Address addres@@ s) { int do@@ main@@ ; if (@@ addres@@ s instanceof java.net.Inet@@ 6@@ Addres@@ s) do@@ ma@@ in = android.system.@@ O@@ s@@ Constants.@@ A@@ F@@ _@@ IN@@ E@@ T@@ 6@@ ; else do@@ ma@@ in = android.system.@@ O@@ s@@ Constants.@@ A@@ F@@ _@@ IN@@ E@@ T@@ ; return do@@ main@@ ; }
public void test@@ Java@@ U@@ d@@ p@@ Socket@@ Pair@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address loc@@ al = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ U@@ d@@ p@@ Socket@@ > s@@ ocket@@ s = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ Java@@ U@@ d@@ p@@ Socket@@ Pair@@ (@@ local@@ , true@@ ); check@@ Socket@@ Pair@@ (s@@ ocket@@ s.@@ m@@ Le@@ f@@ t@@ S@@ ock@@ , s@@ ocket@@ s.@@ m@@ R@@ ight@@ S@@ ock@@ ); }
@java.lang.Override public void remove@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ s(@@ android.net.@@ I@@ p@@ Sec@@ Manager is@@ m@@ ) throw@@ s java.io.IOException { if (!(@@ is@@ Call@@ ing@@ U@@ id@@ ())) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ Tr@@ an@@ s@@ for@@ m the net@@ wor@@ k wit@@ h " + (m@@ F@@ d@@ ); } if ((@@ remove@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ ) != null@@ ) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ((@@ ("@@ Tr@@ an@@ s@@ for@@ m " + (m@@ Tr@@ an@@ s@@ for@@ m@@ , u@@ p of an I@@ p@@ ) + " is not ava@@ il@@ able to an the g@@ et the in@@ valid@@ "), Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ ); } }
private void check@@ Socket@@ Pair@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Gener@@ ic@@ S@@ ock@@ et le@@ f@@ t@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Gener@@ ic@@ S@@ ock@@ et ri@@ g@@ h@@ t@@ ) throw@@ s java.lang.Exception { le@@ f@@ t.@@ send@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ TEST_@@ DA@@ TA@@ ); assert@@ Array@@ Equal@@ s(@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ TEST_@@ DA@@ TA@@ , ri@@ g@@ h@@ t.@@ re@@ cei@@ ve@@ ()); ri@@ g@@ h@@ t.@@ send@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ TEST_@@ DA@@ TA@@ ); assert@@ Array@@ Equal@@ s(@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ TEST_@@ DA@@ TA@@ , le@@ f@@ t.@@ re@@ cei@@ ve@@ ()); }
public void test@@ Interface@@ Coun@@ ter@@ s@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1@@ 00@@ 0, false@@ ); }
@java.lang.Override public void send@@ To@@ (@@ byte@@ [] data@@ , java.net.Inet@@ Address d@@ st@@ Add@@ r@@ , int port@@ ) throw@@ s java.io.IOException { m@@ Socket@@ .@@ send@@ (@@ new java.net.@@ Dat@@ ag@@ ram@@ Pack@@ et@@ (@@ data@@ , data@@ .@@ length@@ , d@@ st@@ Add@@ r@@ , port@@ )); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , get@@ Au@@ th@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , false@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , get@@ Au@@ th@@ Key@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, get@@ Au@@ th@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , get@@ Au@@ th@@ Key@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public static android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ T@@ c@@ p@@ Socket@@ > get@@ Native@@ T@@ c@@ p@@ Socket@@ Pair@@ (@@ java.net.Inet@@ Address local@@ Add@@ r@@ ) throw@@ s java.io.IOException { android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ T@@ c@@ p@@ S@@ ock@@ et le@@ f@@ t@@ S@@ o@@ c@@ k = null@@ ; android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ T@@ c@@ p@@ S@@ ock@@ et ri@@ g@@ h@@ t@@ S@@ o@@ c@@ k = null@@ ; int do@@ ma@@ in = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ Do@@ main@@ (@@ local@@ Add@@ r@@ ); try { java.io.FileDescriptor ser@@ ve@@ r = android.system.@@ O@@ s.@@ s@@ ocket@@ (@@ do@@ main@@ , O@@ s@@ Constants.@@ S@@ O@@ C@@ K@@ _S@@ T@@ RE@@ AM@@ , O@@ s@@ Constants.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ ); java.io.FileDescriptor c@@ li@@ ent = android.system.@@ O@@ s.@@ s@@ ocket@@ (@@ do@@ main@@ , O@@ s@@ Constants.@@ S@@ O@@ C@@ K@@ _S@@ T@@ RE@@ AM@@ , O@@ s@@ Constants.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ ); android.system.@@ O@@ s.@@ b@@ ind@@ (@@ ser@@ ver@@ , local@@ Add@@ r@@ , 0); int ser@@ ver@@ P@@ or@@ t = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ P@@ ort@@ (@@ ser@@ ver@@ ); android.system.@@ O@@ s.@@ list@@ en@@ (@@ ser@@ ver@@ , 1@@ 0); android.system.@@ O@@ s.@@ connect@@ (c@@ lient@@ , local@@ Add@@ r@@ , ser@@ ver@@ P@@ ort@@ ); java.io.FileDescriptor ac@@ ce@@ p@@ ted = android.system.@@ O@@ s.@@ ac@@ ce@@ p@@ t@@ (@@ ser@@ ver@@ , null@@ ); le@@ f@@ t@@ S@@ o@@ c@@ k = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ T@@ c@@ p@@ Socket@@ (c@@ lient@@ ); ri@@ g@@ h@@ t@@ S@@ o@@ c@@ k = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ T@@ c@@ p@@ Socket@@ (@@ ac@@ ce@@ p@@ ted@@ ); } catch (android.@@ system.@@ Errno@@ Exception e) { e.@@ r@@ e@@ throw@@ As@@ IO@@ Exception@@ (); } return new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ >@@ (@@ le@@ f@@ t@@ S@@ ock@@ , ri@@ g@@ h@@ t@@ S@@ ock@@ ); }
void send@@ To@@ (@@ byte@@ [] data@@ , java.net.Inet@@ Address d@@ st@@ Add@@ r@@ , int port@@ ) throw@@ s java.io.IO@@ Exception;
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , get@@ Au@@ th@@ Key@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
@java.lang.Override public byte@@ [] re@@ cei@@ ve@@ () throw@@ s java.io.IOException { java.net.@@ Dat@@ ag@@ ram@@ Pack@@ et dat@@ a = new java.net.@@ Dat@@ ag@@ ram@@ Pack@@ et@@ (@@ new byte@@ [@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ DA@@ TA@@ _@@ B@@ U@@ F@@ F@@ ER_@@ L@@ EN@@ ]@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ DA@@ TA@@ _@@ B@@ U@@ F@@ F@@ ER_@@ L@@ EN@@ ); m@@ Socket@@ .@@ re@@ cei@@ ve@@ (@@ data@@ ); return java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ data@@ .get@@ Data@@ (), 0, data@@ .get@@ Length@@ ()); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , false@@ ); }
public static android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ T@@ c@@ p@@ Socket@@ > get@@ Java@@ T@@ c@@ p@@ Socket@@ Pair@@ (@@ java.net.Inet@@ Address local@@ Add@@ r@@ ) throw@@ s java.io.IOException { android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ T@@ c@@ p@@ S@@ ock@@ et le@@ f@@ t@@ S@@ o@@ c@@ k = null@@ ; android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ T@@ c@@ p@@ Socket@@ [] ri@@ g@@ h@@ t@@ S@@ o@@ c@@ k = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ T@@ c@@ p@@ Socket@@ [@@ 1@@ ]; java.net.@@ Server@@ S@@ ock@@ et ser@@ ver@@ S@@ ock@@ et = new java.net.@@ Server@@ Socket@@ (); ser@@ ver@@ Socket@@ .@@ b@@ ind@@ (@@ new java.net.Inet@@ Socket@@ Addres@@ s(@@ local@@ Add@@ r@@ , 0@@ )); java.lang.@@ Th@@ re@@ ad = new java.lang.@@ Thread@@ ((@@ ) -@@ > { try { ri@@ g@@ h@@ t@@ S@@ ock@@ [0@@ ] = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ T@@ c@@ p@@ Socket@@ (@@ ser@@ ver@@ Socket@@ .@@ ac@@ ce@@ p@@ t@@ ()); } catch (java.io.IOException ign@@ or@@ ed@@ ) { } }); le@@ f@@ t@@ S@@ o@@ c@@ k = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ T@@ c@@ p@@ Socket@@ (@@ new java.net.@@ Socket@@ (@@ local@@ Add@@ r@@ , ser@@ ver@@ Socket@@ .get@@ Local@@ P@@ ort@@ ())); ser@@ ver@@ Thread@@ .@@ start@@ (); try { ser@@ ver@@ Thread@@ .@@ j@@ o@@ in@@ (); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { throw new java.io.IO@@ Exception(@@ e); } if ((@@ ri@@ g@@ h@@ t@@ S@@ ock@@ [0@@ ]@@ ) == null@@ ) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ Co@@ ul@@ d not cre@@ ate T@@ C@@ P s@@ ock@@ et p@@ a@@ ir@@ "); } return new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ >@@ (@@ le@@ f@@ t@@ S@@ ock@@ , ri@@ g@@ h@@ t@@ S@@ ock@@ [0@@ ]@@ ); }
@java.lang.Override public byte@@ [] re@@ cei@@ ve@@ () throw@@ s java.io.IOException { byte@@ [] in = new byte@@ [@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ DA@@ TA@@ _@@ B@@ U@@ F@@ ER_@@ L@@ EN@@ ]; int byte@@ s@@ Re@@ ad = 0; try { byte@@ s@@ Re@@ ad = android.system.@@ O@@ s.@@ read@@ (m@@ F@@ d@@ , in@@ , 0, android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ DA@@ TA@@ _@@ B@@ U@@ F@@ ER_@@ L@@ EN@@ ); } catch (android.@@ system.@@ Errno@@ Exception e) { e.@@ r@@ e@@ throw@@ As@@ IO@@ Exception@@ (); } return java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e@@ (in, 0, byte@@ s@@ Read@@ ); }
byte@@ [] re@@ cei@@ ve@@ () throw@@ s java.io.IO@@ Exception;
@java.lang.Override public void send@@ To@@ (@@ byte@@ [] data@@ , java.net.Inet@@ Address d@@ st@@ Add@@ r@@ , int port@@ ) throw@@ s java.io.IOException { try { android.system.@@ O@@ s.@@ send@@ to@@ (m@@ F@@ d@@ , data@@ , 0, data@@ .@@ length@@ , 0, d@@ st@@ Add@@ r@@ , port@@ ); } catch (android.@@ system.@@ Errno@@ Exception e) { e.@@ r@@ e@@ throw@@ As@@ IO@@ Exception@@ (); } }
@java.lang.Override public void send@@ (@@ byte@@ [] data@@ ) throw@@ s java.io.IO@@ Exception;
public void test@@ Java@@ T@@ c@@ p@@ Socket@@ Pair@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address loc@@ al = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ T@@ c@@ p@@ Socket@@ > s@@ ocket@@ s = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ Java@@ T@@ c@@ p@@ Socket@@ Pair@@ (@@ local@@ ); check@@ Socket@@ Pair@@ (s@@ ocket@@ s.@@ m@@ Le@@ f@@ t@@ S@@ ock@@ , s@@ ocket@@ s.@@ m@@ R@@ ight@@ S@@ ock@@ ); }
public void test@@ Native@@ T@@ c@@ p@@ Socket@@ Pair@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address loc@@ al = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ T@@ c@@ p@@ Socket@@ > s@@ ocket@@ s = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ Native@@ T@@ c@@ p@@ Socket@@ Pair@@ (@@ local@@ ); check@@ Socket@@ Pair@@ (s@@ ocket@@ s.@@ m@@ Le@@ f@@ t@@ S@@ ock@@ , s@@ ocket@@ s.@@ m@@ R@@ ight@@ S@@ ock@@ ); }
@java.lang.Override public byte@@ [] re@@ cei@@ ve@@ () throw@@ s java.io.IOException { byte@@ [] in = new byte@@ [@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ DA@@ TA@@ _@@ B@@ U@@ F@@ ER_@@ L@@ EN@@ ]; int byte@@ s@@ Re@@ ad = m@@ Socket@@ .get@@ InputStream@@ ().@@ read@@ (in@@ ); return java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e@@ (in, 0, byte@@ s@@ Read@@ ); }
public static android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ U@@ d@@ p@@ Socket@@ > get@@ Java@@ U@@ d@@ p@@ Socket@@ Pair@@ (@@ java.net.Inet@@ Address local@@ Add@@ r@@ , boolean connec@@ ted@@ ) throw@@ s java.io.IOException { android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ U@@ d@@ p@@ S@@ ock@@ et le@@ f@@ t@@ S@@ o@@ c@@ k = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ U@@ d@@ p@@ Socket@@ (@@ local@@ Add@@ r@@ ); android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ U@@ d@@ p@@ S@@ ock@@ et ri@@ g@@ h@@ t@@ S@@ o@@ c@@ k = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Java@@ U@@ d@@ p@@ Socket@@ (@@ local@@ Add@@ r@@ ); if (@@ connec@@ ted@@ ) { le@@ f@@ t@@ S@@ ock@@ .@@ m@@ Socket@@ .@@ connect@@ (@@ local@@ Add@@ r@@ , ri@@ g@@ h@@ t@@ S@@ ock@@ .@@ m@@ Socket@@ .get@@ Local@@ P@@ ort@@ ()); ri@@ g@@ h@@ t@@ S@@ ock@@ .@@ m@@ Socket@@ .@@ connect@@ (@@ local@@ Add@@ r@@ , le@@ f@@ t@@ S@@ ock@@ .@@ m@@ Socket@@ .get@@ Local@@ P@@ ort@@ ()); } return new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ >@@ (@@ le@@ f@@ t@@ S@@ ock@@ , ri@@ g@@ h@@ t@@ S@@ ock@@ ); }
void send@@ (@@ byte@@ [] data@@ ) throw@@ s java.io.IO@@ Exception;
void app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ I@@ p@@ Sec@@ Manager is@@ m@@ , int di@@ re@@ c@@ tion@@ , android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m tr@@ an@@ s@@ for@@ m@@ ) throw@@ s java.io.IO@@ Exception;
public void test@@ Native@@ U@@ d@@ p@@ Socket@@ Pair@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address loc@@ al = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ U@@ d@@ p@@ Socket@@ > s@@ ocket@@ s = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ Native@@ U@@ d@@ p@@ Socket@@ Pair@@ (@@ local@@ , true@@ ); check@@ Socket@@ Pair@@ (s@@ ocket@@ s.@@ m@@ Le@@ f@@ t@@ S@@ ock@@ , s@@ ocket@@ s.@@ m@@ R@@ ight@@ S@@ ock@@ ); }
void remove@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ s(@@ android.net.@@ I@@ p@@ Sec@@ Manager is@@ m@@ ) throw@@ s java.io.IO@@ Exception;
public static android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ U@@ d@@ p@@ Socket@@ > get@@ Native@@ U@@ d@@ p@@ Socket@@ Pair@@ (@@ java.net.Inet@@ Address local@@ Add@@ r@@ , boolean connec@@ ted@@ ) throw@@ s java.io.IOException { android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ U@@ d@@ p@@ S@@ ock@@ et le@@ f@@ t@@ S@@ o@@ c@@ k = null@@ ; android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ U@@ d@@ p@@ S@@ ock@@ et ri@@ g@@ h@@ t@@ S@@ o@@ c@@ k = null@@ ; int do@@ ma@@ in = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ Do@@ main@@ (@@ local@@ Add@@ r@@ ); try { java.io.FileDescriptor le@@ f@@ t@@ F@@ d = android.system.@@ O@@ s.@@ s@@ ocket@@ (@@ do@@ main@@ , O@@ s@@ Constants.@@ S@@ O@@ C@@ K@@ _@@ D@@ G@@ R@@ AM@@ , O@@ s@@ Constants.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ ); java.io.FileDescriptor ri@@ g@@ h@@ t@@ F@@ d = android.system.@@ O@@ s.@@ s@@ ocket@@ (@@ do@@ main@@ , O@@ s@@ Constants.@@ S@@ O@@ C@@ K@@ _@@ D@@ G@@ R@@ AM@@ , O@@ s@@ Constants.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ ); android.system.@@ O@@ s.@@ b@@ ind@@ (@@ le@@ f@@ t@@ F@@ d@@ , local@@ Add@@ r@@ , 0); android.system.@@ O@@ s.@@ b@@ ind@@ (@@ ri@@ g@@ h@@ t@@ F@@ d@@ , local@@ Add@@ r@@ , 0); int le@@ f@@ t@@ P@@ or@@ t = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ P@@ ort@@ (@@ le@@ f@@ t@@ F@@ d@@ ); int ri@@ g@@ h@@ t@@ P@@ or@@ t = android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ get@@ P@@ ort@@ (@@ ri@@ g@@ h@@ t@@ F@@ d@@ ); if (@@ connec@@ ted@@ ) { android.system.@@ O@@ s.@@ connect@@ (@@ le@@ f@@ t@@ F@@ d@@ , local@@ Add@@ r@@ , ri@@ g@@ h@@ t@@ P@@ ort@@ ); android.system.@@ O@@ s.@@ connect@@ (@@ ri@@ g@@ h@@ t@@ F@@ d@@ , local@@ Add@@ r@@ , le@@ f@@ t@@ P@@ ort@@ ); } le@@ f@@ t@@ S@@ o@@ c@@ k = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ U@@ d@@ p@@ Socket@@ (@@ le@@ f@@ t@@ F@@ d@@ ); ri@@ g@@ h@@ t@@ S@@ o@@ c@@ k = new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Native@@ U@@ d@@ p@@ Socket@@ (@@ ri@@ g@@ h@@ t@@ F@@ d@@ ); } catch (android.@@ system.@@ Errno@@ Exception e) { e.@@ r@@ e@@ throw@@ As@@ IO@@ Exception@@ (); } return new android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ Socket@@ Pair@@ <@@ >@@ (@@ le@@ f@@ t@@ S@@ ock@@ , ri@@ g@@ h@@ t@@ S@@ ock@@ ); }
@java.lang.Override public void send@@ (@@ byte@@ [] data@@ ) throw@@ s java.io.IOException { m@@ Socket@@ .@@ send@@ (@@ new java.net.@@ Dat@@ ag@@ ram@@ Pack@@ et@@ (@@ data@@ , data@@ .@@ length@@ )); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , get@@ Au@@ th@@ Key@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , false@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , get@@ Au@@ th@@ Key@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , get@@ Au@@ th@@ Key@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , false@@ ); }
private android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m get@@ Tr@@ an@@ s@@ for@@ m@@ (@@ java.net.Inet@@ Address local@@ Add@@ r@@ ) throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Manager.@@ Sec@@ ur@@ ity@@ Parameter@@ In@@ dex s@@ p@@ i = m@@ IS@@ M@@ .@@ al@@ loc@@ ate@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (@@ local@@ Add@@ r@@ ); return android.@@ net@@ .@@ util.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ build@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ (m@@ Context@@ , s@@ p@@ i@@ , null@@ , local@@ Add@@ r@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , get@@ Au@@ th@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , get@@ Au@@ th@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
@java.lang.Override public void app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ I@@ p@@ Sec@@ Manager is@@ m@@ , int di@@ re@@ c@@ tion@@ , android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m tr@@ an@@ s@@ for@@ m@@ ) throw@@ s java.io.IOException { is@@ m.@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (m@@ F@@ d@@ , di@@ re@@ c@@ tion@@ , tr@@ an@@ s@@ for@@ m@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , get@@ Au@@ th@@ Key@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , get@@ Au@@ th@@ Key@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ Interface@@ Coun@@ ter@@ s@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1@@ 00@@ 0, false@@ ); }
public void test@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address loc@@ al = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ ct@@ s@@ .@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); try (android.net.@@ I@@ p@@ Sec@@ Manager.@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ S@@ ock@@ et enc@@ ap@@ S@@ ock@@ et = m@@ IS@@ M@@ .@@ open@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ Socket@@ ()@@ ;@@ android.net.@@ I@@ p@@ Sec@@ Manager.@@ Sec@@ ur@@ ity@@ Parameter@@ In@@ dex s@@ p@@ i = m@@ IS@@ M@@ .@@ al@@ loc@@ ate@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (@@ local@@ )@@ ;@@ android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m tr@@ an@@ s@@ for@@ m = android.net.@@ ct@@ s@@ .@@ I@@ p@@ Sec@@ Manager.@@ build@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ (m@@ Context@@ , s@@ pi@@ , enc@@ ap@@ Socket@@ , local@@ )) { java.io.FileDescriptor u@@ d@@ p@@ S@@ ock@@ et = null@@ ; try { u@@ d@@ p@@ S@@ ock@@ et = android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ B@@ ound@@ U@@ d@@ p@@ S@@ ock@@ et@@ (@@ local@@ ); int por@@ t = get@@ P@@ ort@@ (@@ u@@ d@@ p@@ Socket@@ ); m@@ IS@@ M@@ .@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ u@@ d@@ p@@ Socket@@ , I@@ p@@ Sec@@ Manager.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ , tr@@ an@@ s@@ for@@ m@@ ); m@@ IS@@ M@@ .@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ u@@ d@@ p@@ Socket@@ , I@@ p@@ Sec@@ Manager.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ , tr@@ an@@ s@@ for@@ m@@ ); byte@@ [] dat@@ a = new java.lang.String@@ ("@@ C@@ A@@ S@@ P t@@ est data@@ "@@ )@@ .get@@ Bytes@@ ("@@ UT@@ F@@ -@@ 8 android.system.@@ O@@ s.@@ send@@ to@@ (@@ u@@ d@@ p@@ Socket@@ , data@@ , 0, data@@ .@@ length@@ , 0, local@@ , port@@ ); byte@@ [] in = new byte@@ [@@ data@@ .@@ length@@ ]; android.system.@@ O@@ s.@@ read@@ (@@ u@@ d@@ p@@ Socket@@ , in@@ .@@ length); assert@@ True@@ ("@@ S@@ ock@@ et dat@@ a d@@ id not match@@ .@@ ", java.util.Arrays.@@ equals(@@ data@@ , in@@ )); final byte@@ [] he@@ ad@@ er = new byte@@ []{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }; final java.lang.String mess@@ age = I@@ K@@ E Pack@@ et dat@@ a = (@@ (@@ new java.lang.String@@ (@@ he@@ ader@@ )) + ", message@@ )@@ .get@@ Bytes@@ ("@@ UT@@ F@@ -@@ 8@@ "); android.system.@@ O@@ s.@@ send@@ to@@ (@@ enc@@ ap@@ Socket@@ .get@@ Socket@@ (), data@@ , 0, data@@ .@@ length@@ , 0, local@@ , enc@@ ap@@ Socket@@ .get@@ P@@ ort@@ ()); in = new byte@@ [@@ data@@ .@@ length@@ ]; android.system.@@ O@@ s.@@ read@@ (@@ enc@@ ap@@ Socket@@ .get@@ Socket@@ (), in@@ , 0, in@@ .@@ length); assert@@ True@@ ("@@ s@@ ock@@ et w@@ a@@ s un@@ able to send@@ /@@ re@@ cei@@ v@@ e I@@ K@@ E dat@@ a java.util.Arrays.@@ equals(@@ data@@ , in@@ )); m@@ IS@@ M@@ .@@ remove@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ s(@@ u@@ d@@ p@@ Socket@@ ); if (@@ u@@ d@@ p@@ S@@ ock@@ et != null@@ ) { android.system.@@ O@@ s.@@ close@@ (@@ u@@ d@@ p@@ Socket@@ ); } } }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , get@@ Au@@ th@@ Key@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
private void check@@ Stat@@ s@@ Check@@ er@@ (@@ int pro@@ to@@ col@@ , int ip@@ H@@ d@@ r@@ L@@ en@@ , int trans@@ port@@ H@@ d@@ r@@ L@@ en@@ , int u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ , int send@@ Count@@ , int tr@@ un@@ c@@ L@@ en@@ Bit@@ s) throw@@ s java.lang.Exception { int in@@ ner@@ Pack@@ et@@ Siz@@ e = ((@@ TEST_@@ DA@@ TA@@ .@@ length) + trans@@ port@@ H@@ d@@ r@@ L@@ en@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ; int ou@@ ter@@ Pack@@ et@@ Siz@@ e = ((@@ cal@@ c@@ ul@@ ate@@ A@@ es@@ C@@ b@@ c@@ E@@ s@@ p@@ Pack@@ et@@ Size@@ With@@ Au@@ th@@ (((@@ TEST_@@ DA@@ TA@@ .@@ length) + trans@@ port@@ H@@ d@@ r@@ L@@ en@@ ), tr@@ un@@ c@@ L@@ en@@ Bit@@ s@@ )) + u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ; int expected@@ O@@ u@@ ter@@ Byte@@ s = ou@@ ter@@ Pack@@ et@@ Siz@@ e * send@@ Count@@ ; int expected@@ In@@ ner@@ Byte@@ s = in@@ ner@@ Pack@@ et@@ Siz@@ e * send@@ Count@@ ; int expected@@ Pack@@ et@@ s = send@@ Count@@ ; if (pro@@ to@@ co@@ l == (@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ )) { int enc@@ ryp@@ ted@@ T@@ c@@ p@@ P@@ k@@ t@@ Siz@@ e = cal@@ c@@ ul@@ ate@@ A@@ es@@ C@@ b@@ c@@ E@@ s@@ p@@ Pack@@ et@@ Size@@ With@@ Au@@ th@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ T@@ C@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ _@@ WI@@ TH@@ _@@ O@@ P@@ TION@@ S@@ , tr@@ un@@ c@@ L@@ en@@ Bit@@ s); send@@ Coun@@ t *@@ = 2@@ ; expected@@ In@@ ner@@ Byte@@ s *@@ = 2@@ ; expected@@ Pack@@ et@@ s *@@ = 2@@ ; expected@@ O@@ u@@ ter@@ Byte@@ s +@@ = ((@@ enc@@ ryp@@ ted@@ T@@ c@@ p@@ P@@ k@@ t@@ Siz@@ e + u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ) * send@@ Count@@ ; expected@@ In@@ ner@@ Byte@@ s +@@ = ((@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ T@@ C@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ _@@ WI@@ TH@@ _@@ O@@ P@@ TION@@ S@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ) * send@@ Count@@ ; expected@@ Pack@@ et@@ s +@@ = send@@ Count@@ ; } android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er.@@ wait@@ For@@ N@@ um@@ Pack@@ et@@ s(@@ expected@@ Pack@@ et@@ s); if (@@ u@@ d@@ p@@ En@@ c@@ ap@@ Le@@ n != 0) { android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ U@@ id@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ O@@ u@@ ter@@ Bytes@@ , expected@@ Pack@@ et@@ s, expected@@ O@@ u@@ ter@@ Bytes@@ , expected@@ Pack@@ et@@ s); } else { android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ U@@ id@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ O@@ u@@ ter@@ Bytes@@ , expected@@ Pack@@ et@@ s, expected@@ In@@ ner@@ Bytes@@ , expected@@ Pack@@ et@@ s); } if (s@@ end@@ Coun@@ t >@@ = 1@@ 00@@ 0) { android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ Check@@ er@@ .@@ assert@@ U@@ id@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ Pack@@ et@@ s); } if (s@@ end@@ Coun@@ t >@@ = 1@@ 00@@ 0) { android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ check@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ Pack@@ et@@ s); } }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, get@@ Au@@ th@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , get@@ Au@@ th@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
protected static int get@@ P@@ ort@@ (java.io.FileDescriptor s@@ ock@@ ) throw@@ s java.io.IOException { int por@@ t = -1@@ ; try { por@@ t = ((@@ java.net.Inet@@ Socket@@ Addres@@ s) (android.@@ system.@@ O@@ s.get@@ s@@ ock@@ name@@ (s@@ ock@@ ))@@ )@@ .get@@ P@@ ort@@ (); } catch (android.@@ system.@@ Errno@@ Exception e) { e.@@ r@@ e@@ throw@@ As@@ IO@@ Exception@@ (); } if (@@ por@@ t == (-1@@ )) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ S@@ om@@ eth@@ ing h@@ app@@ en@@ ed while try@@ ing to g@@ et port@@ "); } return port@@ ; }
public void test@@ I@@ k@@ e@@ O@@ ver@@ U@@ d@@ p@@ En@@ c@@ ap@@ Socket@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address loc@@ al = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er.@@ init@@ Stat@@ s@@ Check@@ er@@ (); try (android.net.@@ I@@ p@@ Sec@@ Manager.@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ S@@ ock@@ et enc@@ ap@@ S@@ ock@@ et = m@@ IS@@ M@@ .@@ open@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ Socket@@ ()) { int local@@ P@@ or@@ t = get@@ P@@ ort@@ (@@ enc@@ ap@@ Socket@@ .get@@ Socket@@ ()); byte@@ [] data@@ With@@ E@@ s@@ p@@ He@@ ad@@ er = new byte@@ [@@ (@@ TEST_@@ DA@@ TA@@ .@@ length) + 8@@ ]; java.lang.System.@@ array@@ copy@@ (android.net.@@ cts.@@ TEST_@@ DA@@ TA@@ , 0, data@@ With@@ E@@ s@@ p@@ He@@ ad@@ er, 8@@ , TEST_@@ DA@@ TA@@ .@@ length); byte@@ [] in = new byte@@ [@@ data@@ With@@ E@@ s@@ p@@ He@@ ad@@ er.@@ length@@ ]; android.system.@@ O@@ s.@@ send@@ to@@ (@@ enc@@ ap@@ Socket@@ .get@@ Socket@@ (), data@@ With@@ E@@ s@@ p@@ He@@ ad@@ er, 0, data@@ With@@ E@@ s@@ p@@ He@@ ad@@ er.@@ length@@ , 0, local@@ P@@ ort@@ ); android.system.@@ O@@ s.@@ read@@ (@@ enc@@ ap@@ Socket@@ .get@@ Socket@@ (), in@@ , 0, in@@ .@@ length); assert@@ Array@@ Equal@@ s("@@ s@@ om@@ e dat@@ a d@@ id not match@@ .@@ ", data@@ With@@ E@@ s@@ p@@ He@@ ad@@ er, in@@ ); int ip@@ H@@ d@@ r@@ Le@@ n = (@@ loc@@ al instanceof java.net.Inet@@ 6@@ Addres@@ s) ? android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ 6@@ _@@ H@@ D@@ R@@ LE@@ N : android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ IP@@ 4@@ _@@ H@@ D@@ R@@ L@@ EN@@ ; int expected@@ Pack@@ et@@ Siz@@ e = ((@@ data@@ With@@ E@@ s@@ p@@ He@@ ad@@ er.@@ length) + (android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ U@@ D@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ )) + ip@@ H@@ d@@ r@@ L@@ en@@ ; android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ U@@ id@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ Pack@@ et@@ Size@@ , 1, expected@@ Pack@@ et@@ Size@@ , 1); android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ Iface@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ Pack@@ et@@ Size@@ , 1, expected@@ Pack@@ et@@ Size@@ , 1); } }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , get@@ Au@@ th@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 3@@ 8@@ 4@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 3@@ 8@@ 4@@ , get@@ Au@@ th@@ Key@@ (@@ 3@@ 8@@ 4@@ ), 1@@ 9@@ 2@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , false@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, get@@ Au@@ th@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 25@@ 6@@ T@@ c@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 25@@ 6@@ , get@@ Au@@ th@@ Key@@ (@@ 25@@ 6@@ ), 12@@ 8@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, get@@ Au@@ th@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , 1, false@@ ); }
public void test@@ I@@ k@@ e@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address local@@ Add@@ r = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ ct@@ s@@ .@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); try (android.net.@@ I@@ p@@ Sec@@ Manager.@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ S@@ ock@@ et enc@@ ap@@ S@@ ock@@ et = m@@ IS@@ M@@ .@@ open@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ Socket@@ ()@@ ;@@ android.net.@@ I@@ p@@ Sec@@ Manager.@@ Sec@@ ur@@ ity@@ Parameter@@ In@@ dex s@@ p@@ i = m@@ IS@@ M@@ .@@ al@@ loc@@ ate@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (@@ local@@ Add@@ r@@ )@@ ;@@ android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m tr@@ an@@ s@@ for@@ m = android.net.@@ ct@@ s@@ .@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ (m@@ Context@@ , s@@ pi@@ , enc@@ ap@@ Socket@@ , local@@ Add@@ r@@ )) { java.io.FileDescriptor so@@ c@@ k = null@@ ; try { so@@ c@@ k = android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ get@@ B@@ ound@@ U@@ d@@ p@@ S@@ ock@@ et@@ (@@ local@@ Add@@ r@@ ); int por@@ t = get@@ P@@ ort@@ (s@@ ock@@ ); m@@ IS@@ M@@ .@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (s@@ ock@@ , I@@ p@@ Sec@@ Manager.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ , tr@@ an@@ s@@ for@@ m@@ ); m@@ IS@@ M@@ .@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (s@@ ock@@ , I@@ p@@ Sec@@ Manager.@@ DI@@ RE@@ C@@ TION@@ _@@ O@@ UT@@ , tr@@ an@@ s@@ for@@ m@@ ); byte@@ [] he@@ ad@@ er = new byte@@ []{ 1, 1, 1 }; java.lang.String mess@@ age = E@@ S@@ P Pack@@ et byte@@ [] dat@@ a = (@@ (@@ new java.lang.String@@ (@@ he@@ ader@@ )) + message@@ )@@ .get@@ Bytes@@ ("@@ UT@@ F@@ -@@ 8@@ "); android.system.@@ O@@ s.@@ send@@ to@@ (s@@ ock@@ , data@@ , 0, data@@ .@@ length@@ , 0, local@@ Add@@ r@@ , enc@@ ap@@ Socket@@ .get@@ P@@ ort@@ ()); he@@ ad@@ er = new byte@@ []{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, data@@ .@@ length@@ , 0, local@@ Add@@ r@@ , enc@@ ap@@ Socket@@ .get@@ P@@ ort@@ ()); byte@@ [] in = new byte@@ [@@ 4@@ ]; in@@ [0@@ ] = 1; android.system.@@ O@@ s.@@ read@@ (@@ enc@@ ap@@ Socket@@ .get@@ Socket@@ (), in@@ , 0, in@@ .@@ length); assert@@ True@@ ("@@ Test@@ ing s@@ ock@@ et re@@ cei@@ ve@@ d U@@ D@@ P@@ -@@ enc@@ ap@@ -@@ E@@ S@@ P dat@@ a des@@ p@@ it@@ e in@@ va@@ li@@ d S@@ P@@ I@@ s@@ ", java.util.Arrays.@@ equals(@@ he@@ ad@@ er, in@@ )); m@@ IS@@ M@@ .@@ remove@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ s(@@ s@@ ock@@ ); } final@@ l@@ y { if (s@@ o@@ c@@ k != null@@ ) { android.system.@@ O@@ s.@@ close@@ (s@@ ock@@ ); } } }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ U@@ d@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 5@@ 12@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 5@@ 12@@ , get@@ Au@@ th@@ Key@@ (@@ 5@@ 12@@ ), 25@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , false@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ U@@ d@@ p@@ 4@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ T@@ c@@ p@@ 6@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, get@@ Au@@ th@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, false@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 6@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , false@@ , 1, true@@ ); }
public void test@@ Interface@@ Coun@@ ter@@ s@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , 1@@ 00@@ 0, false@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ Sh@@ a@@ 1@@ T@@ c@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _S@@ H@@ A@@ 1, get@@ Au@@ th@@ Key@@ (1@@ 6@@ 0@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , 1, false@@ ); }
public void test@@ A@@ es@@ C@@ b@@ c@@ H@@ m@@ ac@@ M@@ d@@ 5@@ U@@ d@@ p@@ 4@@ U@@ d@@ p@@ En@@ c@@ ap@@ () throw@@ s java.lang.Exception { android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Au@@ th@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); check@@ Tr@@ an@@ s@@ for@@ m@@ (android.net.@@ cts.@@ IP@@ P@@ RO@@ TO@@ _@@ U@@ D@@ P@@ , android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ , c@@ ryp@@ t@@ , au@@ th@@ , true@@ , false@@ ); }
public void test@@ I@@ k@@ e@@ O@@ ver@@ U@@ d@@ p@@ En@@ c@@ ap@@ S@@ ock@@ et@@ () throw@@ s java.lang.Exception { java.net.Inet@@ Address loc@@ al = java.net.Inet@@ Addres@@ s.get@@ By@@ Name@@ (android.net.@@ cts.@@ IP@@ V@@ 4@@ _@@ LO@@ O@@ P@@ B@@ AC@@ K@@ ); try (android.net.@@ I@@ p@@ Sec@@ Manager.@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ S@@ ock@@ et enc@@ ap@@ S@@ ock@@ et = m@@ IS@@ M@@ .@@ open@@ U@@ d@@ p@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ Socket@@ ()) { check@@ I@@ k@@ e@@ Pack@@ et@@ (@@ enc@@ ap@@ Socket@@ , local@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m c@@ ryp@@ t = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ C@@ R@@ Y@@ P@@ T_@@ A@@ E@@ S@@ _C@@ B@@ C@@ , C@@ R@@ Y@@ P@@ T_@@ KE@@ Y@@ ); android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m a@@ ut@@ h = new android.net.@@ I@@ p@@ Sec@@ Al@@ gorithm@@ (android.net.@@ I@@ p@@ Sec@@ Al@@ gorith@@ m.@@ A@@ UT@@ H@@ _@@ H@@ M@@ AC@@ _M@@ D@@ 5, get@@ Key@@ (1@@ 2@@ 8@@ ), 9@@ 6@@ ); try (android.net.@@ I@@ p@@ Sec@@ Manager.@@ Sec@@ ur@@ ity@@ Parameter@@ In@@ dex s@@ p@@ i = m@@ IS@@ M@@ .@@ al@@ loc@@ ate@@ Sec@@ ur@@ ity@@ Parameter@@ Index@@ (@@ local@@ )@@ ;@@ android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m = new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m.@@ Builder@@ (m@@ Context@@ ).set@@ En@@ c@@ r@@ y@@ ption@@ (c@@ ryp@@ t@@ ).set@@ Au@@ th@@ enti@@ cation@@ (@@ au@@ th@@ ).set@@ I@@ p@@ v@@ 4@@ En@@ c@@ ap@@ s@@ ul@@ ation@@ (@@ enc@@ ap@@ Socket@@ , enc@@ ap@@ Socket@@ .get@@ P@@ ort@@ ()).@@ build@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (@@ loc@@ al@@ , s@@ p@@ i@@ )); android.net.@@ cts.@@ Java@@ U@@ d@@ p@@ S@@ ock@@ et local@@ S@@ ock@@ et = new android.net.@@ cts.@@ Java@@ U@@ d@@ p@@ Socket@@ (@@ local@@ )) { app@@ ly@@ Tr@@ an@@ s@@ for@@ m@@ B@@ id@@ i@@ re@@ c@@ tion@@ all@@ y@@ (m@@ IS@@ M@@ , tr@@ an@@ s@@ for@@ m@@ , local@@ Socket@@ ); check@@ I@@ k@@ e@@ Pack@@ et@@ (@@ enc@@ ap@@ Socket@@ , local@@ ); } } }
@java.lang.Override public byte@@ [] re@@ cei@@ ve@@ () throw@@ s java.lang.Exception { byte@@ [] in = new byte@@ [@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ DA@@ TA@@ _@@ B@@ U@@ F@@ ER_@@ L@@ EN@@ ]; int@@ [] byte@@ s@@ Re@@ ad = new int@@ []{ }; java.lang.@@ Th@@ re@@ ad read@@ S@@ ock@@ Th@@ re@@ ad = new java.lang.@@ Thread@@ ((@@ ) -@@ > { long start@@ Tim@@ e = java.lang.System.@@ current@@ Time@@ Milli@@ s(); while ((@@ (@@ byte@@ s@@ Read@@ [0@@ ]@@ ) <@@ = 0) && ((@@ java.lang.System.@@ current@@ Time@@ Milli@@ s()) < (@@ start@@ Tim@@ e + (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ S@@ O@@ C@@ K@@ _@@ TI@@ ME@@ O@@ UT@@ )@@ ))) { try { byte@@ s@@ Read@@ [0@@ ] = android.system.@@ O@@ s@@ .@@ re@@ c@@ v@@ f@@ ro@@ m@@ F@@ d@@ , in@@ , 0, android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ DA@@ TA@@ _@@ B@@ U@@ F@@ F@@ ER_@@ LE@@ N@@ , ((@@ android.system.@@ O@@ s@@ Constants.@@ O@@ _N@@ ON@@ B@@ LO@@ C@@ K@@ ) | (android.@@ system.@@ O@@ s@@ Constants.@@ W@@ NO@@ W@@ A@@ I@@ T@@ )), null@@ ); break@@ ; } catch (java.lang.Exception e) { android.util.Log.@@ e@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ TAG, "@@ S@@ ock@@ et en@@ coun@@ ter@@ ed@@ "); read@@ ing f@@ ro@@ m s@@ ock@@ et e); } } }); try { read@@ S@@ ock@@ Thread@@ .@@ start@@ (); read@@ S@@ ock@@ Thread@@ .@@ j@@ o@@ in@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ B@@ ase@@ Test.@@ S@@ O@@ C@@ K@@ _@@ TI@@ ME@@ O@@ UT@@ ); } catch (java.lang.Exception e) { throw new java.io.IO@@ Exception@@ ("@@ Faile@@ d to re@@ cei@@ v@@ e f@@ ro@@ m s@@ ock@@ et }@@ "); } if (@@ byte@@ s@@ Read@@ [0@@ ]@@ ) <@@ = 0) { throw new java.io.IO@@ Exception@@ ("@@ S@@ ock@@ et dat@@ a re@@ cei@@ ve@@ d f@@ ro@@ m s@@ ock@@ et }@@ "); } return java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e@@ (in, 0, byte@@ s@@ Re@@ ad@@ [0@@ ]@@ ); }
public void run() { int TA@@ R@@ GE@@ T = 4@@ 2@@ ; while (@@ continue@@ Bu@@ s@@ y@@ L@@ oo@@ p@@ ) { in@@ Bu@@ s@@ y@@ L@@ oo@@ p = true@@ ; } java.lang.@@ tim@@ e.@@ In@@ stan@@ t os@@ De@@ ad@@ lin@@ e = java.@@ tim@@ e.@@ In@@ stan@@ t.@@ no@@ w@@ ().@@ p@@ lu@@ s@@ Sec@@ ond@@ s@@ ((@@ exp@@ ect@@ O@@ s@@ r ? 6@@ 0@@ 0 : 3@@ )); do@@ { Main.@@ en@@ su@@ re@@ J@@ it@@ Comp@@ ile@@ d@@ (@@ Main.@@ Int@@ Runner@@ .@@ class@@ , "@@ run@@ "); } while (((@@ Main.@@ has@@ J@@ it@@ ()) && (!(@@ Main.@@ is@@ In@@ O@@ s@@ r@@ Code@@ ("@@ run@@ "@@ )@@ ))) && ((@@ os@@ r@@ De@@ ad@@ lin@@ e.@@ com@@ par@@ e@@ To@@ (@@ java.@@ tim@@ e.@@ In@@ stan@@ t.@@ no@@ w@@ ())) > 0) ); if (@@ Main.@@ has@@ J@@ it@@ ()) { boolean in@@ O@@ s@@ r = Main.@@ is@@ In@@ O@@ s@@ r@@ Code@@ ("@@ run@@ "); if ((@@ exp@@ ect@@ O@@ s@@ r@@ ) && (!@@ in@@ O@@ s@@ r@@ )) { throw new java.lang.@@ Error@@ ("@@ Un@@ able to b@@ e in O@@ S@@ R bu@@ t w@@ a@@ s not@@ .@@ "); } else if ((@@ !@@ (@@ exp@@ ect@@ O@@ s@@ r@@ )) && in@@ O@@ s@@ r@@ ) { throw new java.lang.@@ Error@@ ("@@ Un@@ able not to b@@ e in O@@ S@@ R bu@@ t w@@ as@@ .@@ "); } } Main.@@ re@@ port@@ Value@@ (@@ TA@@ R@@ GE@@ T@@ ); }
public synchronized void set@@ Do@@ z@@ e@@ Mode@@ (@@ boolean is@@ Enabled@@ ) { if ((m@@ In@@ Do@@ z@@ e@@ Mode@@ ) == is@@ Enabled@@ ) return@@ ; m@@ In@@ Do@@ z@@ e@@ Mod@@ e = is@@ Enabled@@ ; in@@ stall@@ New@@ Pro@@ g@@ ram@@ Lock@@ ed@@ (); }
public static android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter m@@ ay@@ b@@ e@@ Create@@ (@@ android@@ .@@ int@@ er@@ n@@ al.@@ net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ Ap@@ f@@ Configur@@ ation config@@ , android.net.@@ util.@@ Interface@@ Param@@ s if@@ Param@@ s, android.net.@@ ip.@@ I@@ p@@ C@@ li@@ ent.@@ Call@@ b@@ ac@@ k ip@@ Client@@ Callback@@ ) { if (@@ con@@ tex@@ t == null@@ ) || (@@ con@@ fi@@ g == null@@ )) || (@@ if@@ Param@@ s == null@@ )) return null@@ ; android.net.@@ ap@@ f.@@ Ap@@ f@@ Cap@@ abili@@ ti@@ es ap@@ f@@ Cap@@ abili@@ ti@@ es = config.@@ ap@@ f@@ Cap@@ abili@@ ties@@ ; if (@@ ap@@ f@@ Cap@@ abili@@ ti@@ es == null@@ ) return null@@ ; if ((@@ ap@@ f@@ Cap@@ abili@@ ti@@ es.@@ ap@@ f@@ Version@@ Sup@@ ported@@ ) == 0) return null@@ ; if ((@@ ap@@ f@@ Cap@@ abili@@ ti@@ es.@@ max@@ im@@ um@@ Ap@@ f@@ Pro@@ g@@ ram@@ Siz@@ e) < 5@@ 12@@ ) { android.util.Log.@@ e@@ (android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ TAG, ("@@ N@@ o s@@ m@@ al@@ l AP@@ F li@@ m@@ it@@ : " + (@@ ap@@ f@@ Cap@@ abili@@ ti@@ es.@@ max@@ im@@ um@@ Ap@@ f@@ Pro@@ g@@ ram@@ Size@@ ))); return null@@ ; } if ((@@ ap@@ f@@ Cap@@ abili@@ ti@@ es.@@ ap@@ f@@ Pack@@ et@@ Format@@ ) != (@@ AR@@ P@@ H@@ R@@ D_@@ E@@ TH@@ ER@@ )) return null@@ ; if (!@@ (@@ new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ ().@@ set@@ Ap@@ f@@ Version@@ (@@ ap@@ f@@ Cap@@ abili@@ ti@@ es.@@ ap@@ f@@ Version@@ Sup@@ ported@@ ))) { android.util.Log.@@ e@@ (android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ TAG, ("@@ C@@ au@@ g@@ h@@ t AP@@ F version@@ : " + (@@ ap@@ f@@ Cap@@ abili@@ ti@@ es.@@ ap@@ f@@ Version@@ Sup@@ ported@@ ))); return null@@ ; } android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter ap@@ f@@ Fil@@ ter = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Filter@@ (@@ config@@ , if@@ Param@@ s, ip@@ Client@@ Callback@@ , new android.net.@@ m@@ et@@ ri@@ c@@ s.@@ I@@ p@@ Connectivity@@ Log@@ ()); con@@ text.@@ register@@ Recei@@ ver@@ (@@ new android.content.@@ B@@ roadcast@@ Recei@@ ver@@ () { @java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { java.lang.String ac@@ tion = int@@ ent.get@@ Action@@ (); if (@@ action@@ .@@ equals(@@ Po@@ w@@ er@@ Manager.@@ AC@@ TION@@ _@@ DE@@ V@@ IC@@ E_@@ ID@@ LE@@ _MOD@@ E_@@ CH@@ AN@@ GE@@ D@@ )) { android.os.@@ Po@@ w@@ er@@ Manager po@@ w@@ er@@ Manager = ((@@ android.os.@@ Po@@ w@@ er@@ Manager@@ ) (@@ con@@ tex@@ t.get@@ System@@ Service@@ (@@ Context.@@ P@@ O@@ W@@ ER@@ _S@@ ER@@ V@@ IC@@ E@@ ))); final boolean device@@ Id@@ le = po@@ w@@ er@@ Manager.@@ is@@ Device@@ Id@@ le@@ Mode@@ (); ap@@ f@@ Fil@@ ter.@@ set@@ Do@@ z@@ e@@ Mode@@ (@@ device@@ Id@@ le@@ ); } } }@@ , new android.content.@@ Intent@@ Filter@@ (android.os.@@ Po@@ w@@ er@@ Manager.@@ AC@@ TION@@ _@@ DE@@ V@@ IC@@ E_@@ ID@@ LE@@ _MOD@@ E_@@ CH@@ AN@@ GE@@ D@@ )); return ap@@ f@@ Filter@@ ; }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Set@@ P@@ s@@ No@@ t@@ if@@ ic@@ ation@@ s() { android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager n@@ m = mock@@ (android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager@@ .@@ class@@ ); do@@ Return@@ (@@ n@@ m@@ ).@@ when@@ (m@@ Context@@ )@@ .get@@ System@@ Service@@ (@@ e@@ q@@ (@@ Context.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ )); m@@ Context@@ Fi@@ xt@@ ure@@ .@@ put@@ Boolean@@ Resource@@ (@@ R.@@ b@@ oo@@ l.@@ config@@ _@@ user@@ _@@ not@@ if@@ ic@@ ation@@ _@@ o@@ f@@ _@@ res@@ tr@@ ic@@ ti@@ ed@@ _@@ mo@@ b@@ ile@@ _@@ ac@@ ces@@ s, true@@ ); do@@ Return@@ (@@ new android.content.@@ p@@ m.@@ Application@@ Info@@ ()).@@ when@@ (m@@ Context@@ )@@ .get@@ Application@@ Info@@ (); android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ D@@ raw@@ able mock@@ D@@ raw@@ able = mock@@ (android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ D@@ raw@@ able@@ .@@ class@@ ); android.content.@@ res@@ .@@ Resource@@ s mock@@ Resource@@ s = m@@ Contex@@ t.get@@ Res@@ ources@@ (); when@@ (m@@ ock@@ Res@@ ources@@ .get@@ D@@ raw@@ able@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ ()@@ )).@@ thenReturn@@ (m@@ ock@@ D@@ raw@@ able@@ ); m@@ Context@@ Fi@@ xt@@ ure@@ .@@ put@@ Resource@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ str@@ ing.@@ Res@@ tr@@ ic@@ ted@@ On@@ Data@@ T@@ it@@ le@@ , "@@ X@@ "); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ P@@ S_@@ EN@@ AB@@ LE@@ D@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ > not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ tor = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (@@ n@@ m@@ ).@@ not@@ if@@ y@@ (@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ (), not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ t@@ or.@@ c@@ ap@@ t@@ ure@@ ()); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation pos@@ ted@@ No@@ t@@ if@@ ic@@ ation = not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ t@@ or@@ .get@@ Value@@ (); assert@@ True@@ (@@ not@@ if@@ ic@@ ation@@ Has@@ T@@ it@@ le@@ Set@@ (@@ pos@@ ted@@ No@@ t@@ if@@ ic@@ ation@@ )); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ P@@ S_@@ D@@ IS@@ AB@@ LE@@ D@@ ); ve@@ r@@ if@@ y@@ (@@ n@@ m@@ ).@@ can@@ cel@@ (@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ ()); }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Set@@ C@@ s@@ No@@ t@@ if@@ ic@@ ation@@ s() { android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager n@@ m = mock@@ (android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager@@ .@@ class@@ ); do@@ Return@@ (@@ n@@ m@@ ).@@ when@@ (m@@ Context@@ )@@ .get@@ System@@ Service@@ (@@ e@@ q@@ (@@ Context.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ )); m@@ Context@@ Fi@@ xt@@ ure@@ .@@ put@@ Boolean@@ Resource@@ (@@ R.@@ b@@ oo@@ l.@@ config@@ _@@ user@@ _@@ not@@ if@@ ic@@ ation@@ _@@ o@@ f@@ _@@ res@@ tr@@ ic@@ ti@@ ed@@ _@@ mo@@ b@@ ile@@ _@@ ac@@ ces@@ s, true@@ ); do@@ Return@@ (@@ new android.content.@@ p@@ m.@@ Application@@ Info@@ ()).@@ when@@ (m@@ Context@@ )@@ .get@@ Application@@ Info@@ (); android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ D@@ raw@@ able mock@@ D@@ raw@@ able = mock@@ (android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ D@@ raw@@ able@@ .@@ class@@ ); android.content.@@ res@@ .@@ Resource@@ s mock@@ Resource@@ s = m@@ Contex@@ t.get@@ Res@@ ources@@ (); when@@ (m@@ ock@@ Res@@ ources@@ .get@@ D@@ raw@@ able@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ ()@@ )).@@ thenReturn@@ (m@@ ock@@ D@@ raw@@ able@@ ); m@@ Context@@ Fi@@ xt@@ ure@@ .@@ put@@ Resource@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ str@@ ing.@@ Res@@ tr@@ ic@@ ted@@ On@@ All@@ V@@ o@@ i@@ ce@@ T@@ it@@ le@@ , "@@ X@@ "); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S_@@ EN@@ AB@@ LE@@ D@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ > not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ tor = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (@@ n@@ m@@ ).@@ not@@ if@@ y@@ (@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ (), not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ t@@ or.@@ c@@ ap@@ t@@ ure@@ ()); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation pos@@ ted@@ No@@ t@@ if@@ ic@@ ation = not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ t@@ or@@ .get@@ Value@@ (); assert@@ True@@ (@@ not@@ if@@ ic@@ ation@@ Has@@ T@@ it@@ le@@ Set@@ (@@ pos@@ ted@@ No@@ t@@ if@@ ic@@ ation@@ )); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S_@@ D@@ IS@@ AB@@ LE@@ D@@ ); ve@@ r@@ if@@ y@@ (@@ n@@ m@@ ).@@ can@@ cel@@ (@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ (), an@@ y@@ Int@@ ()); }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Set@@ C@@ s@@ E@@ merg@@ enc@@ y@@ No@@ t@@ if@@ ic@@ ation@@ s() { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er s@@ p@@ y@@ S@@ s@@ t = s@@ p@@ y@@ (s@@ st@@ ); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager n@@ m = mock@@ (android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager@@ .@@ class@@ ); do@@ Return@@ (@@ n@@ m@@ ).@@ when@@ (m@@ Context@@ )@@ .get@@ System@@ Service@@ (@@ e@@ q@@ (@@ Context.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ )); m@@ Context@@ Fi@@ xt@@ ure@@ .@@ put@@ Boolean@@ Resource@@ (@@ R.@@ b@@ oo@@ l.@@ config@@ _@@ user@@ _@@ not@@ if@@ ic@@ ation@@ _@@ o@@ f@@ _@@ res@@ tr@@ ic@@ ti@@ ed@@ _@@ mo@@ b@@ ile@@ _@@ ac@@ ces@@ s, true@@ ); do@@ Return@@ (@@ new android.content.@@ p@@ m.@@ Application@@ Info@@ ()).@@ when@@ (m@@ Context@@ )@@ .get@@ Application@@ Info@@ (); android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ D@@ raw@@ able mock@@ D@@ raw@@ able = mock@@ (android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ D@@ raw@@ able@@ .@@ class@@ ); android.content.@@ res@@ .@@ Resource@@ s mock@@ Resource@@ s = m@@ Contex@@ t.get@@ Res@@ ources@@ (); when@@ (m@@ ock@@ Res@@ ources@@ .get@@ D@@ raw@@ able@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ ()@@ )).@@ thenReturn@@ (m@@ ock@@ D@@ raw@@ able@@ ); m@@ Context@@ Fi@@ xt@@ ure@@ .@@ put@@ Resource@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ str@@ ing.@@ Res@@ tr@@ ic@@ ted@@ On@@ E@@ merg@@ enc@@ y@@ T@@ it@@ le@@ , "@@ X@@ "); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S_@@ E@@ M@@ ER@@ G@@ EN@@ C@@ Y_@@ EN@@ AB@@ LE@@ D@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ > not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ tor = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (@@ n@@ m@@ ).@@ not@@ if@@ y@@ (@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ (), not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ t@@ or.@@ c@@ ap@@ t@@ ure@@ ()); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation pos@@ ted@@ No@@ t@@ if@@ ic@@ ation = not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ t@@ or@@ .get@@ Value@@ (); assert@@ True@@ (@@ not@@ if@@ ic@@ ation@@ Has@@ T@@ it@@ le@@ Set@@ (@@ pos@@ ted@@ No@@ t@@ if@@ ic@@ ation@@ )); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S_@@ D@@ IS@@ AB@@ LE@@ D@@ ); ve@@ r@@ if@@ y@@ (@@ n@@ m@@ ).@@ can@@ cel@@ (@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ ()); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S@@ _RE@@ J@@ EC@@ T_@@ C@@ A@@ US@@ E_@@ EN@@ AB@@ LE@@ D@@ ); }
@org.junit.Test @@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ S@@ m@@ all@@ Test public void test@@ Set@@ C@@ s@@ N@@ or@@ m@@ al@@ No@@ t@@ if@@ ic@@ ation@@ s() { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Service@@ State@@ Tr@@ ack@@ er s@@ p@@ y@@ S@@ s@@ t = s@@ p@@ y@@ (s@@ st@@ ); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager n@@ m = mock@@ (android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ Manager@@ .@@ class@@ ); do@@ Return@@ (@@ n@@ m@@ ).@@ when@@ (m@@ Context@@ )@@ .get@@ System@@ Service@@ (@@ e@@ q@@ (@@ Context.@@ NO@@ TI@@ F@@ IC@@ AT@@ ION@@ _S@@ ER@@ V@@ IC@@ E@@ )); m@@ Context@@ Fi@@ xt@@ ure@@ .@@ put@@ Boolean@@ Resource@@ (@@ R.@@ b@@ oo@@ l.@@ config@@ _@@ user@@ _@@ not@@ if@@ ic@@ ation@@ _@@ o@@ f@@ _@@ res@@ tr@@ ic@@ ti@@ ed@@ _@@ mo@@ b@@ ile@@ _@@ ac@@ ces@@ s, true@@ ); do@@ Return@@ (@@ new android.content.@@ p@@ m.@@ Application@@ Info@@ ()).@@ when@@ (m@@ Context@@ )@@ .get@@ Application@@ Info@@ (); android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ D@@ raw@@ able mock@@ D@@ raw@@ able = mock@@ (android.@@ g@@ rap@@ h@@ ic@@ s.@@ d@@ raw@@ ab@@ le.@@ D@@ raw@@ able@@ .@@ class@@ ); android.content.@@ res@@ .@@ Resource@@ s mock@@ Resource@@ s = m@@ Contex@@ t.get@@ Res@@ ources@@ (); when@@ (m@@ ock@@ Res@@ ources@@ .get@@ D@@ raw@@ able@@ (@@ an@@ y@@ Int@@ (), an@@ y@@ ()@@ )).@@ thenReturn@@ (m@@ ock@@ D@@ raw@@ able@@ ); m@@ Context@@ Fi@@ xt@@ ure@@ .@@ put@@ Resource@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ str@@ ing.@@ Res@@ tr@@ ic@@ ted@@ On@@ N@@ or@@ m@@ al@@ T@@ it@@ le@@ , "@@ X@@ "); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S@@ _N@@ OR@@ M@@ AL@@ _@@ EN@@ AB@@ LE@@ D@@ ); org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ <@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ > not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ tor = org.@@ mock@@ it@@ o.@@ Argument@@ Cap@@ t@@ or@@ .@@ for@@ Clas@@ s(@@ android.@@ app.@@ No@@ t@@ if@@ ic@@ ation@@ .@@ class@@ ); ve@@ r@@ if@@ y@@ (@@ n@@ m@@ ).@@ not@@ if@@ y@@ (@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ (), not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ t@@ or.@@ c@@ ap@@ t@@ ure@@ ()); android.@@ app.@@ No@@ t@@ if@@ ic@@ ation pos@@ ted@@ No@@ t@@ if@@ ic@@ ation = not@@ if@@ ic@@ ation@@ Argument@@ Cap@@ t@@ or@@ .get@@ Value@@ (); assert@@ True@@ (@@ not@@ if@@ ic@@ ation@@ Has@@ T@@ it@@ le@@ Set@@ (@@ pos@@ ted@@ No@@ t@@ if@@ ic@@ ation@@ )); s@@ p@@ y@@ S@@ s@@ t.@@ set@@ No@@ t@@ if@@ ic@@ ation@@ (@@ Service@@ State@@ Tr@@ ack@@ er.@@ C@@ S_@@ D@@ IS@@ AB@@ LE@@ D@@ ); ve@@ r@@ if@@ y@@ (@@ n@@ m@@ ).@@ can@@ cel@@ (@@ an@@ y@@ String@@ (), an@@ y@@ Int@@ ()); }
private void wait@@ For@@ Ac@@ tive@@ Network@@ M@@ eter@@ ed@@ (@@ boolean m@@ eter@@ ed@@ ) throw@@ s java.lang.Exception { final java.util.@@ concurrent.@@ Count@@ Do@@ wn@@ L@@ at@@ ch lat@@ ch = new java.util.@@ concurrent.@@ Count@@ Do@@ wn@@ L@@ atch@@ (1@@ ); final android.net.@@ Connectivity@@ Manager.@@ Network@@ Call@@ b@@ ac@@ k network@@ Call@@ b@@ ac@@ k = new android.net.@@ Connectivity@@ Manager.@@ Network@@ Callback@@ () { @java.lang.Override public void on@@ Cap@@ abili@@ ties@@ Changed@@ (android.net.@@ Net@@ wor@@ k network@@ , android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { if ((@@ n@@ c.@@ has@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T@@ _M@@ E@@ D@@ )) != m@@ eter@@ ed@@ ) { l@@ atch@@ .@@ count@@ Do@@ wn@@ (); } } }; mC@@ m.@@ register@@ Default@@ Network@@ Callback@@ (@@ network@@ Callback@@ ); if (!(@@ l@@ atch@@ .@@ aw@@ ait@@ (android.net.@@ cts.@@ Connectivity@@ Manager@@ Test.@@ N@@ E@@ T@@ W@@ OR@@ K@@ _C@@ H@@ AN@@ GE@@ _M@@ E@@ TER@@ E@@ D@@ N@@ E@@ SS@@ _@@ TI@@ ME@@ O@@ UT@@ , java.util.@@ concurrent.@@ Time@@ Un@@ it.@@ M@@ IL@@ L@@ IS@@ EC@@ ON@@ D@@ S@@ ))) { fail@@ ((@@ (("@@ Time@@ d out wait@@ ing for ac@@ tiv@@ e net@@ wor@@ k m@@ eter@@ ed statu@@ s to ch@@ ang@@ e to " + m@@ eter@@ ed@@ ) + " ; network@@ Info = ") + (m@@ C@@ m@@ .get@@ Ac@@ tive@@ Network@@ ()))); } mC@@ m.@@ un@@ register@@ Network@@ Callback@@ (@@ network@@ Callback@@ ); }
@java.lang.Override public void on@@ Cap@@ abili@@ ties@@ Changed@@ (android.net.@@ Net@@ wor@@ k network@@ , android.net.@@ Network@@ Cap@@ abili@@ ti@@ es n@@ c@@ ) { if ((@@ n@@ c.@@ has@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T@@ _M@@ E@@ TER@@ E@@ D@@ )) != m@@ eter@@ ed@@ ) { l@@ atch@@ .@@ count@@ Do@@ wn@@ (); } }
private java.lang.String get@@ W@@ if@@ i@@ M@@ eter@@ ed@@ Statu@@ s(@@ java.lang.String ss@@ id@@ ) throw@@ s java.lang.Exception { final java.lang.String com@@ man@@ d = "@@ c@@ m@@ d net@@ po@@ lic@@ y li@@ s@@ t w@@ if@@ i@@ -@@ network@@ s@@ "; final java.lang.String po@@ lic@@ y@@ Str@@ ing = run@@ Sh@@ ell@@ Command@@ (m@@ In@@ strument@@ ation@@ , command@@ ); final java.util.@@ reg@@ ex@@ .@@ Match@@ er m = java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ((@@ ("@@ ^@@ " + ss@@ id@@ ) + "@@ ;@@ (@@ true@@ |@@ false@@ |@@ n@@ one@@ )@@ $@@ "), ((@@ java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ M@@ UL@@ T@@ IL@@ IN@@ E@@ ) | (java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ UN@@ I@@ X@@ _@@ L@@ IN@@ E@@ S@@ ))@@ ).@@ match@@ er(@@ po@@ lic@@ y@@ String@@ ); if (!(m@@ .@@ find@@ ())) { throw new java.lang.@@ RuntimeException@@ ("@@ U@@ ne@@ x@@ pec@@ ted for@@ ma@@ t f@@ ro@@ m c@@ m@@ d net@@ po@@ lic@@ y@@ "); } return m.@@ g@@ roup@@ (1@@ ); }
public static void main@@ (@@ java.lang.String[] arg@@ s) { Main.@@ exp@@ ect@@ Equal@@ s(@@ 1@@ 0, M@@ ain@@ .@@ ab@@ s@@ I@@ ((@@ -1@@ 0@@ ))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0, Main.@@ ab@@ s@@ I@@ (@@ 2@@ 0@@ )); Main.@@ exp@@ ect@@ Equal@@ s(@@ 10@@ L@@ , Main.@@ ab@@ s@@ L@@ ((@@ -1@@ 0@@ L@@ ))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0@@ L@@ , Main.@@ ab@@ s@@ L@@ (@@ 2@@ 0@@ L@@ )); Main.@@ exp@@ ect@@ Equal@@ s(@@ 1@@ 0, M@@ ain@@ .@@ ab@@ s@@ 1@@ ((@@ -1@@ 0@@ ))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0, Main.@@ ab@@ s@@ 1@@ (@@ 2@@ 0@@ )); Main.@@ exp@@ ect@@ Equal@@ s(@@ 1@@ 0, Main.@@ ab@@ s@@ 2@@ ((@@ -1@@ 0@@ ))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0, Main.@@ ab@@ s@@ 2@@ (@@ 2@@ 0@@ )); Main.@@ exp@@ ect@@ Equal@@ s(@@ 1@@ 0, Main.@@ ab@@ s@@ 3@@ ((@@ -1@@ 0@@ ))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0, Main.@@ ab@@ s@@ 3@@ (@@ 2@@ 0@@ )); Main.@@ exp@@ ect@@ Equal@@ s(@@ 1@@ 0, Main.@@ ab@@ s@@ 4@@ ((@@ -1@@ 0@@ ))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0, Main.@@ ab@@ s@@ 4@@ (@@ 2@@ 0@@ )); Main.@@ exp@@ ect@@ Equal@@ s(@@ 1@@ 0, Main.@@ ab@@ s@@ 4@@ ((@@ (@@ short@@ ) (-1@@ 0@@ )))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0, Main.@@ ab@@ s@@ 4@@ ((@@ (@@ short@@ ) (@@ 2@@ 0@@ )))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 1@@ 0, Main.@@ ab@@ s@@ 6@@ ((@@ (@@ byte@@ ) (-1@@ 0@@ )))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0, Main.@@ ab@@ s@@ 6@@ ((@@ (@@ byte@@ ) (@@ 2@@ 0@@ )))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 10@@ L@@ , Main.@@ ab@@ s@@ 7@@ ((@@ -1@@ 0@@ L@@ ))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 2@@ 0@@ L@@ , Main.@@ ab@@ s@@ 7@@ (@@ 2@@ 0@@ L@@ )); Main.@@ exp@@ ect@@ Equal@@ s(@@ 1, Main.@@ z@@ ab@@ s@@ 1@@ ((@@ (@@ byte@@ ) (1@@ )))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 25@@ 5, Main.@@ z@@ ab@@ s@@ 1@@ ((@@ (@@ byte@@ ) (-1@@ )))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 1, Main.@@ z@@ ab@@ s@@ 2@@ ((@@ (@@ short@@ ) (1@@ )))); Main.@@ exp@@ ect@@ Equal@@ s(@@ 6@@ 5@@ 3@@ 5, Main.@@ z@@ ab@@ s@@ 2@@ ((@@ (@@ short@@ ) (-1@@ )))); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ p@@ as@@ sed@@ "); }
public void set@@ C@@ ar@@ ri@@ er@@ Info@@ For@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ (@@ int sub@@ Id, java.lang.String call@@ ing@@ Package@@ , android.@@ telephony.@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info@@ ) { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ Ph@@ on@@ e phon@@ e = get@@ Phone@@ (s@@ u@@ b@@ Id@@ ); if (@@ phon@@ e != null@@ ) { phon@@ e.@@ set@@ C@@ ar@@ ri@@ er@@ Info@@ For@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ (@@ im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info@@ ); } else { log@@ e@@ (("@@ set@@ C@@ ar@@ ri@@ er@@ Info@@ For@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ (@@ im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info@@ ); } }
private void e@@ n@@ for@@ ce@@ Mo@@ d@@ if@@ y@@ Permission@@ () { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ W@@ rap@@ per@@ , com.android.server.@@ w@@ if@@ i.@@ hotspot2.@@ p@@ p@@ s.@@ User@@ Manager@@ Test.@@ N@@ E@@ T@@ , com.android.server.@@ w@@ if@@ i.@@ p@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ OD@@ I@@ F@@ Y@@ _P@@ H@@ ON@@ E_@@ STA@@ TE@@ , "@@ Requ@@ i@@ re@@ s M@@ OD@@ I@@ F@@ Y@@ _P@@ H@@ ON@@ E_@@ STA@@ TE@@ "); }
public static java.net.Inet@@ Address@@ [] b@@ lock@@ ing@@ Res@@ ol@@ ve@@ All@@ Loc@@ all@@ y@@ (android.net.@@ Net@@ wor@@ k network@@ , java.lang.String name@@ ) throw@@ s java.net.@@ Un@@ k@@ no@@ wn@@ Host@@ Exception { final android.system.@@ Str@@ u@@ ct@@ Add@@ r@@ in@@ f@@ o h@@ int@@ s = new android.system.@@ Str@@ u@@ ct@@ Add@@ r@@ in@@ fo@@ (); h@@ int@@ s.@@ a@@ i@@ _@@ flag@@ s = 0; h@@ int@@ s.@@ a@@ i@@ _@@ f@@ am@@ il@@ y = android.system.@@ O@@ s@@ Constants.@@ A@@ F@@ _@@ UN@@ S@@ P@@ EC@@ ; h@@ int@@ s.@@ a@@ i@@ _@@ s@@ ock@@ type = android.system.@@ O@@ s@@ Constants.@@ S@@ O@@ C@@ K@@ _@@ D@@ G@@ R@@ AM@@ ; final android.net.@@ Net@@ wor@@ k network@@ For@@ Res@@ ol@@ v = android.net.@@ d@@ n@@ s.@@ Res@@ ol@@ v@@ Uti@@ l.get@@ Network@@ With@@ U@@ se@@ Local@@ Nam@@ es@@ er@@ ver@@ s@@ Flag@@ (@@ network@@ ); try { return Lib@@ core.@@ os.@@ android@@ _@@ get@@ add@@ r@@ in@@ fo@@ (@@ name@@ , h@@ int@@ s, (@@ (@@ int@@ ) (@@ network@@ For@@ Res@@ ol@@ v@@ .@@ net@@ Id@@ ))); } catch (android.@@ system.@@ G@@ a@@ i@@ Exception g@@ a@@ i@@ ) { g@@ a@@ i.@@ r@@ e@@ throw@@ As@@ Un@@ k@@ no@@ wn@@ Host@@ Exception@@ ("@@ T@@ L@@ S@@ -@@ b@@ yp@@ as@@ s res@@ ol@@ uti@@ on fa@@ ile@@ d@@ "); return null@@ ; } }
public android.@@ telephony.@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info get@@ C@@ ar@@ ri@@ er@@ Info@@ For@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ (@@ int key@@ Typ@@ e) { try { com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ I@@ Phone@@ Sub@@ Info in@@ f@@ o = get@@ Sub@@ s@@ cri@@ b@@ er@@ Info@@ (); if (in@@ f@@ o == null@@ ) { throw new java.lang.@@ RuntimeException@@ ("@@ get@@ C@@ ar@@ ri@@ er@@ Info@@ For@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ : error@@ : Sub@@ s@@ cri@@ b@@ er Info is null@@ "); } int sub@@ Id = get@@ Sub@@ Id@@ (android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ get@@ Default@@ Data@@ Sub@@ s@@ cription@@ Id@@ ()); if ((@@ key@@ Type != (android.@@ telephony.@@ Telephony@@ Manager.@@ KE@@ Y_@@ TYP@@ E_@@ E@@ P@@ D@@ G@@ )) && (@@ key@@ Type != (android.@@ telephony.@@ Telephony@@ Manager.@@ KE@@ Y_@@ TYP@@ E_@@ W@@ L@@ AN@@ ))) { throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ N@@ o error@@ : In@@ va@@ li@@ d k@@ ey type } android.@@ telephony.@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info = in@@ fo@@ .get@@ C@@ ar@@ ri@@ er@@ Info@@ For@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ (s@@ u@@ b@@ Id, key@@ Type, m@@ Contex@@ t.get@@ Op@@ Package@@ Name@@ ()); if ((@@ im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info == null@@ ) && (is@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Requ@@ i@@ re@@ d@@ (s@@ u@@ b@@ Id, key@@ Type@@ ))) { android.@@ telephony.@@ R@@ log.@@ e@@ (android.@@ telephony.@@ Telephony@@ Manager.@@ TAG, "@@ get@@ C@@ ar@@ ri@@ er@@ Info@@ For@@ Im@@ si@@ En@@ c@@ r@@ y@@ ption@@ Info error@@ : k@@ ey is requ@@ i@@ re@@ d bu@@ t not fo@@ und@@ "); } return null@@ ; }
@java.lang.Override protected void on@@ Create@@ (android.os.@@ Bund@@ le s@@ av@@ ed@@ Instance@@ State@@ ) { super@@ .@@ on@@ Create@@ (s@@ av@@ ed@@ Instance@@ State@@ ); android.@@ view@@ .@@ Vi@@ e@@ w vi@@ e@@ w = get@@ Layout@@ Inf@@ lat@@ er@@ ().@@ in@@ f@@ l@@ ate@@ (@@ R.@@ layout.@@ vo@@ i@@ ce@@ ma@@ il@@ _@@ h@@ ide@@ _@@ r@@ ing@@ t@@ one@@ _@@ setting@@ s, null@@ ); set@@ Content@@ View@@ (@@ view@@ ); set@@ Info@@ Res@@ ources@@ (@@ R.@@ str@@ ing.@@ r@@ ing@@ t@@ one@@ _@@ setting@@ s@@ _@@ check@@ _test@@ , R.@@ str@@ ing.@@ r@@ ing@@ t@@ one@@ _@@ setting@@ s@@ _@@ check@@ _@@ in@@ stru@@ c@@ tion@@ s, (-1@@ )); set@@ P@@ ass@@ Fail@@ B@@ utton@@ C@@ li@@ ck@@ Listener@@ s(); get@@ P@@ ass@@ B@@ utton@@ ().@@ set@@ Enabled@@ (@@ false@@ ); m@@ Not@@ Appli@@ c@@ able@@ B@@ utt@@ on = find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ vo@@ i@@ ce@@ ma@@ il@@ _@@ h@@ ide@@ _@@ r@@ ing@@ t@@ one@@ _@@ setting@@ s@@ _@@ not@@ _@@ app@@ lic@@ able@@ ); m@@ Open@@ V@@ o@@ i@@ ce@@ Ma@@ il@@ Setting@@ s@@ B@@ utt@@ on = find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ open@@ _@@ vo@@ i@@ ce@@ ma@@ il@@ _@@ setting@@ s); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ Des@@ Not@@ Ex@@ ist@@ B@@ utt@@ on = find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .set@@ ting@@ s@@ _@@ h@@ id@@ d@@ en@@ ); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ Ex@@ ist@@ s@@ B@@ utt@@ on = find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .set@@ ting@@ s@@ _@@ not@@ _@@ h@@ id@@ d@@ en@@ ); m@@ R@@ est@@ ore@@ Default@@ Di@@ al@@ er@@ Im@@ age = find@@ View@@ By@@ Id@@ (@@ R.@@ id@@ .@@ r@@ est@@ ore@@ _@@ default@@ _@@ di@@ al@@ er@@ _@@ im@@ age@@ ); m@@ Not@@ Appli@@ c@@ able@@ B@@ utt@@ on@@ .set@@ On@@ C@@ li@@ ck@@ Listener@@ (@@ new android.@@ view@@ .@@ View@@ .@@ On@@ C@@ li@@ ck@@ Listener@@ () { @java.lang.Override public void on@@ C@@ li@@ ck@@ (android.@@ view@@ .@@ Vi@@ e@@ w v@@ ) { get@@ P@@ ass@@ B@@ utton@@ ().@@ set@@ Enabled@@ (@@ true@@ ); m@@ Open@@ V@@ o@@ i@@ ce@@ Ma@@ il@@ Setting@@ s@@ B@@ utton@@ .set@@ Enabled@@ (@@ false@@ ); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ Des@@ Not@@ Ex@@ ist@@ B@@ utton@@ .set@@ Enabled@@ (@@ false@@ ); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ Ex@@ ist@@ s@@ B@@ utton@@ .set@@ Enabled@@ (@@ false@@ ); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ Ex@@ ist@@ s@@ B@@ utton@@ .set@@ Enabled@@ (@@ false@@ ); m@@ R@@ est@@ ore@@ Default@@ Di@@ al@@ er@@ Im@@ age.@@ set@@ Image@@ D@@ raw@@ able@@ (get@@ D@@ raw@@ able@@ (@@ R.@@ d@@ raw@@ ab@@ le.@@ f@@ s@@ _@@ war@@ ning@@ )); } }); m@@ Open@@ V@@ o@@ i@@ ce@@ Ma@@ il@@ Setting@@ s@@ B@@ utton@@ .set@@ On@@ C@@ li@@ ck@@ Listener@@ (@@ new android.@@ view@@ .@@ View@@ .@@ On@@ C@@ li@@ ck@@ Listener@@ () { @java.lang.Override public void on@@ C@@ li@@ ck@@ (android.@@ view@@ .@@ Vi@@ e@@ w v@@ ) { start@@ Activity@@ (@@ new android.content.@@ Intent@@ (android.@@ telephony.@@ Telephony@@ Manager.@@ AC@@ TION@@ _C@@ ON@@ FI@@ G@@ UR@@ E_@@ V@@ O@@ IC@@ E@@ MA@@ IL@@ ).@@ put@@ Extra@@ (@@ Telephony@@ Manager.@@ EX@@ TR@@ A@@ _@@ H@@ ID@@ E_@@ P@@ U@@ B@@ L@@ IC@@ _S@@ E@@ T@@ T@@ T@@ ING@@ S@@ , true@@ )); } }); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ Des@@ cription@@ .@@ on@@ R@@ ing@@ t@@ one@@ Listener@@ (@@ true@@ ); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ B@@ utton@@ .set@@ On@@ C@@ li@@ ck@@ Listener@@ (@@ false@@ ); }
@java.lang.Override public void on@@ C@@ li@@ ck@@ (android.@@ view@@ .@@ Vi@@ e@@ w v@@ ) { get@@ P@@ ass@@ B@@ utton@@ ().@@ set@@ Enabled@@ (@@ true@@ ); m@@ Open@@ V@@ o@@ i@@ ce@@ Ma@@ il@@ Setting@@ s@@ B@@ utton@@ .set@@ Enabled@@ (@@ false@@ ); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ Des@@ Not@@ Ex@@ ist@@ B@@ utton@@ .set@@ Enabled@@ (@@ false@@ ); m@@ R@@ ing@@ t@@ one@@ Setting@@ s@@ Ex@@ ist@@ s@@ B@@ utton@@ .set@@ Enabled@@ (@@ false@@ ); m@@ R@@ est@@ ore@@ Default@@ Di@@ al@@ er@@ Im@@ age.@@ set@@ Image@@ D@@ raw@@ able@@ (get@@ D@@ raw@@ able@@ (@@ R.@@ d@@ raw@@ ab@@ le.@@ f@@ s@@ _@@ war@@ ning@@ )); }
@org.junit.Test public void test@@ Mock@@ ed@@ Socket@@ Cre@@ ation@@ For@@ ce@@ d@@ () throw@@ s java.lang.Exception { java.net.@@ S@@ ock@@ et mock@@ S@@ ock@@ et = mock@@ (@@ java.net.@@ Socket@@ .@@ class@@ ); android.net.@@ I@@ p@@ Sec@@ Con@@ fi@@ g dum@@ my@@ Con@@ fi@@ g = new android.net.@@ I@@ p@@ Sec@@ Config@@ (); android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m dum@@ my@@ Tr@@ an@@ s@@ for@@ m = new android.net.@@ I@@ p@@ Sec@@ Tr@@ an@@ s@@ for@@ m@@ (@@ null@@ , dum@@ my@@ Config@@ ); when@@ (m@@ ock@@ Socket@@ .get@@ File@@ Des@@ criptor@@ $@@ ()).@@ thenReturn@@ (@@ java.io.File@@ Des@@ cript@@ or.@@ in@@ ); m@@ I@@ p@@ Sec@@ Manager.@@ app@@ ly@@ Trans@@ port@@ Mode@@ Tr@@ an@@ s@@ for@@ m@@ (m@@ ock@@ Socket@@ , I@@ p@@ Sec@@ Manager.@@ DI@@ RE@@ C@@ TION@@ _@@ IN@@ , dum@@ my@@ Tr@@ an@@ s@@ for@@ m@@ ); ve@@ r@@ if@@ y@@ (m@@ ock@@ Socket@@ , tim@@ es@@ (1@@ ))@@ .get@@ S@@ o@@ L@@ ing@@ er@@ (); }
private static com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age read@@ (@@ java.nio.Byte@@ Buffer input@@ Byte@@ Buffer@@ , int version@@ ) throw@@ s java.io.IOException { switch (@@ version@@ ) { case com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ FI@@ RS@@ T_@@ V@@ E@@ RS@@ IO@@ N : try { java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Node@@ > no@@ de@@ s = com.android.@@ ap@@ k@@ si@@ g@@ .@@ int@@ er@@ n@@ al.@@ ap@@ k.@@ v@@ 3@@ .@@ V@@ 3@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ read@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ (get@@ Length@@ Pre@@ fix@@ ed@@ S@@ li@@ ce@@ (input@@ Byte@@ Buffer@@ )); int min@@ Sdk@@ Ver@@ sion = com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ cal@@ c@@ ul@@ ate@@ Min@@ Sdk@@ Version@@ (@@ no@@ des@@ ); com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age.@@ check@@ Un@@ i@@ q@@ ue@@ Sign@@ ing@@ Cer@@ t@@ if@@ i@@ cat@@ es@@ (@@ no@@ des@@ ); return new com.android.@@ ap@@ k@@ si@@ g.@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ (m@@ in@@ Sdk@@ Version@@ , no@@ des@@ ); } catch (com.android.@@ ap@@ k@@ si@@ g.@@ ap@@ k.@@ Apk@@ Format@@ Exception | java.security.@@ cert.@@ Cer@@ t@@ if@@ ic@@ ate@@ En@@ cod@@ ing@@ Exception e) { throw new java.io.IO@@ Exception@@ (("@@ Faile@@ d to re@@ ad li@@ s@@ t of sign@@ ing cer@@ t@@ if@@ i@@ cat@@ e no@@ de@@ s in " + "@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ "), e); } default : throw new java.lang.Illegal@@ Argument@@ Exception@@ ("@@ Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age for@@ mat@@ : un@@ re@@ co@@ gn@@ iz@@ ed version@@ .@@ "); } }
public java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g.@@ Default@@ Apk@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Config@@ > s@@ ort@@ S@@ ig@@ ner@@ Config@@ s(@@ java.util.List<@@ com.android.@@ ap@@ k@@ si@@ g.@@ Default@@ Apk@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Config@@ > si@@ g@@ ner@@ Config@@ s) { if (@@ si@@ g@@ ner@@ Config@@ s == null@@ ) { throw new java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception@@ ("@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Config@@ > s@@ or@@ ted@@ S@@ ig@@ ner@@ Config@@ s = new java.util.Array@@ List@@ (@@ si@@ g@@ ner@@ Config@@ s.@@ size@@ ()); for (@@ int i = 0; i < (m@@ Sign@@ ing@@ Line@@ age.@@ size@@ ()); i++) { for (@@ int j = 0; j < (@@ si@@ g@@ ner@@ Config@@ s.@@ size@@ ()); j@@ ++) { com.android.@@ ap@@ k@@ si@@ g.@@ Default@@ Apk@@ S@@ ig@@ ner@@ En@@ gin@@ e.@@ S@@ ig@@ ner@@ Con@@ fi@@ g con@@ fi@@ g = si@@ g@@ ner@@ Config@@ s.get@@ (@@ j@@ ); if (m@@ Sign@@ ing@@ Line@@ ag@@ e.get@@ (i@@ ).@@ sign@@ ing@@ Cer@@ t.@@ equals(@@ config.@@ get@@ Cer@@ t@@ if@@ i@@ cat@@ es@@ ().get@@ (0@@ ))) { s@@ or@@ ted@@ S@@ ig@@ ner@@ Config@@ s.@@ add(@@ config@@ ); break@@ ; } } } if ((@@ s@@ or@@ ted@@ S@@ ig@@ ner@@ Config@@ s.@@ size@@ ()) <@@ ?@@ > (@@ si@@ g@@ ner@@ Config@@ s.@@ size@@ ())) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ In@@ va@@ li@@ d sup@@ pli@@ ed wh@@ i@@ ch ar@@ e not p@@ res@@ ent in the " + Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age } else if ((@@ s@@ or@@ ted@@ S@@ ig@@ ner@@ Config@@ s.@@ size@@ ()) > (@@ si@@ g@@ ner@@ Config@@ s.@@ size@@ ())) { throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ In@@ va@@ li@@ d le@@ as@@ t on@@ e S@@ ig@@ ner@@ Con@@ fi@@ g is re@@ pe@@ ate@@ d in the " + Sign@@ ing@@ Cer@@ t@@ if@@ ic@@ ate@@ Line@@ age@@ . E@@ ver@@ y e@@ n@@ try m@@ us@@ t b@@ e un@@ i@@ q@@ ue@@ . "); } return s@@ or@@ ted@@ S@@ ig@@ ner@@ Config@@ s; }
private void set@@ He@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ TAG, (("@@ set@@ H@@ er@@ a@@ ing@@ A@@ id@@ Ac@@ tive@@ Device@@ (@@ " + device@@ ) + "@@ )@@ ")); } final com.android.@@ bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice he@@ ar@@ ing@@ A@@ id@@ Ser@@ vice = m@@ Factory@@ .get@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ (); if (@@ he@@ ar@@ ing@@ A@@ id@@ Ser@@ vice == null@@ ) { return@@ ; } he@@ ar@@ ing@@ A@@ id@@ Service@@ .set@@ Ac@@ tive@@ Device@@ (@@ device@@ ); m@@ He@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ De@@ vice = device@@ ; }
public boolean set@@ Ac@@ tive@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ T@@ H AD@@ M@@ I@@ N per@@ mission@@ "); if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ("@@ set@@ Ac@@ tive@@ Device@@ :@@ " + device@@ )); } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { if (@@ de@@ vice == null@@ ) { if ((m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ ) != (android.@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ )) { re@@ port@@ Ac@@ tive@@ Device@@ (@@ null@@ ); m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id = android.@@ bluetooth.@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ ; } return@@ ; } if ((@@ get@@ Connection@@ State@@ (@@ device@@ )) != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ set@@ Ac@@ tive@@ Device@@ (@@ " + device@@ ) + " fa@@ ile@@ d b@@ ec@@ au@@ se de@@ vice not connec@@ ted return false@@ ; } java.lang.@@ Lon@@ g device@@ H@@ i@@ S@@ ync@@ Id = m@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ Map@@ .get@@ Or@@ Default@@ (@@ device@@ , Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ H@@ I@@ _S@@ Y@@ N@@ C@@ _@@ ID@@ _@@ IN@@ V@@ AL@@ ID@@ ); if (@@ device@@ H@@ i@@ S@@ ync@@ Id != (m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id@@ )) { re@@ port@@ Ac@@ tive@@ Device@@ (@@ device@@ ); m@@ Ac@@ tive@@ Device@@ H@@ i@@ S@@ ync@@ Id = device@@ H@@ i@@ S@@ ync@@ Id@@ ; } return true@@ ; }
public void set@@ Default@@ P@@ age@@ Count@@ (@@ int p@@ age@@ Count@@ ) { this@@ .@@ DE@@ FA@@ UL@@ T_@@ P@@ A@@ G@@ E_@@ C@@ O@@ UN@@ T = p@@ age@@ Count@@ ; }
public int get@@ P@@ age@@ Count@@ () { return p@@ age@@ Count@@ ; }
@org.junit.Test public void test@@ S@@ pli@@ t@@ L@@ ast@@ Per@@ io@@ d@@ () { com.@@ i@@ b@@ m.@@ icu@@ .@@ text.@@ TimeZone@@ Name@@ s time@@ Zone@@ Name@@ s = com.@@ i@@ b@@ m.@@ icu@@ .@@ text.@@ TimeZone@@ Nam@@ es@@ .get@@ Instance@@ (@@ U@@ Loc@@ a@@ le.@@ EN@@ G@@ L@@ IS@@ H@@ ); com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Bas@@ ic@@ Time@@ Z@@ on@@ e h@@ on@@ ol@@ ul@@ u@@ T@@ z = ((@@ com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Bas@@ ic@@ Time@@ Z@@ on@@ e) (@@ com.@@ i@@ b@@ m.@@ icu@@ .@@ util.@@ Time@@ Z@@ on@@ e.get@@ TimeZone@@ ("@@ Pa@@ c@@ if@@ ic@@ /@@ H@@ on@@ ol@@ ul@@ u@@ "@@ ))); int h@@ on@@ ol@@ ul@@ u@@ R@@ aw@@ O@@ ff@@ set = -@@ 3@@ 6@@ 0000@@ 00@@ ; int h@@ on@@ ol@@ ul@@ u@@ D@@ st@@ O@@ ff@@ set = 0; java.lang.String h@@ on@@ ol@@ ul@@ u@@ O@@ l@@ d@@ Name = null@@ ; java.lang.String h@@ on@@ ol@@ ul@@ u@@ New@@ Name = "@@ H@@ aw@@ a@@ i@@ i@@ -@@ A@@ le@@ uti@@ an St@@ and@@ ar@@ d Time@@ "; java.@@ tim@@ e.@@ In@@ stan@@ t start@@ In@@ stan@@ t = java.@@ tim@@ e.@@ In@@ stan@@ t.@@ E@@ P@@ O@@ CH@@ ; java.@@ tim@@ e.@@ In@@ stan@@ t end@@ In@@ stan@@ t = java.@@ tim@@ e.@@ In@@ stan@@ t.@@ o@@ f@@ E@@ po@@ ch@@ Sec@@ ond@@ (@@ 6@@ 3@@ 1@@ 5@@ 2@@ 00@@ 0@@ L); com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d h@@ on@@ ol@@ ul@@ u@@ Per@@ io@@ d = com.android.@@ libcore.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ on@@ e.@@ t@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d.@@ create@@ (@@ time@@ Zone@@ Nam@@ es@@ , h@@ on@@ ol@@ ul@@ u@@ T@@ z@@ , start@@ In@@ stan@@ t@@ , end@@ In@@ stan@@ t@@ ); java.@@ tim@@ e.@@ In@@ stan@@ t par@@ ti@@ tion@@ In@@ stan@@ t = java.@@ tim@@ e.@@ In@@ stan@@ t.@@ o@@ f@@ E@@ po@@ ch@@ Sec@@ ond@@ (@@ 5@@ 0000@@ 0000@@ 0000@@ 0000@@ 0000@@ L); com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d@@ [] sh@@ ard@@ s = com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d.@@ s@@ pli@@ t@@ At@@ Time@@ (@@ h@@ on@@ ol@@ ul@@ u@@ Per@@ io@@ d@@ , time@@ Zone@@ Nam@@ es@@ , h@@ on@@ ol@@ ul@@ u@@ T@@ z@@ , par@@ ti@@ tion@@ In@@ stan@@ t@@ ); assert@@ Equal@@ s(@@ start@@ In@@ stan@@ t@@ , sh@@ ard@@ s@@ [0@@ ]@@ .get@@ Start@@ In@@ stan@@ t@@ ()); assert@@ Equal@@ s(@@ par@@ ti@@ tion@@ In@@ stan@@ t@@ , sh@@ ard@@ s@@ [0@@ ]@@ .get@@ En@@ d@@ In@@ stan@@ t@@ ()); assert@@ Equal@@ s(@@ h@@ on@@ ol@@ ul@@ u@@ R@@ aw@@ Offset@@ , sh@@ ard@@ s@@ [0@@ ]@@ .get@@ R@@ aw@@ Offset@@ Milli@@ s()); assert@@ Equal@@ s(@@ h@@ on@@ ol@@ ul@@ u@@ D@@ st@@ Offset@@ , sh@@ ard@@ s@@ [0@@ ]@@ .get@@ D@@ st@@ Offset@@ Milli@@ s()); assert@@ Equal@@ s(@@ h@@ on@@ .@@ z@@ on@@ .getName@@ ()); assert@@ Equal@@ s(@@ par@@ ti@@ tion@@ .getName@@ ()); assert@@ Equal@@ s(@@ par@@ ti@@ tion@@ In@@ stan@@ t@@ , sh@@ ard@@ s@@ [@@ 1@@ ]@@ .get@@ Start@@ In@@ stan@@ t@@ z@@ on@@ Offset@@ , sh@@ ard@@ s@@ [@@ 1@@ ]@@ .get@@ En@@ d@@ In@@ stan@@ t@@ ()); }
@org.junit.Test public void test@@ Co@@ u@@ n@@ try@@ With@@ Pri@@ or@@ ity@@ () throw@@ s java.lang.Exception { java.lang.String co@@ u@@ n@@ try@@ T@@ ex@@ t = is@@ o@@ Code@@ : " + ((((@@ ("@@ <@@ time@@ Zone@@ M@@ app@@ ing@@ s@@ :@@ < " + ut@@ c@@ Offset@@ : ") + p@@ ri@@ or@@ ity@@ : 1@@ 0 + " > ") + time@@ Zone@@ M@@ app@@ ing@@ s@@ :@@ < ") + ut@@ c@@ Offset@@ : ") + id@@ : ") + > com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try co@@ u@@ n@@ try = com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ ree@@ Test.@@ parse@@ Co@@ u@@ n@@ try@@ (@@ co@@ u@@ n@@ try@@ Text@@ ); com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e z@@ one@@ T@@ re@@ e = com.android.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ re@@ e.@@ create@@ (@@ co@@ u@@ n@@ try@@ , com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ ree@@ Test@@ .@@ R@@ U@@ LE@@ S_@@ START@@ _@@ IN@@ STA@@ N@@ T@@ , com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ ree@@ Test@@ .@@ R@@ U@@ LE@@ S_@@ END@@ _@@ IN@@ STA@@ N@@ T@@ ); assert@@ True@@ (@@ z@@ one@@ T@@ re@@ e.@@ valid@@ ate@@ No@@ Pri@@ or@@ ity@@ Clas@@ h@@ es@@ ().@@ isEmpty@@ ()); com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ U@@ s@@ age co@@ u@@ n@@ try@@ Zone@@ U@@ s@@ age = z@@ one@@ T@@ re@@ e.@@ cal@@ c@@ ul@@ ate@@ Co@@ u@@ n@@ try@@ Zone@@ U@@ s@@ age@@ (@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Co@@ u@@ n@@ try@@ Zone@@ T@@ ree@@ Test.@@ NO@@ T_@@ US@@ E@@ D_@@ A@@ F@@ TER@@ _C@@ U@@ T_@@ O@@ F@@ F@@ F@@ F@@ ); assert@@ Null@@ (@@ co@@ u@@ n@@ try@@ Zone@@ U@@ s@@ ag@@ e.get@@ Not@@ U@@ sed@@ A@@ f@@ ter@@ In@@ stan@@ t@@ ("@@ E@@ u@@ ro@@ pe@@ /@@ B@@ er@@ lin@@ ")); java.@@ tim@@ e.@@ In@@ stan@@ t expected@@ Not@@ U@@ sed@@ A@@ f@@ ter@@ In@@ stan@@ t = java.@@ tim@@ e.@@ In@@ stan@@ t.@@ o@@ f@@ E@@ po@@ ch@@ Sec@@ ond@@ (@@ 3@@ 5@@ 4@@ 6@@ 7@@ 5@@ 6@@ 00@@ ); assert@@ Equal@@ s(@@ expected@@ Not@@ U@@ sed@@ A@@ f@@ ter@@ In@@ stan@@ t@@ , co@@ u@@ n@@ try@@ Zone@@ U@@ s@@ ag@@ e.get@@ Not@@ U@@ sed@@ A@@ f@@ ter@@ In@@ stan@@ t@@ ("@@ E@@ u@@ ro@@ pe@@ /@@ Bu@@ sing@@ en@@ ")); }
private static boolean w@@ o@@ ul@@ d@@ Li@@ k@@ el@@ y@@ Equal@@ I@@ f@@ S@@ pli@@ t@@ (com.android.@@ libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d a@@ , libcore.@@ time@@ z@@ on@@ e.@@ t@@ z@@ lo@@ ok@@ up@@ .@@ z@@ on@@ et@@ re@@ e.@@ Zone@@ Offset@@ Per@@ io@@ d b@@ ) { return ((@@ a@@ .get@@ En@@ d@@ In@@ stan@@ t@@ ().@@ equals(@@ b@@ .get@@ En@@ d@@ In@@ stan@@ t@@ ())) && ((@@ a@@ .get@@ D@@ st@@ Offset@@ s()) == (b@@ .get@@ D@@ st@@ Offset@@ Milli@@ s@@ ()))) && ((@@ a@@ .get@@ R@@ aw@@ Offset@@ Milli@@ s()) == (b@@ .get@@ R@@ aw@@ Offset@@ Milli@@ s@@ ())); }
@java.lang.Override public java.net.Inet@@ Address@@ [] get@@ All@@ By@@ Name@@ (java.lang.String ho@@ st@@ ) throw@@ s java.net.@@ Un@@ k@@ no@@ wn@@ Host@@ Exception { java.util.List<@@ java.net.Inet@@ Address@@ > add@@ r@@ s = java.util.Arrays.@@ as@@ List@@ (m@@ U@@ se@@ Local@@ Nam@@ es@@ er@@ ver@@ s ? android.net.@@ d@@ n@@ s.@@ Res@@ ol@@ v@@ Util.@@ b@@ lock@@ ing@@ Res@@ ol@@ ve@@ All@@ Loc@@ all@@ y@@ (@@ this@@ , ho@@ st@@ ) : super@@ .get@@ All@@ By@@ Name@@ (@@ ho@@ s@@ t@@ )); java.util.@@ Lin@@ k@@ ed@@ Hash@@ Map@@ <@@ java.lang.@@ Class@@ , java.net.Inet@@ Address@@ > add@@ ress@@ By@@ F@@ am@@ il@@ y = new java.util.@@ Lin@@ k@@ ed@@ Hash@@ Map@@ <@@ >(); add@@ ress@@ By@@ F@@ am@@ il@@ y.@@ put@@ (@@ add@@ r@@ s.get@@ (0@@ )@@ .get@@ Class@@ (), add@@ r@@ s.get@@ (0@@ )); java.util.Collection@@ s.@@ sh@@ u@@ ff@@ le@@ (@@ add@@ r@@ s); for (@@ java.net.Inet@@ Address add@@ r : add@@ r@@ s) { add@@ ress@@ By@@ F@@ am@@ il@@ y.@@ put@@ (@@ add@@ r@@ .get@@ Class@@ (), add@@ r@@ ); } return add@@ ress@@ By@@ F@@ am@@ il@@ y.@@ valu@@ es@@ ().@@ to@@ Array@@ (@@ new java.net.Inet@@ Address@@ [@@ add@@ ress@@ By@@ F@@ am@@ il@@ y.@@ size@@ ()@@ ]@@ ); }
public static com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g try@@ Block@@ ing@@ Res@@ ol@@ ve@@ Of@@ (android.net.@@ Net@@ wor@@ k network@@ , java.lang.String name@@ ) { try { final java.net.Inet@@ Address@@ [] ip@@ s = android.system.@@ Str@@ u@@ ct@@ Math.@@ max@@ (@@ net@@ wor@@ k@@ , name@@ ); return (@@ ip@@ s != null@@ ) && ((@@ ip@@ s.@@ length) > 0) ? new com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Config@@ (@@ name@@ , i@@ ps@@ ); } catch (java.io.IOException e) { throw new java.lang.@@ Asser@@ tion@@ Error@@ ("@@ Un@@ k@@ no@@ wn@@ Host@@ Exception@@ ", e); } }
public static java.net.Inet@@ Address@@ [] b@@ lock@@ ing@@ Res@@ ol@@ ve@@ All@@ Loc@@ all@@ y@@ (android.net.@@ Net@@ wor@@ k network@@ , java.lang.String name@@ ) throw@@ s java.net.@@ Un@@ k@@ no@@ wn@@ Host@@ Exception { final android.system.@@ Str@@ u@@ ct@@ Add@@ r@@ in@@ f@@ o h@@ int@@ s = new android.system.@@ Str@@ u@@ ct@@ Add@@ r@@ in@@ fo@@ (); h@@ int@@ s.@@ a@@ i@@ _@@ flag@@ s = 0; h@@ int@@ s.@@ a@@ i@@ _@@ f@@ am@@ il@@ y = android.system.@@ O@@ s@@ Constants.@@ A@@ F@@ _@@ UN@@ S@@ P@@ EC@@ ; h@@ int@@ s.@@ a@@ i@@ _@@ s@@ ock@@ type = android.system.@@ O@@ s@@ Constants.@@ S@@ O@@ C@@ K@@ _@@ D@@ G@@ R@@ AM@@ ; final long net@@ id@@ For@@ Res@@ ol@@ v = (@@ N@@ E@@ T@@ ID@@ _@@ US@@ E_@@ LO@@ C@@ AL@@ _N@@ AM@@ E@@ S@@ ER@@ V@@ E@@ RS@@ ) | (@@ long@@ ) (@@ network@@ .@@ net@@ Id@@ )); try { return Lib@@ core.@@ os.@@ android@@ _@@ get@@ add@@ r@@ in@@ fo@@ (@@ name@@ , h@@ int@@ s, (@@ (@@ int@@ ) (@@ net@@ id@@ For@@ Res@@ ol@@ v@@ ))); } catch (android.@@ system.@@ G@@ a@@ i@@ Exception g@@ a@@ i@@ ) { g@@ a@@ i.@@ r@@ e@@ throw@@ As@@ Un@@ k@@ no@@ wn@@ Host@@ Exception@@ ("@@ T@@ L@@ S@@ -@@ b@@ yp@@ as@@ s res@@ ol@@ uti@@ on fa@@ ile@@ d@@ "); return null@@ ; } }
public static void set@@ Process@@ U@@ se@@ Local@@ Nam@@ es@@ er@@ ver@@ s(@@ android.net.@@ Net@@ wor@@ k network@@ ) { final long net@@ id@@ For@@ Res@@ ol@@ v = (@@ N@@ E@@ T@@ ID@@ _@@ US@@ E_@@ LO@@ C@@ AL@@ _N@@ AM@@ E@@ S@@ ER@@ V@@ E@@ RS@@ ) | (@@ long@@ ) (@@ network@@ .@@ net@@ Id@@ )); android.net.@@ Network@@ Utils.@@ b@@ ind@@ Process@@ To@@ Network@@ For@@ Host@@ Res@@ ol@@ uti@@ on@@ ((@@ (@@ int@@ ) (@@ net@@ id@@ For@@ Res@@ ol@@ v@@ ))); }
@java.lang.Override public void ex@@ it@@ () { android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ clear@@ Thread@@ Stat@@ s@@ U@@ id@@ (); m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ B@@ yp@@ as@@ s = true@@ ; }
public void en@@ able@@ S@@ amp@@ le@@ Device@@ Ad@@ min@@ () throw@@ s java.lang.Exception { if (is@@ AP@@ I@@ De@@ mo@@ In@@ st@@ al@@ le@@ d@@ ) { com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ App@@ L@@ a@@ unch@@ er.@@ la@@ unch@@ (in@@ strument@@ ation@@ , "@@ Setting@@ s@@ "); find@@ Object@@ In@@ S@@ c@@ ro@@ l@@ l@@ able@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ text@@ Cont@@ ain@@ s("@@ Sec@@ ur@@ ity@@ "@@ )).@@ c@@ li@@ ck@@ (); if ((@@ test@@ F@@ ramework@@ .get@@ Api@@ ()) >@@ = 24@@ ) { find@@ Object@@ In@@ S@@ c@@ ro@@ l@@ l@@ able@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ text@@ Cont@@ ain@@ s("@@ ad@@ m@@ in } else { find@@ Object@@ In@@ S@@ c@@ ro@@ l@@ l@@ able@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ text@@ ("@@ ad@@ min@@ is@@ tr@@ ator@@ s@@ "); } device@@ .@@ find@@ Object@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ text@@ ("@@ De@@ vice Ad@@ m@@ in try { if ((@@ test@@ F@@ ramework@@ .get@@ Api@@ ()) >@@ = 24@@ ) { find@@ Object@@ In@@ S@@ c@@ ro@@ l@@ l@@ able@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ text@@ Cont@@ ain@@ s("@@ Ac@@ tiv@@ ate@@ "@@ )).@@ c@@ li@@ ck@@ (); } else { device@@ .@@ find@@ Object@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ text@@ Match@@ es@@ ("@@ (@@ ?@@ i@@ )@@ ac@@ tiv@@ ate@@ (@@ ?@@ -@@ i@@ )@@ "@@ )).@@ c@@ li@@ ck@@ (); } } catch (android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Object@@ Not@@ F@@ ound@@ Exception e) { assert@@ True@@ ("@@ Can@@ cel@@ ing not fin@@ d de@@ vice ad@@ min@@ is@@ tr@@ ation b@@ utton@@ s.@@ ", new com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ W@@ ait@@ ().@@ un@@ ti@@ l@@ (@@ new com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ W@@ a@@ it.@@ Ex@@ pec@@ ted@@ Con@@ di@@ tion@@ () { @java.lang.Override public boolean is@@ True@@ () throw@@ s java.lang.Exception { return device@@ .@@ find@@ Object@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ text@@ ("@@ Can@@ cel@@ "@@ )).@@ exist@@ s(); } }@@ )); device@@ .@@ find@@ Object@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ text@@ ("@@ Can@@ cel@@ "@@ )).@@ c@@ li@@ ck@@ (); } device@@ .@@ p@@ ress@@ Ho@@ me@@ (); } }
public static void in@@ stall@@ App@@ (android.@@ app.@@ In@@ strument@@ ation in@@ strument@@ ation@@ ) throw@@ s java.lang.Exception { java.lang.String test@@ Package@@ Name = "@@ com.@@ ex@@ amp@@ le.@@ android.@@ ap@@ is@@ "; java.lang.String test@@ Package@@ AP@@ K@@ 3@@ 2 = "@@ Api@@ De@@ mo@@ s@@ _@@ x@@ 8@@ 6@@ .@@ ap@@ k@@ "; java.lang.String test@@ Package@@ AP@@ K@@ 6@@ 4 = "@@ Api@@ De@@ mo@@ s@@ _@@ x@@ 8@@ 6@@ _@@ 6@@ 4@@ .@@ ap@@ k@@ "; if ((@@ Build@@ .@@ V@@ E@@ RS@@ ION@@ .@@ S@@ D@@ K@@ _@@ IN@@ T@@ ) >@@ = (@@ Build@@ .@@ V@@ E@@ RS@@ ION@@ _C@@ OD@@ E@@ S@@ .@@ O@@ )) { java.lang.String ap@@ k = (android.@@ text.@@ Text@@ Utils.@@ j@@ o@@ in@@ ("@@ , ", Build@@ .@@ S@@ U@@ P@@ P@@ P@@ O@@ RT@@ E@@ D_@@ AB@@ IS@@ ).@@ contain@@ s("@@ 6@@ 4@@ ")) ? test@@ Package@@ AP@@ K@@ 6@@ 4 : test@@ Package@@ AP@@ K@@ 32@@ ; boolean is@@ AP@@ I@@ De@@ mo@@ In@@ st@@ al@@ le@@ d = com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Package@@ In@@ stall@@ ation@@ Util.@@ is@@ Package@@ In@@ st@@ al@@ le@@ d@@ (in@@ strument@@ ation@@ , test@@ Package@@ Name); if (!@@ is@@ AP@@ I@@ De@@ mo@@ In@@ st@@ al@@ le@@ d@@ ) com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Package@@ In@@ stall@@ ation@@ Util.@@ in@@ stall@@ Apk@@ (in@@ strument@@ ation@@ , ap@@ k@@ ); } com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Setting@@ s@@ Util.@@ ac@@ tiv@@ ate@@ (in@@ strument@@ ation@@ , "@@ S@@ amp@@ le De@@ vice Ad@@ min@@ "); }
@org.junit.Test @com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ annotations.@@ Test@@ Info@@ (@@ id = "@@ T@@ 1@@ 4@@ 4@@ 6@@ 3@@ 0@@ 6@@ 1@@ 3@@ ") public void ac@@ tiv@@ ate@@ De@@ ac@@ tiv@@ ate@@ Po@@ lic@@ y@@ () throw@@ s java.lang.Exception { if (is@@ AP@@ I@@ De@@ mo@@ In@@ st@@ al@@ le@@ d@@ ) { if (@@ check@@ Statu@@ s@@ Of@@ Po@@ lic@@ y@@ (@@ "@@ ))) { com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Setting@@ s@@ Util.@@ de@@ ac@@ tiv@@ ate@@ (in@@ strument@@ ation@@ , "@@ De@@ vice Ad@@ m@@ in } assert@@ False@@ (@@ check@@ Statu@@ s@@ Of@@ Po@@ lic@@ y@@ (@@ null@@ )); com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Setting@@ s@@ Util.@@ ac@@ tiv@@ ate@@ (in@@ strument@@ ation@@ , "@@ De@@ vice Ad@@ m@@ in assert@@ True@@ (@@ check@@ Statu@@ s@@ Of@@ Po@@ lic@@ y@@ (@@ null@@ )); com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Setting@@ s@@ Util.@@ de@@ ac@@ tiv@@ ate@@ (in@@ strument@@ ation@@ , De@@ vice Ad@@ m@@ in assert@@ False@@ (@@ check@@ Statu@@ s@@ Of@@ Po@@ lic@@ y@@ ()); } }
public static libcore.@@ Re@@ positor@@ y open@@ J@@ dk@@ 9@@ (@@ java.nio.@@ file.@@ Path up@@ str@@ eam@@ Root@@ , java.lang.String up@@ str@@ eam@@ Name@@ ) { java.util.List<@@ java.lang.String> source@@ Dir@@ s = new java.util.@@ Hash@@ Map@@ <@@ >(); source@@ Dir@@ s.@@ put@@ (@@ libcore.@@ Re@@ positor@@ y.@@ File@@ Group@@ .@@ J@@ AV@@ A@@ , java.util.Arrays.@@ as@@ List@@ ("@@ j@@ dk@@ /@@ src@@ /@@ java.@@ b@@ ase@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ b@@ ase@@ /@@ src@@ /@@ src@@ /@@ java.@@ b@@ ase@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ logg@@ ing@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ pre@@ f@@ s@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ s@@ q@@ l@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ des@@ k@@ to@@ p@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ b@@ ase@@ /@@ s@@ ol@@ ar@@ is@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ b@@ ase@@ /@@ un@@ i@@ x@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ pre@@ f@@ s@@ /@@ un@@ i@@ x@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ j@@ dk@@ .@@ un@@ sup@@ ported@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ j@@ dk@@ .@@ net@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ b@@ ase@@ /@@ lin@@ u@@ x@@ /@@ class@@ es@@ ", "@@ build@@ /@@ lin@@ u@@ x@@ -@@ x@@ 8@@ 6@@ _@@ 6@@ 4@@ -@@ n@@ or@@ m@@ al@@ -@@ ser@@ ver@@ -@@ re@@ le@@ ase@@ /@@ sup@@ port@@ /@@ g@@ en@@ src@@ /@@ java.@@ b@@ ase@@ ")); source@@ Dir@@ s.@@ put@@ (@@ libcore.@@ Re@@ positor@@ y.@@ File@@ Group@@ .@@ N@@ AT@@ I@@ V@@ E, java.util.Arrays.@@ as@@ List@@ ("@@ j@@ dk@@ /@@ src@@ /@@ java.@@ b@@ ase@@ /@@ un@@ i@@ x@@ /@@ native@@ /@@ lib@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ java.@@ b@@ ase@@ /@@ native@@ /@@ lib@@ e(@@ libcore.@@ Re@@ positor@@ y.@@ Open@@ J@@ dk@@ Re@@ positor@@ y@@ (@@ up@@ str@@ eam@@ Name, source@@ Dir@@ s); }
public void run() throw@@ s java.io.IOException { java.util.List<@@ java.nio.@@ file.@@ Path@@ > re@@ l@@ Path@@ s = st@@ and@@ ard@@ Re@@ positor@@ i@@ es.@@ o@@ j@@ l@@ un@@ i@@ ()@@ .@@ load@@ Re@@ l@@ Path@@ s@@ From@@ B@@ l@@ ue@@ p@@ r@@ int@@ (@@ libcore.@@ io.@@ Re@@ l@@ l@@ f@@ (@@ File@@ Group@@ .@@ J@@ AV@@ A@@ )); run@@ (java.lang.@@ System.@@ out, re@@ l@@ Path@@ s); }
@java.lang.Override public java.nio.@@ file.@@ Path path@@ From@@ Re@@ positor@@ y@@ (@@ java.nio.@@ file.@@ Path re@@ l@@ Path@@ ) { return java.nio.@@ file.@@ Path@@ s.get@@ ("@@ o@@ j@@ l@@ un@@ i@@ /@@ src@@ /@@ main@@ ).@@ res@@ ol@@ ve@@ (re@@ l@@ Path@@ ); }
public java.util.List<@@ java.nio.@@ file.@@ Path@@ > load@@ Re@@ l@@ Path@@ s@@ From@@ B@@ l@@ ue@@ p@@ r@@ int@@ (java.util.@@ Set@@ <@@ libcore.@@ Re@@ positor@@ y.@@ File@@ Group@@ > file@@ Group@@ s) throw@@ s java.io.IOException { java.util.List<@@ java.nio.@@ file.@@ Path@@ > result = new java.util.ArrayList<@@ >(); for (@@ libcore.@@ Re@@ positor@@ y.@@ File@@ G@@ ro@@ u@@ p file@@ G@@ ro@@ u@@ p : file@@ Group@@ s) { switch (file@@ Group@@ ) { case J@@ AV@@ A : res@@ ult.@@ add@@ All@@ (@@ load@@ Re@@ l@@ Path@@ s@@ From@@ B@@ l@@ ue@@ p@@ r@@ int@@ (@@ libcore.@@ Re@@ positor@@ y.@@ File@@ Group@@ .@@ J@@ AV@@ A@@ , "@@ open@@ j@@ dk@@ _@@ fil@@ es.@@ b@@ p@@ ", "@@ \"@@ o@@ j@@ l@@ un@@ i@@ /@@ src@@ /@@ main@@ /@@ java@@ /@@ (@@ .@@ +@@ \@@ \@@ .@@ java@@ )@@ \"@@ ")); break@@ ; case N@@ AT@@ I@@ V@@ E : res@@ ult.@@ add@@ All@@ (@@ load@@ Re@@ l@@ Path@@ s@@ From@@ B@@ l@@ ue@@ p@@ r@@ int@@ (@@ libcore.@@ Re@@ positor@@ y.@@ File@@ Group@@ .@@ N@@ AT@@ I@@ V@@ E, "@@ o@@ j@@ l@@ un@@ i@@ /@@ src@@ /@@ main@@ /@@ native@@ /@@ Android@@ .@@ b@@ p@@ ", "@@ \@@ s@@ +@@ \"@@ (@@ .@@ +@@ \@@ \@@ .@@ (@@ ?@@ :@@ c@@ |@@ c@@ p@@ ))@@ \"@@ ,@@ ")); break@@ ; default : throw new java.lang.Illegal@@ Argument@@ Exception@@ (("@@ Un@@ k@@ no@@ w@@ n File@@ Group@@ : " + file@@ Group@@ )); } } return result@@ ; }
private java.util.List<@@ java.nio.@@ file.@@ Path@@ > load@@ Re@@ l@@ Path@@ s@@ From@@ B@@ l@@ ue@@ p@@ r@@ int@@ (@@ libcore.@@ Re@@ positor@@ y.@@ File@@ G@@ ro@@ u@@ p file@@ Group@@ , java.lang.String b@@ l@@ ue@@ p@@ r@@ int@@ Path@@ String@@ , java.lang.String pat@@ tern@@ String@@ ) throw@@ s java.io.IOException { java.nio.@@ file.@@ Path b@@ l@@ ue@@ p@@ r@@ int@@ Path = ro@@ ot@@ Path@@ .@@ res@@ ol@@ ve@@ (b@@ l@@ ue@@ p@@ r@@ int@@ Path@@ String@@ ); java.util.@@ reg@@ ex@@ .@@ Pat@@ ter@@ n pat@@ ter@@ n = java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ (p@@ at@@ tern@@ String@@ ); java.util.List<@@ java.nio.@@ file.@@ Path@@ > result = new java.util.ArrayList<@@ >(); for (java.lang.String lin@@ e : libcore.@@ Util.@@ read@@ Lin@@ es@@ (b@@ l@@ ue@@ p@@ r@@ int@@ Path@@ )) { java.util.@@ reg@@ ex@@ .@@ Match@@ er match@@ er = pat@@ tern@@ .@@ match@@ er(@@ line@@ ); while (m@@ atch@@ er.@@ find@@ ()) { java.nio.@@ file.@@ Path pat@@ h = file@@ Group@@ .@@ re@@ l@@ Path@@ Pre@@ fi@@ x.@@ res@@ ol@@ ve@@ (m@@ atch@@ er.@@ g@@ roup@@ (1@@ )); res@@ ult.@@ add@@ (p@@ ath@@ ); } } return result@@ ; }
public boolean is@@ J@@ s@@ r@@ 16@@ 6@@ (@@ java.nio.@@ file.@@ Path re@@ l@@ Path@@ ) { boolean result = re@@ l@@ Path@@ .@@ start@@ sWith@@ ("@@ java@@ /@@ uti@@ l@@ /@@ con@@ current@@ /@@ "); java.lang.String j@@ u = "@@ java@@ /@@ uti@@ l@@ /@@ "; java.lang.String su@@ f@@ fi@@ x = ".@@ java@@ "; if ((@@ !@@ result@@ ) && (re@@ l@@ Path@@ .@@ start@@ sWith@@ (@@ j@@ u@@ ))) { java.lang.String name = re@@ l@@ Path@@ .@@ toString@@ ().@@ sub@@ string@@ (@@ j@@ u@@ .@@ length@@ ()); if (@@ nam@@ e.@@ end@@ sWith@@ (s@@ u@@ f@@ fix@@ )) { name = nam@@ e.@@ sub@@ string@@ (@@ 0, ((@@ nam@@ e.@@ length@@ ()) - (s@@ u@@ f@@ fi@@ x.@@ length@@ ()))); result = libcore.@@ St@@ and@@ ard@@ Re@@ positor@@ i@@ es.@@ j@@ u@@ Files@@ From@@ J@@ s@@ r@@ 16@@ 6@@ .@@ contain@@ s(@@ name@@ ); } } return result@@ ; }
public libcore.@@ Re@@ positor@@ y current@@ U@@ ps@@ tr@@ eam@@ (@@ java.nio.@@ file.@@ Path re@@ l@@ Path@@ ) { boolean is@@ J@@ s@@ r@@ 16@@ 6 = is@@ J@@ s@@ r@@ 16@@ 6@@ (@@ re@@ l@@ Path@@ ); if (is@@ J@@ s@@ r@@ 16@@ 6@@ ) { return j@@ s@@ r@@ 16@@ 6@@ U@@ ps@@ tr@@ eam@@ ; } else if ((@@ re@@ l@@ Path@@ .@@ start@@ sWith@@ ("@@ java@@ /@@ s@@ q@@ l@@ /@@ ")) || (re@@ l@@ Path@@ .@@ start@@ sWith@@ ("@@ java@@ /@@ s@@ q@@ l@@ /@@ "@@ ))) { return java@@ S@@ q@@ l@@ U@@ ps@@ tr@@ eam@@ ; } else { return default@@ U@@ ps@@ tr@@ eam@@ ; } }
public static libcore.@@ Re@@ positor@@ y open@@ J@@ dk@@ Le@@ g@@ ac@@ y@@ (@@ java.nio.@@ file.@@ Path up@@ str@@ eam@@ Root@@ , java.lang.String up@@ str@@ eam@@ Name@@ ) { java.util.List<@@ java.lang.String> source@@ Dir@@ s = new java.util.ArrayList<@@ >(); source@@ Dir@@ s.@@ put@@ (@@ libcore.@@ Re@@ positor@@ y.@@ File@@ Group@@ .@@ J@@ AV@@ A@@ , java.util.Arrays.@@ as@@ List@@ ("@@ j@@ dk@@ /@@ src@@ /@@ sh@@ ar@@ e@@ /@@ class@@ es@@ ", "@@ j@@ dk@@ /@@ src@@ /@@ s@@ ol@@ ar@@ is@@ /@@ class@@ es@@ ", "@@ build@@ /@@ lin@@ u@@ x@@ 8@@ 6@@ _@@ 6@@ 4@@ -@@ n@@ or@@ m@@ al@@ -@@ ser@@ ver@@ -@@ re@@ le@@ ase@@ /@@ j@@ dk@@ /@@ g@@ en@@ src@@ "), ); java.util.List<@@ java.lang.String> native@@ Source@@ Dir@@ s = new java.util.ArrayList<@@ >(); java.util.List<@@ java.lang.String> p@@ kg@@ Path@@ s = java.util.Arrays.@@ as@@ List@@ ("@@ ", "@@ java@@ /@@ lan@@ g@@ ", "@@ java@@ /@@ net@@ ", "@@ java@@ /@@ n@@ io@@ ", "@@ java@@ /@@ uti@@ l@@ ", "@@ java@@ /@@ uti@@ l@@ /@@ z@@ ip@@ ", "@@ s@@ un@@ /@@ n@@ io@@ /@@ ch@@ ", "@@ s@@ un@@ /@@ n@@ io@@ /@@ ch@@ ", "@@ s@@ un@@ /@@ n@@ io@@ /@@ f@@ s@@ "); for (java.lang.String p@@ kg@@ Path : p@@ kg@@ Path@@ s) { native@@ Source@@ Dir@@ s.@@ add@@ (("@@ j@@ dk@@ /@@ src@@ /@@ s@@ ol@@ ar@@ is@@ /@@ native@@ /@@ " + p@@ kg@@ Path@@ )); native@@ Source@@ Dir@@ s.@@ add@@ (("@@ j@@ dk@@ /@@ src@@ /@@ sh@@ ar@@ e@@ /@@ native@@ /@@ " + p@@ kg@@ Path@@ )); native@@ Source@@ Dir@@ s.@@ add@@ (("@@ j@@ dk@@ /@@ src@@ /@@ sh@@ ar@@ e@@ /@@ native@@ /@@ " + p@@ kg@@ Path@@ )); native@@ Source@@ Dir@@ s.@@ add@@ (("@@ j@@ dk@@ /@@ src@@ /@@ s@@ ol@@ ar@@ is@@ /@@ native@@ /@@ common@@ /@@ " + p@@ kg@@ Path@@ )); native@@ Source@@ Dir@@ s.@@ add@@ (("@@ j@@ dk@@ /@@ src@@ /@@ sh@@ ar@@ e@@ /@@ native@@ /@@ common@@ /@@ " + p@@ kg@@ Path@@ )); } source@@ Dir@@ s.@@ put@@ (@@ libcore.@@ Re@@ positor@@ y.@@ File@@ Group@@ .@@ N@@ AT@@ I@@ V@@ E, native@@ Source@@ Dir@@ s); return new libcore.@@ Re@@ positor@@ y.@@ Open@@ J@@ dk@@ Re@@ positor@@ y@@ (@@ up@@ str@@ eam@@ Name, source@@ Dir@@ s); }
@java.lang.Override public java.nio.@@ file.@@ Path path@@ From@@ Re@@ positor@@ y@@ (@@ java.nio.@@ file.@@ Path re@@ l@@ Path@@ ) { if (@@ r@@ en@@ ame@@ O@@ ri@@ gin@@ .@@ contain@@ s@@ Key@@ (re@@ l@@ Path@@ )) { re@@ l@@ Path = r@@ en@@ ame@@ O@@ ri@@ gin@@ .get@@ (re@@ l@@ Path@@ ); } libcore.@@ Re@@ positor@@ y.@@ File@@ G@@ ro@@ u@@ p file@@ G@@ ro@@ u@@ p = libcore.@@ Re@@ positor@@ y.@@ File@@ Group@@ .@@ o@@ f@@ (re@@ l@@ Path@@ ); java.util.List<@@ java.lang.String> file@@ Group@@ Source@@ Dir@@ s = source@@ Dir@@ s.get@@ (file@@ Group@@ ); java.nio.@@ file.@@ Path source@@ Dir@@ Re@@ l@@ ative@@ Path = file@@ Group@@ .@@ re@@ l@@ ati@@ vi@@ z@@ e@@ From@@ (re@@ l@@ Path@@ ); for (java.lang.String source@@ Di@@ r : file@@ Group@@ Source@@ Dir@@ s) { java.nio.@@ file.@@ Path repositor@@ y@@ Re@@ l@@ ative@@ Path = java.nio.@@ file.@@ Path@@ s.get@@ (s@@ ource@@ Dir@@ ).@@ res@@ ol@@ ve@@ (s@@ ource@@ Dir@@ ).@@ res@@ ol@@ ve@@ (s@@ ource@@ Dir@@ ).@@ res@@ ol@@ ve@@ (s@@ ource@@ Dir@@ Re@@ l@@ ative@@ Path@@ ); java.io.File@@ fi@@ le = ro@@ ot@@ Path@@ .@@ res@@ ol@@ ve@@ (@@ repositor@@ y@@ Re@@ l@@ ative@@ Path@@ ); if (@@ file.@@ exist@@ s()) { return repositor@@ y@@ Re@@ l@@ ative@@ Path@@ ; } } return null@@ ; }
public void run() throw@@ s java.io.IOException { java.util.List<@@ java.nio.@@ file.@@ Path@@ > re@@ l@@ Path@@ s = st@@ and@@ ard@@ Re@@ positor@@ i@@ es.@@ o@@ j@@ l@@ un@@ i@@ ()@@ .@@ load@@ Re@@ l@@ Path@@ s@@ From@@ B@@ l@@ ue@@ p@@ r@@ int@@ (java.util.@@ Enum@@ Set@@ .@@ o@@ f@@ (@@ File@@ Group@@ .@@ J@@ AV@@ A@@ )); if (@@ output@@ Dir@@ .@@ to@@ File@@ ().@@ exist@@ s()) { throw new java.io.IO@@ Exception@@ ((@@ (("@@ Un@@ able to cre@@ ate di@@ re@@ ctor@@ y " + " (@@ output@@ Dir@@ ))); } for (@@ java.nio.@@ file.@@ Path re@@ l@@ Path : re@@ l@@ Path@@ s) { libcore.@@ Re@@ positor@@ y expected@@ U@@ ps@@ tr@@ e@@ am = st@@ and@@ ard@@ Re@@ positor@@ i@@ es.@@ current@@ U@@ ps@@ tr@@ eam@@ (re@@ l@@ Path@@ ); for (@@ libcore.@@ Re@@ positor@@ y up@@ str@@ e@@ am : st@@ and@@ ard@@ Re@@ positor@@ i@@ es.@@ up@@ str@@ eam@@ s()) { java.nio.@@ file.@@ Path up@@ str@@ eam@@ File = up@@ str@@ eam@@ .@@ ab@@ solute@@ Path@@ (re@@ l@@ Path@@ ); if (@@ up@@ str@@ eam@@ File != null@@ ) { java.nio.@@ file.@@ Path output@@ File = output@@ Dir@@ .@@ res@@ ol@@ ve@@ (@@ up@@ str@@ eam@@ .@@ name@@ ()).@@ res@@ ol@@ ve@@ (re@@ l@@ Path@@ ); copy@@ File@@ (@@ up@@ str@@ eam@@ File@@ , output@@ File@@ ); if (@@ up@@ str@@ eam@@ .@@ equals(@@ expected@@ U@@ ps@@ tr@@ eam@@ )) { copy@@ File@@ (@@ up@@ str@@ eam@@ File@@ , output@@ Dir@@ .@@ res@@ ol@@ ve@@ ("@@ expected@@ ").@@ res@@ ol@@ ve@@ (re@@ l@@ Path@@ )); } } } }
synchronized boolean un@@ register@@ App@@ () { if (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, "@@ un@@ register@@ App@@ ()@@ "); } int call@@ ing@@ U@@ id = android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (); if ((@@ call@@ ing@@ U@@ id == (m@@ User@@ U@@ id@@ )) || (c@@ all@@ ing@@ U@@ id < (@@ FI@@ RS@@ T_@@ AP@@ P@@ L@@ IC@@ AT@@ ION@@ _@@ U@@ ID@@ ))) { m@@ User@@ U@@ id = 0; m@@ User@@ App@@ Name = null@@ ; return m@@ H@@ id@@ Device@@ Native@@ Interface@@ .@@ un@@ register@@ App@@ (); } android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, "@@ un@@ register@@ App@@ () cal@@ le@@ r U@@ I@@ D do@@ es@@ n@@ 't mat@@ ch u@@ se@@ r U@@ I@@ D return false@@ ; }
synchronized java.lang.String get@@ User@@ App@@ Name@@ () { if ((m@@ User@@ App@@ Name@@ ) == null@@ ) { return "@@ "; } return m@@ User@@ App@@ Name@@ ; }
synchronized boolean register@@ App@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ S@@ d@@ p@@ Setting@@ s s@@ d@@ p@@ , android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ Q@@ os@@ Setting@@ s in@@ Q@@ o@@ s, android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ App@@ Q@@ os@@ Setting@@ s out@@ Q@@ o@@ s, android.@@ bluetooth.@@ I@@ Bluetooth@@ H@@ id@@ Device@@ Call@@ b@@ ac@@ k call@@ back@@ ) { if ((m@@ User@@ U@@ id@@ ) != 0) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, "@@ S@@ k@@ ip@@ p@@ ing fa@@ ile@@ d@@ "); b@@ ec@@ au@@ se an@@ oth@@ er ap@@ p is register@@ ed@@ "); return false@@ ; } m@@ User@@ U@@ id = android.os.@@ B@@ ind@@ er.get@@ Call@@ ing@@ U@@ id@@ (); if (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, ("@@ register@@ App@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ Ser@@ vice call@@ ing u@@ id@@ =@@ " + (m@@ User@@ U@@ id@@ ))); } m@@ Call@@ b@@ ac@@ k = call@@ back@@ ; return m@@ H@@ id@@ Device@@ Native@@ Interface@@ .@@ register@@ App@@ (s@@ d@@ p.@@ name@@ , s@@ d@@ p.@@ des@@ cription@@ , s@@ d@@ p.@@ provid@@ er, s@@ d@@ p.@@ su@@ b@@ class@@ , s@@ d@@ p.@@ des@@ criptor@@ s, (in@@ Q@@ o@@ s == null ? null : in@@ Q@@ os.@@ to@@ Array@@ ()@@ ), (@@ out@@ Q@@ o@@ s == null ? null : out@@ Q@@ os.@@ to@@ Array@@ ())); }
@java.lang.Override public void ent@@ er@@ () { android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ Ap@@ f@@ Configur@@ ation ap@@ f@@ Con@@ fi@@ g = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ Ap@@ f@@ Configuration@@ (); ap@@ f@@ Config.@@ ap@@ f@@ Cap@@ abili@@ ti@@ es = m@@ Configur@@ ation.@@ m@@ Ap@@ f@@ Cap@@ abili@@ ties@@ ; ap@@ f@@ Config.@@ m@@ ulti@@ cast@@ Fil@@ ter = m@@ Multi@@ cast@@ Filter@@ ing@@ ; ap@@ f@@ Config.@@ i@@ ee@@ e@@ 8@@ 0@@ 2@@ _@@ 3@@ Fil@@ ter = m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ config@@ _@@ ap@@ f@@ D@@ ro@@ p@@ 8@@ 0@@ 2@@ _@@ 3@@ F@@ ram@@ es@@ ); ap@@ f@@ Config.@@ eth@@ Type@@ B@@ l@@ ack@@ Lis@@ t = m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Int@@ Array@@ (@@ R.@@ ar@@ ra@@ y.@@ config@@ _@@ ap@@ f@@ E@@ th@@ Type@@ B@@ l@@ ack@@ List@@ ); m@@ Ap@@ f@@ Fil@@ ter = android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ m@@ ay@@ b@@ e@@ Create@@ (@@ ap@@ f@@ Config@@ , m@@ Interface@@ Param@@ s, m@@ Callback@@ ); if ((m@@ Ap@@ f@@ Filter@@ ) == null@@ ) { m@@ Callback@@ .set@@ F@@ all@@ back@@ Multi@@ cast@@ Filter@@ (m@@ Multi@@ cast@@ Filter@@ ing@@ ); } m@@ Pack@@ et@@ Tr@@ ack@@ er = create@@ Pack@@ et@@ Tr@@ ack@@ er@@ (); if ((m@@ Pack@@ et@@ Tr@@ ack@@ er@@ ) != null@@ ) m@@ Pack@@ et@@ Tr@@ ack@@ er.@@ start@@ (m@@ Configur@@ ation.@@ m@@ Display@@ Name); if ((m@@ Configur@@ ation.@@ m@@ En@@ able@@ IP@@ v@@ 6@@ ) && (!(@@ start@@ IP@@ v@@ 6@@ ()))) { do@@ Im@@ medi@@ ate@@ Pro@@ vision@@ ing@@ Fail@@ ure@@ (@@ I@@ p@@ Manager@@ Ev@@ ent.@@ ER@@ RO@@ R@@ _@@ START@@ ING@@ _@@ IP@@ V@@ 6@@ ); tr@@ an@@ sition@@ To@@ (m@@ St@@ op@@ p@@ ing@@ State@@ ); return@@ ; } if ((m@@ Configur@@ ation.@@ m@@ En@@ able@@ IP@@ v@@ 4@@ ) && (!(@@ start@@ IP@@ v@@ 4@@ ()))) { do@@ Im@@ medi@@ ate@@ Pro@@ vision@@ ing@@ Fail@@ ure@@ (@@ I@@ p@@ Manager@@ Ev@@ ent.@@ ER@@ RO@@ R@@ _@@ START@@ ING@@ _@@ IP@@ V@@ 4@@ ); tr@@ an@@ sition@@ To@@ (m@@ St@@ op@@ p@@ ing@@ State@@ ); return@@ ; } final android.net.@@ ip.@@ I@@ p@@ C@@ li@@ ent.@@ In@@ iti@@ al@@ Configur@@ ation con@@ fi@@ g = m@@ Configur@@ ation.@@ m@@ In@@ iti@@ al@@ Config@@ ; if ((@@ con@@ fi@@ g != null@@ ) && (!(@@ app@@ ly@@ In@@ iti@@ al@@ Config@@ (@@ config@@ )@@ ))) { do@@ Im@@ medi@@ ate@@ Pro@@ vision@@ ing@@ Fail@@ ure@@ (@@ I@@ p@@ Manager@@ Ev@@ ent.@@ ER@@ RO@@ R@@ _@@ IN@@ V@@ AL@@ ID@@ _P@@ RO@@ V@@ IS@@ ION@@ ING@@ ); tr@@ an@@ sition@@ To@@ (m@@ St@@ op@@ p@@ ing@@ State@@ ); return@@ ; } if ((m@@ Configur@@ ation.@@ m@@ U@@ sing@@ M@@ ult@@ in@@ et@@ work@@ Po@@ lic@@ y@@ Tr@@ ack@@ er@@ ) { m@@ M@@ ult@@ in@@ et@@ work@@ Po@@ lic@@ y@@ Tr@@ ack@@ er = new android.net.@@ util.@@ M@@ ult@@ in@@ et@@ work@@ Po@@ lic@@ y@@ Tr@@ ack@@ er@@ (m@@ Context@@ , get@@ Handler@@ (), () -@@ > { android.net.@@ ip.@@ m@@ Log.@@ log@@ ("@@ B@@ ad@@ W@@ if@@ i ch@@ ang@@ ed }); m@@ M@@ ult@@ in@@ et@@ work@@ Po@@ lic@@ y@@ Tr@@ ack@@ er.@@ start@@ (); } if (m@@ Configur@@ ation.@@ m@@ U@@ sing@@ I@@ p@@ Re@@ ach@@ abili@@ ty@@ Monitor@@ ) && (!(@@ start@@ I@@ p@@ Re@@ ach@@ abili@@ ty@@ Monitor@@ ) && (!(@@ start@@ I@@ p@@ Re@@ ach@@ abili@@ ty@@ Monitor@@ ()))) { do@@ Im@@ medi@@ ate@@ Pro@@ vision@@ ing@@ Fail@@ ure@@ (@@ I@@ p@@ Re@@ ach@@ ing@@ Fail@@ ure@@ (@@ I@@ p@@ Re@@ ach@@ ing@@ Fail@@ ure@@ ); }
@org.junit.Test public void test@@ R@@ a@@ Process@@ ing@@ () throw@@ s java.lang.Exception { final int max@@ R@@ an@@ do@@ m@@ Pack@@ et@@ Siz@@ e = 5@@ 12@@ ; final java.util.@@ R@@ an@@ do@@ m r = new java.util.@@ R@@ an@@ do@@ m@@ (); android.net.@@ ap@@ f.@@ Ap@@ f@@ Test@@ .@@ Mock@@ I@@ p@@ Client@@ Call@@ b@@ ac@@ k c@@ b = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Test@@ .@@ Mock@@ I@@ p@@ Client@@ Call@@ b@@ ac@@ k@@ (); android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ Ap@@ f@@ Configur@@ ation con@@ fi@@ g = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ get@@ Default@@ Config@@ (); config.@@ m@@ ulti@@ cast@@ Fil@@ ter = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ D@@ RO@@ P@@ _M@@ UL@@ T@@ IC@@ A@@ S@@ T@@ ; config.@@ i@@ ee@@ e@@ 8@@ 0@@ 2@@ _@@ 3@@ Fil@@ ter = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ D@@ RO@@ P@@ _@@ 8@@ 0@@ 2@@ _@@ 3@@ _@@ F@@ R@@ AM@@ E@@ S@@ ; android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ Test@@ Ap@@ f@@ Fil@@ ter ap@@ f@@ Fil@@ ter = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ Test@@ Ap@@ f@@ Filter@@ (@@ config@@ , c@@ b@@ , m@@ Log@@ ); for (@@ int i = 0; i < 1@@ 00@@ 0; i++) { byte@@ [] pack@@ et = new byte@@ [@@ r.@@ next@@ Int@@ ((m@@ a@@ x@@ R@@ an@@ do@@ m@@ Pack@@ et@@ Siz@@ e + 1@@ ))@@ ]; r.@@ next@@ Bytes@@ (p@@ ack@@ et@@ ); try { ap@@ f@@ Fil@@ ter.@@ process@@ R@@ a@@ (p@@ ack@@ et@@ , pack@@ et@@ .@@ length); } catch (java.lang.Exception e) { throw new java.lang.@@ Exception@@ (("@@ Co@@ ul@@ d pack@@ et@@ : " + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ H@@ ex@@ D@@ um@@ p.@@ to@@ H@@ ex@@ String@@ (p@@ ack@@ et@@ )@@ )), e); } }
@org.junit.Test public void test@@ Ap@@ f@@ Filter@@ Ar@@ p@@ () throw@@ s java.lang.Exception { android.net.@@ ap@@ f.@@ Ap@@ f@@ Test@@ .@@ Mock@@ I@@ p@@ Client@@ Call@@ b@@ ac@@ k ip@@ Client@@ Call@@ b@@ ac@@ k = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ Mock@@ I@@ p@@ Client@@ Call@@ b@@ ac@@ k@@ (); android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ Ap@@ f@@ Configur@@ ation con@@ fi@@ g = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ get@@ Default@@ Config@@ (); config.@@ m@@ ulti@@ cast@@ Fil@@ ter = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ D@@ RO@@ P@@ _M@@ UL@@ T@@ IC@@ A@@ S@@ T@@ ; config.@@ i@@ ee@@ e@@ 8@@ 0@@ 2@@ _@@ 3@@ Fil@@ ter = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ D@@ RO@@ P@@ _@@ 8@@ 0@@ 2@@ _@@ 3@@ _@@ F@@ R@@ AM@@ E@@ S@@ ; android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ Test@@ Ap@@ f@@ Fil@@ ter ap@@ f@@ Fil@@ ter = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ Test@@ Ap@@ f@@ Filter@@ (@@ config@@ , ip@@ Client@@ Call@@ b@@ ac@@ k , m@@ Log@@ ); ve@@ r@@ if@@ y@@ Ar@@ p@@ Filter@@ (@@ ip@@ Client@@ Call@@ b@@ ac@@ k = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Pro@@ g@@ ram@@ (), android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ P@@ A@@ SS@@ ); android.net.@@ Lin@@ k@@ Address lin@@ k@@ Address = new android.net.@@ Lin@@ k@@ Addres@@ s(@@ java.net.Inet@@ Addres@@ s.get@@ By@@ Addres@@ s(@@ android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ M@@ O@@ C@@ K@@ _@@ IP@@ V@@ 4@@ _@@ AD@@ D@@ R@@ ), 24@@ ); android.net.@@ Lin@@ k@@ Proper@@ ti@@ es l@@ p = new android.net.@@ Lin@@ k@@ Properties@@ (); assert@@ True@@ (@@ l@@ p.@@ add@@ Lin@@ k@@ Addres@@ s(@@ lin@@ k@@ Address@@ )); ve@@ r@@ if@@ y@@ Ar@@ p@@ Filter@@ (get@@ Pro@@ g@@ ram@@ (@@ ip@@ Client@@ Call@@ b@@ ac@@ k ap@@ f@@ Filter@@ , l@@ p@@ ), android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ D@@ RO@@ P@@ ); ve@@ r@@ if@@ y@@ Ar@@ p@@ Filter@@ (get@@ Pro@@ g@@ ram@@ (@@ ip@@ Client@@ Call@@ b@@ ac@@ k@@ , ap@@ f@@ Filter@@ , new android.net.@@ Lin@@ k@@ Properties@@ ()@@ ), android.net.@@ Lin@@ k@@ Properties@@ ()@@ ), android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ P@@ A@@ SS@@ ); ap@@ f@@ Fil@@ ter.@@ sh@@ u@@ t@@ do@@ wn@@ (); }
@java.lang.Override public void on@@ Pro@@ vision@@ ing@@ Su@@ c@@ ces@@ s(@@ android.net.@@ Lin@@ k@@ Proper@@ ti@@ es new@@ L@@ p@@ ) { synchronized@@ (@@ this@@ ) { m@@ Callback@@ Lin@@ k@@ Proper@@ ti@@ es = new@@ L@@ p@@ ; not@@ if@@ y(); } }
@java.lang.Override public void on@@ Pro@@ vision@@ ing@@ Fail@@ ure@@ (android.net.@@ Lin@@ k@@ Proper@@ ti@@ es new@@ L@@ p@@ ) { synchronized@@ (@@ this@@ ) { m@@ Callback@@ Lin@@ k@@ Proper@@ ti@@ es = null@@ ; not@@ if@@ y(); } }
public android.net.@@ Lin@@ k@@ Proper@@ ti@@ es wait@@ For@@ Pro@@ vision@@ ing@@ () { synchronized@@ (@@ this@@ ) { try { wait@@ (); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { } return m@@ Callback@@ Lin@@ k@@ Properties@@ ; } }
@org.junit.Test public void test@@ R@@ a@@ Par@@ sing@@ () throw@@ s java.lang.Exception { final int max@@ R@@ an@@ do@@ m@@ Pack@@ et@@ Siz@@ e = 5@@ 12@@ ; final java.util.@@ R@@ an@@ do@@ m r = new java.util.@@ R@@ an@@ do@@ m@@ (); android.net.@@ ap@@ f.@@ Ap@@ f@@ Test@@ .@@ Mock@@ I@@ p@@ Client@@ Call@@ b@@ ac@@ k c@@ b = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Test@@ .@@ Mock@@ I@@ p@@ Client@@ Call@@ b@@ ac@@ k@@ (); android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter.@@ Ap@@ f@@ Configur@@ ation con@@ fi@@ g = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ get@@ Default@@ Config@@ (); config.@@ m@@ ulti@@ cast@@ Fil@@ ter = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ D@@ RO@@ P@@ _M@@ UL@@ T@@ IC@@ A@@ S@@ T@@ ; config.@@ i@@ ee@@ e@@ 8@@ 0@@ 2@@ _@@ 3@@ Fil@@ ter = android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ D@@ RO@@ P@@ _@@ 8@@ 0@@ 2@@ _@@ 3@@ _@@ F@@ R@@ AM@@ E@@ S@@ ; android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ Test@@ Ap@@ f@@ Fil@@ ter ap@@ f@@ Fil@@ ter = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ Test@@ Ap@@ f@@ Filter@@ (@@ config@@ , c@@ b@@ , m@@ Log@@ ); for (@@ int i = 0; i < 1@@ 00@@ 0; i++) { byte@@ [] pack@@ et = new byte@@ [@@ r.@@ next@@ Int@@ ((m@@ a@@ x@@ R@@ an@@ do@@ m@@ Pack@@ et@@ Siz@@ e + 1@@ ))@@ ]; r.@@ next@@ Bytes@@ (p@@ ack@@ et@@ ); try { ap@@ f@@ Filter@@ .@@ new android.net.@@ ap@@ f.@@ R@@ a@@ (p@@ ack@@ et@@ , pack@@ et@@ .@@ length); } catch (android.net.@@ ap@@ f.@@ Ap@@ f@@ Fil@@ ter e) { throw new java.lang.@@ Exception@@ (("@@ U@@ ne@@ x@@ pec@@ ted pack@@ et@@ : " + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ H@@ ex@@ D@@ um@@ p.@@ to@@ H@@ ex@@ String@@ (p@@ ack@@ et@@ )@@ )), e); } }
@java.lang.Override public void on@@ Sub@@ s@@ cription@@ s@@ Changed@@ () { st@@ op@@ List@@ en@@ For@@ Phone@@ State@@ (); start@@ List@@ en@@ For@@ Phone@@ State@@ (); }
private void update@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State ag@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ ) { if (java.util.@@ Object@@ s.@@ equal@@ s@@ (m@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ , ag@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ )) { return@@ ; } m@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State = ag@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ ; int event@@ s = android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E@@ ; if ((@@ (m@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ ) != null@@ ) && (m@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State.@@ service@@ )) { event@@ s |@@ = android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ; } if ((@@ (m@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ ) != null@@ ) && (m@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State.@@ sign@@ al@@ )) { event@@ s |@@ = android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ; } m@@ System@@ Interface@@ .get@@ He@@ ad@@ set@@ Phone@@ State@@ ().@@ list@@ en@@ For@@ Phone@@ State@@ (m@@ Device@@ , event@@ s); }
private void start@@ List@@ en@@ For@@ Phone@@ State@@ () { if (!(m@@ Phone@@ State@@ Listener@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Phone@@ State.@@ TAG, "@@ start@@ List@@ en@@ ing al@@ read@@ y list@@ en@@ ing return@@ ; } int sub@@ Id = android.@@ telephony.@@ Sub@@ s@@ cription@@ Manager.@@ get@@ Default@@ Sub@@ s@@ cription@@ Id@@ (); if (!(m@@ Phone@@ State@@ List@@ en@@ er.@@ is@@ Valid@@ Sub@@ s@@ cription@@ Id@@ (s@@ u@@ b@@ Id@@ ))) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Phone@@ State.@@ TAG, ("@@ start@@ List@@ en@@ ing in@@ va@@ li@@ d sub@@ s@@ cri@@ pti@@ on I@@ D " + sub@@ Id@@ )); return@@ ; } int event@@ s = get@@ Telephony@@ Event@@ s@@ To@@ List@@ en@@ (); if (@@ event@@ s == (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Phone@@ State.@@ TAG, "@@ start@@ List@@ en@@ ing n@@ o ev@@ ent to li@@ s@@ te@@ n return@@ ; } m@@ Phone@@ State@@ List@@ en@@ er = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Phone@@ State.@@ He@@ ad@@ set@@ Phone@@ State@@ Listener@@ (s@@ u@@ b@@ Id, m@@ He@@ ad@@ set@@ Service@@ .get@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ L@@ oo@@ per@@ ()); m@@ Telephony@@ Manager.@@ list@@ en@@ (m@@ Phone@@ State@@ Listener@@ , event@@ s); if ((@@ event@@ s & (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))@@ ))); }
private void st@@ op@@ List@@ en@@ For@@ Phone@@ State@@ () { if ((m@@ Phone@@ State@@ Listener@@ ) == null@@ ) { m@@ Telephony@@ Manager.@@ list@@ en@@ (m@@ Phone@@ State@@ Listener@@ , Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); m@@ Telephony@@ Manager.@@ set@@ R@@ ad@@ io@@ In@@ d@@ ic@@ ation@@ Up@@ date@@ Mode@@ (@@ Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ F@@ IL@@ T@@ ER_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ , Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ _MOD@@ E_@@ N@@ OR@@ M@@ AL@@ ); m@@ Phone@@ State@@ List@@ en@@ er = null@@ ; }
public void cle@@ an@@ up@@ () { m@@ Device@@ Event@@ Map@@ .@@ clear@@ (); }
@@@ android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public void list@@ en@@ For@@ Phone@@ State@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int event@@ s) { synchronized@@ (m@@ Telephony@@ Manager@@ ) { m@@ Device@@ Event@@ Map@@ .@@ put@@ (@@ device@@ , event@@ s); } st@@ op@@ List@@ en@@ For@@ Phone@@ State@@ (); }
@org.junit.Test public void test@@ At@@ B@@ i@@ a@@ Event@@ _@@ in@@ iti@@ al@@ Sub@@ s@@ cription@@ With@@ Up@@ dat@@ es@@ () { set@@ Up@@ Connec@@ ted@@ State@@ (); ve@@ r@@ if@@ y@@ (m@@ Phone@@ State@@ ).@@ list@@ en@@ For@@ Phone@@ State@@ (m@@ Test@@ Device@@ , ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); m@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ B@@ I@@ A@@ , new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ (@@ true@@ , false@@ , true@@ , false@@ ), m@@ Test@@ Device@@ )); ve@@ r@@ if@@ y@@ (m@@ Phone@@ State@@ ).@@ list@@ en@@ For@@ Phone@@ State@@ (m@@ Test@@ Device@@ , Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ); m@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ B@@ I@@ A@@ , new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ (@@ false@@ , true@@ , false@@ ), m@@ Test@@ Device@@ )); ve@@ r@@ if@@ y@@ (m@@ Phone@@ State@@ ).@@ list@@ en@@ For@@ Phone@@ State@@ (m@@ Test@@ Device@@ , Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ); m@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ STA@@ C@@ K@@ _@@ EV@@ EN@@ T@@ , new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ B@@ I@@ A@@ , new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ A@@ g@@ In@@ di@@ cat@@ or@@ En@@ able@@ State@@ (@@ false@@ , true@@ , false@@ ), m@@ Test@@ Device@@ )); ve@@ r@@ if@@ y@@ (m@@ Phone@@ State@@ ).@@ list@@ en@@ For@@ Phone@@ State@@ (m@@ Test@@ Device@@ , Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); }
@org.junit.Test public void test@@ List@@ en@@ For@@ Phone@@ State@@ _M@@ ulti@@ Device@@ _@@ All@@ Up@@ All@@ Do@@ wn@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ 1 = com.android.@@ bluetooth.@@ Test@@ Utils.@@ get@@ Test@@ Device@@ (m@@ Adap@@ ter@@ , 1); android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ 2 = com.android.@@ bluetooth.@@ Test@@ Utils.@@ get@@ Test@@ Device@@ (m@@ Adap@@ ter@@ , 2@@ ); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 1, ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).set@@ R@@ ad@@ io@@ In@@ d@@ ic@@ ation@@ Up@@ date@@ Mode@@ (@@ Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ F@@ IL@@ T@@ ER_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ , Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ _MOD@@ E_@@ I@@ G@@ N@@ OR@@ E_@@ S@@ C@@ RE@@ EN@@ _@@ O@@ F@@ F@@ F@@ ); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 2, ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Telephony@@ Manager@@ ); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 1, Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Telephony@@ Manager@@ ); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 2, Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).set@@ R@@ ad@@ io@@ In@@ d@@ ic@@ ation@@ Up@@ date@@ Mode@@ (@@ Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ F@@ IL@@ T@@ ER_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ , Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ _MOD@@ E_@@ N@@ OR@@ M@@ AL@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Telephony@@ Manager@@ ); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () { m@@ He@@ ad@@ set@@ Phone@@ State.@@ cle@@ an@@ up@@ (); }
@org.junit.Test public void test@@ List@@ en@@ For@@ Phone@@ State@@ _@@ Service@@ And@@ Sign@@ al@@ Str@@ ength@@ Up@@ date@@ T@@ ur@@ n@@ O@@ ff@@ All@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ 1 = com.android.@@ bluetooth.@@ Test@@ Utils.@@ get@@ Test@@ Device@@ (m@@ Adap@@ ter@@ , 1); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 1, ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).set@@ R@@ ad@@ io@@ In@@ d@@ ic@@ ation@@ Up@@ date@@ Mode@@ (@@ Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ F@@ IL@@ T@@ ER_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ , Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ _MOD@@ E_@@ I@@ G@@ N@@ OR@@ E_@@ S@@ C@@ RE@@ EN@@ _@@ O@@ F@@ ); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 1, Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).set@@ R@@ ad@@ io@@ In@@ d@@ ic@@ ation@@ Up@@ date@@ Mode@@ (@@ Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ F@@ IL@@ T@@ ER_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ , Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ _MOD@@ E_@@ N@@ OR@@ M@@ AL@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Telephony@@ Manager@@ ); }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () { org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); when@@ (m@@ He@@ ad@@ set@@ Service@@ .get@@ System@@ Service@@ (@@ Context.@@ TE@@ LE@@ P@@ H@@ ON@@ Y@@ _S@@ ER@@ V@@ IC@@ E@@ )).@@ thenReturn@@ (m@@ Telephony@@ Manager@@ ); when@@ (m@@ He@@ ad@@ set@@ Service@@ .get@@ System@@ Service@@ (@@ Context.@@ TE@@ LE@@ P@@ H@@ ON@@ Y@@ _S@@ U@@ B@@ S@@ C@@ R@@ IP@@ TION@@ _S@@ ER@@ V@@ IC@@ E@@ )).@@ thenReturn@@ (m@@ Sub@@ s@@ cription@@ Manager@@ ); m@@ He@@ ad@@ set@@ Phone@@ State = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Phone@@ State@@ (m@@ He@@ ad@@ set@@ Service@@ ); }
@org.junit.Test public void test@@ List@@ en@@ For@@ Phone@@ State@@ _@@ Service@@ On@@ ly@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ 1 = com.android.@@ bluetooth.@@ Test@@ Utils.@@ get@@ Test@@ Device@@ (m@@ Adap@@ ter@@ , 1); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 1, Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Telephony@@ Manager@@ ); }
@org.junit.Test public void test@@ List@@ en@@ For@@ Phone@@ State@@ _@@ Service@@ And@@ Sign@@ al@@ Str@@ ength@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ 1 = com.android.@@ bluetooth.@@ Test@@ Utils.@@ get@@ Test@@ Device@@ (m@@ Adap@@ ter@@ , 1); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 1, ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).set@@ R@@ ad@@ io@@ In@@ d@@ ic@@ ation@@ Up@@ date@@ Mode@@ (@@ Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ F@@ IL@@ T@@ ER_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ , Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ _MOD@@ E_@@ I@@ G@@ N@@ OR@@ E_@@ S@@ C@@ RE@@ EN@@ _@@ O@@ F@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Telephony@@ Manager@@ ); }
@org.junit.Test public void test@@ List@@ en@@ For@@ Phone@@ State@@ _@@ Service@@ And@@ Sign@@ al@@ Str@@ ength@@ Up@@ date@@ T@@ ur@@ n@@ O@@ ff@@ Sign@@ al@@ Str@@ eng@@ h@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ 1 = com.android.@@ bluetooth.@@ Test@@ Utils.@@ get@@ Test@@ Device@@ (m@@ Adap@@ ter@@ , 1); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 1, ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), ((@@ android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ) | (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ S@@ ))); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).set@@ R@@ ad@@ io@@ In@@ d@@ ic@@ ation@@ Up@@ date@@ Mode@@ (@@ Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ F@@ IL@@ T@@ ER_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ , Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ _MOD@@ E_@@ I@@ G@@ N@@ OR@@ E_@@ S@@ C@@ RE@@ EN@@ _@@ O@@ F@@ ); m@@ He@@ ad@@ set@@ Phone@@ State.@@ list@@ en@@ For@@ Phone@@ State@@ (@@ device@@ 1, Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _N@@ ON@@ E); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).set@@ R@@ ad@@ io@@ In@@ d@@ ic@@ ation@@ Up@@ date@@ Mode@@ (@@ Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ F@@ IL@@ T@@ ER_@@ SI@@ G@@ N@@ AL@@ _S@@ TR@@ EN@@ G@@ TH@@ , Telephony@@ Manager.@@ IN@@ D@@ IC@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ _MOD@@ E_@@ N@@ OR@@ M@@ AL@@ ); ve@@ r@@ if@@ y@@ (m@@ Telephony@@ Manager@@ ).@@ list@@ en@@ (@@ an@@ y@@ (), Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _S@@ ER@@ V@@ IC@@ E_@@ STA@@ TE@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Telephony@@ Manager@@ ); }
@java.lang.Override public void run@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ I@@ Test@@ In@@ vo@@ cation@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception { for (com.android.ide.@@ common.@@ resources.@@ manag@@ er.@@ Resource@@ Type ap@@ k@@ ey : com.android.@@ utils.@@ Sdk@@ Utils.@@ s@@ k@@ ip@@ p@@ er.get@@ In@@ stall@@ Package@@ (@@ ap@@ k@@ .get@@ Default@@ ().get@@ Name@@ (), true@@ ); run@@ Device@@ Test@@ s@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ P@@ AC@@ K@@ A@@ G@@ E, com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , ("@@ test@@ " + (@@ ap@@ k@@ .get@@ name@@ ()))); } }
@org.junit.Test public void test@@ S@@ N@@ IP@@ ER_@@ 3@@ D@@ () throw@@ s java.io.IO@@ Exception, java.lang.@@ Interrup@@ ted@@ Exception { start@@ App@@ (@@ Apk@@ Info@@ .@@ S@@ N@@ IP@@ ER_@@ 3@@ D@@ ); }
@java.lang.Override protected void res@@ ol@@ ve@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Config@@ (com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g c@@ f@@ g@@ ) { m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g = c@@ f@@ g@@ ; if (m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g.@@ in@@ Str@@ i@@ ct@@ Mode@@ ()) { try { java.net.Inet@@ Address@@ [] ip@@ s = new java.net.Inet@@ Address@@ []{ java.net.Inet@@ Addres@@ s.get@@ By@@ Name("@@ 3@@ .@@ 3@@ .@@ 3@@ "), java.net.Inet@@ Addres@@ s.get@@ By@@ Name("@@ 4@@ .@@ 4@@ .@@ 4@@ ") }; m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g = new com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Config@@ (m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g.@@ ho@@ st@@ name@@ , i@@ ps@@ ); } catch (java.lang.Exception e) { } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing protected void res@@ ol@@ ve@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Config@@ (com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g c@@ f@@ g@@ ) { if (c@@ f@@ g == null@@ ) { m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g = null@@ ; return@@ ; } if (!(@@ c@@ f@@ g.@@ in@@ Str@@ i@@ ct@@ Mode@@ ())) { m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g = c@@ f@@ g@@ ; return@@ ; } if ((((@@ (m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g@@ ) != null@@ ) && (m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g.@@ in@@ Str@@ i@@ ct@@ Mode@@ ())) && ((m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g.@@ ip@@ s.@@ length) > 0@@ )) && (m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g.@@ ho@@ st@@ nam@@ e.@@ equals(@@ c@@ f@@ g.@@ ho@@ st@@ name@@ ))) { return@@ ; } m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g = c@@ f@@ g@@ ; final com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g res@@ ol@@ v@@ ed@@ C@@ f@@ g = com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager@@ .@@ try@@ Block@@ ing@@ Res@@ ol@@ ve@@ Of@@ (m@@ Network@@ , m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g.@@ ho@@ st@@ name@@ ); if (@@ res@@ ol@@ v@@ ed@@ C@@ f@@ g != null@@ ) m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ C@@ f@@ g = res@@ ol@@ v@@ ed@@ C@@ f@@ g@@ ; }
private void handle@@ Reg@@ ister@@ Network@@ A@@ g@@ ent@@ (@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ ) { if (com.android.server.@@ Connectivity@@ Service.@@ V@@ D@@ B@@ G) com.android.server.@@ Connectivity@@ Service.@@ log@@ ("@@ handle@@ Reg@@ ister@@ Network@@ A@@ g@@ ent@@ "); m@@ Network@@ A@@ g@@ ent@@ Info@@ s.@@ put@@ (@@ n@@ a.@@ mess@@ eng@@ er, n@@ a@@ ); synchronized@@ (m@@ Network@@ For@@ Net@@ Id@@ ) { m@@ Network@@ For@@ Net@@ Id@@ .@@ put@@ (@@ n@@ a.@@ network@@ .@@ net@@ Id, n@@ a@@ ); } m@@ D@@ n@@ s@@ Manager.@@ update@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ n@@ a.@@ network@@ , m@@ D@@ n@@ s@@ Manager.@@ get@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Config@@ ()); a.@@ as@@ ync@@ Channe@@ l.@@ connect@@ (m@@ Context@@ , m@@ Tr@@ ack@@ er@@ Handler@@ , n@@ a.@@ mess@@ eng@@ er@@ ); android.net.@@ Network@@ Info network@@ Info = n@@ a.@@ network@@ Info@@ ; n@@ a.@@ network@@ Info = null@@ ; update@@ Network@@ Info@@ (@@ n@@ a@@ , network@@ Info@@ ); update@@ U@@ id@@ s(@@ n@@ a@@ , null@@ , n@@ a.@@ network@@ Cap@@ abili@@ ties@@ ); }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing protected void handle@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Setting@@ s@@ Changed@@ () { final P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g c@@ f@@ g = m@@ D@@ n@@ s@@ Manager.@@ get@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Config@@ (); for (@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i : m@@ Network@@ A@@ g@@ ent@@ Info@@ s.@@ valu@@ es@@ ()) { if (!@@ (com.android.server.@@ connec@@ tivity.@@ Network@@ Monitor@@ .is@@ Valid@@ ation@@ Requ@@ i@@ re@@ d@@ (m@@ Default@@ Requ@@ est.@@ network@@ Cap@@ abili@@ ties@@ , n@@ a@@ i.@@ network@@ Cap@@ abili@@ ties@@ ))) { continue@@ ; } n@@ a@@ i.@@ network@@ Monitor@@ .@@ not@@ if@@ y@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Setting@@ s@@ Changed@@ (c@@ f@@ g@@ ); if (!(@@ c@@ f@@ g.@@ in@@ Str@@ i@@ ct@@ Mode@@ ())) { update@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ n@@ a@@ i@@ , c@@ f@@ g@@ ); } } }
private void handle@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Up@@ date@@ (com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Up@@ d@@ ate update@@ ) { m@@ D@@ n@@ s@@ Manager.@@ update@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ (@@ update@@ ); com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i = get@@ Network@@ A@@ g@@ ent@@ Info@@ For@@ Network@@ (@@ new android.net.@@ Network@@ (@@ up@@ dat@@ e.@@ net@@ Id@@ )); if (@@ n@@ a@@ i == null@@ ) { return@@ ; } if (m@@ D@@ n@@ s@@ Manager.@@ m@@ ay@@ b@@ e@@ Fi@@ x@@ Lin@@ k@@ Properties@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ n@@ a@@ i.@@ network@@ .@@ net@@ Id, new android.net.@@ Lin@@ k@@ Properties@@ (@@ n@@ a@@ i.@@ lin@@ k@@ Properties@@ ))) { handle@@ Up@@ date@@ Lin@@ k@@ Properties@@ (@@ n@@ a@@ i@@ , new android.net.@@ Lin@@ k@@ Properties@@ (@@ n@@ a@@ i.@@ lin@@ k@@ Properties@@ )); } }
private void update@@ Statu@@ s(@@ java.net.Inet@@ Address ip@@ Addres@@ s, java.lang.String ho@@ st@@ name@@ , boolean valid@@ ated@@ ) { android.util.@@ Pair@@ <java.lang.String, java.net.Inet@@ Address@@ > p = new android.util.@@ Pair@@ (@@ ho@@ st@@ name@@ , ip@@ Addres@@ s); if (!(m@@ Valid@@ ation@@ Map@@ .@@ contain@@ s@@ Key@@ (p@@ ))) { return@@ ; } if (@@ valid@@ ated@@ ) { m@@ Valid@@ ation@@ Map@@ .@@ put@@ (p@@ , com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Statu@@ s@@ es.@@ Valid@@ ation@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ E@@ DE@@ D@@ ); } else { m@@ Valid@@ ation@@ Map@@ .@@ put@@ (p@@ , com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Statu@@ s@@ es.@@ Valid@@ ation@@ Statu@@ s.@@ FA@@ IL@@ E@@ D@@ ); } }
private void update@@ Lin@@ k@@ Properties@@ (com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info network@@ A@@ g@@ ent@@ , android.net.@@ Lin@@ k@@ Proper@@ ti@@ es old@@ L@@ p@@ ) { android.net.@@ Lin@@ k@@ Proper@@ ti@@ es new@@ L@@ p = network@@ A@@ g@@ ent.@@ lin@@ k@@ Properties@@ ; int net@@ Id = network@@ A@@ g@@ ent.@@ network@@ .@@ net@@ Id@@ ; if ((@@ network@@ A@@ g@@ ent.@@ c@@ lat@@ d@@ ) != null@@ ) { network@@ A@@ g@@ ent.@@ c@@ lat@@ d.@@ fix@@ up@@ Lin@@ k@@ Properties@@ (@@ old@@ L@@ p@@ ); } update@@ Inter@@ fa@@ ces@@ (@@ new@@ L@@ p@@ , old@@ L@@ p@@ , net@@ Id, network@@ A@@ g@@ ent.@@ network@@ Cap@@ abili@@ ties@@ ); update@@ M@@ t@@ u@@ (@@ new@@ L@@ p@@ , old@@ L@@ p@@ ); update@@ T@@ c@@ p@@ Buffer@@ Siz@@ es@@ (@@ network@@ A@@ g@@ ent@@ ); update@@ R@@ out@@ es@@ (@@ new@@ L@@ p@@ , old@@ L@@ p@@ , net@@ Id@@ ); update@@ D@@ n@@ s@@ es@@ (@@ new@@ L@@ p@@ , old@@ L@@ p@@ , net@@ Id@@ ); m@@ D@@ n@@ s@@ Manager.@@ m@@ ay@@ b@@ e@@ Fi@@ x@@ Lin@@ k@@ Properties@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ net@@ Id, new@@ L@@ p@@ ); network@@ A@@ g@@ ent.@@ update@@ C@@ lat@@ (m@@ Net@@ d@@ ); if (is@@ Default@@ Network@@ (@@ network@@ A@@ g@@ ent@@ )) { handle@@ App@@ ly@@ Default@@ Prox@@ y@@ (@@ new@@ L@@ p@@ .get@@ H@@ ttp@@ Prox@@ y@@ ()); } else { update@@ Prox@@ y@@ (@@ new@@ L@@ p@@ , old@@ L@@ p@@ , network@@ A@@ g@@ ent@@ ); } if (!(@@ java.util.@@ Object@@ s.@@ equal@@ s@@ (@@ new@@ L@@ p@@ , old@@ L@@ p@@ ))) { not@@ if@@ y@@ I@@ fa@@ ces@@ Changed@@ For@@ Network@@ Stat@@ s(); not@@ if@@ y@@ Network@@ Callback@@ s(@@ network@@ A@@ g@@ ent@@ , Connectivity@@ Manager.@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _@@ IP@@ _C@@ H@@ AN@@ GE@@ D@@ ); } m@@ K@@ ee@@ p@@ al@@ i@@ ve@@ Tr@@ ack@@ er.@@ handle@@ Check@@ K@@ ee@@ p@@ al@@ i@@ v@@ es@@ S@@ ti@@ l@@ Valid@@ (@@ network@@ A@@ g@@ ent@@ ); }
private boolean update@@ P@@ riv@@ ate@@ D@@ n@@ s@@ (com.android.server.@@ connec@@ tivity.@@ Network@@ A@@ g@@ ent@@ Info n@@ a@@ i@@ , com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g new@@ C@@ f@@ g@@ ) { final boolean ree@@ valu@@ ation@@ Requ@@ i@@ re@@ d = true@@ ; final boolean do@@ n@@ t@@ Re@@ e@@ valu@@ ate = false@@ ; final com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g old@@ C@@ f@@ g = m@@ D@@ n@@ s@@ Manager.@@ update@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ n@@ a@@ i.@@ network@@ , new@@ C@@ f@@ g@@ ); update@@ D@@ n@@ s@@ es@@ (@@ n@@ a@@ i.@@ lin@@ k@@ Properties@@ , null@@ , n@@ a@@ i.@@ network@@ .@@ net@@ Id@@ ); if ((m@@ D@@ n@@ s@@ Manager.@@ m@@ ay@@ b@@ e@@ Fi@@ x@@ Lin@@ k@@ Properties@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ n@@ a@@ i.@@ network@@ .@@ net@@ Id, new android.net.@@ Lin@@ k@@ Properties@@ (@@ n@@ a@@ i.@@ lin@@ k@@ Properties@@ ))) { handle@@ Up@@ date@@ Lin@@ k@@ Properties@@ (@@ n@@ a@@ i@@ , new android.net.@@ Lin@@ k@@ Properties@@ (@@ n@@ a@@ i.@@ lin@@ k@@ Properties@@ )); } if (@@ new@@ C@@ f@@ g == null@@ ) { if (@@ old@@ C@@ f@@ g == null@@ ) return do@@ n@@ t@@ Re@@ e@@ valu@@ ate@@ ; return old@@ C@@ f@@ g.@@ u@@ se@@ T@@ l@@ s ? ree@@ valu@@ ation@@ Requ@@ i@@ re@@ d : do@@ n@@ t@@ Re@@ e@@ valu@@ ate@@ ; } if (@@ old@@ C@@ f@@ g == null@@ ) { return new@@ C@@ f@@ g.@@ u@@ se@@ T@@ l@@ s ? ree@@ valu@@ ation@@ Requ@@ i@@ re@@ d : do@@ n@@ t@@ Re@@ e@@ valu@@ ate@@ ; } if ((@@ old@@ C@@ f@@ g.@@ u@@ se@@ T@@ l@@ s) != (@@ new@@ C@@ f@@ g.@@ u@@ se@@ T@@ l@@ s@@ )) { return ree@@ valu@@ ation@@ Requ@@ i@@ re@@ d@@ ; } if (@@ new@@ C@@ f@@ g.@@ in@@ Str@@ i@@ ct@@ Mode@@ ()) && (!(@@ java.util.@@ Object@@ s.@@ equals(@@ old@@ C@@ f@@ g.@@ ho@@ st@@ name@@ , new@@ C@@ f@@ g.@@ ho@@ st@@ name@@ )@@ ))) { return ree@@ valu@@ ation@@ Requ@@ i@@ re@@ d@@ ; } return do@@ n@@ t@@ Re@@ e@@ valu@@ ate@@ ; }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing protected void register@@ Net@@ d@@ Event@@ Callback@@ () { m@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s = check@@ NotNull@@ ((@@ (android.net.@@ I@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s) (@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s.@@ St@@ u@@ b.@@ as@@ Interface@@ (android.os.@@ Service@@ Manager.@@ get@@ Service@@ (@@ I@@ p@@ Connectivity@@ Log.@@ S@@ ER@@ V@@ IC@@ E_@@ N@@ AM@@ E@@ ))@@ )), "@@ mis@@ s@@ ing I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s@@ "); try { m@@ I@@ p@@ Connectivity@@ M@@ et@@ ri@@ c@@ s.@@ add@@ Net@@ d@@ Event@@ Callback@@ (@@ IN@@ et@@ d@@ Event@@ Callback@@ .@@ C@@ AL@@ L@@ B@@ AC@@ K@@ _C@@ AL@@ L@@ ER@@ _C@@ ON@@ N@@ EC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E, m@@ Net@@ d@@ Event@@ Callback@@ ); } catch (android.os.@@ Remote@@ Exception e) { com.android.server.@@ Connectivity@@ Service.@@ log@@ e@@ (("@@ Er@@ ror register@@ ing net@@ d call@@ b@@ ac@@ k :@@ " + e@@ )); } }
public void update@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ (com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Up@@ d@@ ate update@@ ) { if (!(m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Map@@ .@@ contain@@ s@@ Key@@ (@@ up@@ dat@@ e.@@ net@@ Id@@ ))) { return@@ ; } m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Map@@ .get@@ (@@ up@@ dat@@ e.@@ net@@ Id@@ ).@@ update@@ Statu@@ s(@@ up@@ dat@@ e.@@ ip@@ Addres@@ s, up@@ dat@@ e.@@ ho@@ st@@ name@@ , up@@ dat@@ e.@@ valid@@ ated@@ ); }
@java.lang.Override public void on@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Event@@ (@@ int net@@ Id, java.lang.String ip@@ Addres@@ s, java.lang.String ho@@ st@@ name@@ , boolean valid@@ ated@@ ) { try { m@@ Handler.@@ send@@ Message@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.server.@@ Connectivity@@ Service.@@ EV@@ ENT_@@ P@@ R@@ I@@ V@@ AT@@ E_@@ D@@ N@@ S@@ _V@@ AL@@ ID@@ AT@@ ION@@ _@@ U@@ P@@ DA@@ TE@@ , new com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Up@@ date@@ (@@ net@@ Id, java.net.Inet@@ Addres@@ s.@@ parse@@ N@@ um@@ er@@ ic@@ Addres@@ s(@@ ip@@ Address@@ ), ho@@ st@@ name@@ , valid@@ ated@@ ))); } catch (java.lang.@@ Illegal@@ Argument@@ Exception e) { } }
public boolean m@@ ay@@ b@@ e@@ Fi@@ x@@ Lin@@ k@@ Properties@@ P@@ riv@@ ate@@ D@@ n@@ s@@ (@@ int net@@ Id, android.net.@@ Lin@@ k@@ Proper@@ ti@@ es l@@ p@@ ) { final android.net.@@ Lin@@ k@@ Proper@@ ti@@ es old@@ L@@ p = new android.net.@@ Lin@@ k@@ Properties@@ (@@ l@@ p@@ ); final com.android.server.@@ connec@@ tivity.@@ D@@ n@@ s@@ Manager.@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Con@@ fi@@ g private@@ D@@ n@@ s@@ C@@ f@@ g = m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Map@@ .get@@ (@@ net@@ Id@@ ); final boolean u@@ se@@ T@@ l@@ s = (@@ private@@ D@@ n@@ s@@ C@@ f@@ g != null@@ ) && (@@ private@@ D@@ n@@ s@@ C@@ f@@ g.@@ u@@ se@@ T@@ l@@ s); final boolean str@@ i@@ ct@@ Mod@@ e = (@@ private@@ D@@ n@@ s@@ C@@ f@@ g != null@@ ) && (@@ private@@ D@@ n@@ s@@ C@@ f@@ g.@@ in@@ Str@@ i@@ ct@@ Mode@@ ()); final java.lang.String t@@ l@@ s@@ Host@@ name = (@@ str@@ i@@ ct@@ Mode@@ ) ? private@@ D@@ n@@ s@@ C@@ f@@ g.@@ ho@@ st@@ name : "@@ "; if (@@ str@@ i@@ ct@@ Mode@@ ) { l@@ p.@@ set@@ U@@ se@@ P@@ riv@@ ate@@ D@@ n@@ s@@ (@@ true@@ ); l@@ p.@@ set@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Server@@ Name@@ (@@ t@@ l@@ s@@ Host@@ name@@ ); } else if (@@ u@@ se@@ T@@ l@@ s) { boolean valid@@ ate@@ d = (m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Map@@ .@@ contain@@ s@@ Key@@ (@@ net@@ Id@@ )) && (m@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Valid@@ ation@@ Map@@ .get@@ (@@ net@@ Id@@ ).@@ has@@ Valid@@ ated@@ Server@@ ()); l@@ p.@@ set@@ U@@ se@@ P@@ riv@@ ate@@ D@@ n@@ s(@@ valid@@ ated@@ ); l@@ p.@@ set@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Server@@ Name@@ (@@ null@@ ); } else { l@@ p.@@ set@@ U@@ se@@ P@@ riv@@ ate@@ D@@ n@@ s@@ (@@ false@@ ); l@@ p.@@ set@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Server@@ Name@@ (@@ null@@ ); } return !@@ (java.util.@@ Object@@ s.@@ equals(@@ old@@ L@@ p@@ , l@@ p@@ )); }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing protected boolean is@@ T@@ ether@@ Pro@@ vision@@ ing@@ Requ@@ i@@ re@@ d@@ () { return m@@ Con@@ fi@@ g == null@@ ; }
private static java.lang.String get@@ Po@@ vision@@ ing@@ App@@ No@@ U@@ i@@ (android.@@ content.@@ Context ct@@ x@@ ) { try { return ct@@ x@@ .get@@ Res@@ ources@@ ().get@@ String(@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ R.@@ str@@ ing.@@ config@@ _@@ mo@@ b@@ ile@@ _@@ hotspot@@ _@@ pro@@ vision@@ _@@ app@@ _@@ no@@ _@@ ui@@ ); } catch (android.@@ content.@@ res@@ .@@ Resource@@ s e) { return "@@ "; } }
@java.lang.Override public void close@@ (java.io.FileDescriptor fd@@ ) throw@@ s android.system.Errno@@ Exception { try { if ((@@ fd@@ ) == null@@ ) || ((@@ fd@@ .is@@ Socket@@ $@@ ())) || ((@@ fd@@ ) == null@@ )) { if (@@ libcore.@@ io.@@ Block@@ G@@ u@@ ard@@ O@@ s.@@ is@@ L@@ ing@@ er@@ Socket@@ (@@ fd@@ )) { d@@ alvi@@ k.@@ system.@@ Block@@ G@@ u@@ ard@@ .get@@ Thread@@ Po@@ lic@@ y@@ ().@@ on@@ Network@@ (); } } catch (android.@@ system.@@ Errno@@ Exception ign@@ or@@ ed@@ ) { } os.@@ close@@ (@@ fd@@ ); }
public synchronized void close@@ Channel@@ s() { java.util.Collection@@ <@@ com.android.s@@ e.@@ Channel@@ > co@@ l = m@@ Channe@@ ls.@@ valu@@ es@@ (); com.android.s@@ e.@@ Channel@@ [] channe@@ l@@ Lis@@ t = co@@ l.@@ to@@ Array@@ (@@ new com.android.s@@ e.@@ Channel@@ [@@ co@@ l.@@ size@@ ()@@ ]@@ ); for (com.android.s@@ e.@@ Channe@@ l channe@@ l : channe@@ l@@ List@@ ) { close@@ Channel@@ (@@ channe@@ l@@ ); } if ((m@@ SE@@ H@@ al@@ ) != null@@ ) { try { m@@ SE@@ H@@ al.@@ un@@ lin@@ k@@ To@@ De@@ ath@@ (m@@ De@@ ath@@ R@@ ec@@ ip@@ i@@ ent@@ ); } catch (android.os.@@ Remote@@ Exception e) { } } }
@java.lang.Override public void handle@@ Message@@ (android.os.@@ Mess@@ age message@@ ) { switch (m@@ ess@@ age.@@ wh@@ at@@ ) { case com.android.s@@ e.@@ T@@ er@@ min@@ al.@@ EV@@ ENT_@@ GE@@ T_@@ H@@ A@@ L : try { in@@ iti@@ aliz@@ e@@ (); } catch (java.lang.Exception e) { android.util.Log.@@ e@@ (m@@ T@@ ag@@ , ((m@@ Name@@ ) + " co@@ ul@@ d not b@@ e in@@ iti@@ aliz@@ ed ag@@ ain@@ ")); send@@ Message@@ D@@ el@@ ay@@ ed@@ (m@@ Handler.@@ ob@@ t@@ ain@@ Message@@ (com.android.s@@ e.@@ T@@ er@@ min@@ al.@@ EV@@ ENT_@@ GE@@ T_@@ H@@ AL@@ , 0@@ ), com.android.s@@ e.@@ T@@ er@@ min@@ al.@@ GE@@ T_@@ S@@ ER@@ V@@ IC@@ E_@@ DE@@ LA@@ Y@@ _M@@ IL@@ L@@ IS@@ ); } break@@ ; default : break@@ ; } }
@java.lang.Override public void on@@ State@@ Chang@@ e@@ (@@ boolean state@@ ) { synchronized@@ (m@@ Lock) { android.util.Log.@@ i@@ (m@@ T@@ ag@@ , ("@@ On@@ State@@ Chang@@ e@@ :@@ " + state@@ )); m@@ I@@ s@@ Connec@@ ted = state@@ ; if (!@@ state@@ ) { if ((m@@ Access@@ Control@@ E@@ n@@ for@@ cer@@ ) != null@@ ) { m@@ Access@@ Control@@ E@@ n@@ for@@ c@@ er.@@ res@@ et@@ (); } } else { close@@ Channel@@ s(); try { in@@ iti@@ aliz@@ e@@ Access@@ Control@@ (); } catch (java.lang.Exception e) { } synchronized@@ (m@@ Lock) { m@@ Default@@ Application@@ Se@@ lected@@ On@@ Bas@@ ic@@ Channe@@ l = true@@ ; } } }
public void s@@ a@@ ve@@ () { this@@ .@@ update@@ d = new java.util.@@ Date@@ (); o@@ f@@ y@@ ().@@ de@@ fer@@ ().@@ s@@ a@@ ve@@ ().@@ enti@@ ty@@ (@@ this@@ ); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ File@@ Util.@@ re@@ c@@ ur@@ si@@ ve@@ D@@ el@@ et@@ e@@ (m@@ T@@ mp@@ Dir@@ ); }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { m@@ T@@ mp@@ Di@@ r = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ File@@ Util.@@ create@@ Temp@@ Dir@@ ("@@ v@@ ts@@ -@@ un@@ it@@ -@@ test@@ s@@ "); java.io.File in@@ v@@ Di@@ r = new java.io.File@@ (m@@ T@@ mp@@ Dir@@ , "@@ 2@@ 0@@ 1@@ 7@@ .@@ 0@@ 9@@ .@@ 0@@ 1@@ _@@ 1@@ 7@@ .@@ 3@@ 0.@@ 00@@ "); in@@ v@@ Dir@@ .@@ m@@ k@@ d@@ ir@@ s(); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ File@@ Util.@@ s@@ a@@ ve@@ Resource@@ File@@ (get@@ Class@@ ()@@ .get@@ Resource@@ As@@ Stream@@ (@@ RE@@ S@@ UL@@ T@@ S_@@ F@@ IL@@ E@@ ), in@@ v@@ Dir@@ , "@@ test_@@ res@@ ult.@@ xml@@ "); m@@ Build@@ Hel@@ p@@ er = new com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ Comp@@ ati@@ b@@ ili@@ ty@@ Build@@ Hel@@ per@@ (@@ null@@ ) { @java.lang.Override public java.io.File get@@ Results@@ Dir@@ () { return m@@ T@@ mp@@ Dir@@ ; } }; m@@ Hel@@ p@@ er = new com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ R@@ e@@ try@@ Filter@@ Hel@@ per@@ (m@@ Build@@ Hel@@ per@@ , 0, "@@ S@@ U@@ B@@ _P@@ L@@ AN@@ ", new java.util.@@ Hash@@ Set@@ <java.lang.String@@ >@@ (), new java.util.@@ Hash@@ Set@@ <java.lang.String@@ >@@ (), "@@ AB@@ I@@ _N@@ AM@@ E@@ ", "@@ M@@ OD@@ UL@@ E_@@ N@@ AM@@ E@@ ", "@@ TEST_@@ N@@ AM@@ E@@ ", R@@ e@@ try@@ Type.@@ FA@@ IL@@ E@@ D@@ ); }
@java.lang.Override protected synchronized boolean start@@ () { if (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service.@@ TAG, "@@ start@@ ()@@ "); } if ((m@@ Native@@ Interface@@ ) == null@@ ) { m@@ Native@@ Inter@@ face = new com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ Native@@ Inter@@ face@@ (); m@@ Native@@ Inter@@ face@@ .@@ in@@ iti@@ aliz@@ e@@ Native@@ (); } m@@ Au@@ dio@@ Manager = ((@@ android.@@ media.@@ Au@@ dio@@ Manager@@ ) (get@@ System@@ Service@@ (@@ Context.@@ A@@ U@@ D@@ IO@@ _S@@ ER@@ V@@ IC@@ E@@ ))); mS@@ m@@ Fa@@ ctor@@ y = new com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ State@@ M@@ ach@@ ine@@ Factory@@ (); m@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ clear@@ (); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (android.@@ media.@@ Au@@ dio@@ Manager.@@ V@@ O@@ L@@ U@@ M@@ E_@@ CH@@ AN@@ GE@@ D_@@ AC@@ TION@@ ); try { register@@ Recei@@ ver@@ (m@@ B@@ roadcast@@ Recei@@ ver@@ , fil@@ ter@@ ); } catch (java.lang.Exception e) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service.@@ TAG, "@@ Un@@ able to reg@@ is@@ ter b@@ road@@ c@@ at re@@ cei@@ ve@@ r ", e); } com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service@@ .set@@ He@@ ad@@ set@@ Client@@ Service@@ (@@ this@@ ); android.content.@@ Int@@ ent start@@ Int@@ ent = new android.content.@@ Intent@@ (@@ this@@ , com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ con@@ n@@ ser@@ v@@ .@@ H@@ f@@ p@@ Client@@ Connection@@ Service@@ .@@ class@@ ); start@@ Service@@ (@@ start@@ Intent@@ ); mS@@ m@@ Th@@ re@@ ad = new android.os.@@ Handler@@ Thread@@ ("@@ He@@ ad@@ set@@ C@@ li@@ ent.@@ S@@ M@@ "); mS@@ m@@ Thread@@ .@@ start@@ (); return true@@ ; }
@java.lang.Override protected synchronized boolean st@@ op@@ () { try { un@@ register@@ Recei@@ ver@@ (m@@ B@@ roadcast@@ Recei@@ ver@@ ); } catch (java.lang.Exception e) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service.@@ TAG, "@@ Un@@ able to un@@ reg@@ is@@ ter b@@ road@@ cas@@ t re@@ cei@@ ve@@ r ", e); } for (java.util.@@ I@@ ter@@ ator@@ <@@ java.util.Map@@ .@@ E@@ n@@ try@@ <@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ , com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ State@@ M@@ ach@@ ine@@ >@@ > i@@ t = m@@ State@@ M@@ ach@@ ine@@ Map@@ .@@ e@@ n@@ try@@ Set@@ ().@@ iter@@ ator@@ (); it.@@ has@@ Next@@ ()@@ ;@@ ) { com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ State@@ M@@ ach@@ in@@ e s@@ m = m@@ State@@ M@@ ach@@ ine@@ Map@@ .get@@ ((@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ ) (@@ it.@@ next@@ ().get@@ Key@@ ()))); s@@ m@@ .@@ do@@ Q@@ u@@ it@@ (); it.@@ remove@@ (); } android.content.@@ Int@@ ent st@@ op@@ Int@@ ent = new android.content.@@ Intent@@ (@@ this@@ , com.android.@@ bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ con@@ n@@ ser@@ v@@ .@@ H@@ f@@ p@@ Client@@ Connection@@ Service@@ .@@ class@@ ); st@@ op@@ Int@@ ent.@@ put@@ Extra@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ Service.@@ H@@ F@@ P@@ _C@@ L@@ I@@ ENT_@@ S@@ TO@@ P@@ _@@ TAG, true@@ ); start@@ Service@@ (@@ st@@ op@@ Intent@@ ); mS@@ m@@ Thread@@ .@@ qu@@ it@@ (); mS@@ m@@ Th@@ re@@ ad = null@@ ; if ((m@@ Native@@ Inter@@ face@@ ) != null@@ ) { m@@ Native@@ Interface@@ .@@ cle@@ an@@ up@@ Native@@ (); m@@ Native@@ Inter@@ face@@ .@@ null@@ ; } return true@@ ; }
@java.lang.Override protected void set@@ User@@ Un@@ lock@@ ed@@ (@@ int user@@ Id@@ ) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ TAG, "@@ Tr@@ u@@ p un@@ lock@@ ed@@ "); if (!@@ (android.os.@@ System@@ Properties@@ .get@@ Boolean@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ AV@@ R@@ C@@ P@@ _@@ EN@@ AB@@ L@@ E_@@ P@@ RO@@ P@@ E@@ RT@@ Y@@ , false@@ ))) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ TAG, "@@ set@@ User@@ Un@@ lock@@ ed@@ : in@@ iti@@ aliz@@ ation of the new AV@@ R@@ C@@ P T@@ arg@@ et Play@@ er List@@ "); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ s@@ In@@ stan@@ ce = null@@ ; return@@ ; } m@@ Media@@ Play@@ er@@ List@@ .@@ init@@ (@@ new@@ Interface@@ ); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service@@ .@@ List@@ Callback@@ (); }
@java.lang.Override protected boolean start@@ () { android.util.Log.@@ i@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ TAG, "@@ Media@@ Contro@@ lle@@ r the AV@@ R@@ C@@ P T@@ arg@@ et Ser@@ vice m@@ Current@@ Data = new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Data@@ (@@ null@@ , null@@ ); if (!@@ (android.os.@@ System@@ Properties@@ .get@@ Boolean@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ AV@@ R@@ C@@ P@@ _@@ EN@@ AB@@ L@@ E_@@ P@@ RO@@ P@@ E@@ RT@@ Y@@ , false@@ ))) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ TAG, "@@ st@@ ar@@ t in@@ iti@@ aliz@@ ation of the new AV@@ R@@ C@@ P T@@ arg@@ et Ser@@ vice "); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p.@@ Target@@ Service.@@ s@@ In@@ stan@@ ce = null@@ ; return true@@ ; } m@@ Recei@@ ve@@ r = new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ Av@@ rc@@ p@@ B@@ roadcast@@ Recei@@ ver@@ (); android.content.@@ Intent@@ Fil@@ ter fil@@ ter = new android.content.@@ Intent@@ Filter@@ (); fil@@ ter.@@ add@@ Action@@ (@@ Bluetooth@@ A@@ 2@@ d@@ p.@@ AC@@ TION@@ _@@ AC@@ TI@@ V@@ E_@@ DE@@ V@@ IC@@ E_@@ CH@@ AN@@ GE@@ D@@ ); register@@ Recei@@ ver@@ (m@@ Recei@@ ver@@ , fil@@ ter@@ ); init@@ (); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ s@@ In@@ stan@@ ce = this@@ ; return true@@ ; }
private void init@@ () { if ((m@@ Media@@ Play@@ er@@ List@@ ) != null@@ ) { android.util.Log.@@ w@@ t@@ f@@ Stack@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ TAG, "@@ init@@ () Th@@ e ser@@ vice h@@ a@@ s al@@ read@@ y b@@ ee@@ n in@@ iti@@ aliz@@ ed@@ "); return@@ ; } m@@ Au@@ dio@@ Manager = ((@@ android.@@ media.@@ Au@@ dio@@ Manager@@ ) (get@@ System@@ Service@@ (@@ Context.@@ A@@ U@@ D@@ IO@@ _S@@ ER@@ V@@ IC@@ E@@ ))); com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ s@@ Device@@ Ma@@ x@@ V@@ ol@@ um@@ e = m@@ Au@@ dio@@ Manager.@@ get@@ Stream@@ Ma@@ x@@ V@@ ol@@ um@@ e(@@ Au@@ dio@@ Manager.@@ S@@ T@@ RE@@ AM@@ _M@@ U@@ SI@@ C@@ ); m@@ Media@@ Play@@ er@@ Lis@@ t = new com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ List@@ (android.os.@@ L@@ oo@@ per.@@ my@@ L@@ oo@@ per@@ (), this@@ ); m@@ Native@@ Inter@@ face = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Native@@ Interface@@ .get@@ Interface@@ (); m@@ Native@@ Interface@@ .@@ init@@ (@@ this@@ ); }
private void create@@ Server@@ Session@@ (@@ javax.@@ ob@@ ex@@ .@@ Ob@@ ex@@ Trans@@ por@@ t trans@@ port@@ ) { m@@ Server@@ S@@ es@@ sion = new com.android.@@ bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Ob@@ ex@@ Server@@ Session@@ (@@ this@@ , trans@@ port@@ , this@@ ); m@@ Server@@ Session@@ .@@ pre@@ Start@@ (); if (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Service.@@ D@@ ) { android.util.Log.d@@ (com.android.bluetooth.@@ op@@ p.@@ Bluetooth@@ Op@@ p@@ Service.@@ TAG, ((@@ ("@@ S@@ es@@ sion " + (m@@ Server@@ Session@@ .@@ toString@@ ())) + " for in@@ com@@ ing connec@@ tion ") + (@@ trans@@ port.@@ toString@@ ()))); } com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ O@@ P@@ P@@ P@@ ); }
@@@ android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing synchronized void connection@@ State@@ Changed@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int f@@ rom@@ State@@ , int to@@ State@@ ) { if ((@@ de@@ vice == null@@ ) || (f@@ rom@@ State == to@@ State@@ )) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ((((@@ ("@@ S@@ ho@@ ul@@ d u@@ ne@@ x@@ pec@@ ted in@@ vo@@ cation@@ . device@@ =@@ " + device@@ ) + " f@@ rom@@ State@@ =@@ ") + f@@ rom@@ State@@ ) + " to@@ State@@ =@@ ") + to@@ State@@ )); return@@ ; } if (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { set@@ Ac@@ tive@@ Device@@ (@@ device@@ ); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ H@@ E@@ AR@@ ING@@ _@@ A@@ ID@@ ); } if ((@@ f@@ rom@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (get@@ Connec@@ ted@@ De@@ vices@@ ().@@ isEmpty@@ ())) { set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); } if (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { int b@@ ond@@ State = m@@ Adap@@ ter@@ Service@@ .get@@ B@@ ond@@ State@@ (@@ device@@ ); if (b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E@@ )) { if (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (@@ de@@ vice + " is un@@ b@@ ond@@ . Remo@@ v@@ e st@@ ate m@@ ach@@ in@@ e } remove@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); } }
private void on@@ Connection@@ State@@ Changed@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int pre@@ v@@ State@@ , int state@@ ) { if ((@@ pre@@ v@@ State != state@@ ) && (@@ st@@ ate == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ A@@ 2@@ D@@ P@@ _S@@ IN@@ K@@ ); } android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ A@@ 2@@ d@@ p@@ S@@ in@@ k.@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , pre@@ v@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , state@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, device@@ ); m@@ Context.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ , Pro@@ file@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); log@@ ((@@ ((@@ (("@@ B@@ roadcast@@ ()@@ : st@@ ate " + device@@ ) + "@@ -@@ >@@ ") + state@@ )); }
private void connection@@ State@@ Changed@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int f@@ rom@@ State@@ , int to@@ State@@ ) { if ((@@ de@@ vice == null@@ ) || (f@@ rom@@ State == to@@ State@@ )) { return@@ ; } synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { if (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { update@@ Option@@ al@@ Co@@ dec@@ s@@ Sup@@ port@@ (@@ device@@ ); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ A@@ 2@@ D@@ P@@ ); } if ((@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && ((m@@ Ma@@ x@@ Connec@@ ted@@ Au@@ dio@@ De@@ vices@@ ) == 1@@ )) { set@@ Ac@@ tive@@ Device@@ (@@ device@@ ); } if ((@@ is@@ Ac@@ tive@@ Device@@ (@@ device@@ )) && (f@@ rom@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); } if (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { int b@@ ond@@ State = m@@ Adap@@ ter@@ Service@@ .get@@ B@@ ond@@ State@@ (@@ device@@ ); if (b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E@@ )) { remove@@ State@@ M@@ ach@@ ine@@ (@@ device@@ ); } } }
private synchronized void set@@ State@@ (@@ int state@@ , int result@@ ) { if (@@ st@@ ate != (m@@ State@@ )) { if (com.android.bluetooth.@@ s@@ ap.@@ S@@ ap@@ Service.@@ DE@@ B@@ U@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ s@@ ap.@@ S@@ ap@@ Service.@@ TAG, ((((@@ ("@@ set@@ State@@ : st@@ ate " + (m@@ State@@ )) + " -@@ > ") + state@@ ) + " result =@@ ") + result@@ )); } if (@@ st@@ ate == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ S@@ AP@@ ); } int pre@@ v@@ State = m@@ State@@ ; m@@ State = state@@ ; android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ S@@ ap.@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , pre@@ v@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , m@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, m@@ Remote@@ Device@@ ); send@@ B@@ roadcast@@ (@@ int@@ ent@@ , com.android.@@ bluetooth.@@ s@@ ap.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); } }
private void on@@ Connection@@ State@@ Changed@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int pre@@ v@@ State@@ , int state@@ ) { if (@@ de@@ vice == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ State@@ M@@ ach@@ in@@ e.@@ TAG, "@@ on@@ Connection@@ State@@ Changed@@ : wit@@ h in@@ va@@ li@@ d de@@ vice return@@ ; } if ((@@ pre@@ v@@ State != state@@ ) && (@@ st@@ ate == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ P@@ B@@ AP@@ _C@@ L@@ I@@ EN@@ T@@ ); } android.util.Log.d@@ (com.android.bluetooth.@@ p@@ b@@ ap@@ c@@ li@@ ent.@@ P@@ b@@ ap@@ Client@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((((@@ ("@@ on@@ Connection@@ State@@ Changed@@ : st@@ ate " + device@@ ) + " pre@@ v@@ State@@ ) + "@@ -@@ >@@ ") + state@@ )); android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ P@@ b@@ ap@@ C@@ li@@ ent.@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , pre@@ v@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , state@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, device@@ ); int@@ ent.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ O@@ O@@ T@@ ); m@@ Service.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ , Pro@@ file@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); }
@java.lang.Override public void ent@@ er@@ () { try { start@@ Ob@@ ex@@ Server@@ Session@@ (); } catch (java.io.IOException ex@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ p@@ b@@ ap.@@ P@@ b@@ ap@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ Er@@ ror excepti@@ on start@@ ing O@@ B@@ E@@ X ser@@ ve@@ r s@@ es@@ sion " + (@@ ex@@ .@@ toString@@ ()))); } b@@ roadcast@@ State@@ Tr@@ an@@ sition@@ s(); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ P@@ B@@ AP@@ ); }
@java.lang.Override public void ent@@ er@@ () { if (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ B@@ luetoo@@ th Connec@@ ted@@ : " + (get@@ Current@@ Message@@ ().@@ wh@@ at@@ ))); } m@@ Au@@ dio@@ W@@ b@@ s = false@@ ; m@@ Command@@ ed@@ S@@ pe@@ ak@@ er@@ V@@ ol@@ um@@ e = -1@@ ; if ((m@@ Pre@@ v@@ State@@ ) == (m@@ Con@@ nect@@ ing@@ )) { b@@ roadcast@@ Connection@@ State@@ (m@@ Current@@ Device@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ ); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ H@@ E@@ AD@@ SE@@ T_@@ C@@ L@@ I@@ EN@@ T@@ ); } else if ((m@@ Pre@@ v@@ State@@ ) != (m@@ Au@@ dio@@ On@@ )) { java.lang.String pre@@ v@@ State@@ Name = ((m@@ Pre@@ v@@ State@@ ) == null@@ ) ? "@@ null@@ " : m@@ Pre@@ v@@ Stat@@ e.get@@ Name@@ (); android.util.Log.@@ e@@ (com.android.bluetooth.@@ h@@ f@@ p@@ c@@ li@@ ent.@@ He@@ ad@@ set@@ Client@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((@@ ("@@ S@@ ys@@ te@@ m " + pre@@ v@@ State@@ Name@@ ) + " to Con@@ nect@@ ing@@ , m@@ Current@@ Device@@ =@@ ") + (m@@ Current@@ Device@@ ))); } }
@java.lang.Override public boolean process@@ Message@@ (android.os.@@ Mess@@ age ms@@ g@@ ) { if (com.android.bluetooth.@@ av@@ rc@@ p@@ cont@@ ro@@ l@@ ler.@@ Av@@ rc@@ p@@ Control@@ ler@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) android.util.Log.d@@ (com.android.bluetooth.@@ av@@ rc@@ p@@ cont@@ ro@@ l@@ ler.@@ Av@@ rc@@ p@@ Control@@ ler@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ process@@ Message@@ : Handle@@ Message@@ : " + (com.android.bluetooth.@@ av@@ rc@@ p@@ cont@@ ro@@ l@@ ler.@@ Av@@ rc@@ p@@ Control@@ ler@@ State@@ M@@ ach@@ in@@ e.@@ dum@@ p@@ Message@@ String@@ (m@@ s@@ g.@@ wh@@ at@@ )))); switch (m@@ s@@ g.@@ wh@@ at@@ ) { case com.android.@@ bluetooth.@@ av@@ rc@@ p@@ cont@@ ro@@ l@@ ler.@@ Av@@ rc@@ p@@ Control@@ ler@@ State@@ M@@ ach@@ in@@ e.@@ ME@@ SS@@ A@@ G@@ E_@@ P@@ RO@@ CE@@ SS@@ _C@@ ON@@ N@@ EC@@ TION@@ _C@@ H@@ AN@@ G@@ E : if ((m@@ s@@ g.@@ arg@@ 1@@ ) == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { m@@ B@@ row@@ se@@ T@@ re@@ e.@@ init@@ (); tr@@ an@@ sition@@ To@@ (m@@ Connec@@ ted@@ ); android.@@ bluetooth.@@ Bluetooth@@ De@@ vice r@@ t@@ De@@ vice = ((@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ ) (m@@ s@@ g.@@ ob@@ j@@ )); synchronized@@ (m@@ Lock) { m@@ Remote@@ De@@ vice = new com.android.@@ bluetooth.@@ av@@ rc@@ p@@ cont@@ ro@@ l@@ ler.@@ Remote@@ Device@@ (@@ r@@ t@@ Device@@ ); m@@ Addres@@ sed@@ Play@@ er = new com.android.@@ bluetooth.@@ av@@ rc@@ p@@ cont@@ ro@@ l@@ ler.@@ Av@@ rc@@ p@@ Play@@ er@@ (); m@@ I@@ s@@ Connec@@ ted = true@@ ; } com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ file@@ Id@@ .@@ AV@@ R@@ C@@ P@@ _C@@ ON@@ T@@ RO@@ L@@ ER@@ ); android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ Av@@ rc@@ p@@ Control@@ ler.@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, r@@ t@@ Device@@ ); m@@ Context.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ , Pro@@ file@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); } break@@ ; default : android.util.Log.@@ w@@ (com.android.bluetooth.@@ av@@ rc@@ p@@ cont@@ ro@@ l@@ ler.@@ Av@@ rc@@ p@@ Control@@ ler@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ("@@ N@@ o Dis@@ connec@@ ted not hand@@ l@@ ing " + (com.android.bluetooth.@@ av@@ rc@@ p@@ cont@@ ro@@ l@@ ler.@@ Av@@ rc@@ p@@ Control@@ ler@@ State@@ M@@ ach@@ in@@ e.@@ dum@@ p@@ Message@@ String@@ (m@@ s@@ g.@@ wh@@ at@@ )))); return false@@ ; } return true@@ ; }
private void on@@ Connection@@ State@@ Changed@@ (@@ int pre@@ v@@ State@@ , int state@@ ) { if ((m@@ Device@@ ) == null@@ ) { return@@ ; } if (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ M@@ ce@@ State@@ M@@ ach@@ in@@ e.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ m@@ ap@@ c@@ li@@ ent.@@ M@@ ce@@ State@@ M@@ ach@@ in@@ e.@@ TAG, ((((@@ ("@@ on@@ Connection@@ State@@ Changed@@ : st@@ ate " + (m@@ Device@@ )) + " pre@@ v@@ State@@ ) + "@@ -@@ >@@ ") + state@@ )); } if ((@@ pre@@ v@@ State != state@@ ) && (@@ st@@ ate == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ M@@ AP@@ _C@@ L@@ I@@ EN@@ T@@ ); } android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ Map@@ C@@ li@@ ent.@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , pre@@ v@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _@@ STA@@ TE@@ , state@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, m@@ Device@@ ); int@@ ent.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ E@@ F@@ OR@@ E_@@ B@@ O@@ O@@ T@@ ); m@@ Service.@@ send@@ B@@ roadcast@@ (@@ int@@ ent@@ , Pro@@ file@@ Service.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); }
private void set@@ And@@ B@@ roadcast@@ Connection@@ State@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int new@@ State@@ ) { if (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, ((((@@ ("@@ set@@ And@@ B@@ roadcast@@ Connection@@ State@@ : device@@ =@@ " + (@@ device@@ .get@@ Address@@ ())) + ", old@@ State@@ =@@ ") + (m@@ H@@ id@@ Device@@ State@@ )) + " new@@ State@@ =@@ ") + new@@ State@@ )); } if ((@@ (m@@ H@@ id@@ Device@@ ) != null@@ ) && (!(m@@ H@@ id@@ Device@@ .@@ equals(@@ device@@ )@@ ))) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, "@@ set@@ And@@ B@@ roadcast@@ Connection@@ State@@ : st@@ ate ch@@ ang@@ ed@@ "); for un@@ k@@ no@@ w@@ n device@@ , ign@@ or@@ ing return@@ ; } int pre@@ v@@ State = m@@ H@@ id@@ Device@@ State@@ ; m@@ H@@ id@@ Device@@ State = new@@ State@@ ; if (p@@ re@@ v@@ State == new@@ State@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ id@@ .@@ H@@ id@@ Device@@ Service.@@ TAG, "@@ set@@ And@@ B@@ roadcast@@ Connection@@ State@@ : st@@ ate is unch@@ ang@@ ed@@ , ign@@ or@@ ing return@@ ; } if (@@ new@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ H@@ ID@@ _@@ H@@ O@@ S@@ T@@ ); } android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ H@@ id@@ Device@@ .@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Pro@@ file.@@ EX@@ TR@@ A@@ _P@@ RE@@ V@@ IO@@ US@@ _@@ STA@@ TE@@ , pre@@ v@@ State@@ ); int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, device@@ ); int@@ ent.@@ add@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G@@ _RE@@ CE@@ I@@ V@@ ER@@ _RE@@ G@@ IS@@ TER@@ E@@ D_@@ ON@@ L@@ Y_@@ B@@ O@@ T@@ ); send@@ B@@ roadcast@@ (@@ int@@ ent@@ , com.android.@@ bluetooth.@@ h@@ id@@ .@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _P@@ ER@@ M@@ ); }
private void update@@ And@@ S@@ end@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int new@@ Device@@ State@@ , int pre@@ v@@ Device@@ State@@ ) { if (@@ new@@ Device@@ State == (android.@@ bluetooth.@@ Bluetooth@@ He@@ al@@ th@@ .@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { m@@ He@@ al@@ th@@ De@@ vices@@ .@@ remove@@ (@@ device@@ ); } else { m@@ He@@ al@@ th@@ De@@ vices@@ .@@ put@@ (@@ device@@ , new@@ Device@@ State@@ ); } if (@@ new@@ Device@@ State != pre@@ v@@ Device@@ State@@ ) && (@@ new@@ Device@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ H@@ E@@ AL@@ TH@@ ); } }
void device@@ Connec@@ ted@@ (java.lang.String b@@ d@@ add@@ r@@ , boolean ab@@ solute@@ V@@ ol@@ um@@ e) { android.util.Log.@@ i@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Av@@ rc@@ p@@ Target@@ Service.@@ TAG, ((@@ ("@@ device@@ Connec@@ ted@@ : b@@ d@@ add@@ r@@ =@@ " + b@@ d@@ add@@ r@@ ) + ", ab@@ solute@@ V@@ ol@@ um@@ e@@ =@@ ") + ab@@ solute@@ V@@ ol@@ um@@ e@@ )); m@@ Au@@ dio@@ Manager.@@ av@@ rc@@ p@@ Sup@@ port@@ s@@ Absolute@@ V@@ ol@@ um@@ e@@ (b@@ d@@ add@@ r@@ , ab@@ solute@@ V@@ ol@@ um@@ e); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ AV@@ R@@ C@@ P@@ ); }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public void on@@ Connection@@ State@@ Changed@@ From@@ State@@ M@@ ach@@ ine@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int f@@ rom@@ State@@ , int to@@ State@@ ) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > au@@ dio@@ Con@@ nect@@ able@@ Device@@ s = get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ _C@@ ON@@ N@@ EC@@ TE@@ D_@@ STA@@ TE@@ S@@ ); if ((@@ f@@ rom@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { if ((@@ au@@ dio@@ Con@@ nect@@ able@@ De@@ vices@@ .@@ size@@ ()) > 1@@ ) { m@@ In@@ b@@ and@@ R@@ ing@@ ing@@ ing@@ ing@@ Runtime@@ Dis@@ able = true@@ ; do@@ For@@ Each@@ Connec@@ ted@@ State@@ M@@ ach@@ ine@@ (("@@ De@@ vice state@@ M@@ ach@@ in@@ e) -@@ > state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ S@@ END@@ _@@ B@@ SI@@ R@@ , 0@@ )); } if ((m@@ Ac@@ tive@@ Device@@ ) == null@@ ) { set@@ Ac@@ tive@@ Device@@ (@@ device@@ ); } com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ log@@ Pro@@ file@@ Connection@@ Event@@ (@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id@@ .@@ H@@ E@@ AD@@ SE@@ T@@ ); } if ((@@ f@@ rom@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ to@@ State != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { if ((@@ au@@ dio@@ Con@@ nect@@ able@@ De@@ vices@@ .@@ size@@ ()) <@@ = 1@@ ) { m@@ In@@ b@@ and@@ R@@ ing@@ ing@@ ing@@ Runtime@@ Dis@@ able = false@@ ; do@@ For@@ Each@@ Connec@@ ted@@ State@@ M@@ ach@@ ine@@ (@@ ( state@@ M@@ ach@@ in@@ e) -@@ > state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ S@@ END@@ _@@ B@@ SI@@ R@@ , 1@@ )); } if (@@ device@@ .@@ equal@@ s@@ (m@@ Ac@@ tive@@ Device@@ )) { set@@ Ac@@ tive@@ Device@@ (@@ null@@ ); } } } }
public static void log@@ Pro@@ file@@ Connection@@ Event@@ (com.android.bluetooth.@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Pro@@ file@@ Id pro@@ file@@ Id@@ ) { synchronized@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ s@@ Pro@@ file@@ Connection@@ Count@@ s) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ s@@ Pro@@ file@@ Connection@@ Count@@ s.@@ merg@@ e@@ (pro@@ file@@ Id, 1, java.lang.Integ@@ er@@ :@@ :@@ s@@ um@@ ); } }
public static void dum@@ p@@ Pro@@ to@@ (com.android.bluetooth.@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Bluetooth@@ Log.@@ Builder m@@ et@@ ri@@ c@@ s@@ Builder@@ ) { synchronized@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ s@@ Pro@@ file@@ Connection@@ Count@@ s) { com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ s@@ Pro@@ file@@ Connection@@ Count@@ s@@ .@@ for@@ Each@@ (@@ ( key@@ , value@@ ) -@@ > m@@ et@@ ri@@ c@@ s@@ Builder.@@ add@@ Pro@@ file@@ U@@ s@@ age@@ Stat@@ s@@ (com.android.bluetooth.@@ Bluetooth@@ M@@ et@@ ri@@ c@@ s@@ Pro@@ to.@@ Pro@@ file@@ U@@ s@@ age@@ Stat@@ s@@ .@@ new@@ Builder@@ ().@@ set@@ Pro@@ file@@ Id@@ (@@ key@@ ).set@@ N@@ um@@ Tim@@ es@@ Connec@@ ted@@ (@@ value@@ ).@@ build@@ ())); com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ M@@ et@@ ri@@ c@@ s@@ Logg@@ er.@@ s@@ Pro@@ file@@ Connection@@ Count@@ s.@@ clear@@ (); } }
java.lang.String ser@@ i@@ al@@ String@@ () { java.lang.String@@ Builder s@@ b = new java.lang.String@@ Build@@ er(@@ 8@@ ); java.lang.String s@@ n@@ ; s@@ n = java.lang.@@ Integ@@ er.@@ toString@@ (s@@ n@@ ); sb.@@ append(@@ '@@ [@@ '@@ ); for (@@ int i = 0, s = s@@ n@@ .@@ length@@ (); i < (@@ 4 - s); i++) { sb.@@ append(@@ '@@ 0@@ '@@ ); } sb.@@ append@@ (s@@ n@@ ); sb.@@ append(@@ '@@ ]@@ '@@ ); return sb.@@ toString@@ (); }
private boolean is@@ Requ@@ i@@ re@@ d@@ () { return (com.android.@@ comp@@ ati@@ b@@ ili@@ t@@ y.@@ common.@@ util.@@ Property@@ Uti@@ l.get@@ Fi@@ rst@@ Api@@ Level@@ ()) >@@ = (android.@@ security.@@ cts.@@ En@@ c@@ r@@ y@@ ption@@ Test.@@ M@@ IN@@ _@@ AP@@ I@@ _@@ LE@@ V@@ E@@ L); }
@java.lang.Override public void te@@ ar@@ Do@@ wn@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ invok@@ er.@@ I@@ In@@ vo@@ cation@@ Context context@@ , java.lang.@@ Throw@@ able e) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception { if ((@@ (m@@ V@@ en@@ v@@ Dir@@ ) != null@@ ) && (m@@ I@@ s@@ Dir@@ Cre@@ ator@@ )) { try { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ target@@ pre@@ p.@@ V@@ ts@@ P@@ y@@ th@@ on@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Pre@@ par@@ er.@@ re@@ c@@ ur@@ si@@ ve@@ D@@ el@@ et@@ e@@ (m@@ V@@ en@@ v@@ Dir@@ .@@ to@@ Path@@ ()); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ i@@ ("@@ Er@@ ror vi@@ r@@ t@@ u@@ al en@@ v tem@@ p work@@ ing@@ "); m@@ V@@ en@@ v@@ Dir@@ ); } catch (java.io.IOException excepti@@ on@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ Faile@@ d to delet@@ e %@@ s@@ : %@@ s@@ ", m@@ V@@ en@@ v@@ Dir@@ , excepti@@ on@@ ); } m@@ V@@ en@@ v@@ Di@@ r = null@@ ; } }
@java.lang.Override public void set@@ Up@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ invok@@ er.@@ I@@ In@@ vo@@ cation@@ Context context@@ ) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception, com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ target@@ pre@@ p.@@ Build@@ Error@@ , com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ target@@ pre@@ p.@@ Target@@ Set@@ up@@ Er@@ ror { m@@ Build@@ Info = con@@ tex@@ t.get@@ Build@@ Info@@ s@@ ().get@@ (@@ 0); start@@ V@@ ir@@ t@@ ual@@ en@@ v@@ (m@@ Build@@ Info@@ ); set@@ Local@@ P@@ yp@@ i@@ Path@@ (); in@@ stall@@ De@@ ps@@ (m@@ Build@@ Info@@ ); }
public android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ at@@ or add@@ Store@@ Data@@ (android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Reg@@ is@@ ter source@@ Reg@@ ister@@ , int offset@@ ) throw@@ s android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Illegal@@ In@@ stru@@ c@@ tion@@ Exception { android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ In@@ stru@@ c@@ tion in@@ stru@@ c@@ tion = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ In@@ stru@@ c@@ tion@@ (android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Op@@ cod@@ es.@@ S@@ T@@ D@@ W@@ , source@@ Reg@@ ister@@ ); in@@ stru@@ c@@ tion@@ .set@@ Un@@ si@@ g@@ ne@@ d@@ Im@@ m@@ (@@ offset@@ ); add@@ In@@ stru@@ c@@ tion@@ (in@@ stru@@ c@@ tion@@ ); return this@@ ; }
public android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ at@@ or add@@ Load@@ Data@@ (android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Reg@@ is@@ ter d@@ est@@ in@@ ation@@ Reg@@ ister@@ , int offset@@ ) throw@@ s android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Illegal@@ In@@ stru@@ c@@ tion@@ Exception { android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ In@@ stru@@ c@@ tion in@@ stru@@ c@@ tion = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ In@@ stru@@ c@@ tion@@ (android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Op@@ cod@@ es.@@ L@@ D@@ W@@ , d@@ est@@ in@@ ation@@ Reg@@ ister@@ ); in@@ stru@@ c@@ tion@@ .set@@ Un@@ si@@ g@@ ne@@ d@@ Im@@ m@@ (@@ offset@@ ); add@@ In@@ stru@@ c@@ tion@@ (in@@ stru@@ c@@ tion@@ ); return this@@ ; }
@org.junit.Test public void test@@ Ap@@ f@@ Data@@ () throw@@ s android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Illegal@@ In@@ stru@@ c@@ tion@@ Exception, java.lang.Exception { byte@@ [] pack@@ et@@ 12@@ 3@@ 4@@ 5 = new byte@@ []{ 0, 1, 2, 3@@ , 4@@ , 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; byte@@ [] expected@@ _@@ dat@@ a = new byte@@ [@@ 32@@ ]; android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ at@@ or g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (); assert@@ Data@@ M@@ em@@ or@@ y@@ Content@@ s(@@ android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ P@@ A@@ SS@@ , g@@ en@@ , pack@@ et@@ 12@@ 3@@ 4@@ 5, expected@@ _@@ data@@ , 0); g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, 4@@ 2@@ ); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 1, 2@@ ); g@@ en@@ .@@ add@@ Store@@ Data@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, 3@@ ); expected@@ _@@ data@@ [@@ 5@@ ] = 4@@ 2@@ ; assert@@ Data@@ M@@ em@@ or@@ y@@ Content@@ s(@@ android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ P@@ A@@ SS@@ , g@@ en@@ , pack@@ et@@ 12@@ 3@@ 4@@ 5, expected@@ _@@ data@@ , 0); g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, -@@ 2@@ 0@@ 2@@ 3@@ 4@@ 0@@ 6@@ 8@@ 1@@ 5@@ ); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 1, 2@@ ); g@@ en@@ .@@ add@@ Store@@ Data@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, 3@@ ); expected@@ _@@ data@@ [@@ 5@@ ] = 3@@ 3@@ 3@@ ; expected@@ _@@ data@@ [@@ 6@@ ] = 6@@ 7@@ ; expected@@ _@@ data@@ [@@ 7@@ ] = 1@@ 00@@ ; expected@@ _@@ data@@ [@@ 8@@ ] = (@@ (@@ byte@@ ) (1@@ 3@@ 5@@ )); assert@@ Data@@ M@@ em@@ or@@ y@@ Content@@ s(@@ android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ P@@ A@@ SS@@ , g@@ en@@ , pack@@ et@@ 12@@ 3@@ 4@@ 5, expected@@ _@@ data@@ , 0); assert false@@ ; }
private void assert@@ Data@@ M@@ em@@ or@@ y@@ Content@@ s@@ (@@ int expected@@ , android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ at@@ or g@@ en@@ , byte@@ [] pack@@ et@@ , byte@@ [] expected@@ _@@ data@@ , int fil@@ ter@@ A@@ g@@ e) throw@@ s android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Illegal@@ In@@ stru@@ c@@ tion@@ Exception, java.lang.Exception { byte@@ [] dat@@ a = new byte@@ [@@ expected@@ _@@ data@@ .@@ length@@ ]; byte@@ [] pro@@ g@@ r@@ am = g@@ en@@ .@@ g@@ ener@@ ate@@ (); android.net.@@ ap@@ f.@@ Ap@@ f@@ Test@@ .@@ assert@@ Return@@ Co@@ des@@ Equal@@ (@@ expected@@ , android.net.@@ ap@@ f.@@ Ap@@ f@@ Test.@@ ap@@ f@@ Sim@@ ul@@ ate@@ (pro@@ g@@ ram@@ , pack@@ et@@ , data@@ , fil@@ ter@@ A@@ g@@ e@@ )); if (!(@@ java.util.Arrays.@@ equals(@@ expected@@ _@@ data@@ , data@@ ))) { throw new java.lang.@@ Exception@@ ((((@@ (("@@ pro@@ g@@ ram@@ : " + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ H@@ ex@@ D@@ um@@ p.@@ to@@ H@@ ex@@ String@@ (pro@@ g@@ ram@@ ))) + "@@ \n@@ dat@@ a me@@ m@@ or@@ y@@ : ") + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ H@@ ex@@ D@@ um@@ p.@@ to@@ H@@ ex@@ String(@@ data@@ ))) + "@@ \@@ ne@@ x@@ pec@@ ted@@ : ") + (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ util.@@ H@@ ex@@ D@@ um@@ p.@@ to@@ H@@ ex@@ String(@@ expected@@ _@@ data@@ )))); } }
public void dum@@ p@@ (@@ java.lang.String@@ Builder s@@ b@@ ) { sb.@@ append@@ ("@@ Media@@ Play@@ er@@ List@@ : "); if ((m@@ Media@@ Play@@ er@@ List@@ ) != null@@ ) { m@@ Media@@ Play@@ er@@ List.@@ dum@@ p@@ (s@@ b@@ ); } else { sb.@@ append@@ ("@@ Media@@ Play@@ er Lis@@ t is e@@ mp@@ t@@ y "); } m@@ V@@ ol@@ um@@ e@@ Manager.@@ dum@@ p@@ (s@@ b@@ ); sb.@@ append@@ ("@@ \n@@ "); }
private void res@@ et@@ Prox@@ y@@ And@@ Request@@ List@@ () { m@@ R@@ ad@@ io@@ Prox@@ y@@ ; m@@ O@@ em@@ H@@ ook@@ Prox@@ y@@ C@@ ook@@ i@@ e.@@ increment@@ And@@ Get@@ (); set@@ R@@ ad@@ io@@ State@@ (@@ R@@ ad@@ io@@ State.@@ R@@ AD@@ IO@@ _@@ UN@@ AV@@ A@@ IL@@ AB@@ L@@ E); com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ IL@@ Requ@@ est.@@ res@@ et@@ Ser@@ i@@ al@@ (); clear@@ Request@@ List@@ (@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ telephony.@@ R@@ AD@@ IO@@ _N@@ O@@ T_@@ AV@@ A@@ IL@@ AB@@ LE@@ , false@@ ); }
private void check@@ Listener@@ Permission@@ (@@ int event@@ s) { if ((@@ event@@ s & (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _C@@ E@@ L@@ L@@ _@@ LO@@ C@@ AT@@ ION@@ )) != 0) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ , null@@ ); } if ((@@ event@@ s & (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _C@@ E@@ L@@ L@@ _@@ IN@@ F@@ O@@ )) != 0) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ AC@@ CE@@ SS@@ _C@@ O@@ A@@ RS@@ E_@@ LO@@ C@@ AT@@ ION@@ , null@@ ); } if ((@@ event@@ s & (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ EN@@ F@@ OR@@ C@@ E_@@ P@@ H@@ ON@@ E_@@ STATE_@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ _M@@ A@@ S@@ K@@ )) != 0) { try { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ R@@ I@@ V@@ IL@@ E@@ GE@@ D_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ , null@@ ); } catch (java.lang.@@ Sec@@ ur@@ ity@@ Exception e) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ , null@@ ); } } if ((@@ event@@ s & (com.android.server.@@ Telephony@@ Reg@@ is@@ try@@ .@@ P@@ RE@@ C@@ IS@@ E_@@ P@@ H@@ ON@@ E_@@ STATE_@@ P@@ ER@@ M@@ I@@ SS@@ ION@@ _M@@ A@@ S@@ K@@ )) != 0) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ RE@@ C@@ IS@@ E_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ , null@@ ); } if ((@@ event@@ s & (android.@@ telephony.@@ Phone@@ State@@ List@@ en@@ er.@@ L@@ IS@@ T@@ EN@@ _@@ O@@ E@@ M@@ _@@ H@@ O@@ K@@ _@@ R@@ A@@ W@@ _@@ EV@@ EN@@ T@@ )) != 0) { m@@ Context.@@ e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ RE@@ A@@ D_@@ P@@ R@@ I@@ V@@ IL@@ E@@ GE@@ D_@@ P@@ H@@ ON@@ E_@@ STA@@ TE@@ , null@@ ); } }
public void start@@ L@@ oo@@ p@@ (@@ long tim@@ est@@ amp@@ N@@ sec@@ s) { lo@@ op@@ Start@@ Tim@@ es@@ N@@ sec@@ s.@@ add(@@ tim@@ est@@ amp@@ N@@ sec@@ s); }
public void end@@ () throw@@ s java.io.IOException { java.io.File fi@@ le = new java.io.File@@ ((@@ ("@@ /@@ s@@ d@@ c@@ ard@@ /@@ b@@ en@@ ch@@ m@@ ark@@ -@@ " + (@@ app@@ Name@@ )) + ".@@ c@@ s@@ v@@ ")); java.nio.@@ file.@@ Fil@@ es.@@ delet@@ e@@ I@@ f@@ Ex@@ ist@@ s(@@ file.@@ to@@ Path@@ ()); try (@@ java.io.@@ Wri@@ ter write@@ r = new java.io.@@ Buffer@@ ed@@ Wri@@ ter@@ (@@ new java.io.File@@ Wri@@ ter@@ (file@@ ))) { for (java.lang.@@ Lon@@ g tim@@ est@@ am@@ p : lo@@ op@@ Start@@ Tim@@ es@@ N@@ sec@@ s) { wri@@ ter.@@ append(@@ tim@@ est@@ am@@ p.@@ toString@@ ()); wri@@ ter.@@ append(@@ '@@ \n@@ '@@ ); } } }
public com.android.@@ v@@ ts.@@ enti@@ t@@ y.@@ Test@@ Su@@ ite@@ Result@@ En@@ ti@@ t@@ y.@@ G@@ RO@@ U@@ P@@ _@@ TYP@@ E get@@ Group@@ Type@@ () { if (@@ (@@ this@@ .get@@ N@@ or@@ m@@ aliz@@ ed@@ Version@@ (@@ this@@ .@@ build@@ System@@ F@@ ing@@ er@@ p@@ r@@ int@@ )) == (@@ this@@ .get@@ N@@ or@@ m@@ aliz@@ ed@@ Version@@ (@@ this@@ .@@ build@@ V@@ e@@ n@@ do@@ r@@ F@@ ing@@ er@@ p@@ r@@ int@@ ))) { return com.android.@@ v@@ ts.@@ enti@@ t@@ y.@@ Test@@ Su@@ ite@@ Result@@ En@@ ti@@ t@@ y.@@ G@@ RO@@ U@@ P@@ _@@ TYP@@ E@@ .@@ O@@ TA@@ ; } else if (@@ this@@ .@@ build@@ V@@ e@@ n@@ do@@ r@@ F@@ ing@@ er@@ p@@ r@@ int@@ .@@ end@@ sWith@@ ("@@ re@@ le@@ ase@@ -@@ key@@ s@@ ")) { return com.android.@@ v@@ ts.@@ enti@@ t@@ y.@@ Test@@ Su@@ ite@@ Result@@ En@@ ti@@ t@@ y.@@ G@@ RO@@ U@@ P@@ _@@ TYP@@ E@@ .@@ SI@@ G@@ N@@ E@@ D@@ ; } else { return com.android.@@ v@@ ts.@@ enti@@ t@@ y.@@ Test@@ Su@@ ite@@ Result@@ En@@ ti@@ t@@ y.@@ G@@ RO@@ U@@ P@@ _@@ TYP@@ E@@ .@@ TO@@ T@@ ; } }
private java.lang.String get@@ N@@ or@@ m@@ aliz@@ ed@@ Version@@ (java.lang.String f@@ ing@@ er@@ p@@ r@@ int@@ ) { java.util.Map@@ <java.lang.String, java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ > par@@ t@@ tern@@ Ma@@ p = new java.util.@@ Hash@@ Map@@ <java.lang.String, java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ >@@ () { { put@@ ("@@ 9@@ ", java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ("@@ (@@ :@@ 9@@ (@@ \@@ .@@ \@@ d@@ \@@ \@@ d@@ |@@ \@@ .@@ \@@ d@@ )@@ |@@ :@@ P@@ [@@ A@@ -@@ Z@@ ]@@ /@@ )@@ ", java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ C@@ A@@ S@@ E_@@ IN@@ S@@ EN@@ SI@@ TI@@ V@@ E@@ )); put@@ ("@@ 8@@ .@@ 1@@ ", java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ("@@ (@@ :@@ 8@@ \@@ .@@ 1@@ 1@@ \@@ .@@ \@@ d@@ \@@ /@@ |@@ :@@ O@@ [@@ A@@ -@@ Z@@ ]@@ -@@ M@@ R@@ 1@@ /@@ )@@ ", java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ C@@ A@@ S@@ E_@@ IN@@ S@@ EN@@ SI@@ TI@@ V@@ E@@ )); put@@ ("@@ 8@@ ", java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ("@@ (@@ :@@ 8@@ \@@ .@@ 0@@ \@@ \@@ .@@ \@@ \@@ \@@ \@@ d@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ .@@ 1@@ 1@@ \@@ .@@ 1@@ \@@ \@@ .@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ /@@ |@@ :@@ O@@ [@@ A@@ -@@ Z@@ ]@@ -@@ M@@ R@@ 1@@ /@@ )@@ ", java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ("@@ (@@ :@@ 8@@ \@@ .@@ 0@@ \@@ \@@ .@@ \@@ \@@ \@@ d@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ \@@ .@@ 1@@ 1@@ 1@@ \@@ .@@ 1@@ 1@@ 1@@ \@@ \@@ .@@ 1@@ 1@@ 1@@ /@@ )@@ ", java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ("@@ (@@ :@@ 8@@ \@@ \@@ .@@ 0@@ \@@ .@@ 0@@ \@@ .@@ 0@@ \@@ \@@ .@@ 0@@ \@@ \@@ .@@ 0@@ \@@ \@@ .@@ 0@@ \@@ \@@ .@@ 0@@ \@@ \@@ \@@ .@@ 0@@ \@@ \@@ .@@ 1@@ 1@@ 1@@ 1@@ 1@@ 1@@ 1@@ 1@@ /@@ >@@ "); java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ("@@ (@@ :@@ 8@@ \@@ .@@ \@@ \@@ \@@ .@@ 0@@ \@@ \@@ .@@ 0@@ \@@ \@@ .@@ 0@@ 1@@ 1@@ 1@@ 1@@ 1@@ 1@@ 1@@ 1@@ 1@@ 1@@ /@@ )@@ ", java.util.@@ reg@@ ex@@ .@@ Pat@@ tern@@ .@@ compile@@ ("@@ (@@ :@@ 8@@ \@@ \@@ .@@ \@@ \@@ .@@ 0@@ \@@ \@@ .@@ \@@ \@@
@@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ M@@ edi@@ um@@ Test public void test@@ W@@ in@@ do@@ w@@ D@@ ock@@ And@@ U@@ n@@ do@@ ck@@ _@@ di@@ vid@@ er@@ W@@ in@@ do@@ w@@ App@@ e@@ ar@@ s@@ And@@ Dis@@ app@@ e@@ ar@@ s() throw@@ s java.lang.Exception { android.@@ app.@@ Activity@@ Manager m@@ ac@@ tivity@@ Manager = ((@@ android.@@ app.@@ Activity@@ Manager@@ ) (get@@ In@@ strument@@ ation@@ ().get@@ Context@@ ().get@@ System@@ Service@@ (@@ Context.@@ AC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E@@ ))); if (get@@ In@@ strument@@ ation@@ ().get@@ Context@@ ().get@@ Package@@ Manager@@ ().@@ has@@ System@@ F@@ e@@ ature@@ (@@ Package@@ Manager.@@ F@@ E@@ AT@@ UR@@ E_@@ LE@@ AN@@ B@@ AC@@ K@@ )) { return@@ ; } try { if (!(@@ get@@ In@@ strument@@ ation@@ ().get@@ Context@@ ().get@@ Res@@ ources@@ ().get@@ Boolean@@ (android.@@ content.@@ res@@ .@@ Res@@ ources@@ .get@@ System@@ ().get@@ Id@@ ent@@ if@@ ier@@ ("@@ config@@ _@@ sup@@ port@@ s@@ S@@ pli@@ t@@ S@@ creen@@ Multi@@ W@@ in@@ do@@ w@@ ", "@@ b@@ ool@@ ", "@@ android@@ "@@ )@@ ))) { return@@ ; } } catch (android.@@ content.@@ res@@ .@@ Resource@@ s e) { } if (!(@@ get@@ In@@ strument@@ ation@@ ().get@@ Context@@ ().get@@ Res@@ ources@@ ().get@@ Boolean@@ (android.@@ content.@@ res@@ .@@ Res@@ ources@@ .get@@ System@@ ().get@@ Id@@ ent@@ if@@ ier@@ ("@@ config@@ _@@ sup@@ port@@ s@@ Multi@@ W@@ in@@ do@@ w@@ ", "@@ b@@ ool@@ ", "@@ android@@ "@@ android@@ "@@ android@@ "@@ android@@ "@@ )@@ ))) || (m@@ ac@@ tivity@@ Manager.@@ is@@ Lo@@ w@@ R@@ am@@ Device@@ ()))) { return@@ ; } set@@ Access@@ Inter@@ ac@@ tive@@ W@@ in@@ do@@ w@@ s@@ Flag@@ (); final android.@@ app.@@ U@@ i@@ A@@ ut@@ om@@ ation ui@@ A@@ ut@@ om@@ ation = get@@ In@@ strument@@ ation@@ ().get@@ U@@ i@@ A@@ ut@@ om@@ ation@@ (); assert@@ False@@ (is@@ Di@@ vid@@ er@@ W@@ in@@ do@@ w@@ P@@ res@@ ent@@ (@@ ui@@ A@@ ut@@ om@@ ation@@ )); java.lang.@@ Run@@ n@@ able to@@ gg@@ le@@ S@@ pli@@ t@@ S@@ creen@@ Run@@ n@@ able = new java.lang.@@ Run@@ n@@ able@@ () { @java.lang.Override public void run() { assert@@ True@@ (@@ ui@@ A@@ ut@@ om@@ ation.@@ p@@ er@@ for@@ m@@ G@@ lo@@ b@@ al@@ Action@@ (@@ Ac@@ ces@@ si@@ b@@ ili@@ ty@@ Service.@@ G@@ LO@@ B@@ AL@@ _@@ AC@@ TION@@ _@@ TO@@ G@@ G@@ L@@ E_@@ S@@ P@@ L@@ I@@ T_@@ S@@ C@@ RE@@ EN@@ )); } }; android.@@ app.@@ U@@ i@@ A@@ ut@@ om@@ ation.@@ Ac@@ ces@@ si@@ b@@ ili@@ ty@@ Event@@ Fil@@ ter w@@ in@@ do@@ w@@ s@@ Changed@@ Fil@@ ter = new android.@@ app.@@ U@@ i@@ A@@ ut@@ om@@ ation.@@ Ac@@ ces@@ si@@ b@@ ili@@ ty@@ Event@@ Filter@@ () { @java.lang.Override public boolean ac@@ ce@@ p@@ t@@ (android.@@ view@@ .@@ ac@@ ces@@ si@@ b@@ ili@@ t@@ y.@@ Ac@@ ces@@ si@@ b@@ ili@@ ty@@ Ev@@ ent event@@ ) { return (@@ ev@@ ent.get@@ Event@@ Type@@ ()) == (android.@@ view@@ .@@ ac@@ ces@@ si@@ b@@ ili@@ t@@ y.@@ Ac@@ ces@@ si@@ b@@ ili@@ ty@@ Ev@@ ent.@@ TYP@@ E_@@ W@@ IN@@ D@@ O@@ W@@ S@@ _C@@ H@@ AN@@ GE@@ D@@ ); } }; ui@@ A@@ ut@@ om@@ ation.@@ exec@@ ute@@ And@@ W@@ ait@@ For@@ Event@@ (@@ to@@ gg@@ le@@ S@@ pli@@ t@@ S@@ creen@@ Run@@ n@@ able@@ , w@@ in@@ do@@ w@@ s@@ Changed@@ Filter@@ , android.@@ ac@@ ces@@ si@@ b@@ ili@@ ty@@ Ev@@ ent.@@ ent.@@ P@@ res@@ ent@@ (@@ ui@@ A@@ ut@@ om@@ ation@@ )); ui@@ A@@ ut@@ om@@ ation@@ ); wait@@ For@@ Id@@ le@@ S@@ creen@@ Run@@ n@@ able@@ , ui@@ A@@ ut@@ om@@ ation@@ ); wait@@ For@@ Id@@ le@@ S@@ pli@@ t@@ S@@ creen@@ Run@@ n@@ able@@ , w@@ in@@ do@@ w@@ in@@ do@@ w@@ in@@ do@@ w@@ P@@ res@@ ent@@ (@@ ui@@ A@@ ut@@ om@@ ation@@ )); ui@@ A@@ ut@@ om@@ ation@@ ); }
@org.junit.Test public void test@@ Im@@ medi@@ ate@@ En@@ cod@@ ing@@ () throw@@ s android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Illegal@@ In@@ stru@@ c@@ tion@@ Exception { final int L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E = 1@@ 3 <@@ < 3@@ ; android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ at@@ or g@@ en@@ ; g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (@@ 3@@ ); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, 0); assert@@ Pro@@ g@@ ram@@ Equal@@ s@@ (@@ new byte@@ []{ L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E | (@@ 0 <@@ < 1@@ ) }@@ , g@@ en@@ .@@ g@@ ener@@ ate@@ ()); g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (@@ 3@@ ); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, 4@@ 2@@ ); assert@@ Pro@@ g@@ ram@@ Equal@@ s@@ (@@ new byte@@ []{ L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E | (@@ 1 <@@ < 1@@ ), 4@@ 2 }@@ , g@@ en@@ .@@ g@@ ener@@ ate@@ ()); g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (@@ 3@@ ); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, 4@@ 6@@ 6@@ 6@@ 0); assert@@ Pro@@ g@@ ram@@ Equal@@ s@@ (@@ new byte@@ []{ L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E | (@@ 2 <@@ < 1@@ ), 1@@ 8@@ , 5@@ 2 }@@ , g@@ en@@ .@@ g@@ ener@@ ate@@ ()); g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (@@ 3@@ ); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, 3@@ 0@@ 5@@ 4@@ 1@@ 9@@ 8@@ 9@@ 6@@ ); assert@@ Pro@@ g@@ ram@@ Equal@@ s@@ (@@ new byte@@ []{ L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E | (@@ 3 <@@ < 1@@ ), 1@@ 8@@ , 5@@ 2, 8@@ 6@@ , 12@@ 0 }@@ , g@@ en@@ .@@ g@@ ener@@ ate@@ ()); }
@org.junit.Test public void test@@ N@@ eg@@ ative@@ Im@@ medi@@ ate@@ En@@ cod@@ ing@@ () throw@@ s android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator.@@ Illegal@@ In@@ stru@@ c@@ tion@@ Exception { final int L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E = 1@@ 3 <@@ < 3@@ ; android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ at@@ or g@@ en@@ ; g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (@@ 3@@ ); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, (@@ -@@ 4@@ 2@@ )); assert@@ Pro@@ g@@ ram@@ Equal@@ s@@ (@@ new byte@@ []{ L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E | (@@ 1 <@@ < 1@@ ), -@@ 4@@ 2 }@@ , g@@ en@@ .@@ g@@ ener@@ ate@@ ()); g@@ e@@ n = new android.net.@@ ap@@ f.@@ Ap@@ f@@ Gener@@ ator@@ (@@ 3@@ ); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, (@@ -@@ 4@@ 3@@ 8@@ 6@@ )); assert@@ Pro@@ g@@ ram@@ Equal@@ s@@ (@@ new byte@@ []{ L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E | (@@ 2 <@@ < 1@@ ), (@@ (@@ byte@@ ) (@@ 2@@ 3@@ 8@@ )), (@@ (@@ byte@@ ) (@@ 2@@ 2@@ 2@@ 2@@ )) }@@ , g@@ en@@ .@@ g@@ ener@@ ate@@ ()); g@@ en@@ .@@ add@@ Load@@ Im@@ medi@@ ate@@ (@@ Reg@@ ist@@ er.@@ R@@ 0, (@@ -@@ 2@@ 8@@ 7@@ 4@@ 5@@ 4@@ 0@@ 2@@ 0@@ )); assert@@ Pro@@ g@@ ram@@ Equal@@ s@@ (@@ new byte@@ []{ L@@ I@@ _@@ O@@ P@@ C@@ OD@@ E | (@@ 3 <@@ < 1@@ ), (@@ (@@ byte@@ ) (@@ 2@@ 3@@ 8@@ )), (@@ (@@ byte@@ ) (@@ 2@@ 2@@ 1@@ )), (@@ (@@ byte@@ ) (@@ 2@@ 0@@ 4@@ )), (@@ (@@ byte@@ ) (1@@ 8@@ 8@@ )) }@@ , g@@ en@@ .@@ g@@ ener@@ ate@@ ()); }
@java.lang.Override public void do@@ Get@@ Handler@@ (@@ javax.@@ ser@@ v@@ let@@ .@@ h@@ tt@@ p.@@ H@@ ttp@@ Ser@@ v@@ let@@ Requ@@ est request@@ , javax.@@ ser@@ v@@ let@@ .@@ h@@ tt@@ p.@@ H@@ ttp@@ Ser@@ v@@ let@@ Respon@@ se respon@@ se@@ ) throw@@ s java.io.IOException { if ((@@ key@@ File@@ InputStream@@ ) == null@@ ) { requ@@ est.@@ set@@ Attribute@@ ("@@ error@@ _@@ ti@@ t@@ le@@ ", K@@ ey fi@@ le Er@@ ror requ@@ est.@@ set@@ Attribute@@ ("@@ error@@ _@@ message@@ ", G@@ C@@ S K@@ ey fi@@ le is not ex@@ is@@ ted@@ !@@ ")); javax.@@ ser@@ v@@ let@@ .@@ Request@@ Dis@@ p@@ atch@@ er dis@@ p@@ atch@@ er = requ@@ est.@@ get@@ Request@@ Dis@@ p@@ atch@@ er@@ (com.android.@@ v@@ ts.@@ ser@@ v@@ let@@ .@@ ER@@ RO@@ R@@ _M@@ E@@ SS@@ A@@ G@@ E_@@ J@@ S@@ P@@ ); try { dis@@ p@@ atch@@ er@@ .@@ for@@ w@@ ard@@ (@@ request@@ , respon@@ se@@ ); } catch (@@ javax.@@ ser@@ v@@ let@@ .@@ Ser@@ v@@ let@@ Exception e) { logg@@ er.@@ log@@ (java.util.@@ logg@@ ing.@@ Level.@@ SE@@ V@@ ER@@ E, "@@ Er@@ ror Ex@@ c@@ au@@ g@@ h@@ t : ", e); } } else { java.lang.String path@@ Info@@ ; java.lang.String[] path@@ Par@@ t@@ s = path@@ Info.@@ s@@ pli@@ t@@ ("@@ /@@ "); if (@@ path@@ Par@@ ts.@@ length) > 1@@ ) { java.lang.String test@@ Type = path@@ Par@@ t@@ s = path@@ Par@@ t@@ s(@@ path@@ ); if (test@@ Type.@@ equal@@ s@@ I@@ gn@@ ore@@ C@@ ase@@ (@@ "@@ do@@ wn@@ load@@ ")) { do@@ wn@@ load@@ Handler@@ (@@ request@@ , respon@@ se@@ ); } else { logg@@ er.@@ log@@ (java.util.@@ logg@@ ing.@@ Level.@@ W@@ AR@@ N@@ ING@@ , "@@ G@@ o@@ t pat@@ h ac@@ cess@@ !@@ "); } } else { default@@ Handler@@ (@@ request@@ , request@@ , respon@@ se@@ ); } }
@java.lang.Override public void call@@ (@@ org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s@@ .@@ int@@ er@@ face@@ cont@@ ro@@ l.@@ Run@@ Response@@ Message@@ Param@@ s respon@@ se@@ ) { if (((@@ respon@@ s@@ e.@@ output@@ ) != null@@ ) && ((@@ respon@@ s@@ e.@@ out@@ pu@@ t.@@ wh@@ i@@ ch@@ ()) == (@@ Run@@ Out@@ pu@@ t.@@ T@@ a@@ g.@@ Q@@ u@@ er@@ y@@ Version@@ Result@@ ))) { m@@ Ver@@ sion = respon@@ s@@ e.@@ out@@ pu@@ t.get@@ Q@@ u@@ er@@ y@@ Version@@ Result@@ ().@@ version@@ ; } call@@ back@@ .@@ call@@ (m@@ Version@@ ); }
@java.lang.Override public void qu@@ er@@ y@@ Version@@ (@@ final org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Callback@@ 1@@ <@@ java.lang.Integ@@ er@@ > call@@ back@@ ) { Run@@ Message@@ Param@@ s mess@@ age = new Run@@ Message@@ Param@@ s(); mess@@ age.@@ in@@ put = new org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s@@ .@@ int@@ er@@ face@@ cont@@ ro@@ l.@@ Run@@ Input@@ (); mess@@ age.@@ in@@ pu@@ t.@@ set@@ Q@@ u@@ er@@ y@@ Version@@ (@@ new Q@@ u@@ er@@ y@@ Version@@ ()); org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Interface@@ Control@@ Mess@@ ag@@ es@@ Helper.@@ send@@ Run@@ Message@@ (get@@ C@@ ore@@ (), m@@ Message@@ Recei@@ ver@@ , message@@ , new org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Callback@@ 1@@ <@@ org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s@@ .@@ int@@ er@@ face@@ cont@@ ro@@ l.@@ Run@@ Response@@ Message@@ Param@@ s@@ >@@ () { @java.lang.Override public void call@@ (@@ org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s@@ .@@ int@@ er@@ face@@ cont@@ ro@@ l.@@ Run@@ Response@@ Message@@ Param@@ s respon@@ se@@ ) { if (((@@ respon@@ s@@ e.@@ output@@ ) != null@@ ) && ((@@ respon@@ s@@ e.@@ out@@ pu@@ t.@@ wh@@ i@@ ch@@ ()) == (@@ Run@@ Out@@ pu@@ t.@@ T@@ a@@ g.@@ Q@@ u@@ er@@ y@@ Version@@ Result@@ ))) { m@@ Ver@@ sion = respon@@ s@@ e.@@ out@@ pu@@ t.get@@ Q@@ u@@ er@@ y@@ Version@@ Result@@ ().@@ version@@ ; } call@@ back@@ .@@ call@@ (m@@ Version@@ ); } }); }
@java.lang.Override public boolean ac@@ ce@@ p@@ t@@ With@@ Respon@@ der@@ (@@ org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Mess@@ age message@@ , org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Message@@ Recei@@ ve@@ r respon@@ der@@ ) { org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Service@@ Mess@@ age message@@ With@@ He@@ ad@@ er = mess@@ age.@@ as@@ Service@@ Message@@ (); assert message@@ With@@ He@@ ad@@ er.get@@ He@@ ader@@ ().@@ has@@ Flag@@ (@@ Message@@ He@@ ad@@ er.@@ ME@@ SS@@ A@@ G@@ E_@@ EX@@ P@@ EC@@ T@@ S@@ _RE@@ S@@ P@@ ON@@ S@@ E_@@ F@@ LA@@ G@@ ); long request@@ Id = (m@@ Next@@ Request@@ Id@@ )@@ ++@@ ; if (@@ request@@ Id == 0) { request@@ Id = (m@@ Next@@ Request@@ Id@@ )@@ ++@@ ; } if (m@@ Respon@@ der@@ s.@@ contain@@ s@@ Key@@ (@@ request@@ Id@@ )) { throw new java.lang.Illegal@@ State@@ Exception@@ ("@@ Faile@@ d to fin@@ d a new requ@@ est id@@ ent@@ if@@ ier@@ . "); } message@@ With@@ He@@ ad@@ er.@@ set@@ Request@@ Id@@ (@@ request@@ Id@@ ); if (!(@@ (m@@ Con@@ nect@@ or.@@ ac@@ ce@@ p@@ t@@ (m@@ ess@@ age@@ With@@ He@@ ader@@ ))) { return false@@ ; } m@@ Respon@@ der@@ s.@@ put@@ (@@ request@@ Id, respon@@ der@@ ); return true@@ ; }
private boolean handle@@ In@@ com@@ ing@@ Message@@ (@@ org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Mess@@ age message@@ ) { org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Message@@ He@@ ad@@ er he@@ ad@@ er = mess@@ age.@@ as@@ Service@@ Message@@ ().get@@ He@@ ader@@ (); if (@@ he@@ ad@@ er.@@ has@@ Flag@@ (@@ Message@@ He@@ ad@@ er.@@ ME@@ SS@@ A@@ G@@ E_@@ EX@@ P@@ EC@@ T@@ S@@ _RE@@ S@@ P@@ ON@@ S@@ E_@@ F@@ LA@@ G@@ )) { if ((m@@ In@@ com@@ ing@@ Message@@ Recei@@ ver@@ ) != null@@ ) { return m@@ In@@ com@@ ing@@ Message@@ Recei@@ ver.@@ ac@@ ce@@ p@@ t@@ With@@ Respon@@ der@@ (m@@ ess@@ age@@ , new org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ R@@ ou@@ ter@@ Imp@@ l.@@ Respon@@ der@@ Th@@ un@@ k@@ ()); } close(); return false@@ ; } else if (@@ he@@ ad@@ er.@@ has@@ Flag@@ (@@ Message@@ He@@ ad@@ er.@@ ME@@ SS@@ A@@ G@@ E_@@ IS@@ _RE@@ S@@ P@@ ON@@ S@@ E_@@ F@@ LA@@ G@@ )) { long request@@ Id = he@@ ad@@ er.get@@ Request@@ Id@@ (); org.@@ ch@@ rom@@ i@@ um@@ .@@ mo@@ j@@ o.@@ b@@ ind@@ ing@@ s.@@ Message@@ Recei@@ ve@@ r respon@@ der@@ ; m@@ Respon@@ der@@ s.@@ remove@@ (@@ request@@ Id@@ ); if (@@ respon@@ der == null@@ ) { return false@@ ; } m@@ Respon@@ der@@ s@@ .@@ remove@@ (@@ request@@ Id@@ ); return respon@@ der@@ ; } else { return respon@@ der@@ ; } else { if ((m@@ In@@ com@@ ing@@ Message@@ Recei@@ ver@@ ) != null@@ ) { return m@@ In@@ com@@ ing@@ Message@@ Recei@@ ver.@@ ac@@ ce@@ p@@ t@@ (m@@ ess@@ age@@ ); } } return false@@ ; }
@java.lang.Override public void run@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ I@@ Test@@ In@@ vo@@ cation@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception { for (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info ap@@ k : m@@ Apk@@ s) { get@@ Device@@ ().@@ in@@ stall@@ Package@@ (@@ new java.io.File@@ (m@@ Apk@@ Dir@@ , ap@@ k@@ .get@@ File@@ Name@@ ()@@ ), true@@ ); com.android.ddmlib.@@ tes@@ tr@@ un@@ ner.@@ Test@@ Id@@ ent@@ if@@ i@@ er id@@ ent@@ if@@ i@@ er = new com.android.ddmlib.@@ tes@@ tr@@ un@@ ner.@@ Test@@ Id@@ ent@@ if@@ ier@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , (("@@ run@@ [@@ " + (@@ ap@@ k.@@ name@@ ())) + "@@ ]@@ ")); java.util.Map@@ <java.lang.String, java.lang.String> m@@ et@@ ri@@ c@@ s = new java.util.@@ Hash@@ Map@@ <@@ >(); list@@ en@@ er.@@ test@@ St@@ ar@@ ted@@ (@@ id@@ ent@@ if@@ ier@@ ); run@@ Device@@ Test@@ s@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ P@@ AC@@ K@@ A@@ G@@ E, com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , (("@@ run@@ [@@ " + (@@ ap@@ k.@@ name@@ ())) + "@@ ]@@ ")); list@@ en@@ er.@@ test@@ En@@ d@@ ed@@ (@@ id@@ ent@@ if@@ ier@@ , m@@ et@@ ri@@ c@@ s); } }
private com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ I@@ Run@@ Uti@@ l create@@ Mock@@ Run@@ Uti@@ l@@ () { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ I@@ Run@@ Uti@@ l run@@ Uti@@ l = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Run@@ Uti@@ l@@ () { private java.lang.String pat@@ h = null@@ ; @java.lang.Override public void set@@ En@@ v@@ Vari@@ able@@ (java.lang.String key@@ , java.lang.String value@@ ) { super@@ .set@@ En@@ v@@ Vari@@ able@@ (@@ key@@ , value@@ ); if (@@ k@@ e@@ y.@@ equal@@ s("@@ P@@ AT@@ H@@ ")) { pat@@ h = value@@ ; } } @java.lang.Override public com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult run@@ Tim@@ ed@@ C@@ m@@ d@@ (@@ final long time@@ out, final java.lang.String.@@ .@@ . command@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult c@@ m@@ d@@ Re@@ s = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ); java.lang.String out = "@@ "; if ((((@@ command@@ .@@ length) == 2@@ ) && (@@ command@@ [0@@ ]@@ .@@ equal@@ s("@@ wh@@ i@@ ch@@ "@@ ))) && (@@ command@@ [@@ 1@@ ]@@ .@@ equal@@ s("@@ p@@ y@@ th@@ on@@ "@@ ))) { if ((@@ path@@ ) != null@@ ) { out = (p@@ ath@@ ) + "@@ /@@ p@@ y@@ th@@ on@@ "; } else { out = "@@ /@@ us@@ r@@ /@@ b@@ in@@ /@@ p@@ y@@ th@@ on@@ "; } } c@@ m@@ d@@ Res@@ .set@@ S@@ t@@ do@@ ut@@ (@@ out); return c@@ m@@ d@@ Res@@ ; } }; return@@ Uti@@ l@@ ; }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Folder@@ Build@@ Info build@@ Info = org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ create@@ N@@ i@@ ce@@ Mock@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Folder@@ Build@@ Info@@ .@@ class@@ ); org.@@ e@@ as@@ y@@ mock@@ .@@ E@@ as@@ y@@ Mock@@ .@@ re@@ play@@ (@@ build@@ Info@@ ); m@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ (@@ new java.io.File@@ (m@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Path@@ ))); try { @java.lang.Override protected com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Process@@ Hel@@ p@@ er start@@ Process@@ Hel@@ p@@ er = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Process@@ Hel@@ p@@ er@@ (@@ java.lang.String[] c@@ m@@ d@@ ) { return m@@ Process@@ Hel@@ per@@ ; } }; }
protected com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Process@@ Hel@@ p@@ er start@@ Process@@ Hel@@ p@@ er@@ (@@ java.lang.String[] c@@ m@@ d@@ ) throw@@ s java.io.IOException { return new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Process@@ Hel@@ per@@ (m@@ Run@@ Util.@@ run@@ C@@ m@@ d@@ In@@ B@@ ack@@ g@@ round@@ (c@@ m@@ d@@ )); }
public static java.lang.String get@@ P@@ y@@ th@@ on@@ B@@ in@@ Di@@ r get@@ P@@ y@@ th@@ on@@ B@@ in@@ Di@@ alo@@ g@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ is@@ On@@ W@@ in@@ do@@ w@@ s()) ? "@@ Script@@ s@@ " : "@@ b@@ in@@ "; java.io.File re@@ s = new java.io.File@@ (@@ vi@@ r@@ t@@ ual@@ en@@ v@@ Path@@ , b@@ in@@ Dir@@ Name); if (!(@@ re@@ s@@ l.@@ exist@@ s@@ ())) { return null@@ ; } return re@@ s.get@@ Absolute@@ Path@@ (); }
public java.lang.String run@@ P@@ y@@ th@@ on@@ Runner@@ (@@ java.lang.String[] c@@ m@@ d@@ , com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult command@@ Result@@ , long time@@ out@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Process@@ Hel@@ p@@ er process@@ ; try { pro@@ ces@@ s = start@@ Process@@ Hel@@ p@@ er@@ (c@@ m@@ d@@ ); } catch (java.io.IOException e) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e(@@ e); command@@ Result.@@ set@@ Statu@@ s(@@ Command@@ Statu@@ s.@@ EX@@ CE@@ P@@ TION@@ ); command@@ Result.@@ set@@ S@@ t@@ do@@ ut@@ ("@@ "); command@@ Result.@@ set@@ St@@ der@@ r@@ ("@@ "); return null@@ ; } java.lang.String int@@ er@@ rup@@ t@@ Message@@ ; try { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Statu@@ s command@@ Statu@@ s; try { command@@ Statu@@ s = pro@@ ces@@ s.@@ wait@@ For@@ Pro@@ ces@@ s(@@ time@@ out); int@@ er@@ rup@@ t@@ Mess@@ age = null@@ ; } catch (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Run@@ Interrup@@ ted@@ Exception e) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ Co@@ ul@@ d pro@@ ces@@ s is int@@ er@@ rup@@ ted@@ .@@ "); command@@ Statu@@ s = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Statu@@ s.@@ TI@@ ME@@ D_@@ O@@ UT@@ ; int@@ er@@ rup@@ t@@ Mess@@ age = ((@@ e.get@@ Message@@ ()) != null@@ ) ? e.get@@ Message@@ () : "@@ "; } if (pro@@ ces@@ s.@@ is@@ Run@@ ning@@ ()) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ Un@@ able P@@ y@@ th@@ on pro@@ ces@@ s an@@ d w@@ a@@ i@@ t %@@ d sec@@ ond@@ s@@ . ((@@ com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ TEST_@@ AB@@ O@@ RT@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ EC@@ S@@ ) / 1@@ 00@@ 0@@ )); try { pro@@ ces@@ s.@@ close@@ St@@ d@@ in@@ (); pro@@ ces@@ s.@@ wait@@ For@@ Process@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ TEST_@@ AB@@ O@@ RT@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ EC@@ S@@ ); } catch (java.io.IOException e) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ Faile@@ d to can@@ ce@@ l P@@ y@@ th@@ on process@@ .@@ "); } } command@@ Result.@@ set@@ Statu@@ s(@@ command@@ Statu@@ s); } final@@ l@@ y { pro@@ ces@@ s.@@ cle@@ an@@ Up@@ (); } command@@ Result.@@ set@@ S@@ t@@ do@@ ut@@ (pro@@ ces@@ s.get@@ S@@ t@@ do@@ ut@@ ()); command@@ Result.@@ set@@ St@@ der@@ r@@ (pro@@ ces@@ s.get@@ St@@ der@@ r@@ ()); return int@@ er@@ rup@@ t@@ Message@@ ; }
@java.lang.Override public com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult run@@ Tim@@ ed@@ C@@ m@@ d@@ (@@ final long time@@ out, final java.lang.String.@@ .@@ . command@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult c@@ m@@ d@@ Re@@ s = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Result@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ ); java.lang.String out = "@@ "; if ((((@@ command@@ .@@ length) == 2@@ ) && (@@ command@@ [0@@ ]@@ .@@ equal@@ s("@@ wh@@ i@@ ch@@ "@@ ))) && (@@ command@@ [@@ 1@@ ]@@ .@@ equal@@ s("@@ p@@ y@@ th@@ on@@ "@@ ))) { if ((@@ path@@ ) != null@@ ) { out = (p@@ ath@@ ) + "@@ /@@ p@@ y@@ th@@ on@@ "; } else { out = "@@ /@@ us@@ r@@ /@@ b@@ in@@ /@@ p@@ y@@ th@@ on@@ "; } } c@@ m@@ d@@ Res@@ .set@@ S@@ t@@ do@@ ut@@ (@@ out); return c@@ m@@ d@@ Res@@ ; }
@java.lang.Override protected com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Process@@ Hel@@ p@@ er start@@ Process@@ Hel@@ p@@ er(@@ java.lang.String[] c@@ m@@ d@@ ) { return m@@ Process@@ Hel@@ per@@ ; }
public static void ac@@ tiv@@ ate@@ V@@ ir@@ t@@ ual@@ en@@ v@@ (@@ java.util.List<@@ java.lang.String> pro@@ ces@@ s) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ I@@ Run@@ Uti@@ l run@@ Uti@@ l@@ , java.lang.String vi@@ r@@ t@@ ual@@ en@@ v@@ Path@@ ) { java.lang.String p@@ y@@ th@@ on@@ B@@ in@@ Di@@ r = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er.get@@ P@@ y@@ th@@ on@@ B@@ in@@ Dir@@ (@@ vi@@ r@@ t@@ ual@@ en@@ v@@ Path@@ ); if ((@@ p@@ y@@ th@@ on@@ B@@ in@@ Di@@ r == null@@ ) || (!@@ (@@ new java.io.File@@ (p@@ y@@ th@@ on@@ B@@ in@@ Dir@@ ).@@ exist@@ s@@ ()))) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ Er@@ ror p@@ y@@ th@@ on vi@@ r@@ t@@ ual@@ en@@ v path@@ .@@ "); U@@ s@@ ing p@@ y@@ th@@ on f@@ ro@@ m s@@ ys@@ te@@ m path@@ .@@ "); } else { run@@ Util.@@ set@@ En@@ v@@ Vari@@ able@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ P@@ AT@@ H@@ , p@@ y@@ th@@ on@@ B@@ in@@ Dir@@ ); run@@ Util.@@ set@@ En@@ v@@ Vari@@ able@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ V@@ I@@ RT@@ U@@ AL@@ EN@@ V@@ P@@ AT@@ H@@ , vi@@ r@@ t@@ ual@@ en@@ v@@ Path@@ ); } }
@org.junit.Test public void test@@ Ac@@ tiv@@ ate@@ V@@ ir@@ t@@ ual@@ En@@ v@@ Ex@@ is@@ t@@ ual@@ () { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ I@@ Run@@ Uti@@ l run@@ Uti@@ l = create@@ Mock@@ Run@@ Uti@@ l@@ (); java.lang.String b@@ in@@ Dir@@ Name = (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Helper.@@ is@@ On@@ W@@ in@@ do@@ w@@ s()) ? "@@ Script@@ s@@ " : "@@ b@@ in@@ "; java.io.File en@@ v@@ Di@@ r = new java.io.File@@ (m@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Path@@ ); java.io.File b@@ in@@ Di@@ r = new java.io.File@@ (m@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Path@@ , b@@ in@@ Dir@@ Name); try { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (@@ en@@ v@@ Dir@@ .@@ m@@ k@@ d@@ ir@@ ()); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (b@@ in@@ Dir@@ .@@ m@@ k@@ d@@ ir@@ ()); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (b@@ in@@ Dir@@ .@@ exist@@ s()); assert@@ Equal@@ s(@@ b@@ in@@ Dir@@ .get@@ Absolute@@ Path@@ (), com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er.get@@ P@@ y@@ th@@ on@@ B@@ in@@ Dir@@ (m@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Path@@ )); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Helper.@@ ac@@ tiv@@ ate@@ V@@ ir@@ t@@ ual@@ en@@ v@@ (@@ run@@ Uti@@ l@@ , m@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Path@@ ); java.lang.String p@@ y@@ th@@ on@@ B@@ in@@ ar@@ y = run@@ Util.@@ run@@ Tim@@ ed@@ C@@ m@@ d@@ (1@@ 00@@ 0, "@@ wh@@ i@@ ch@@ ", "@@ p@@ y@@ th@@ on@@ "@@ )@@ .get@@ S@@ t@@ do@@ ut@@ (); assert@@ Equal@@ s(@@ p@@ y@@ th@@ on@@ B@@ inary@@ , new java.io.File@@ (b@@ in@@ Dir@@ , "@@ p@@ y@@ th@@ on@@ "@@ )@@ .get@@ Absolute@@ Path@@ ()); } final@@ l@@ y@@ { b@@ in@@ Dir@@ .@@ delet@@ e@@ (); en@@ v@@ Dir@@ .@@ delet@@ e@@ (); } }
private boolean d@@ ir@@ Ex@@ ist@@ s@@ And@@ H@@ a@@ ve@@ Read@@ Ac@@ ces@@ s(@@ java.lang.String path@@ ) { java.io.File path@@ Di@@ r = new java.io.File@@ (p@@ ath@@ ); if ((@@ !@@ (p@@ ath@@ Dir@@ .@@ exist@@ s@@ ())) || (!@@ (p@@ ath@@ Dir@@ .is@@ Directory@@ ()))) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ i@@ ("@@ S@@ k@@ ip@@ p@@ ing %@@ s do@@ es not exist@@ . path@@ Dir@@ ", path@@ Dir@@ ); return false@@ ; } if (!@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed@@ .@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er@@ .is@@ On@@ W@@ in@@ do@@ w@@ s@@ ())) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Res@@ ult c = get@@ Run@@ Uti@@ l@@ ().@@ run@@ Tim@@ ed@@ C@@ m@@ d@@ ((@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ target@@ pre@@ p.@@ V@@ ts@@ P@@ y@@ th@@ on@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Pre@@ par@@ er.@@ B@@ A@@ S@@ E_@@ TI@@ ME@@ O@@ UT@@ ) * 5@@ ), "@@ l@@ s@@ ", path@@ ); if ((@@ c@@ .get@@ Statu@@ s()) != (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ Command@@ Statu@@ s.@@ S@@ U@@ C@@ CE@@ SS@@ )) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ i@@ (@@ java.lang.String@@ .@@ for@@ mat@@ ("@@ Faile@@ d to re@@ ad d@@ ir@@ : %@@ s@@ . Res@@ ult %@@ s@@ . s@@ . t@@ do@@ ut@@ : %@@ s, st@@ der@@ r@@ : %@@ s@@ ", path@@ , c@@ .get@@ Statu@@ s@@ (), c@@ .get@@ S@@ t@@ do@@ ut@@ (), c@@ .get@@ St@@ der@@ r@@ ())); return false@@ ; } else { try { java.lang.String[] path@@ Dir@@ Lis@@ t = path@@ Dir@@ .@@ list@@ (); if (p@@ ath@@ Dir@@ Lis@@ t == null@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ i@@ ("@@ Faile@@ d to re@@ ad d@@ ir@@ : %@@ s@@ . P@@ le@@ as@@ e ch@@ ec@@ k ac@@ ces@@ s per@@ mission@@ .@@ "); path@@ Dir@@ ); return false@@ ; } } catch (java.lang.@@ Sec@@ ur@@ ity@@ Exception e) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ i@@ (@@ java.lang.String@@ .@@ for@@ mat@@ ("@@ Faile@@ d to re@@ ad di@@ r %@@ s wit@@ h Sec@@ ur@@ ity@@ Exception %@@ s@@ ", path@@ Dir@@ , e@@ )); return false@@ ; } }
protected com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ p@@ er create@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ () { return new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ util.@@ V@@ ts@@ P@@ y@@ th@@ on@@ Runner@@ Hel@@ per@@ (m@@ Build@@ Info@@ .get@@ File@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ V@@ ts@@ Multi@@ Device@@ Test.@@ V@@ I@@ RT@@ U@@ AL@@ EN@@ V@@ P@@ AT@@ H@@ ); }
protected void add@@ Path@@ To@@ Build@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ build@@ .@@ I@@ Build@@ Info build@@ Info@@ ) { if ((@@ build@@ Info@@ .get@@ File@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ target@@ pre@@ p.@@ V@@ ts@@ P@@ y@@ th@@ on@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Pre@@ par@@ er.@@ V@@ I@@ RT@@ U@@ AL@@ EN@@ V@@ P@@ AT@@ H@@ )) == null@@ ) { build@@ Info.@@ set@@ File@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ target@@ pre@@ p.@@ V@@ ts@@ P@@ y@@ th@@ on@@ V@@ ir@@ t@@ ual@@ en@@ v@@ Pre@@ par@@ er@@ .@@ V@@ I@@ RT@@ U@@ AL@@ EN@@ V@@ P@@ AT@@ H@@ , new java.io.File@@ (m@@ V@@ en@@ v@@ Dir@@ .get@@ Absolute@@ Path@@ ()@@ ), build@@ Info@@ .get@@ Build@@ Id@@ ()); } }
@org.junit.Test public void test@@ Con@@ nect@@ AP@@ a@@ ir@@ _@@ connect@@ B@@ oth@@ De@@ vices@@ () { m@@ Service@@ .set@@ Pri@@ or@@ ity@@ (m@@ Le@@ f@@ t@@ Device@@ , Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ ON@@ ); m@@ Service@@ .set@@ Pri@@ or@@ ity@@ (m@@ R@@ ight@@ Device@@ , Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ ON@@ ); do@@ Return@@ (@@ true@@ ).@@ when@@ (m@@ Native@@ Interface@@ ).@@ connect@@ He@@ ar@@ ing@@ A@@ id@@ (@@ an@@ y@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ class@@ )); do@@ Return@@ (@@ true@@ ).@@ when@@ (m@@ Native@@ Interface@@ ).@@ dis@@ connect@@ He@@ ar@@ ing@@ A@@ id@@ (@@ an@@ y@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ class@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ ("@@ Connec@@ t fa@@ ile@@ d@@ ", m@@ Service.@@ connect@@ (m@@ Le@@ f@@ t@@ Device@@ )); ve@@ r@@ if@@ y@@ Connection@@ State@@ Intent@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ , m@@ Le@@ f@@ t@@ Device@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , m@@ Service@@ .get@@ Connection@@ State@@ (m@@ Le@@ f@@ t@@ Device@@ )); ve@@ r@@ if@@ y@@ Connection@@ State@@ Intent@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ , m@@ R@@ ight@@ Device@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , m@@ Service@@ .get@@ Connection@@ State@@ (m@@ R@@ ight@@ Device@@ )); }
@java.lang.Override public java.util.Collection@@ <@@ com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ I@@ Remote@@ Test@@ > s@@ pli@@ t@@ (@@ int sh@@ ard@@ Count@@ H@@ int@@ ) { try { init@@ Apk@@ List@@ (); } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } java.util.List<@@ com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ test@@ typ@@ e.@@ I@@ Remote@@ Test@@ > sh@@ ard@@ s = new java.util.ArrayList<@@ >(); for (@@ int i = 0; i < sh@@ ard@@ Count@@ H@@ int@@ ; i++) { if (@@ i >@@ = (m@@ Apk@@ s.@@ size@@ ())) { break@@ ; } java.util.List<@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ > ap@@ k@@ Info = new java.util.ArrayList<@@ >(); for (@@ int j = i@@ ; j < (m@@ Apk@@ s.@@ size@@ ()); j +@@ = sh@@ ard@@ Count@@ H@@ int@@ ) { ap@@ k@@ Info.@@ add@@ (m@@ Apk@@ s.get@@ (@@ j@@ )); } com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Contro@@ lle@@ r sh@@ ar@@ d = new com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler@@ (); sh@@ ard@@ .@@ m@@ Apk@@ s = ap@@ k@@ Info@@ ; sh@@ ard@@ .@@ m@@ Apk@@ Di@@ r = m@@ Apk@@ Dir@@ ; sh@@ ard@@ s.@@ add@@ (s@@ h@@ ard@@ ); } return sh@@ ard@@ s; }
@java.lang.Override public void run@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ I@@ Test@@ In@@ vo@@ cation@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception { try { init@@ Apk@@ List@@ (); } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } get@@ Device@@ ().@@ pu@@ sh@@ File@@ (m@@ Apk@@ Info@@ File@@ , Apk@@ Info.@@ AP@@ K@@ _@@ L@@ I@@ ST_@@ LO@@ C@@ AT@@ ION@@ ); for (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info ap@@ k : m@@ Apk@@ s) { get@@ Device@@ ().@@ in@@ stall@@ Package@@ (@@ new java.io.File@@ (m@@ Apk@@ Dir@@ , ap@@ k@@ .get@@ File@@ Name@@ ()@@ ), true@@ ); run@@ Device@@ Test@@ s@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ P@@ AC@@ K@@ A@@ G@@ E, com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , (("@@ run@@ [@@ " + (@@ ap@@ k@@ .get@@ Name@@ ())) + "@@ ]@@ ")); } }
private void init@@ Apk@@ List@@ () throw@@ s java.io.IO@@ Exception, javax.@@ x@@ m@@ l.@@ par@@ ser@@ s.@@ Par@@ ser@@ Configuration@@ Exception, org.@@ x@@ m@@ l.@@ s@@ a@@ x.@@ S@@ A@@ X@@ Exception { if ((m@@ Apk@@ s) != null@@ ) { return@@ ; } if ((m@@ Apk@@ Info@@ File@@ Name@@ ) != null@@ ) { m@@ Apk@@ Info@@ File = new java.io.File@@ (m@@ Apk@@ Info@@ File@@ Name); } else { java.lang.String res@@ our@@ ce = "@@ /@@ com@@ /@@ android@@ /@@ g@@ rap@@ h@@ ic@@ s@@ /@@ b@@ en@@ ch@@ m@@ ark@@ /@@ ap@@ k@@ -@@ in@@ f@@ o.@@ xml@@ "; java.io.@@ Input@@ Stream input@@ Stream = com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ .@@ class@@ .get@@ Resource@@ As@@ Stream@@ (@@ resource@@ ); if (input@@ Stream == null@@ ) { throw new java.io.File@@ Not@@ F@@ ound@@ Exception@@ (("@@ Un@@ able to fin@@ d resource@@ : " + resource@@ )); } m@@ Apk@@ Info@@ File = java.io.File@@ .@@ create@@ Temp@@ File@@ ("@@ ap@@ k@@ -@@ in@@ fo@@ ", ".@@ xml@@ "); try (@@ java.io.@@ Output@@ Stream o@@ str@@ e@@ am = new java.io.File@@ Output@@ Stream@@ (m@@ Apk@@ Info@@ File@@ )) { com.google.common.@@ io.@@ Byte@@ Stream@@ s.@@ copy@@ (input@@ Stream@@ , o@@ str@@ eam@@ ); } m@@ Apk@@ Info@@ File@@ .@@ delet@@ e@@ On@@ Ex@@ it@@ (); } com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ List@@ Xml@@ Par@@ se@@ r parse@@ r = new com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ List@@ Xml@@ Par@@ ser@@ (m@@ Apk@@ Info@@ File@@ ); m@@ Apk@@ s = par@@ ser.@@ parse@@ (); }
public java.util.List<@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ > parse@@ () throw@@ s java.io.IO@@ Exception, javax.@@ x@@ m@@ l.@@ par@@ ser@@ s.@@ Par@@ ser@@ Configuration@@ Exception, org.@@ x@@ m@@ l.@@ s@@ a@@ x.@@ S@@ A@@ X@@ Exception { javax.@@ x@@ m@@ l.@@ par@@ ser@@ s.@@ Doc@@ ument@@ Builder@@ Fa@@ ctor@@ y d@@ b@@ f = javax.@@ x@@ m@@ l.@@ par@@ ser@@ s.@@ Doc@@ ument@@ Builder@@ Factory@@ .@@ new@@ Instance@@ (); javax.@@ x@@ m@@ l.@@ par@@ ser@@ s.@@ Doc@@ ument@@ Builder d@@ b = d@@ b@@ f@@ .@@ new@@ Doc@@ ument@@ Builder@@ (); org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Doc@@ um@@ ent do@@ c = d@@ b.@@ parse@@ (m@@ File@@ ); org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Node@@ Lis@@ t no@@ de@@ s = do@@ c@@ .get@@ Element@@ s@@ By@@ T@@ ag@@ Name("@@ ap@@ k@@ "); java.util.List<@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ > ap@@ k@@ s = new java.util.ArrayList<@@ >(); for (@@ int i = 0; i < (@@ no@@ des@@ .get@@ Length@@ ()); i++) { org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Node no@@ de = no@@ d@@ es.@@ item@@ (i@@ ); if ((@@ no@@ d@@ e.get@@ Node@@ Type@@ ()) == (@@ org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ No@@ d@@ e.@@ E@@ LE@@ M@@ ENT_@@ N@@ OD@@ E@@ )) { org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Elem@@ ent elem@@ ent = ((@@ org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Element@@ ) (@@ no@@ de@@ )); ap@@ k@@ s.@@ add@@ (@@ new com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ (@@ elem@@ ent.get@@ Element@@ s@@ By@@ T@@ ag@@ Name("@@ name@@ ").@@ item@@ (0@@ )@@ .get@@ Text@@ Content@@ (), elem@@ ent.get@@ Element@@ s@@ By@@ T@@ ag@@ Name("@@ file@@ Name@@ ").@@ item@@ (0@@ )@@ .get@@ Text@@ Content@@ (), elem@@ ent.get@@ Element@@ s@@ By@@ T@@ ag@@ Name@@ (@@ "@@ package@@ Name@@ ").@@ item@@ (0@@ )@@ .get@@ Text@@ Content@@ ())); } } return ap@@ k@@ s; }
protected void set@@ Up@@ () throw@@ s java.lang.Exception { super@@ .set@@ Up@@ (); mC@@ M = ((@@ android.net.@@ Connectivity@@ Manager@@ ) (get@@ Context@@ ().get@@ System@@ Service@@ (@@ Context.@@ C@@ ON@@ N@@ EC@@ TI@@ V@@ I@@ TY@@ _S@@ ER@@ V@@ IC@@ E@@ ))); m@@ B@@ p@@ f@@ Ac@@ tiv@@ e = new java.io.File@@ ("@@ /@@ s@@ ys@@ /@@ f@@ s@@ /@@ b@@ p@@ f@@ ").@@ exist@@ s(); }
private void check@@ Stat@@ s@@ Check@@ er@@ (@@ int pro@@ to@@ col@@ , int ip@@ H@@ d@@ r@@ L@@ en@@ , int trans@@ port@@ H@@ d@@ r@@ L@@ en@@ , int u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ , int send@@ Count@@ , int i@@ v@@ L@@ en@@ , int b@@ l@@ k@@ Size@@ , int tr@@ un@@ c@@ L@@ en@@ Bit@@ s) throw@@ s java.lang.Exception { int in@@ ner@@ Pack@@ et@@ Siz@@ e = ((@@ TEST_@@ DA@@ TA@@ .@@ length) + trans@@ port@@ H@@ d@@ r@@ L@@ en@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ; int ou@@ ter@@ Pack@@ et@@ Siz@@ e = ((@@ cal@@ c@@ ul@@ ate@@ E@@ s@@ p@@ Pack@@ et@@ Size@@ (((@@ TEST_@@ DA@@ TA@@ .@@ length) + trans@@ port@@ H@@ d@@ r@@ L@@ en@@ ), i@@ v@@ L@@ en@@ , b@@ l@@ k@@ Size@@ , tr@@ un@@ c@@ L@@ en@@ Bit@@ s@@ )) + u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ; int expected@@ O@@ u@@ ter@@ Byte@@ s = ou@@ ter@@ Pack@@ et@@ Siz@@ e * send@@ Count@@ ; int expected@@ In@@ ner@@ Byte@@ s = in@@ ner@@ Pack@@ et@@ Siz@@ e * send@@ Count@@ ; int expected@@ Pack@@ et@@ s = send@@ Count@@ ; send@@ Coun@@ t *@@ = 2@@ ; expected@@ O@@ u@@ ter@@ Byte@@ s *@@ = 2@@ ; expected@@ In@@ ner@@ Byte@@ s *@@ = 2@@ ; expected@@ Pack@@ et@@ s *@@ = 2@@ ; if (pro@@ to@@ co@@ l == (@@ IP@@ P@@ RO@@ TO@@ _@@ T@@ C@@ P@@ )) { int enc@@ ryp@@ ted@@ T@@ c@@ p@@ P@@ k@@ t@@ Siz@@ e = cal@@ c@@ ul@@ ate@@ E@@ s@@ p@@ Pack@@ et@@ Size@@ (android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ T@@ C@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ _@@ WI@@ TH@@ _@@ O@@ P@@ TION@@ S@@ , i@@ v@@ L@@ en@@ , b@@ l@@ k@@ Size@@ , tr@@ un@@ c@@ L@@ en@@ Bit@@ s); expected@@ O@@ u@@ ter@@ Byte@@ s +@@ = ((@@ enc@@ ryp@@ ted@@ T@@ c@@ p@@ P@@ k@@ t@@ Siz@@ e + u@@ d@@ p@@ En@@ c@@ ap@@ L@@ en@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ) * send@@ Count@@ ; expected@@ In@@ ner@@ Byte@@ s +@@ = ((@@ android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ T@@ C@@ P@@ _@@ H@@ D@@ R@@ L@@ EN@@ _@@ WI@@ TH@@ _@@ O@@ P@@ TION@@ S@@ ) + ip@@ H@@ d@@ r@@ L@@ en@@ ) * send@@ Count@@ ; } android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er.@@ wait@@ For@@ N@@ um@@ Pack@@ et@@ s(@@ expected@@ Pack@@ et@@ s); if (@@ u@@ d@@ p@@ En@@ c@@ ap@@ Le@@ n != 0) { int expected@@ R@@ x@@ Byte@@ s = (m@@ B@@ p@@ f@@ Ac@@ tive@@ ) ? expected@@ In@@ ner@@ Byte@@ s : expected@@ O@@ u@@ ter@@ Bytes@@ ; android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ U@@ id@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ O@@ u@@ ter@@ Bytes@@ , expected@@ Pack@@ et@@ s, expected@@ R@@ x@@ Byte@@ s, expected@@ R@@ x@@ Byte@@ s@@ , expected@@ Pack@@ et@@ s); } else { android.net.@@ cts.@@ I@@ p@@ Sec@@ Manager@@ Test.@@ U@@ id@@ Stat@@ s@@ Check@@ er@@ .@@ assert@@ U@@ id@@ Stat@@ s@@ D@@ el@@ t@@ a@@ (@@ expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Byte@@ s, expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ In@@ ner@@ Bytes@@ , expected@@ Pack@@ et@@ s); } } }
private void init@@ Apk@@ List@@ () { if ((m@@ Apk@@ s) != null@@ ) { return@@ ; } if ((m@@ Apk@@ Info@@ File@@ Name@@ ) != null@@ ) { m@@ Apk@@ Info@@ File = new java.io.File@@ (m@@ Apk@@ Info@@ File@@ Name); } else { java.lang.String res@@ our@@ ce = "@@ /@@ com@@ /@@ android@@ /@@ g@@ rap@@ h@@ ic@@ s@@ /@@ b@@ en@@ ch@@ m@@ ark@@ /@@ ap@@ k@@ -@@ in@@ f@@ o.@@ xml@@ "; try (@@ java.io.@@ Input@@ Stream input@@ Stream = com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ .@@ class@@ .get@@ Resource@@ As@@ Stream@@ (@@ res@@ our@@ ce@@ )) { if (input@@ Stream == null@@ ) { throw new java.io.File@@ Not@@ F@@ ound@@ Exception@@ (("@@ Faile@@ d to fin@@ d resource@@ : " + resource@@ )); } m@@ Apk@@ Info@@ File = java.io.File@@ .@@ create@@ Temp@@ File@@ ("@@ ap@@ k@@ -@@ in@@ fo@@ ", ".@@ xml@@ "); try (@@ java.io.@@ Output@@ Stream o@@ str@@ e@@ am = new java.io.File@@ Output@@ Stream@@ (m@@ Apk@@ Info@@ File@@ )) { com.google.common.@@ io.@@ Byte@@ Stream@@ s.@@ copy@@ (input@@ Stream@@ , o@@ str@@ eam@@ ); } m@@ Apk@@ Info@@ File@@ .@@ delet@@ e@@ On@@ Ex@@ it@@ (); } catch (java.io.IOException e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } } com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ List@@ Xml@@ Par@@ se@@ r parse@@ r = new com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ List@@ Xml@@ Par@@ ser@@ (); try { m@@ Apk@@ s = par@@ ser.@@ parse@@ (m@@ Apk@@ Info@@ File@@ ); } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } }
@org.junit.Test public void test@@ Argument@@ s() throw@@ s java.io.IO@@ Exception, javax.@@ x@@ m@@ l.@@ par@@ ser@@ s.@@ Par@@ ser@@ Configuration@@ Exception, org.@@ x@@ m@@ l.@@ s@@ a@@ x.@@ S@@ A@@ X@@ Exception { try (@@ java.io.@@ Input@@ Stream in@@ put = new java.io.@@ ByteArray@@ InputStream@@ (("@@ <@@ ?@@ x@@ m@@ l version@@ =@@ \"@@ 1.@@ 0@@ \"@@ ?@@ >@@ \n@@ " + ((((@@ ((((@@ ((((@@ (("@@ <@@ ap@@ k@@ -@@ in@@ fo@@ >@@ \n@@ " + " <@@ ap@@ k@@ >@@ \n") + " <@@ name@@ >@@ f@@ oo@@ <@@ /@@ name@@ >@@ \n") + " <@@ file@@ Name@@ >@@ f@@ oo@@ .@@ ap@@ k@@ <@@ /@@ file@@ Name@@ >@@ \n") + " <@@ package@@ Name@@ >@@ com.@@ f@@ oo@@ .@@ test@@ <@@ /@@ package@@ Name@@ >@@ \n") + " <@@ arg@@ s@@ >@@ \n") + " <@@ key@@ 1@@ >@@ value@@ 1@@ <@@ /@@ key@@ 1@@ >@@ ") + " <@@ key@@ 2@@ >@@ value@@ 2@@ <@@ /@@ key@@ 2@@ >@@ ") + " <@@ /@@ arg@@ s@@ >@@ \n") + " <@@ /@@ ap@@ k@@ >@@ \n") + "@@ <@@ /@@ ap@@ k@@ -@@ in@@ fo@@ >@@ \n@@ "@@ ))@@ .get@@ Bytes@@ ())) { java.util.List<@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ > ap@@ k@@ s = par@@ ser.@@ parse@@ (input@@ ); assert@@ Equal@@ s(@@ 1, ap@@ k@@ s.@@ size@@ ()); com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info ap@@ k = ap@@ k@@ s.get@@ (@@ 0); assert@@ Equal@@ s("@@ f@@ oo@@ ", ap@@ k@@ .getName@@ ()); assert@@ Equal@@ s("@@ f@@ oo@@ .@@ ap@@ k@@ ", ap@@ k@@ .get@@ File@@ Name@@ ()); assert@@ Equal@@ s("@@ com.@@ f@@ oo@@ .@@ test@@ ", ap@@ k@@ .get@@ Package@@ Name@@ ()); java.util.List<@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info.@@ Argument@@ > arg@@ s = ap@@ k@@ .get@@ Arg@@ s(); assert@@ Equal@@ s("@@ key@@ 1@@ ", arg@@ s.get@@ (0@@ )@@ .get@@ Key@@ ()); assert@@ Equal@@ s("@@ value@@ 1@@ ", arg@@ s.get@@ (0@@ )@@ .get@@ Value@@ ()); assert@@ Equal@@ s("@@ key@@ 2@@ ", arg@@ s.get@@ (0@@ )@@ .get@@ Value@@ ()); assert@@ Equal@@ s("@@ key@@ 2@@ ", arg@@ s.get@@ (1@@ )@@ .get@@ Key@@ ()); assert@@ Equal@@ s("@@ value@@ 2@@ ", arg@@ s.get@@ (1@@ )@@ .get@@ Value@@ ()); } }
@@@ android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing@@ (@@ oth@@ er@@ w@@ is@@ e = android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing.@@ P@@ AC@@ K@@ A@@ G@@ E_@@ P@@ R@@ I@@ V@@ A@@ TE@@ ) public boolean ok@@ To@@ Con@@ nect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (m@@ Adap@@ ter@@ Service.@@ is@@ Q@@ ui@@ et@@ Mode@@ Enabled@@ ()) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ S@@ D@@ IO@@ : can@@ not connec@@ t to " + device@@ ) + " : qu@@ i@@ et mo@@ de en@@ able@@ d return false@@ ; } if (!(@@ connection@@ Al@@ low@@ ed@@ Check@@ Ma@@ x@@ De@@ vices@@ (@@ device@@ ))) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, (("@@ S@@ d@@ p@@ ing can@@ not connec@@ t to " + device@@ ) + " : to@@ o man@@ y connec@@ ted device@@ s return false@@ ; } int p@@ ri@@ or@@ it@@ y = get@@ Pri@@ or@@ ity@@ (@@ device@@ ); int b@@ ond@@ State = m@@ Adap@@ ter@@ Service@@ .get@@ B@@ ond@@ State@@ (@@ device@@ ); boolean is@@ S@@ d@@ p@@ P@@ end@@ ing = (p@@ ri@@ or@@ it@@ y == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ UN@@ DE@@ F@@ IN@@ E@@ D@@ )) && ((@@ b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ B@@ ON@@ D@@ ING@@ )) || (b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ B@@ ON@@ DE@@ D@@ ))); if ((@@ (!@@ is@@ S@@ d@@ p@@ P@@ end@@ ing@@ ) && (p@@ ri@@ or@@ it@@ y != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file@@ .@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ ON@@ )) && ((m@@ p@@ ri@@ or@@ it@@ y != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ A@@ UT@@ O@@ _C@@ ON@@ N@@ EC@@ T@@ ))) { android.util.@@ Log@@ .@@ w@@ (com.android.bluetooth.@@ a@@ 2@@ d@@ p.@@ A@@ 2@@ d@@ p@@ Service.@@ TAG, ((@@ ("@@ S@@ D@@ B@@ E@@ D@@ E return false@@ , p@@ ri@@ or@@ ity@@ =@@ " + p@@ ri@@ or@@ ity@@ ) + " b@@ ond@@ State@@ =@@ ") + b@@ ond@@ State@@ )); return false@@ ; }
public boolean ok@@ To@@ Ac@@ ce@@ p@@ t@@ Connection@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (m@@ Adap@@ ter@@ Service.@@ is@@ Q@@ ui@@ et@@ Mode@@ Enabled@@ ()) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ Tr@@ y ch@@ ang@@ ed@@ "); return false@@ ; } int p@@ ri@@ or@@ it@@ y = get@@ Pri@@ or@@ ity@@ (@@ device@@ ); int b@@ ond@@ State = m@@ Adap@@ ter@@ Service@@ .get@@ B@@ ond@@ State@@ (@@ device@@ ); boolean is@@ S@@ d@@ p@@ P@@ end@@ ing = (p@@ ri@@ or@@ it@@ y == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ UN@@ DE@@ F@@ IN@@ E@@ D@@ )) && ((@@ b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ B@@ ON@@ D@@ ING@@ )) || (b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ B@@ ON@@ DE@@ D@@ ))); if ((@@ (!@@ is@@ S@@ d@@ p@@ P@@ end@@ ing@@ ) && (p@@ ri@@ or@@ it@@ y != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file@@ .@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ ON@@ )) && ((m@@ P@@ ri@@ or@@ it@@ y != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ A@@ UT@@ O@@ _C@@ ON@@ N@@ EC@@ T@@ ))) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ((@@ ("@@ Er@@ ror return false@@ , p@@ ri@@ or@@ ity@@ =@@ " + p@@ ri@@ or@@ ity@@ ) + ", b@@ ond@@ State@@ =@@ ") + b@@ ond@@ State@@ )); return false@@ ; } java.util.List<@@ android.@@ bluetooth.@@ Bluetooth@@ Device@@ > connect@@ ing@@ Connec@@ ted@@ Device@@ s = get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ _C@@ ON@@ N@@ EC@@ TE@@ D_@@ STA@@ TE@@ S@@ ); if ((@@ connect@@ ing@@ Connec@@ ted@@ De@@ vices@@ .@@ size@@ ()) >@@ = (m@@ Ma@@ x@@ He@@ ad@@ set@@ Connection@@ s@@ )) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ((@@ ("@@ Tr@@ y n@@ umb@@ er of connection@@ s " + (m@@ Ma@@ x@@ He@@ ad@@ set@@ Connection@@ s@@ )) + " w@@ a@@ s re@@ ach@@ ed@@ , re@@ ject@@ ing connec@@ tion f@@ ro@@ m ") + device@@ )); return false@@ ; } return true@@ ; }
@@@ android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing@@ (@@ oth@@ er@@ w@@ is@@ e = android.@@ support.@@ annotation.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing.@@ P@@ AC@@ K@@ A@@ G@@ E_@@ P@@ R@@ I@@ V@@ A@@ TE@@ ) public boolean ok@@ To@@ Con@@ nect@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { if (m@@ Adap@@ ter@@ Service.@@ is@@ Q@@ ui@@ et@@ Mode@@ Enabled@@ ()) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, (("@@ S@@ D@@ P can@@ not connec@@ t to " + device@@ ) + " : qu@@ i@@ et mo@@ de en@@ able@@ d return false@@ ; } int p@@ ri@@ or@@ it@@ y = get@@ Pri@@ or@@ ity@@ (@@ device@@ ); int b@@ ond@@ State = m@@ Adap@@ ter@@ Service@@ .get@@ B@@ ond@@ State@@ (@@ device@@ ); boolean is@@ S@@ d@@ p@@ P@@ end@@ ing = (p@@ ri@@ or@@ it@@ y == (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ UN@@ DE@@ F@@ IN@@ E@@ D@@ )) && ((@@ b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ B@@ ON@@ D@@ ING@@ )) || (b@@ ond@@ State == (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ B@@ ON@@ DE@@ D@@ ))); if ((@@ (!@@ is@@ S@@ d@@ p@@ P@@ end@@ ing@@ ) && (p@@ ri@@ or@@ it@@ y != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file@@ .@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ ON@@ )) && (p@@ ri@@ or@@ it@@ y != (android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ P@@ R@@ IO@@ R@@ I@@ TY@@ _@@ A@@ UT@@ O@@ _C@@ ON@@ N@@ EC@@ T@@ ))) { android.util.@@ Log@@ .@@ w@@ (com.android.bluetooth.@@ he@@ ar@@ ing@@ a@@ id@@ .@@ He@@ ar@@ ing@@ A@@ id@@ Service.@@ TAG, ((@@ ("@@ S@@ ho@@ ul@@ d return false@@ , p@@ ri@@ or@@ ity@@ =@@ " + p@@ ri@@ or@@ ity@@ ) + " b@@ ond@@ State@@ =@@ ") + b@@ ond@@ State@@ )); return false@@ ; } return true@@ ; }
public void run() { final android.net.@@ Net@@ wor@@ k net@@ wor@@ k = android.net.@@ d@@ n@@ s.@@ Res@@ ol@@ v@@ Util.@@ m@@ ake@@ Network@@ With@@ P@@ riv@@ ate@@ D@@ n@@ s@@ B@@ yp@@ ass@@ (m@@ Network@@ ); try { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (1@@ 00@@ 0); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { } if ((@@ is@@ F@@ in@@ is@@ h@@ ing@@ ()) || (is@@ D@@ est@@ ro@@ y@@ ed@@ ())) return@@ ; java.net.@@ H@@ ttp@@ URL@@ Connec@@ tion ur@@ l@@ Connec@@ tion = null@@ ; int h@@ ttp@@ Response@@ Co@@ de = 5@@ 00@@ ; int old@@ T@@ a@@ g = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ And@@ Set@@ Thread@@ Stat@@ s@@ T@@ ag@@ (@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ TAG@@ _S@@ Y@@ S@@ TE@@ M@@ _P@@ RO@@ B@@ E); try { ur@@ l@@ Connec@@ tion = ((@@ java.net.@@ H@@ ttp@@ URL@@ Connection@@ ) (@@ net@@ wor@@ k@@ .@@ open@@ Connection@@ (@@ new java.net.@@ URL@@ (m@@ C@@ m@@ .get@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Server@@ Ur@@ l@@ ()@@ )))); ur@@ l@@ Connection@@ .set@@ Instance@@ Fol@@ low@@ R@@ edi@@ re@@ ct@@ s@@ (@@ false@@ ); ur@@ l@@ Connection@@ .set@@ Con@@ nect@@ Time@@ out@@ (com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ S@@ O@@ C@@ KE@@ T_@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); ur@@ l@@ Connection@@ .set@@ Read@@ Time@@ out@@ (com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ S@@ O@@ C@@ KE@@ T_@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); ur@@ l@@ Connection@@ .set@@ U@@ se@@ Cach@@ es@@ (@@ false@@ ); ur@@ l@@ Connection@@ .get@@ InputStream@@ (); h@@ ttp@@ Response@@ Co@@ de = ur@@ l@@ Connection@@ .get@@ Response@@ Code@@ (); } catch (java.io.IOException e) { com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ log@@ e(@@ e.get@@ Message@@ ()); } final@@ l@@ y { if (@@ ur@@ l@@ Connec@@ tion != null@@ ) ur@@ l@@ Connection@@ .@@ dis@@ connect@@ (); android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ set@@ Thread@@ Stat@@ s@@ T@@ ag@@ (@@ old@@ T@@ ag@@ ); } if (@@ h@@ ttp@@ Response@@ Co@@ de == 2@@ 0@@ 4@@ ) { do@@ ne@@ (@@ true@@ ); } }
@java.lang.Override public void on@@ A@@ va@@ il@@ able@@ (android.net.@@ Net@@ wor@@ k network@@ ) { if (com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ D@@ B@@ G) com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ log@@ d@@ (("@@ on@@ A@@ va@@ il@@ able@@ : " + network@@ )); mC@@ m.@@ b@@ ind@@ Process@@ To@@ Network@@ (@@ network@@ ); mC@@ m.@@ set@@ Process@@ Default@@ Network@@ For@@ Host@@ Res@@ ol@@ uti@@ on@@ (android.net.@@ d@@ n@@ s.@@ Res@@ ol@@ v@@ Uti@@ l.get@@ Network@@ With@@ U@@ se@@ Local@@ Nam@@ es@@ er@@ ver@@ s@@ Flag@@ (@@ network@@ )); m@@ Net@@ wor@@ k = network@@ ; run@@ On@@ U@@ i@@ Thread@@ I@@ f@@ Not@@ F@@ in@@ is@@ h@@ ing@@ ((@@ ) -@@ > { if (m@@ Re@@ load@@ ) { m@@ W@@ eb@@ View@@ .@@ re@@ load@@ (); } else { m@@ W@@ eb@@ View@@ .@@ load@@ Data@@ ("@@ ", "@@ text@@ /@@ h@@ t@@ ml@@ ", null@@ ); } }); }
private void test@@ For@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ () { m@@ Test@@ ing@@ Th@@ re@@ ad = new java.lang.@@ Thread@@ (@@ new java.lang.@@ Run@@ n@@ able@@ () { public void run() { final android.net.@@ Net@@ wor@@ k net@@ wor@@ k = android.net.@@ d@@ n@@ s.@@ Res@@ ol@@ v@@ Util.@@ m@@ ake@@ Network@@ With@@ P@@ riv@@ ate@@ D@@ n@@ s@@ B@@ yp@@ ass@@ (m@@ Network@@ ); try { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (1@@ 00@@ 0); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { } if ((@@ is@@ F@@ in@@ is@@ h@@ ing@@ ()) || (is@@ D@@ est@@ ro@@ y@@ ed@@ ())) return@@ ; java.net.@@ H@@ ttp@@ URL@@ Connec@@ tion ur@@ l@@ Connec@@ tion = null@@ ; int h@@ ttp@@ Response@@ Co@@ de = 5@@ 00@@ ; int old@@ T@@ a@@ g = android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.get@@ And@@ Set@@ Thread@@ Stat@@ s@@ T@@ ag@@ (@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ TAG@@ _S@@ Y@@ S@@ TE@@ M@@ _P@@ RO@@ B@@ E); try { ur@@ l@@ Connec@@ tion = ((@@ java.net.@@ H@@ ttp@@ URL@@ Connection@@ ) (@@ net@@ wor@@ k@@ .@@ open@@ Connection@@ (@@ new java.net.@@ URL@@ (m@@ C@@ m@@ .get@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Server@@ Ur@@ l@@ ()@@ )))); ur@@ l@@ Connection@@ .set@@ Instance@@ Fol@@ low@@ R@@ edi@@ re@@ ct@@ s@@ (@@ false@@ ); ur@@ l@@ Connection@@ .set@@ Con@@ nect@@ Time@@ out@@ (com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ S@@ O@@ C@@ KE@@ T_@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); ur@@ l@@ Connection@@ .set@@ Read@@ Time@@ out@@ (com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ S@@ O@@ C@@ KE@@ T_@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); ur@@ l@@ Connection@@ .set@@ U@@ se@@ Cach@@ es@@ (@@ false@@ ); ur@@ l@@ Connection@@ .get@@ InputStream@@ (); h@@ ttp@@ Response@@ Co@@ de = ur@@ l@@ Connection@@ .get@@ Response@@ Code@@ (); } catch (java.io.IOException e) { com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ log@@ e(@@ e.get@@ Message@@ ()); } final@@ l@@ y { if (@@ ur@@ l@@ Connec@@ tion != null@@ ) ur@@ l@@ Connection@@ .@@ dis@@ connect@@ (); android.net.@@ Tr@@ a@@ f@@ fi@@ c@@ Stat@@ s.@@ set@@ Thread@@ Stat@@ s@@ T@@ ag@@ (@@ old@@ T@@ ag@@ ); } if (@@ h@@ ttp@@ Response@@ Co@@ de == 2@@ 0@@ 4@@ ) { do@@ ne@@ (@@ true@@ ); } } }); m@@ Test@@ ing@@ Thread@@ .@@ start@@ (); }
private void request@@ Network@@ For@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ () { android.net.@@ Network@@ Requ@@ est requ@@ est = new android.net.@@ Network@@ Requ@@ est.@@ Builder@@ ().@@ add@@ Trans@@ port@@ Type@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ TR@@ AN@@ S@@ P@@ O@@ RT@@ _C@@ E@@ L@@ L@@ UL@@ AR@@ ).@@ add@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _@@ IN@@ TER@@ N@@ E@@ T@@ ).@@ remove@@ Cap@@ abili@@ ty@@ (@@ Network@@ Cap@@ abili@@ ti@@ es.@@ N@@ E@@ T_@@ C@@ AP@@ AB@@ IL@@ I@@ TY@@ _N@@ O@@ T_@@ RE@@ S@@ TR@@ IC@@ TE@@ D@@ ).@@ build@@ (); m@@ Network@@ Call@@ b@@ ac@@ k = new android.net.@@ Connectivity@@ Manager.@@ Network@@ Callback@@ () { @java.lang.Override public void on@@ A@@ va@@ il@@ able@@ Net@@ wor@@ k network@@ ) { if (com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ D@@ B@@ G) com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ log@@ d@@ (("@@ request@@ ing ava@@ il@@ able@@ : " + network@@ )); mC@@ m.@@ b@@ ind@@ Process@@ To@@ Network@@ (@@ network@@ ); mC@@ m.@@ set@@ Process@@ Default@@ Network@@ For@@ Host@@ Res@@ ol@@ uti@@ on@@ (android.net.@@ d@@ n@@ s.@@ Res@@ ol@@ v@@ Uti@@ l.get@@ Network@@ With@@ U@@ se@@ Local@@ Nam@@ es@@ er@@ ver@@ s@@ Flag@@ (@@ network@@ )); m@@ Net@@ wor@@ k = network@@ ; run@@ On@@ U@@ i@@ Thread@@ I@@ f@@ Not@@ F@@ in@@ is@@ h@@ ing@@ ((@@ ) -@@ > { if (m@@ Re@@ load@@ ) { m@@ W@@ eb@@ View@@ .@@ re@@ load@@ (); } else { m@@ W@@ eb@@ View@@ .@@ load@@ Data@@ ("@@ ", "@@ text@@ /@@ h@@ t@@ ml@@ ", null@@ ); } }); } @java.lang.Override public void on@@ Un@@ ava@@ il@@ able@@ () { if (com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ D@@ B@@ G) com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ log@@ d@@ ("@@ request@@ ing un@@ ava@@ il@@ able run@@ On@@ U@@ i@@ Thread@@ I@@ f@@ Not@@ F@@ in@@ is@@ h@@ ing@@ ((@@ ) -@@ > { m@@ W@@ eb@@ View@@ .@@ load@@ Ur@@ l@@ (m@@ Ur@@ l.@@ toString@@ ()); }); } @java.lang.Override public void on@@ Lo@@ st@@ (android.net.@@ Net@@ wor@@ k lo@@ st@@ Network@@ ) { if (com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ D@@ B@@ G) com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ log@@ d@@ ("@@ request@@ ing lo@@ s@@ t m@@ Re@@ lo@@ ad = true@@ ; } }; com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ log@@ d@@ ("@@ request@@ ing Net@@ wor@@ k for c@@ a@@ pti@@ v@@ e port@@ al mC@@ m.@@ request@@ Network@@ (@@ request@@ , m@@ Network@@ Callback@@ , com.android.@@ c@@ ar@@ ri@@ er@@ default@@ app.@@ C@@ a@@ pti@@ ve@@ P@@ ort@@ al@@ Log@@ in@@ Ac@@ tivity.@@ N@@ E@@ T@@ W@@ OR@@ K@@ _RE@@ Q@@ UE@@ ST_@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); }
public void test@@ Alloc@@ ate@@ Dire@@ ct@@ () { try { java.nio.Byte@@ Buff@@ er.@@ al@@ loc@@ ate@@ Dire@@ ct@@ ((@@ -1@@ )); fail@@ (); } catch (java.lang.@@ Illegal@@ Argument@@ Exception expected) { } check@@ Alloc@@ ate@@ Dire@@ ct@@ (@@ 0); check@@ Alloc@@ ate@@ Dire@@ ct@@ (1@@ ); check@@ Alloc@@ ate@@ Dire@@ ct@@ (@@ 2@@ ); check@@ Alloc@@ ate@@ Dire@@ ct@@ ((@@ 1 <@@ < 2@@ 0@@ )); check@@ Alloc@@ ate@@ Dire@@ ct@@ (1@@ 2@@ 3@@ 4@@ 5@@ 6@@ 7@@ ); }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { if (@@ Bluetooth@@ He@@ ar@@ ing@@ A@@ id@@ .@@ AC@@ TION@@ _C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ .@@ equal@@ s@@ (@@ int@@ ent.get@@ Action@@ ())) { try { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = int@@ ent.get@@ Par@@ cel@@ able@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (@@ device@@ ); java.util.@@ concurrent.@@ Block@@ ing@@ Q@@ ue@@ ue@@ <@@ android.content.@@ Intent@@ > q@@ ue@@ u@@ e = m@@ Device@@ Q@@ ue@@ Map@@ .get@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (@@ q@@ ue@@ ue@@ ); q@@ ue@@ u@@ e.@@ put@@ (@@ int@@ ent@@ ); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { org.@@ junit.@@ Assert.@@ fail@@ (("@@ Un@@ able ad@@ d Int@@ ent to Connec@@ tion State q@@ ue@@ ue@@ : " + (@@ e.get@@ Message@@ ()))); } } }
private android.content.@@ Int@@ ent wait@@ For@@ No@@ Intent@@ (@@ int time@@ out@@ M@@ s, java.util.@@ concurrent.@@ Block@@ ing@@ Q@@ ue@@ ue@@ <@@ android.content.@@ Intent@@ > q@@ ue@@ ue@@ ) { try { org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (@@ q@@ ue@@ ue@@ ); android.content.@@ Int@@ ent int@@ ent = q@@ ue@@ u@@ e.@@ po@@ l@@ (@@ time@@ out@@ M@@ s, java.util.@@ concurrent.@@ Time@@ Un@@ it.@@ M@@ IL@@ L@@ IS@@ EC@@ ON@@ D@@ S@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Null@@ (@@ int@@ ent@@ ); return int@@ ent@@ ; } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { org.@@ junit.@@ Assert.@@ fail@@ (("@@ (("@@ U@@ ne@@ x@@ pec@@ ted ob@@ t@@ a@@ in an Int@@ ent f@@ ro@@ m the q@@ ue@@ ue@@ : " + (@@ e.get@@ Message@@ ()))); } return null@@ ; }
private android.content.@@ Int@@ ent wait@@ For@@ Intent@@ (@@ int time@@ out@@ M@@ s, java.util.@@ concurrent.@@ Block@@ ing@@ Q@@ ue@@ ue@@ <@@ android.content.@@ Intent@@ > q@@ ue@@ ue@@ ) { try { org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (@@ q@@ ue@@ ue@@ ); android.content.@@ Int@@ ent int@@ ent = q@@ ue@@ u@@ e.@@ po@@ l@@ l@@ (@@ time@@ out@@ M@@ s, java.util.@@ concurrent.@@ Time@@ Un@@ it.@@ M@@ IL@@ L@@ IS@@ EC@@ ON@@ D@@ S@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (@@ int@@ ent@@ ); return int@@ ent@@ ; } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { org.@@ junit.@@ Assert.@@ fail@@ (("@@ (("@@ u@@ ne@@ x@@ pec@@ ted ob@@ t@@ a@@ in an Int@@ ent f@@ ro@@ m the q@@ ue@@ ue@@ : " + (@@ e.get@@ Message@@ ()))); } return null@@ ; }
@org.junit.Test public void a@@ 2@@ d@@ p@@ Ac@@ tive@@ Device@@ Se@@ lected@@ _@@ set@@ Ac@@ tive@@ () { a@@ 2@@ d@@ p@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ ); a@@ 2@@ d@@ p@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); a@@ 2@@ d@@ p@@ Ac@@ tive@@ Device@@ Changed@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ ); }
@org.junit.Test public void he@@ ad@@ set@@ Ac@@ tive@@ Device@@ Se@@ lected@@ _@@ set@@ Ac@@ tive@@ () { he@@ ad@@ set@@ Connec@@ ted@@ (m@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ He@@ ad@@ set@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ He@@ ad@@ set@@ Device@@ ); he@@ ad@@ set@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ He@@ ad@@ set@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); he@@ ad@@ set@@ Ac@@ tive@@ Device@@ Changed@@ (m@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ He@@ ad@@ set@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ He@@ ad@@ set@@ Device@@ ); }
@org.junit.Test public void he@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ _@@ clear@@ A@@ 2@@ d@@ p@@ And@@ He@@ ad@@ set@@ Ac@@ tive@@ () { a@@ 2@@ d@@ p@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); he@@ ad@@ set@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ He@@ ad@@ set@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); he@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ Device@@ Changed@@ (m@@ He@@ ar@@ ing@@ A@@ id@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (is@@ Null@@ ()); ve@@ r@@ if@@ y@@ (m@@ He@@ ad@@ set@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (is@@ Null@@ ()); }
@org.junit.Test public void he@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ _@@ do@@ n@@ t@@ Set@@ A@@ 2@@ d@@ p@@ And@@ He@@ ad@@ set@@ Ac@@ tive@@ () { he@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ Device@@ Changed@@ (m@@ He@@ ar@@ ing@@ A@@ id@@ Device@@ ); a@@ 2@@ d@@ p@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); he@@ ad@@ set@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ).@@ tim@@ es@@ (0@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ He@@ ad@@ set@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ).@@ tim@@ es@@ (0@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); }
@org.junit.@@ A@@ f@@ ter public void te@@ ar@@ Do@@ wn@@ () throw@@ s java.lang.Exception { if ((@@ (!(m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ pro@@ file@@ _@@ sup@@ ported@@ _@@ he@@ ar@@ ing@@ _@@ a@@ id@@ ))) || (!(m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ pro@@ file@@ _@@ sup@@ ported@@ _@@ h@@ s@@ _@@ h@@ f@@ p@@ )@@ ))) || (!(m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ pro@@ file@@ _@@ sup@@ ported@@ _@@ a@@ 2@@ d@@ p@@ )@@ ))) { return@@ ; } m@@ Ac@@ tive@@ Device@@ Manager.@@ cle@@ an@@ up@@ (); com.android.@@ bluetooth.@@ Test@@ Utils.@@ clear@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ ); res@@ et@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ ); res@@ et@@ (m@@ He@@ ad@@ set@@ Service@@ ); res@@ et@@ (m@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ ); }
@org.junit.Test public void he@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ _@@ set@@ A@@ 2@@ d@@ p@@ Ac@@ tive@@ Ex@@ pli@@ c@@ it@@ ly@@ () { he@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ Device@@ Changed@@ (m@@ He@@ ar@@ ing@@ A@@ id@@ Device@@ ); a@@ 2@@ d@@ p@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); a@@ 2@@ d@@ p@@ Ac@@ tive@@ Device@@ Changed@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); }
@org.junit.Test public void he@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ _@@ set@@ He@@ ad@@ set@@ Ac@@ tive@@ Ex@@ pli@@ c@@ it@@ ly@@ () { he@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ Device@@ Changed@@ (m@@ He@@ ar@@ ing@@ A@@ id@@ Device@@ ); he@@ ad@@ set@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); he@@ ad@@ set@@ Ac@@ tive@@ Device@@ Changed@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ He@@ ad@@ set@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); }
@org.junit.@@ B@@ e@@ for@@ e public void set@@ Up@@ () throw@@ s java.lang.Exception { m@@ Context = android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ (); org.@@ junit.@@ A@@ ss@@ um@@ e.@@ ass@@ um@@ e@@ True@@ ("@@ I@@ gn@@ or@@ e t@@ est wh@@ e@@ n A@@ 2@@ d@@ p@@ Ser@@ vice is not en@@ abled@@ ", m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ pro@@ file@@ _@@ sup@@ ported@@ _@@ a@@ 2@@ d@@ p@@ )); org.@@ junit.@@ A@@ ss@@ um@@ e.@@ ass@@ um@@ e@@ True@@ ("@@ I@@ gn@@ or@@ e t@@ est wh@@ e@@ n He@@ ad@@ set@@ Ser@@ vice is not en@@ abled@@ ", m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ pro@@ file@@ _@@ sup@@ ported@@ _@@ h@@ s@@ _@@ h@@ f@@ p@@ )); org.@@ junit.@@ A@@ ss@@ um@@ e.@@ ass@@ um@@ e@@ True@@ ("@@ I@@ gn@@ or@@ e t@@ est wh@@ e@@ n He@@ ar@@ ing@@ A@@ id@@ Ser@@ vice is not en@@ abled@@ ", m@@ Contex@@ t.get@@ Res@@ ources@@ ().get@@ Boolean@@ (@@ R.@@ b@@ oo@@ l.@@ pro@@ file@@ _@@ sup@@ ported@@ _@@ he@@ ar@@ ing@@ _@@ a@@ id@@ )); org.@@ mock@@ it@@ o.@@ Mock@@ it@@ o@@ Annot@@ ations.@@ init@@ Mock@@ s@@ (@@ this@@ ); com.android.@@ bluetooth.@@ Test@@ Utils.@@ set@@ Adap@@ ter@@ Service@@ (m@@ Adap@@ ter@@ Service@@ Factory@@ .get@@ A@@ 2@@ d@@ p@@ Service@@ ()).@@ thenReturn@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ ); when@@ (m@@ Service@@ Factory@@ .get@@ He@@ ad@@ set@@ Service@@ ()).@@ thenReturn@@ (m@@ He@@ ad@@ set@@ Service@@ Factory@@ .get@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ Factory@@ .get@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ ()).@@ thenReturn@@ (m@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ ); when@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ .set@@ Ac@@ tive@@ Device@@ (@@ an@@ y@@ ()@@ )).@@ thenReturn@@ (@@ true@@ ); when@@ (m@@ He@@ ad@@ set@@ Service@@ .set@@ Ac@@ tive@@ Device@@ (@@ an@@ y@@ ()@@ )).@@ thenReturn@@ (@@ true@@ ); when@@ (m@@ He@@ ar@@ ing@@ A@@ id@@ Service@@ .set@@ Ac@@ tive@@ Device@@ (@@ an@@ y@@ ()@@ )).@@ thenReturn@@ (@@ true@@ ); m@@ Ac@@ tive@@ Device@@ Manager = new com.android.@@ bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ (m@@ Adap@@ ter@@ Service@@ , m@@ Service@@ Factory@@ ); m@@ Ac@@ tive@@ Device@@ Manager.@@ start@@ (); m@@ Adap@@ ter = android.@@ bluetooth.@@ Bluetooth@@ Adap@@ t@@ er.get@@ Default@@ Adap@@ ter@@ (); m@@ A@@ 2@@ d@@ p@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 0@@ 1@@ "); m@@ He@@ ad@@ set@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 10@@ "); m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 1@@ "); m@@ He@@ ar@@ ing@@ A@@ id@@ De@@ vice = m@@ Adap@@ t@@ er.get@@ Remote@@ Device@@ ("@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ :@@ 00@@ "); }
public static void run@@ Get@@ () throw@@ s java.lang.Exception { java.lang.@@ ref@@ lect.@@ M@@ ethod t@@ arg@@ et = Main.@@ Int@@ Runner@@ .@@ class@@ .get@@ Dec@@ lar@@ ed@@ Method@@ ("@@ run@@ "); Main.@@ Int@@ Run@@ ne@@ r int@@ _@@ run@@ ne@@ r = new Main.@@ Int@@ Runner@@ (@@ true@@ , true@@ ); java.lang.@@ Th@@ re@@ ad target@@ _@@ g@@ et = new java.lang.@@ Thread@@ (@@ int@@ _@@ run@@ ner@@ , - T@@ arg@@ et target@@ _@@ get@@ .@@ start@@ (); int@@ _@@ run@@ ner.@@ wait@@ For@@ Bu@@ s@@ y@@ L@@ oo@@ p@@ Start@@ (); try { ar@@ t.@@ Su@@ s@@ p@@ ension@@ .@@ su@@ s@@ pend@@ (@@ target@@ _@@ get@@ ); } catch (java.lang.Exception e) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (("@@ Co@@ ul@@ d go@@ t " + e@@ )); e.@@ p@@ r@@ int@@ Stack@@ Trace@@ (); int@@ _@@ run@@ ner.@@ fin@@ is@@ h@@ (); target@@ _@@ get@@ .@@ j@@ o@@ in@@ (); return@@ ; } try { ar@@ t.@@ Stack@@ Trace@@ .@@ Stack@@ F@@ rame@@ Data f@@ ram@@ e = Main.@@ F@@ ind@@ Stack@@ F@@ rame@@ (@@ target@@ _@@ get@@ , target@@ ); int de@@ p@@ th = f@@ ram@@ e.@@ de@@ p@@ th@@ ; if (@@ de@@ p@@ th != 0) { throw new java.lang.@@ Error@@ (("@@ Un@@ k@@ no@@ w@@ n de@@ p@@ th bu@@ t go@@ t " + de@@ p@@ th@@ )); } int s@@ lo@@ t = Main.@@ F@@ ind@@ S@@ lo@@ t@@ (f@@ rame@@ ); int valu@@ e = ar@@ t.@@ Local@@ s.@@ Get@@ Local@@ Vari@@ able@@ Int@@ (@@ target@@ _@@ get@@ , de@@ p@@ th@@ , s@@ lo@@ t@@ ); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (("@@ G@@ o@@ t Get@@ Local@@ Int@@ (), valu@@ e is " + value@@ )); } final@@ l@@ y { ar@@ t.@@ Su@@ s@@ p@@ ension@@ .@@ res@@ um@@ e(@@ target@@ _@@ get@@ ); int@@ _@@ run@@ ner.@@ fin@@ is@@ h@@ (); target@@ _@@ get@@ .@@ j@@ o@@ in@@ (); } }
public void run() { int TA@@ R@@ GE@@ T = 4@@ 2@@ ; while (@@ continue@@ Bu@@ s@@ y@@ L@@ oo@@ p@@ ) { in@@ Bu@@ s@@ y@@ L@@ oo@@ p = true@@ ; } java.@@ tim@@ e.@@ In@@ stan@@ t os@@ r@@ De@@ ad@@ lin@@ e = java.@@ tim@@ e.@@ In@@ stan@@ t.@@ no@@ w@@ ().@@ p@@ lu@@ s@@ Sec@@ ond@@ s@@ ((@@ exp@@ ect@@ O@@ s@@ r ? 6@@ 0@@ 0 : 3@@ )); do { in@@ Bu@@ s@@ y@@ L@@ oo@@ p = true@@ ; } while (((@@ Main.@@ has@@ J@@ it@@ ()) && (!(@@ Main.@@ is@@ In@@ O@@ s@@ r@@ Code@@ ("@@ run@@ "@@ )@@ ))) && ((@@ os@@ r@@ De@@ ad@@ lin@@ e.@@ com@@ par@@ e@@ To@@ (@@ java.@@ tim@@ e.@@ In@@ stan@@ t.@@ no@@ w@@ ())) > 0) ); if (@@ Main.@@ has@@ J@@ it@@ ()) { boolean in@@ O@@ s@@ r = Main.@@ is@@ In@@ O@@ s@@ r@@ Code@@ ("@@ run@@ "); if (@@ al@@ low@@ J@@ it@@ ) { in@@ O@@ s@@ r = in@@ O@@ s@@ r || (!(@@ Main.@@ is@@ Inter@@ p@@ r@@ et@@ ed@@ ())); } if ((@@ exp@@ ect@@ O@@ s@@ r@@ ) && (!@@ in@@ O@@ s@@ r@@ )) { throw new java.lang.@@ Error@@ (("@@ Un@@ able to b@@ e in O@@ S@@ R bu@@ t w@@ a@@ s not@@ . int@@ er@@ p@@ r@@ eter@@ : " + (@@ Main.@@ is@@ Inter@@ p@@ r@@ et@@ ed@@ ()))); } else if ((@@ !@@ (@@ exp@@ ect@@ O@@ s@@ r@@ )) && in@@ O@@ s@@ r@@ ) { throw new java.lang.@@ Error@@ (("@@ Un@@ able not to b@@ e in O@@ S@@ R bu@@ t w@@ as@@ . int@@ er@@ p@@ r@@ eter@@ : " + (@@ Main.@@ is@@ Inter@@ p@@ r@@ et@@ ed@@ ()))); } } Main.@@ re@@ port@@ Value@@ (@@ TA@@ R@@ GE@@ T@@ ); }
public static void run@@ Set@@ () throw@@ s java.lang.Exception { java.lang.@@ ref@@ lect.@@ M@@ ethod t@@ arg@@ et = Main.@@ Int@@ Runner@@ .@@ class@@ .get@@ Dec@@ lar@@ ed@@ Method@@ ("@@ run@@ "); Main.@@ Int@@ Run@@ ne@@ r int@@ _@@ run@@ ne@@ r = new Main.@@ Int@@ Runner@@ (@@ false@@ , false@@ ); java.lang.@@ Th@@ re@@ ad target@@ _@@ set = new java.lang.@@ Thread@@ (@@ int@@ _@@ run@@ ner@@ , - T@@ arg@@ et target@@ _@@ set.@@ start@@ (); int@@ _@@ run@@ ner.@@ wait@@ For@@ Bu@@ s@@ y@@ L@@ oo@@ p@@ Start@@ (); try { ar@@ t.@@ Su@@ s@@ p@@ ension@@ .@@ su@@ s@@ pend@@ (@@ target@@ _@@ set@@ ); } catch (java.lang.Exception e) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (("@@ Co@@ ul@@ d go@@ t " + e@@ )); e.@@ p@@ r@@ int@@ Stack@@ Trace@@ (); int@@ _@@ run@@ ner.@@ fin@@ is@@ h@@ (); target@@ _@@ set.@@ j@@ o@@ in@@ (); return@@ ; } try { ar@@ t.@@ Stack@@ Trace@@ .@@ Stack@@ Trace@@ Data f@@ ram@@ e = Main.@@ F@@ ind@@ Stack@@ F@@ rame@@ (@@ target@@ _@@ set@@ , target@@ ); int de@@ p@@ th = f@@ ram@@ e.@@ de@@ p@@ th@@ ; if (@@ de@@ p@@ th != 0) { throw new java.lang.@@ Error@@ (("@@ Co@@ ul@@ d de@@ p@@ th bu@@ t go@@ t " + de@@ p@@ th@@ )); } int s@@ lo@@ t = Main.@@ F@@ ind@@ S@@ lo@@ t@@ (f@@ rame@@ ); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (("@@ F@@ o@@ un@@ d TA@@ R@@ GE@@ T to " + (@@ Main.@@ SE@@ T_@@ V@@ AL@@ UE@@ ))); ar@@ t.@@ Local@@ Vari@@ able@@ Int@@ (@@ target@@ _@@ set@@ , de@@ p@@ th@@ , s@@ lo@@ t@@ , Main.@@ SE@@ T_@@ V@@ AL@@ U@@ E); } final@@ l@@ y { ar@@ t.@@ Su@@ s@@ p@@ ension@@ .@@ res@@ um@@ e(@@ target@@ _@@ set@@ ); int@@ _@@ run@@ ner.@@ fin@@ is@@ h@@ (); target@@ _@@ set.@@ j@@ o@@ in@@ (); } }
private void on@@ En@@ d@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ m@@ et@@ ri@@ c.@@ Device@@ M@@ et@@ ri@@ c@@ Data run@@ Data@@ ) { java.io.@@ Buffer@@ ed@@ Wri@@ ter output@@ File = null@@ ; try { java.lang.String output@@ File@@ Name = "@@ /@@ t@@ mp@@ /@@ 0@@ /@@ g@@ rap@@ h@@ ic@@ s@@ -@@ b@@ en@@ ch@@ m@@ ark@@ /@@ out.@@ t@@ xt@@ "; output@@ File = new java.io.@@ Buffer@@ ed@@ Wri@@ ter@@ (@@ new java.io.File@@ Wri@@ ter@@ (@@ output@@ File@@ Name@@ )); output@@ File@@ .@@ write@@ ((@@ ("@@ V@@ S@@ yn@@ c Per@@ io@@ d@@ : " + (@@ v@@ S@@ ync@@ Per@@ io@@ d@@ )) + "@@ \n@@ ")); output@@ File@@ .@@ write@@ ("@@ Tim@@ es@@ :@@ \n@@ "); for (java.lang.@@ Lon@@ g tim@@ e : el@@ ap@@ sed@@ Tim@@ es) output@@ File@@ .@@ write@@ ((@@ tim@@ e + "@@ \n@@ ")); output@@ File@@ .@@ close(); } catch (java.io.IOException e) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e(@@ e); } }
public static void set@@ App@@ Lay@@ er@@ Name@@ (java.lang.String name@@ ) { com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .@@ app@@ Lay@@ er@@ Name = name@@ ; }
@java.lang.Override public final void on@@ Test@@ Run@@ Start@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ m@@ et@@ ri@@ c.@@ Device@@ M@@ et@@ ri@@ c@@ Data run@@ Data@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ At@@ te@@ mp@@ t to g@@ et de@@ vice f@@ ro@@ m on@@ Test@@ Run@@ "); de@@ vice = get@@ De@@ vices@@ ().get@@ (@@ 0); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ (("@@ De@@ vice : " + (@@ device@@ ))); el@@ ap@@ sed@@ Time@@ s = new java.util.ArrayList<@@ java.lang.@@ Long@@ >(); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ start@@ ing@@ "); on@@ Start@@ (@@ run@@ Data@@ ); time@@ r = new java.util.@@ Tim@@ er@@ (); java.util.@@ Tim@@ er@@ T@@ as@@ k tim@@ er@@ T@@ as@@ k = new java.util.@@ Tim@@ er@@ Task@@ () { @java.lang.Override public void run() { try { co@@ lle@@ ct@@ (@@ run@@ Data@@ ); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { tim@@ er.@@ can@@ cel@@ (); java.lang.@@ Thread@@ .@@ current@@ Thread@@ ()@@ .@@ int@@ er@@ rup@@ t@@ (); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ Interrup@@ ted excepti@@ on throw@@ n f@@ ro@@ m task@@ :@@ "); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e(@@ e); } } }; if (m@@ Fi@@ x@@ ed@@ S@@ ch@@ ed@@ ule@@ R@@ ate@@ ) { tim@@ er.@@ s@@ ch@@ ed@@ ule@@ At@@ Fi@@ x@@ ed@@ R@@ ate@@ (@@ tim@@ er@@ Task@@ , 0, m@@ Inter@@ val@@ M@@ s); } else { tim@@ er.@@ s@@ ch@@ ed@@ ule@@ (@@ tim@@ er@@ Task@@ , 0, m@@ Inter@@ val@@ M@@ s); } }
@java.lang.Override public void run() { try { co@@ lle@@ ct@@ (@@ run@@ Data@@ ); } catch (java.lang.@@ Interrup@@ ted@@ Exception e) { tim@@ er.@@ can@@ cel@@ (); java.lang.@@ Thread@@ .@@ current@@ Thread@@ ()@@ .@@ int@@ er@@ rup@@ t@@ (); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ Interrup@@ ted excepti@@ on throw@@ n f@@ ro@@ m task@@ :@@ "); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e(@@ e); } }
public boolean s@@ amp@@ le@@ (@@ long time@@ St@@ amp@@ ) { if (@@ time@@ St@@ am@@ p < (@@ lat@@ est@@ Se@@ en@@ )) { return false@@ ; } else if (@@ time@@ St@@ am@@ p == (@@ lat@@ est@@ Se@@ en@@ )) { return true@@ ; } else { el@@ ap@@ sed@@ Tim@@ es.@@ add@@ ((@@ time@@ St@@ am@@ p - (@@ lat@@ est@@ Se@@ en@@ ))); lat@@ est@@ Se@@ e@@ n = time@@ St@@ amp@@ ; return false@@ ; } }
@java.lang.Override public void run@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ I@@ Test@@ In@@ vo@@ cation@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception { java.util.Map@@ <java.lang.String, java.lang.String> run@@ M@@ et@@ ri@@ c@@ s = new java.util.@@ Hash@@ Map@@ <@@ >(); for (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info ap@@ k : m@@ Apk@@ s) { com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .set@@ App@@ Lay@@ er@@ Name@@ (@@ ap@@ k@@ .get@@ Package@@ Name@@ ()); get@@ Device@@ ().@@ in@@ stall@@ Package@@ (@@ new java.io.File@@ (m@@ Apk@@ Dir@@ , ap@@ k@@ .get@@ File@@ Name@@ ()@@ ), true@@ ); list@@ en@@ er.@@ test@@ Run@@ St@@ ar@@ ted@@ ("@@ g@@ rap@@ h@@ ic@@ s@@ b@@ en@@ ch@@ m@@ ark@@ ", m@@ Apk@@ s.@@ size@@ ()); com.android.ddmlib.@@ tes@@ tr@@ un@@ ner.@@ Test@@ Id@@ ent@@ if@@ i@@ er id@@ ent@@ if@@ i@@ er = new com.android.ddmlib.@@ tes@@ tr@@ un@@ ner.@@ Test@@ Id@@ ent@@ if@@ ier@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , (("@@ run@@ [@@ " + (@@ ap@@ k.@@ name@@ ())) + "@@ ]@@ ")); java.util.Map@@ <java.lang.String, java.lang.String> test@@ M@@ et@@ ri@@ c@@ s = new java.util.@@ Hash@@ Map@@ <@@ >(); list@@ en@@ er.@@ test@@ St@@ ar@@ ted@@ (@@ id@@ ent@@ if@@ ier@@ ); run@@ Device@@ Test@@ s@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ P@@ AC@@ K@@ A@@ G@@ E, com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , (("@@ run@@ [@@ " + (@@ ap@@ k.@@ name@@ ())) + "@@ ]@@ ")); list@@ en@@ er.@@ test@@ En@@ d@@ ed@@ (@@ id@@ ent@@ if@@ ier@@ , test@@ M@@ et@@ ri@@ c@@ s); list@@ en@@ er.@@ test@@ Run@@ En@@ d@@ ed@@ (@@ 0, run@@ M@@ et@@ ri@@ c@@ s); } }
@java.lang.Override public final void on@@ Test@@ Run@@ En@@ d@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ m@@ et@@ ri@@ c.@@ Device@@ M@@ et@@ ri@@ c@@ Data run@@ Data@@ ) { if ((@@ tim@@ er@@ ) != null@@ ) { tim@@ er.@@ can@@ cel@@ (); tim@@ er.@@ p@@ ur@@ g@@ e@@ (); } on@@ En@@ d@@ (@@ run@@ Data@@ ); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ d@@ ("@@ fin@@ is@@ h@@ ed@@ "); }
private static org.@@ j@@ s@@ on@@ .@@ J@@ S@@ ON@@ Ob@@ ject build@@ Lin@@ k@@ Properties@@ (android.net.@@ Lin@@ k@@ Proper@@ ti@@ es data@@ ) throw@@ s org.@@ j@@ s@@ on@@ .@@ J@@ S@@ ON@@ Exception { org.@@ j@@ s@@ on@@ .@@ J@@ S@@ ON@@ Ob@@ ject in@@ f@@ o = new org.@@ j@@ s@@ on@@ .@@ J@@ S@@ ON@@ Object@@ (); in@@ f@@ o.@@ put@@ ("@@ Interface@@ Name@@ ", data@@ .get@@ Interface@@ Name@@ ()); in@@ f@@ o.@@ put@@ ("@@ Lin@@ k@@ Address@@ es@@ ", com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ j@@ s@@ on@@ r@@ p@@ c.@@ J@@ s@@ on@@ Builder.@@ build@@ (@@ data@@ .get@@ Lin@@ k@@ Address@@ es@@ ())); in@@ f@@ o.@@ put@@ ("@@ D@@ n@@ s@@ Server@@ s@@ ", com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ j@@ s@@ on@@ r@@ p@@ c.@@ J@@ s@@ on@@ Builder.@@ build@@ (@@ data@@ .get@@ D@@ n@@ s@@ Server@@ s@@ ())); in@@ f@@ o.@@ put@@ ("@@ Do@@ main@@ s@@ ", data@@ .get@@ Do@@ main@@ s()); in@@ f@@ o.@@ put@@ ("@@ M@@ t@@ u@@ ", data@@ .get@@ M@@ t@@ u@@ ()); in@@ f@@ o.@@ put@@ ("@@ R@@ out@@ es@@ ", com.goog@@ le@@ cod@@ e.@@ android@@ _@@ script@@ ing.@@ j@@ s@@ on@@ Builder.@@ build@@ (@@ data@@ .get@@ R@@ out@@ es@@ ())); in@@ f@@ o.@@ put@@ ("@@ I@@ s@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Ac@@ tive@@ ", data@@ .is@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Ac@@ tive@@ ()); in@@ f@@ o.@@ put@@ ("@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Server@@ Name@@ ", data@@ .get@@ P@@ riv@@ ate@@ D@@ n@@ s@@ Server@@ Name@@ ()); return in@@ fo@@ ; }
private boolean connect@@ Au@@ dio@@ (java.lang.String addres@@ s) { com.android.server.@@ telecom.@@ Bluetooth@@ He@@ ad@@ set@@ Prox@@ y bluetooth@@ He@@ ad@@ set = m@@ Device@@ Manager.@@ get@@ He@@ ad@@ set@@ Service@@ (); if (@@ bluetooth@@ He@@ ad@@ set == null@@ ) { android.telecom.@@ Log.@@ w@@ (@@ this@@ , "@@ Faile@@ d to connec@@ t di@@ o bu@@ t n@@ o he@@ ad@@ set ser@@ vice exist@@ s.@@ "); return false@@ ; } android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = m@@ Device@@ Manager.@@ get@@ Device@@ From@@ Addres@@ s(@@ addres@@ s); if (@@ de@@ vice == null@@ ) { android.telecom.@@ Log.@@ w@@ (@@ this@@ , "@@ Faile@@ d to t@@ ur@@ n on au@@ di@@ o for a dis@@ connec@@ ted de@@ vice return false@@ ; } boolean su@@ c@@ ces@@ s = bluetooth@@ He@@ ad@@ set@@ .set@@ Ac@@ tive@@ Device@@ (@@ device@@ ); if (!@@ su@@ c@@ ces@@ s) { android.telecom.@@ Log.@@ w@@ (com.android.server.@@ telecom.@@ bluetooth.@@ Bluetooth@@ R@@ ou@@ te@@ Manager.@@ LO@@ G_@@ TAG, "@@ S@@ ho@@ ul@@ d set ac@@ tiv@@ e de@@ vice to %@@ s@@ ", addres@@ s); return false@@ ; } if (!(@@ bluetooth@@ He@@ ad@@ set@@ .is@@ Au@@ dio@@ On@@ ())) { return bluetooth@@ He@@ ad@@ set.@@ connect@@ Au@@ dio@@ (@@ ); } return true@@ ; }
private java.io.File create@@ Mock@@ Properties@@ File@@ () throw@@ s java.io.IOException { java.io.File p@@ File = new java.io.File@@ (m@@ Test@@ Dir@@ , Package@@ Fil@@ es.@@ P@@ A@@ Y@@ LO@@ A@@ D_@@ P@@ RO@@ P@@ E@@ RT@@ I@@ E@@ S_@@ F@@ IL@@ E_@@ N@@ AM@@ E); try (@@ java.io.@@ Buffer@@ ed@@ Wri@@ ter w = new java.io.@@ Buffer@@ ed@@ Wri@@ ter@@ (@@ new java.io.File@@ Wri@@ ter@@ (p@@ File@@ ))) { w@@ .@@ write@@ (@@ com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ util.@@ P@@ ay@@ load@@ Spec@@ s@@ Test.@@ P@@ RO@@ P@@ E@@ RT@@ I@@ E@@ S@@ _C@@ ON@@ T@@ EN@@ T@@ S@@ ); } return p@@ File@@ ; }
@java.lang.Override public void run@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ I@@ Test@@ In@@ vo@@ cation@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception { java.util.Map@@ <java.lang.String, java.lang.String> run@@ M@@ et@@ ri@@ c@@ s = new java.util.@@ Hash@@ Map@@ <@@ >(); init@@ Apk@@ List@@ (); get@@ Device@@ ().@@ pu@@ sh@@ File@@ (m@@ Apk@@ Info@@ File@@ , Apk@@ Info.@@ AP@@ K@@ _@@ L@@ I@@ ST_@@ LO@@ C@@ AT@@ ION@@ ); for (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info ap@@ k : m@@ Apk@@ s) { java.io.File ap@@ k@@ File = find@@ Apk@@ (@@ ap@@ k@@ .get@@ File@@ Name@@ ()); get@@ Device@@ ().@@ in@@ stall@@ Package@@ (@@ ap@@ k@@ File@@ , true@@ ); com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .set@@ App@@ Lay@@ er@@ Name@@ (@@ ap@@ k@@ ); list@@ en@@ er.@@ test@@ Run@@ St@@ ar@@ ted@@ ("@@ g@@ rap@@ h@@ ic@@ s@@ b@@ en@@ ch@@ m@@ ark@@ ", m@@ Apk@@ s.@@ size@@ ()); com.android.ddmlib.@@ tes@@ tr@@ un@@ ner.@@ Test@@ Id@@ ent@@ if@@ i@@ er id@@ ent@@ if@@ i@@ er = new com.android.ddmlib.@@ tes@@ tr@@ un@@ ner.@@ Test@@ Id@@ ent@@ if@@ ier@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , (("@@ run@@ [@@ " + (@@ ap@@ k@@ .getName@@ ())) + "@@ ]@@ ")); java.util.Map@@ <java.lang.String, java.lang.String> test@@ M@@ et@@ ri@@ c@@ s = new java.util.@@ Hash@@ Map@@ <@@ >(); list@@ en@@ er.@@ test@@ St@@ ar@@ ted@@ (@@ id@@ ent@@ if@@ ier@@ ); if (@@ ap@@ k@@ File == null@@ ) { list@@ en@@ er.@@ test@@ Faile@@ d@@ (@@ id@@ ent@@ if@@ ier@@ , java.lang.String@@ .@@ for@@ mat@@ ("@@ Faile@@ d to fin@@ d %@@ s in %@@ s@@ . ap@@ k@@ .get@@ File@@ Name@@ (), m@@ Apk@@ Dir@@ )); } else { run@@ Device@@ Test@@ s@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ P@@ AC@@ K@@ A@@ G@@ E, com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , (("@@ run@@ [@@ " + (@@ ap@@ k@@ .getName@@ ())) + "@@ ]@@ ")); } list@@ en@@ er.@@ test@@ En@@ d@@ ed@@ (@@ id@@ ent@@ if@@ ier@@ , test@@ M@@ et@@ ri@@ c@@ s); list@@ en@@ er.@@ test@@ Run@@ En@@ d@@ ed@@ (@@ 0, run@@ M@@ et@@ ri@@ c@@ s); } }
private com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info create@@ Apk@@ Info@@ (@@ org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Elem@@ ent elem@@ ent@@ ) { java.util.List<@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info.@@ Argument@@ > arg@@ s = new java.util.ArrayList<@@ >(); org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Node@@ Lis@@ t arg@@ s@@ Node@@ Lis@@ t = elem@@ ent.get@@ Element@@ s@@ By@@ T@@ ag@@ Name("@@ arg@@ s@@ "); if ((@@ arg@@ s@@ Node@@ Lis@@ t.get@@ Length@@ ()) > 0) { org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Node@@ Lis@@ t ch@@ ild@@ re@@ n = arg@@ s@@ Node@@ List.@@ item@@ (0@@ )@@ .get@@ Ch@@ ild@@ No@@ des@@ (); for (@@ int j = 0; j < (@@ ch@@ ild@@ r@@ en@@ .get@@ Length@@ ()); j@@ ++) { org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Node arg@@ Node = ch@@ ild@@ r@@ en@@ .@@ item@@ (@@ j@@ ); if ((@@ arg@@ No@@ d@@ e.get@@ Node@@ Type@@ ()) != (@@ org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ No@@ d@@ e.@@ E@@ LE@@ M@@ ENT_@@ N@@ OD@@ E@@ )) { continue@@ ; } org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Elem@@ ent arg@@ Elem@@ ent = ((@@ org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Element@@ ) (@@ arg@@ Node@@ )); args.@@ add@@ (@@ new com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info.@@ Argument@@ (@@ arg@@ Element.@@ get@@ T@@ ag@@ Name@@ (), arg@@ Element.@@ get@@ Text@@ Content@@ ())); } } return new com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ (get@@ Element@@ (@@ elem@@ ent@@ , "@@ name@@ "@@ name@@ ", get@@ Element@@ (@@ elem@@ ent@@ , "@@ file@@ Name@@ "), get@@ Element@@ (@@ elem@@ ent@@ , null@@ ), get@@ Element@@ (@@ elem@@ ent@@ , null@@ ), get@@ Element@@ (@@ elem@@ ent@@ , null@@ ), get@@ Element@@ (@@ elem@@ ent@@ , "@@ lay@@ er@@ Name@@ ", null@@ , null@@ ), arg@@ s@@ ), java.lang.Integ@@ er.@@ parse@@ Int@@ (get@@ Element@@ (@@ elem@@ ent@@ , "@@ run@@ Time@@ ", "@@ 3@@ 0000@@ 0); }
private void start@@ App@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info ap@@ k@@ ) throw@@ s Intent@@ Fil@@ ter.@@ M@@ al@@ for@@ m@@ ed@@ M@@ im@@ e@@ Type@@ Exception, java.io.IOException { android.os.@@ L@@ oo@@ per.@@ pre@@ par@@ e@@ (); m@@ Handle@@ r = new android.os.@@ Handler@@ (); register@@ Recei@@ ver@@ (); m@@ Re@@ port.@@ b@@ e@@ gin@@ (@@ ap@@ k@@ .getName@@ ()); android.util.Log.d@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ device@@ .@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Test.@@ TAG, ("@@ start@@ App@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ device@@ .@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Test.@@ TAG, ("@@ start@@ App@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info.@@ Arg@@ um@@ ent arg@@ um@@ ent : m@@ Apk@@ .get@@ Arg@@ s()) { int@@ ent.@@ put@@ Extra@@ (@@ arg@@ um@@ ent.get@@ Key@@ (), arg@@ um@@ ent.get@@ Value@@ ()); } android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Context@@ ().@@ start@@ Activity@@ (@@ int@@ ent@@ ); m@@ Handler.@@ po@@ st@@ D@@ el@@ ay@@ ed@@ ((@@ ) -@@ > m@@ Hand@@ l@@ er.get@@ L@@ oo@@ per@@ ().@@ qu@@ it@@ (), m@@ Apk@@ .get@@ Run@@ Time@@ ()); android.os.@@ L@@ oo@@ per.@@ lo@@ op@@ (); m@@ Re@@ port.@@ end@@ (); }
private static boolean connect@@ Bluetooth@@ S@@ co@@ Hel@@ per@@ (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set bluetooth@@ He@@ ad@@ set@@ , android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int s@@ co@@ Au@@ dio@@ Mode@@ ) { switch (s@@ co@@ Au@@ dio@@ Mode@@ ) { case com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ R@@ A@@ W : return bluetooth@@ He@@ ad@@ set.@@ connect@@ Au@@ dio@@ (); case com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ V@@ I@@ RT@@ U@@ AL@@ _C@@ AL@@ L : return bluetooth@@ He@@ ad@@ set.@@ start@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ (); case com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ V@@ R : return bluetooth@@ He@@ ad@@ set.@@ start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ device@@ ); default : return false@@ ; } }
@org.junit.Test public void test@@ Con@@ nect@@ Au@@ dio@@ _@@ device@@ Dis@@ connec@@ ted@@ () { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Call@@ State he@@ ad@@ set@@ Call@@ State@@ ; ve@@ r@@ if@@ y@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )); ve@@ r@@ if@@ y@@ (m@@ Object@@ s@@ Factory@@ ).@@ m@@ ake@@ State@@ M@@ ach@@ ine@@ (m@@ Current@@ Device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ L@@ oo@@ per@@ (), m@@ He@@ ad@@ set@@ Service@@ , m@@ Adap@@ ter@@ Service@@ , m@@ Native@@ Interface@@ , m@@ System@@ Interface@@ ); ve@@ r@@ if@@ y@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )).@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T@@ , m@@ Current@@ Device@@ ); when@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )@@ .get@@ Device@@ ()).@@ thenReturn@@ (m@@ Current@@ Device@@ ); when@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ )@@ .get@@ Connection@@ State@@ ()).@@ thenReturn@@ (@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connection@@ State@@ (m@@ Current@@ Device@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connection@@ State@@ (m@@ Current@@ Device@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connection@@ State@@ (m@@ Current@@ Device@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ java.util.Collection@@ s.@@ E@@ M@@ P@@ TY@@ _@@ L@@ IS@@ T@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connec@@ ted@@ De@@ vices@@ ()); m@@ He@@ ad@@ set@@ Service.@@ on@@ Connection@@ State@@ Changed@@ From@@ State@@ M@@ ach@@ ine@@ (m@@ Current@@ Device@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ , Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ False@@ (m@@ He@@ ad@@ set@@ Service.@@ connect@@ Au@@ dio@@ (m@@ Current@@ Device@@ )); ve@@ r@@ if@@ y@@ (m@@ State@@ M@@ ach@@ in@@ es@@ .get@@ (m@@ Current@@ Device@@ ), ne@@ ver@@ ()).@@ send@@ Message@@ (@@ e@@ q@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ C@@ ON@@ N@@ EC@@ T_@@ A@@ U@@ D@@ IO@@ ), an@@ y@@ ()); }
private static boolean dis@@ connect@@ Bluetooth@@ S@@ co@@ Hel@@ per@@ (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set bluetooth@@ He@@ ad@@ set@@ , android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int s@@ co@@ Au@@ dio@@ Mode@@ ) { switch (s@@ co@@ Au@@ dio@@ Mode@@ ) { case com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ R@@ A@@ W : return bluetooth@@ He@@ ad@@ set.@@ dis@@ connect@@ Au@@ dio@@ (); case com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ V@@ I@@ RT@@ U@@ AL@@ L : return bluetooth@@ He@@ ad@@ set.@@ st@@ op@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ (); case com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ V@@ R : return bluetooth@@ He@@ ad@@ set.@@ st@@ op@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ device@@ ); default : return false@@ ; } }
private void phon@@ e@@ State@@ Changed@@ (@@ int n@@ um@@ Ac@@ tive@@ , int n@@ um@@ H@@ eld@@ , int call@@ State@@ , java.lang.String n@@ umber@@ , int typ@@ e) { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (android.@@ M@@ an@@ if@@ est.@@ per@@ mission@@ .@@ M@@ OD@@ I@@ F@@ Y@@ _P@@ H@@ ON@@ E_@@ STA@@ TE@@ , null@@ ); m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .get@@ Thread@@ Handler@@ ().@@ po@@ st@@ ((@@ ) -@@ > { m@@ System@@ Interface@@ .get@@ He@@ ad@@ set@@ Phone@@ State@@ ().@@ set@@ N@@ um@@ Ac@@ tive@@ Call@@ (@@ n@@ um@@ Ac@@ tive@@ ); m@@ System@@ Interface@@ .get@@ He@@ ad@@ set@@ Phone@@ State@@ ().@@ set@@ N@@ um@@ H@@ eld@@ Call@@ (@@ n@@ um@@ H@@ eld@@ ); m@@ System@@ Interface@@ .get@@ He@@ ad@@ set@@ Phone@@ State@@ ().@@ set@@ Call@@ State@@ (c@@ all@@ State@@ ); }); do@@ For@@ Each@@ Connec@@ ted@@ State@@ M@@ ach@@ ine@@ (("@@ N@@ o state@@ M@@ ach@@ in@@ e) -@@ > state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ C@@ AL@@ L@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Call@@ State@@ (@@ n@@ um@@ Ac@@ tive@@ , n@@ um@@ H@@ eld@@ , call@@ State@@ , type@@ ))); }
@org.junit.Test public void test@@ Phone@@ State@@ Chang@@ e@@ _@@ no@@ Device@@ S@@ a@@ ve@@ State@@ () throw@@ s android.os.@@ Remote@@ Exception { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Call@@ State he@@ ad@@ set@@ Call@@ State = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Call@@ State@@ (1@@ , 0, He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ AL@@ L@@ _@@ STATE_@@ AL@@ E@@ RT@@ ING@@ , "@@ 12@@ 3@@ -@@ 4@@ 5@@ 6@@ -@@ 7@@ 8@@ 9@@ 0@@ ", 12@@ 8@@ ); m@@ He@@ ad@@ set@@ Service@@ B@@ ind@@ er.@@ phon@@ e@@ State@@ Changed@@ (@@ he@@ ad@@ set@@ Call@@ State.@@ m@@ N@@ um@@ Ac@@ tive@@ , he@@ ad@@ set@@ Call@@ State.@@ m@@ N@@ um@@ H@@ eld@@ , he@@ ad@@ set@@ Call@@ State.@@ m@@ Call@@ State@@ , he@@ ad@@ set@@ Call@@ State.@@ m@@ Number@@ , he@@ ad@@ set@@ Call@@ State.@@ m@@ Type@@ ); ve@@ r@@ if@@ y@@ (m@@ Phone@@ State@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ ).@@ tim@@ es@@ (1@@ )@@ ).set@@ Call@@ State@@ (@@ he@@ ad@@ set@@ Call@@ State.@@ m@@ Call@@ State@@ ); ve@@ r@@ if@@ y@@ (m@@ Phone@@ State@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ ).@@ tim@@ es@@ (1@@ )@@ ).set@@ N@@ um@@ Ac@@ tive@@ Call@@ (@@ he@@ ad@@ set@@ Call@@ State.@@ m@@ N@@ um@@ Ac@@ tive@@ ); ve@@ r@@ if@@ y@@ (m@@ Phone@@ State@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ ).@@ tim@@ es@@ (1@@ )@@ ).set@@ N@@ um@@ H@@ eld@@ Call@@ (@@ he@@ ad@@ set@@ Call@@ State.@@ m@@ N@@ um@@ H@@ eld@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Phone@@ State@@ ); }
private void dis@@ connect@@ Bluetooth@@ S@@ co@@ (@@ int ex@@ ce@@ p@@ t@@ P@@ id@@ ) { synchronized@@ (m@@ S@@ co@@ Client@@ s) { check@@ S@@ co@@ Au@@ dio@@ State@@ (); if ((@@ (m@@ S@@ co@@ Au@@ dio@@ State@@ ) == (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _@@ STATE_@@ AC@@ TI@@ V@@ E_@@ EX@@ TER@@ N@@ AL@@ )) || ((m@@ S@@ co@@ Au@@ dio@@ State@@ ) == (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _@@ STATE_@@ DE@@ AC@@ TI@@ V@@ AT@@ E_@@ EX@@ T_@@ RE@@ Q@@ ))) { if ((m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ ) != null@@ ) { if ((m@@ Bluetooth@@ He@@ ad@@ set@@ ) != null@@ ) { boolean statu@@ s = ((@@ com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ dis@@ connect@@ Bluetooth@@ S@@ co@@ Hel@@ p@@ er@@ (m@@ Bluetooth@@ He@@ ad@@ set@@ , m@@ Bluetooth@@ He@@ ad@@ set@@ De@@ vice , com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ R@@ A@@ W@@ )) || (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ dis@@ connect@@ Bluetooth@@ S@@ co@@ Hel@@ per@@ (m@@ Bluetooth@@ He@@ ad@@ set@@ , m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ , com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ V@@ I@@ RT@@ U@@ AL@@ _C@@ AL@@ L@@ ))) || (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ dis@@ connect@@ Bluetooth@@ S@@ co@@ Hel@@ per@@ (m@@ Bluetooth@@ He@@ ad@@ set@@ , m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ , com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _MOD@@ E_@@ V@@ R@@ )); if (@@ statu@@ s) { mS@@ co@@ Au@@ dio@@ State = com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _@@ STATE_@@ DE@@ AC@@ TI@@ V@@ AT@@ ING@@ ; } else { clear@@ All@@ S@@ co@@ Client@@ s(@@ ex@@ ce@@ p@@ t@@ P@@ id, false@@ ); mS@@ co@@ Au@@ dio@@ State = com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _@@ STATE_@@ IN@@ AC@@ TI@@ V@@ E@@ ; } } else if ((@@ (m@@ S@@ co@@ Au@@ dio@@ State@@ ) == (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _@@ STATE_@@ AC@@ TI@@ V@@ E_@@ EX@@ TER@@ N@@ AL@@ )) && (get@@ Bluetooth@@ He@@ ad@@ set@@ ())) { mS@@ co@@ Au@@ dio@@ State = com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ S@@ C@@ O@@ _@@ STATE_@@ DE@@ AC@@ TI@@ V@@ AT@@ E_@@ EX@@ T_@@ RE@@ Q@@ ; } } else { clear@@ All@@ S@@ co@@ Client@@ s(@@ ex@@ ce@@ p@@ t@@ P@@ id, true@@ ); } }
private void set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice b@@ t@@ Device@@ ) { if (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ DE@@ B@@ U@@ G_@@ DE@@ V@@ IC@@ E@@ S@@ ) { android.util.Log.d@@ (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ TAG, (("@@ set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ (@@ " + b@@ t@@ Device@@ ) + "@@ )@@ ")); } synchronized@@ (m@@ S@@ co@@ Client@@ s) { final android.@@ bluetooth.@@ Bluetooth@@ De@@ vice pre@@ vi@@ ou@@ s@@ Ac@@ tive@@ De@@ vice = m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ ; if (!(@@ java.util.@@ Object@@ s.@@ equals(@@ b@@ t@@ Device@@ , pre@@ vi@@ ou@@ s@@ Ac@@ tive@@ Device@@ ))) { if (!(@@ handle@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ Chang@@ e@@ (p@@ re@@ vi@@ ou@@ s@@ Ac@@ tive@@ Device@@ , false@@ ))) { android.util.Log.@@ w@@ (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ TAG, ("@@ set@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ : fa@@ ile@@ d to remo@@ v@@ e pre@@ vi@@ ou@@ s de@@ vice " + pre@@ vi@@ ou@@ s@@ Ac@@ tive@@ Device@@ )); } if (!(@@ handle@@ B@@ t@@ S@@ co@@ Ac@@ tive@@ Device@@ Chang@@ e@@ (b@@ t@@ Device@@ , true@@ ))) { android.util.Log.@@ e@@ (com.android.server.@@ au@@ d@@ io.@@ Au@@ dio@@ Service.@@ TAG, ("@@ set@@ B@@ t@@ Device@@ : fa@@ ile@@ d to ad@@ d new de@@ vice " + b@@ t@@ Device@@ )); b@@ t@@ De@@ vice = null@@ ; } m@@ Bluetooth@@ He@@ ad@@ set@@ De@@ vice = b@@ t@@ Device@@ ; if ((m@@ Bluetooth@@ He@@ ad@@ set@@ Device@@ ) == null@@ ) { res@@ et@@ Bluetooth@@ S@@ co@@ (); } } }
@java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { long tim@@ est@@ am@@ p = java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (@@ int@@ ent@@ .get@@ String@@ Ex@@ tr@@ a@@ ("@@ tim@@ est@@ amp@@ "); android.util.Log.d@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ device@@ .@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Test.@@ TAG, ("@@ S@@ D@@ el@@ ay@@ ed@@ : int@@ ent at " + tim@@ est@@ amp@@ )); m@@ Re@@ port.@@ start@@ L@@ oo@@ p@@ (@@ tim@@ est@@ amp@@ ); if (!(m@@ G@@ ot@@ Intent@@ )) { m@@ Handler.@@ po@@ st@@ D@@ el@@ ay@@ ed@@ ((@@ ) -@@ > m@@ Hand@@ l@@ er.get@@ L@@ oo@@ per@@ ().@@ qu@@ it@@ (), 1@@ 0000@@ ); m@@ G@@ ot@@ Int@@ ent = true@@ ; } }
private void register@@ Recei@@ ver@@ () throw@@ s Intent@@ Fil@@ ter.@@ M@@ al@@ for@@ m@@ ed@@ M@@ im@@ e@@ Type@@ Exception { android.content.@@ B@@ roadcast@@ Recei@@ ve@@ r b@@ r = new android.content.@@ B@@ roadcast@@ Recei@@ ver@@ () { @java.lang.Override public void on@@ Recei@@ ve@@ (android.@@ content.@@ Context context@@ , android.content.@@ Int@@ ent int@@ ent@@ ) { long tim@@ est@@ am@@ p = java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (@@ int@@ ent@@ .get@@ String@@ Ex@@ tr@@ a@@ ("@@ tim@@ est@@ amp@@ "@@ ))); android.util.Log.d@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ device@@ .@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Test.@@ TAG, ("@@ register@@ Recei@@ ver@@ () int@@ ent at " + tim@@ est@@ amp@@ )); m@@ Re@@ port.@@ start@@ L@@ oo@@ p@@ (@@ tim@@ est@@ amp@@ ); if (!(m@@ G@@ ot@@ Intent@@ )) { m@@ Handler.@@ po@@ st@@ D@@ el@@ ay@@ ed@@ ((@@ ) -@@ > m@@ Hand@@ l@@ er.get@@ L@@ oo@@ per@@ ().@@ qu@@ it@@ (), 1@@ 0000@@ ); m@@ G@@ ot@@ Int@@ ent = true@@ ; } } }; android.content.@@ Intent@@ Fil@@ ter int@@ ent@@ Fil@@ ter = new android.content.@@ Intent@@ Filter@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ device@@ .@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Test.@@ IN@@ T@@ ENT_@@ AC@@ TION@@ , "@@ text@@ /@@ p@@ l@@ ain@@ "); android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Context@@ ().@@ register@@ Recei@@ ver@@ (b@@ r@@ , int@@ ent@@ Filter@@ ); }
private java.lang.String get@@ C@@ r@@ as@@ h@@ Sec@@ ur@@ ity@@ Des@@ cription@@ () throw@@ s java.io.IOException { java.io.@@ Input@@ Stream input@@ Stream = com.android.@@ v@@ ts.@@ enti@@ t@@ y.@@ Test@@ Su@@ ite@@ Result@@ En@@ ti@@ t@@ y.@@ ser@@ v@@ let@@ Contex@@ t.get@@ Resource@@ As@@ Stream@@ ("@@ /@@ W@@ E@@ B@@ -@@ IN@@ F@@ /@@ bu@@ g@@ an@@ iz@@ er@@ /@@ C@@ r@@ as@@ h@@ Sec@@ ur@@ ity@@ V@@ ul@@ ner@@ abili@@ ty@@ Re@@ port@@ s.@@ t@@ p@@ l@@ "); java.lang.String te@@ mp@@ l@@ ate@@ Des@@ cri@@ pti@@ on = org.apache.@@ common@@ s.@@ io.@@ IO@@ Utils.@@ toString@@ (input@@ Stream@@ , "@@ UT@@ F@@ -@@ 8@@ "); java.util.Map@@ <java.lang.String, java.lang.String> valu@@ es@@ Ma@@ p = new java.util.@@ Hash@@ Map@@ <@@ >(); valu@@ es@@ Map@@ .@@ put@@ ("@@ su@@ ite@@ Build@@ Number@@ ", su@@ ite@@ Build@@ Number@@ ); valu@@ es@@ Map@@ .@@ put@@ ("@@ build@@ Id@@ ", build@@ Id@@ ); valu@@ es@@ Map@@ .@@ put@@ ("@@ ho@@ st@@ Name@@ ", ho@@ st@@ Name); valu@@ es@@ Map@@ .@@ put@@ ("@@ result@@ Path@@ ", result@@ Path@@ ); valu@@ es@@ Map@@ .@@ put@@ ("@@ build@@ V@@ e@@ n@@ do@@ r@@ F@@ ing@@ er@@ p@@ r@@ int@@ ", build@@ V@@ e@@ n@@ do@@ r@@ F@@ ing@@ er@@ p@@ r@@ int@@ ); valu@@ es@@ Map@@ .@@ put@@ ("@@ build@@ System@@ F@@ ing@@ er@@ p@@ r@@ int@@ ", build@@ System@@ F@@ ing@@ er@@ p@@ r@@ int@@ ); org.apache.@@ common@@ s.@@ lang.@@ text.@@ Str@@ Sub@@ s@@ ti@@ t@@ ut@@ or su@@ b = new org.apache.@@ common@@ s.@@ lang.@@ text.@@ Str@@ Sub@@ s@@ ti@@ t@@ ut@@ or@@ (@@ valu@@ es@@ Map@@ ); java.lang.String res@@ ol@@ v@@ ed@@ Des@@ cri@@ pti@@ on = su@@ b.@@ re@@ pla@@ ce@@ (@@ te@@ mp@@ l@@ ate@@ Des@@ cription@@ ); return res@@ ol@@ v@@ ed@@ Des@@ cription@@ ; }
@java.lang.Override public void context@@ In@@ iti@@ aliz@@ ed@@ (@@ javax.@@ ser@@ v@@ let@@ .@@ Ser@@ v@@ let@@ Context@@ Ev@@ ent ser@@ v@@ let@@ Context@@ Event@@ ) { com.goog@@ le@@ cod@@ e.@@ ob@@ ject@@ if@@ y.@@ Ob@@ ject@@ if@@ y@@ Fa@@ ctor@@ y ob@@ ject@@ if@@ y@@ Fa@@ ctor@@ y = com.goog@@ le@@ cod@@ e.@@ ob@@ ject@@ if@@ y.@@ Ob@@ ject@@ if@@ y@@ Service.@@ fa@@ ctory@@ (); ob@@ ject@@ if@@ y@@ Fa@@ ctory.@@ register@@ (com.android.@@ v@@ ts.@@ enti@@ t@@ y.@@ Test@@ Su@@ ite@@ File@@ En@@ ti@@ ty@@ .@@ class@@ ); ob@@ ject@@ if@@ y@@ Fa@@ ctory.@@ register@@ (com.android.@@ v@@ ts.@@ enti@@ t@@ y.@@ Test@@ Su@@ ite@@ Result@@ En@@ ti@@ ty@@ .@@ class@@ ); ob@@ ject@@ if@@ y@@ Fa@@ ctory.@@ b@@ e@@ gin@@ (); com.android.@@ v@@ let@@ y.@@ Test@@ Su@@ ite@@ Result@@ En@@ ti@@ t@@ y.@@ ser@@ v@@ let@@ Context = ser@@ v@@ let@@ Context@@ Ev@@ ent.get@@ Ser@@ v@@ let@@ Context@@ (); com.android.@@ v@@ ts@@ .@@ config.@@ Ob@@ ject@@ if@@ y@@ List@@ en@@ er.@@ logg@@ er.@@ log@@ (java.util.@@ logg@@ ing.@@ Level.@@ IN@@ F@@ O@@ , "@@ In@@ iti@@ aliz@@ ed f@@ ro@@ m context@@ .@@ "); }
public java.lang.String get@@ Bu@@ g@@ an@@ iz@@ er@@ Lin@@ k@@ () throw@@ s java.io.IO@@ Exception, java.net.@@ UR@@ IS@@ yn@@ t@@ a@@ x@@ Exception, org.apache.@@ h@@ tt@@ p.@@ Par@@ se@@ Exception { java.util.List<@@ org.apache.@@ h@@ tt@@ p.@@ Name@@ Value@@ Pair@@ > q@@ param@@ s = new java.util.ArrayList<@@ org.apache.@@ h@@ tt@@ p.@@ Name@@ Value@@ Pair@@ >(); if ((@@ !@@ (@@ this@@ .@@ b@@ oot@@ Su@@ c@@ cess@@ )) || ((@@ (@@ this@@ .@@ p@@ as@@ sed@@ Test@@ C@@ ase@@ Count@@ ) == 0) && (@@ (@@ this@@ .@@ fa@@ ile@@ d@@ Test@@ C@@ ase@@ Count@@ ) == 0@@ ))) { q@@ param@@ s.@@ add@@ (@@ new org.apache.@@ h@@ tt@@ p.@@ mess@@ age.@@ Bas@@ ic@@ Name@@ Value@@ Pair@@ ("@@ comp@@ onent@@ ", "@@ 32@@ 6@@ 4@@ 3@@ 0@@ ")); q@@ param@@ s.@@ add@@ (@@ new org.apache.@@ h@@ tt@@ p.@@ mess@@ age.@@ Bas@@ ic@@ Name@@ Value@@ Pair@@ ("@@ te@@ mp@@ l@@ ate@@ ", "@@ 10@@ 7@@ 3@@ 8@@ 6@@ 5@@ ")); q@@ param@@ s.@@ add@@ (@@ new org.apache.@@ h@@ tt@@ p.@@ mess@@ age.@@ Bas@@ ic@@ Name@@ Value@@ Pair@@ ("@@ des@@ cription@@ ", this@@ .get@@ L@@ ab@@ Inf@@ ra@@ I@@ ss@@ ue@@ Des@@ cription@@ ())); } else { q@@ param@@ s.@@ add@@ (@@ new org.apache.@@ h@@ tt@@ p.@@ mess@@ age.@@ Bas@@ ic@@ Name@@ Value@@ Pair@@ ("@@ comp@@ onent@@ ", "@@ 16@@ 3@@ 8@@ 6@@ 8@@ ")); q@@ param@@ s.@@ add@@ (@@ new org.apache.@@ h@@ tt@@ p.@@ mess@@ age.@@ Bas@@ ic@@ Name@@ Value@@ Pair@@ ("@@ te@@ mp@@ l@@ ate@@ ", "@@ 6@@ 6@@ 6@@ 6@@ 1@@ 00@@ 6@@ ")); q@@ param@@ s.@@ add@@ (@@ new org.apache.@@ h@@ tt@@ p.@@ mess@@ age.@@ Bas@@ ic@@ Name@@ Value@@ Pair@@ ("@@ des@@ cription@@ ", this@@ .get@@ C@@ r@@ as@@ h@@ Sec@@ ur@@ ity@@ Des@@ cription@@ ())); } java.net.@@ UR@@ I ur@@ i = org.apache.@@ h@@ tt@@ p.@@ c@@ li@@ ent.@@ utils.@@ UR@@ I@@ Utils.@@ create@@ UR@@ I@@ ("@@ h@@ tt@@ ps@@ ", "@@ bu@@ g@@ an@@ iz@@ er.@@ cor@@ p.@@ goog@@ le.@@ com@@ ", (-1@@ ), "@@ /@@ is@@ su@@ es@@ /@@ new@@ ", org.apache.@@ h@@ tt@@ p.@@ c@@ li@@ ent.@@ utils.@@ URL@@ En@@ cod@@ ed@@ Uti@@ l@@ s@@ .@@ for@@ mat@@ (@@ q@@ s, "@@ UT@@ F@@ -@@ 8@@ "), null@@ ); return ur@@ i.@@ toString@@ (); }
private java.lang.String get@@ L@@ ab@@ Inf@@ ra@@ I@@ ss@@ ue@@ Des@@ cription@@ () throw@@ s java.io.IOException { java.io.@@ Input@@ Stream input@@ Stream = com.android.@@ v@@ ts.@@ enti@@ t@@ y.@@ Test@@ Su@@ ite@@ Result@@ En@@ ti@@ t@@ y.@@ ser@@ v@@ let@@ Contex@@ t.get@@ Resource@@ As@@ Stream@@ ("@@ /@@ W@@ E@@ B@@ -@@ IN@@ F@@ /@@ bu@@ g@@ an@@ iz@@ er@@ /@@ L@@ ab@@ Inf@@ ra@@ I@@ ss@@ u@@ e.@@ t@@ p@@ l@@ "); java.lang.String te@@ mp@@ l@@ ate@@ Des@@ cri@@ pti@@ on = org.apache.@@ common@@ s.@@ io.@@ IO@@ Utils.@@ toString@@ (input@@ Stream@@ , "@@ UT@@ F@@ -@@ 8@@ "); java.util.Map@@ <java.lang.String, java.lang.String> valu@@ es@@ Ma@@ p = new java.util.@@ Hash@@ Map@@ <@@ >(); valu@@ es@@ Map@@ .@@ put@@ ("@@ su@@ ite@@ Build@@ Number@@ ", su@@ ite@@ Build@@ Number@@ ); valu@@ es@@ Map@@ .@@ put@@ ("@@ build@@ Id@@ ", build@@ Id@@ ); valu@@ es@@ Map@@ .@@ put@@ ("@@ mo@@ d@@ ul@@ es@@ D@@ one@@ ", java.lang.Integ@@ er.@@ toString@@ (m@@ o@@ d@@ ul@@ es@@ D@@ one@@ )); valu@@ es@@ Map@@ .@@ put@@ ("@@ mo@@ d@@ ul@@ es@@ To@@ t@@ al@@ ", java.lang.Integ@@ er.@@ toString@@ (m@@ o@@ d@@ ul@@ es@@ To@@ t@@ al@@ )); valu@@ es@@ Map@@ .@@ put@@ ("@@ ho@@ st@@ Name@@ ", ho@@ st@@ Name); valu@@ es@@ Map@@ .@@ put@@ ("@@ result@@ Path@@ ", result@@ Path@@ ); valu@@ es@@ Map@@ .@@ put@@ ("@@ build@@ V@@ e@@ n@@ do@@ r@@ F@@ ing@@ er@@ p@@ r@@ int@@ ", build@@ V@@ e@@ n@@ do@@ r@@ F@@ ing@@ er@@ p@@ r@@ int@@ ); valu@@ es@@ Map@@ .@@ put@@ ("@@ build@@ System@@ F@@ ing@@ er@@ p@@ r@@ int@@ ", build@@ System@@ F@@ ing@@ er@@ p@@ r@@ int@@ ); org.apache.@@ common@@ s.@@ lang.@@ text.@@ Str@@ Sub@@ s@@ ti@@ t@@ ut@@ or su@@ b = new org.apache.@@ common@@ s.@@ lang.@@ text.@@ Str@@ Sub@@ s@@ ti@@ t@@ ut@@ or@@ (@@ valu@@ es@@ Map@@ ); java.lang.String res@@ ol@@ v@@ ed@@ Des@@ cri@@ pti@@ on = su@@ b.@@ re@@ pla@@ ce@@ (@@ te@@ mp@@ l@@ ate@@ Des@@ cription@@ ); return res@@ ol@@ v@@ ed@@ Des@@ cription@@ ; }
private void co@@ lle@@ ct@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ m@@ et@@ ri@@ c.@@ Device@@ M@@ et@@ ri@@ c@@ Data run@@ Data@@ ) throw@@ s java.lang.@@ Interrup@@ ted@@ Exception { try { if ((@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .@@ m@@ Test@@ Apk@@ ) == null@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ G@@ o@@ t t@@ est ap@@ k in@@ f@@ o provid@@ ed@@ . return@@ ; } java.lang.String c@@ m@@ d@@ ("@@ G@@ o@@ t S@@ ur@@ face@@ F@@ l@@ ing@@ er --@@ lat@@ enc@@ y " + (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .@@ m@@ Test@@ Apk@@ .get@@ Lay@@ er@@ Name@@ ())) + "@@ \"@@ "; java.lang.String[] ra@@ w = m@@ Device@@ .@@ exec@@ ute@@ Sh@@ ell@@ Command@@ (c@@ m@@ d@@ ).@@ s@@ pli@@ t@@ ("@@ \n@@ "); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ d@@ ("@@ Er@@ ror b@@ en@@ ch@@ m@@ ar@@ k st@@ at@@ s for lay@@ er@@ : %@@ s@@ ", com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .@@ m@@ Test@@ Ap@@ k@@ .get@@ Lay@@ er@@ Name@@ ()); if (m@@ Fi@@ rst@@ L@@ oo@@ p@@ ) { if ((@@ raw@@ .@@ l@@ eng@@ th@@ ) == 1@@ ) { return@@ ; } m@@ V@@ S@@ ync@@ Per@@ io@@ d = java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (@@ raw@@ [0@@ ]@@ ); m@@ Fi@@ rst@@ L@@ oo@@ p@@ s = false@@ ; } boolean o@@ ver@@ la@@ p = false@@ ; for (@@ int i = 1; i < (@@ raw@@ .@@ length); i++) { java.lang.String[] par@@ t@@ s = raw@@ [i@@ ]@@ .@@ s@@ pli@@ t@@ ("@@ \@@ t@@ "); if ((@@ par@@ ts.@@ length) == 3@@ ) { if (s@@ amp@@ le@@ (java.lang.@@ Lon@@ g.@@ parse@@ Long@@ (@@ par@@ ts@@ [@@ 2@@ ]@@ ))) { o@@ ver@@ la@@ p = true@@ ; } } if (!@@ o@@ ver@@ l@@ ap@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ G@@ o@@ ver@@ la@@ p wit@@ h pre@@ vi@@ ou@@ s po@@ l@@ l@@ , w@@ e mis@@ se@@ d s@@ om@@ e f@@ ram@@ es@@ !@@ "); } } catch (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception | java.lang.@@ Null@@ P@@ o@@ int@@ er@@ Exception e) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e(@@ e); } } }
@org.junit.Test @com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ annotations.@@ Test@@ Info public void test@@ C@@ r@@ as@@ h@@ W@@ atch@@ er@@ () throw@@ s java.lang.Exception { android.@@ app.@@ In@@ strument@@ ation in@@ strument@@ ation = test@@ F@@ ramework@@ .get@@ In@@ strument@@ ation@@ (); android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ De@@ vice de@@ vice = test@@ F@@ ramework@@ .get@@ Device@@ (); boolean is@@ C@@ r@@ as@@ h@@ Ex@@ amp@@ le@@ In@@ st@@ al@@ le@@ d = com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Package@@ In@@ stall@@ ation@@ Util.@@ is@@ Package@@ In@@ st@@ al@@ le@@ d@@ (in@@ strument@@ ation@@ , "@@ com.@@ ex@@ amp@@ le.@@ android.@@ dis@@ play@@ ing@@ b@@ it@@ m@@ ap@@ s@@ "); if (!@@ is@@ C@@ r@@ as@@ h@@ Ex@@ amp@@ le@@ In@@ st@@ al@@ le@@ d@@ ) { com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Package@@ In@@ stall@@ ation@@ Util.@@ in@@ stall@@ Apk@@ (in@@ strument@@ ation@@ , "@@ C@@ r@@ as@@ h@@ Ex@@ amp@@ le.@@ ap@@ k@@ "); } com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ App@@ L@@ a@@ unch@@ er.@@ la@@ unch@@ (in@@ strument@@ ation@@ , "@@ Display@@ ing@@ Bit@@ m@@ ap@@ s@@ "); device@@ .@@ find@@ Object@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ()@@ .@@ class@@ Name("@@ android.@@ widget@@ .@@ Image@@ View@@ "@@ )).@@ c@@ li@@ ck@@ (); }
@org.junit.Test @com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ annotations.@@ Test@@ Info@@ (@@ id = "@@ 1@@ 4@@ 5@@ 7@@ 8@@ 8@@ 8@@ 2@@ 3@@ ") public void in@@ stall@@ App@@ And@@ L@@ a@@ unch@@ () throw@@ s java.lang.Exception { android.@@ app.@@ In@@ strument@@ ation in@@ strument@@ ation = test@@ F@@ ramework@@ .get@@ In@@ strument@@ ation@@ (); if ((@@ ap@@ i@@ ) == 1@@ 8@@ ) { return@@ ; } boolean is@@ Hel@@ lo@@ Com@@ pu@@ te@@ In@@ st@@ al@@ le@@ d = com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Package@@ In@@ stall@@ ation@@ Util.@@ is@@ Package@@ In@@ st@@ al@@ le@@ d@@ (in@@ strument@@ ation@@ , "@@ com.@@ ex@@ amp@@ le.@@ android.@@ rs.@@ hel@@ lo@@ com@@ pu@@ te@@ "); if (!@@ is@@ Hel@@ lo@@ Com@@ pu@@ te@@ In@@ st@@ al@@ le@@ d@@ ) { com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Package@@ In@@ stall@@ ation@@ Util.@@ in@@ stall@@ Apk@@ (in@@ strument@@ ation@@ , "@@ Hel@@ lo@@ Com@@ pu@@ te@@ .@@ ap@@ k@@ "); } com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ uti@@ l@@ s@@ .@@ App@@ L@@ a@@ unch@@ er.@@ la@@ unch@@ (in@@ strument@@ ation@@ , "@@ Rs@@ Hel@@ lo@@ Com@@ pu@@ te@@ "); assert@@ True@@ (test@@ F@@ ramework@@ .get@@ Device@@ ().@@ find@@ Object@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ resource@@ Id@@ (@@ Res@@ .@@ AP@@ P@@ _@@ I@@ MA@@ G@@ E_@@ V@@ I@@ E@@ W@@ _@@ ID@@ )).@@ exist@@ s()); }
@org.junit.Test @com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ annotations.@@ Test@@ Info@@ (@@ id = "@@ 1@@ 4@@ 5@@ 7@@ 8@@ 8@@ 8@@ 2@@ ") public void test@@ V@@ p@@ n@@ () throw@@ s java.lang.Exception { android.@@ app.@@ In@@ strument@@ ation in@@ strument@@ ation = test@@ F@@ ramework@@ .get@@ In@@ strument@@ ation@@ (); android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ De@@ vice de@@ vice = test@@ F@@ ramework@@ .get@@ Device@@ (); if ((@@ ap@@ i@@ ) == 1@@ 9@@ ) { return@@ ; } boolean is@@ Test@@ V@@ P@@ N@@ In@@ st@@ al@@ le@@ d = com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Package@@ In@@ stall@@ ation@@ Util.@@ is@@ Package@@ In@@ st@@ al@@ le@@ d@@ (in@@ strument@@ ation@@ , "@@ com.@@ test.@@ v@@ p@@ n@@ "); if (!@@ is@@ Test@@ V@@ P@@ N@@ In@@ st@@ al@@ le@@ d@@ ) { com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ Package@@ In@@ stall@@ ation@@ Util.@@ in@@ stall@@ Apk@@ (in@@ strument@@ ation@@ , "@@ F@@ re@@ d@@ V@@ P@@ N@@ .@@ ap@@ k@@ "); } if (!(@@ ve@@ r@@ if@@ y@@ V@@ p@@ n@@ Statu@@ s(@@ device@@ ))) { com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ utils.@@ App@@ L@@ a@@ unch@@ er.@@ la@@ unch@@ (in@@ strument@@ ation@@ , "@@ Test@@ V@@ P@@ N@@ "); device@@ .@@ find@@ Object@@ (@@ new android.@@ support.@@ test.@@ ui@@ a@@ ut@@ o@@ mat@@ or.@@ U@@ i@@ Se@@ le@@ ctor@@ ().@@ resource@@ Id@@ (@@ Res@@ .@@ START@@ _V@@ P@@ N@@ _@@ B@@ UT@@ T@@ ON@@ _RE@@ S@@ )).@@ c@@ li@@ ck@@ And@@ W@@ ait@@ For@@ New@@ W@@ in@@ do@@ w@@ (); new com.android.@@ de@@ v@@ tools.@@ s@@ ystem@@ im@@ age.@@ u@@ it@@ est.@@ w@@ atch@@ er@@ s.@@ V@@ p@@ n@@ Po@@ pu@@ p@@ W@@ atch@@ er(@@ device@@ ).@@ check@@ For@@ Con@@ di@@ tion@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ ("@@ Faile@@ d to fin@@ d the V@@ P@@ N loc@@ k i@@ co@@ n a@@ f@@ ter start@@ ing V@@ P@@ N@@ !@@ ", ve@@ r@@ if@@ y@@ V@@ p@@ n@@ Statu@@ s(@@ device@@ )); } }
private void add@@ Dex@@ Path@@ (java.lang.String dex@@ Path@@ , java.io.File o@@ pti@@ m@@ iz@@ ed@@ Directory@@ , boolean is@@ Tr@@ us@@ ted@@ ) { final java.util.List<@@ java.io.IO@@ Exception@@ > sup@@ p@@ res@@ sed@@ Exception@@ Lis@@ t = new java.util.ArrayList<@@ java.io.IO@@ Exception@@ >(); final d@@ alvi@@ k.@@ system.@@ Dex@@ Path@@ List.@@ Element@@ [] new@@ Element@@ s = d@@ alvi@@ k.@@ system.@@ Dex@@ Path@@ List.@@ m@@ ake@@ Dex@@ Element@@ s(@@ d@@ alvi@@ k.@@ system.@@ Dex@@ Path@@ List.@@ s@@ pli@@ t@@ Dex@@ Path@@ (@@ dex@@ Path@@ ), o@@ pti@@ m@@ iz@@ ed@@ Directory@@ , sup@@ p@@ res@@ sed@@ Exception@@ List@@ , de@@ fin@@ ing@@ Context@@ , is@@ Tr@@ us@@ ted@@ ); if (@@ new@@ Element@@ s != null@@ ) && (@@ (@@ new@@ Element@@ s.@@ length) > 0@@ )) { final d@@ alvi@@ k.@@ system.@@ Dex@@ Path@@ List.@@ Element@@ [] old@@ Element@@ s = dex@@ Element@@ s; dex@@ Element@@ s = new d@@ alvi@@ k.@@ system.@@ Dex@@ Path@@ List.@@ Element@@ [@@ (@@ old@@ Element@@ s.@@ length) + (@@ new@@ Element@@ s.@@ length@@ )@@ ]; java.lang.System.@@ array@@ copy@@ (@@ old@@ Element@@ s, 0, dex@@ Element@@ s, 0, old@@ Element@@ s.@@ length); java.lang.System.@@ array@@ copy@@ (@@ new@@ Element@@ s, 0, dex@@ Element@@ s, old@@ Element@@ s.@@ length@@ , new@@ Element@@ s.@@ length); } if ((@@ sup@@ p@@ res@@ sed@@ Exception@@ List.@@ size@@ ()) > 0) { final java.io.IO@@ Exception@@ [] new@@ Sup@@ p@@ res@@ sed@@ Exception@@ s = sup@@ p@@ res@@ sed@@ Exception@@ List.@@ to@@ Array@@ (@@ new java.io.IO@@ Exception@@ [@@ sup@@ p@@ res@@ sed@@ Exception@@ List.@@ size@@ ()@@ ]@@ ); if ((@@ dex@@ Element@@ s@@ Sup@@ p@@ res@@ sed@@ Exception@@ s) != null@@ ) { final java.io.IO@@ Exception@@ [] old@@ Sup@@ p@@ res@@ sed@@ Exception@@ s = dex@@ Element@@ s@@ Sup@@ p@@ res@@ sed@@ Exception@@ s; final int sup@@ p@@ res@@ sed@@ Exception@@ s@@ L@@ eng@@ th = (@@ old@@ Sup@@ p@@ res@@ sed@@ Exception@@ s.@@ length) + (@@ new@@ Sup@@ p@@ res@@ sed@@ Exception@@ s.@@ length); dex@@ Element@@ s@@ Sup@@ p@@ res@@ sed@@ Exception@@ s = new java.io.IO@@ Exception@@ [@@ sup@@ p@@ res@@ sed@@ Exception@@ s@@ Length@@ ]; java.lang.System.@@ array@@ copy@@ (@@ old@@ Sup@@ p@@ res@@ sed@@ Exception@@ s, 0, dex@@ Element@@ s@@ Sup@@ p@@ res@@ sed@@ Exception@@ s, 0, old@@ Sup@@ p@@ res@@ sed@@ Exception@@ s.@@ length); java.lang.System.@@ array@@ copy@@ (@@ new@@ Sup@@ p@@ res@@ sed@@ Exception@@ s, 0, dex@@ Element@@ s@@ Sup@@ p@@ res@@ sed@@ Exception@@ s, old@@ Sup@@ p@@ res@@ sed@@ Exception@@ s, new@@ Sup@@ p@@ res@@ sed@@ Exception@@ s, new@@ Sup@@ p@@ res@@ sed@@ Exception@@ s, new@@ Sup@@ p@@ res@@ sed@@ Exception@@ s.@@ length); } else { dex@@ Element@@ s@@ Sup@@ p@@ res@@ sed@@ Exception@@ s = new@@ Sup@@ p@@ res@@ sed@@ Exception@@ s; } } }
static native void set@@ Tr@@ us@@ ted@@ (@@ java.lang.Object co@@ ok@@ i@@ e);
private void app@@ ly@@ Up@@ date@@ (@@ final com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ Up@@ date@@ Con@@ fi@@ g config@@ ) { if ((@@ config.@@ get@@ In@@ stall@@ Type@@ ()) == (@@ com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ Up@@ date@@ Config.@@ AB@@ _@@ IN@@ STA@@ L@@ L@@ _@@ TYP@@ E_@@ N@@ ON@@ _S@@ T@@ RE@@ AM@@ ING@@ )) { com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ P@@ ay@@ load@@ S@@ pe@@ c p@@ ay@@ load@@ ; try { p@@ ay@@ lo@@ ad = com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ util.@@ P@@ ay@@ load@@ Spec@@ s@@ .@@ for@@ Non@@ Stream@@ ing@@ (@@ config.@@ get@@ Up@@ date@@ Package@@ File@@ ()); } catch (java.io.IOException e) { android.util.Log.@@ e(@@ com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ ui.@@ M@@ ain@@ Ac@@ tivity.@@ TAG, "@@ Can't cre@@ at@@ ing p@@ ay@@ lo@@ ad s@@ pe@@ c e); android.@@ widget@@ .@@ To@@ ast.@@ m@@ ake@@ Text@@ (@@ this@@ , cre@@ at@@ ing p@@ ay@@ lo@@ ad s@@ pe@@ c To@@ ast.@@ L@@ EN@@ G@@ TH@@ _@@ L@@ ON@@ G@@ ).@@ sho@@ w@@ (); return@@ ; } update@@ En@@ g@@ ine@@ App@@ ly@@ P@@ ay@@ load@@ (p@@ ay@@ load@@ , null@@ ); } else { android.util.Log.d@@ (@@ com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ ui.@@ M@@ ain@@ Ac@@ tivity.@@ TAG, "@@ S@@ ys@@ te@@ m Pre@@ par@@ e@@ Stream@@ ing@@ Ser@@ vice com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ ser@@ vices@@ .@@ Pre@@ par@@ e@@ Stream@@ ing@@ Service.@@ start@@ Service@@ (@@ this@@ , ("@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ ui.@@ Array@@ Array@@ Instance@@ List<@@ >(); ex@@ tra@@ Proper@@ ti@@ es.@@ add@@ (("@@ US@@ ER_@@ A@@ G@@ EN@@ T@@ =@@ " + (@@ com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ ui.@@ M@@ ain@@ Ac@@ tivity.@@ H@@ T@@ T@@ T@@ P@@ _@@ US@@ ER_@@ A@@ G@@ EN@@ T@@ ))); ex@@ tra@@ Proper@@ ti@@ es.@@ add@@ (("@@ A@@ UT@@ H@@ OR@@ I@@ Z@@ AT@@ ION@@ =@@ " + (@@ com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ ui.@@ M@@ ain@@ Ac@@ tivity.@@ H@@ T@@ P@@ ay@@ load@@ (p@@ ay@@ load@@ S@@ pe@@ c@@ , ex@@ tra@@ Proper@@ ti@@ es@@ ); } else { android.util.Log.@@ e(@@ com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ ui.@@ M@@ ain@@ Ac@@ tivity.@@ TAG, ("@@ S@@ ho@@ ul@@ d fa@@ ile@@ d@@ , result cod@@ e is " + code@@ )); android.@@ widget@@ .@@ To@@ ast.@@ m@@ ake@@ Text@@ (@@ this@@ , ("@@ ) fa@@ ile@@ d@@ , result cod@@ e is " + code@@ ), To@@ ast.@@ L@@ EN@@ G@@ TH@@ _@@ L@@ ON@@ G@@ ).@@ sho@@ w@@ (); } }); } } }); }
@java.lang.Override public void run@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ I@@ Test@@ In@@ vo@@ cation@@ List@@ en@@ er list@@ ener@@ ) throw@@ s com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ Device@@ Not@@ A@@ va@@ il@@ able@@ Exception { for (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info ap@@ k : m@@ Apk@@ s) { get@@ Device@@ ().@@ in@@ stall@@ Package@@ (@@ new java.io.File@@ (m@@ Apk@@ Dir@@ , ap@@ k@@ .get@@ File@@ Name@@ ()@@ ), true@@ ); run@@ Device@@ Test@@ s@@ (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ P@@ AC@@ K@@ A@@ G@@ E, com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ test@@ typ@@ e.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ Host@@ s@@ ide@@ Control@@ ler.@@ C@@ LA@@ SS@@ , (("@@ run@@ [@@ " + (@@ ap@@ k.@@ name@@ ())) + "@@ ]@@ ")); get@@ Device@@ ().@@ un@@ in@@ stall@@ Package@@ (@@ ap@@ k@@ .get@@ Package@@ Name@@ ()); } }
private void on@@ En@@ d@@ (com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ m@@ et@@ ri@@ c.@@ Device@@ M@@ et@@ ri@@ c@@ Data run@@ Data@@ ) { if ((@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .@@ m@@ Device@@ Result@@ Data@@ ) != null@@ ) { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ (("@@ S@@ ch@@ m tim@@ est@@ amp@@ : " + (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .@@ m@@ Device@@ Result@@ Data@@ .get@@ Event@@ s(@@ 0@@ )@@ .get@@ Tim@@ est@@ amp@@ ()))); } try (@@ java.io.@@ Buffer@@ ed@@ Wri@@ ter output@@ File = new java.io.@@ Buffer@@ ed@@ Wri@@ ter@@ (@@ new java.io.File@@ Wri@@ ter@@ ("@@ /@@ t@@ mp@@ /@@ 0@@ /@@ g@@ rap@@ h@@ ic@@ s@@ -@@ b@@ en@@ ch@@ m@@ ark@@ /@@ out.@@ t@@ xt@@ ", (!(m@@ Fi@@ rst@@ Run@@ ))@@ ))) { output@@ File@@ .@@ write@@ ((@@ ("@@ P@@ le@@ as@@ e Per@@ io@@ d@@ : " + (m@@ V@@ S@@ ync@@ Per@@ io@@ d@@ )) + "@@ \n@@ ")); long load@@ Tim@@ e = 0@@ L@@ ; if ((@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .@@ m@@ Device@@ Result@@ Data@@ .get@@ Event@@ s@@ Count@@ ()) > 0) { load@@ Tim@@ e = (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ m@@ et@@ ri@@ c.@@ G@@ rap@@ h@@ ic@@ s@@ B@@ en@@ ch@@ m@@ ark@@ M@@ et@@ ri@@ c@@ Co@@ lle@@ ctor@@ .@@ m@@ Device@@ Result@@ Data@@ .get@@ Event@@ s(@@ 0@@ )@@ .get@@ Tim@@ est@@ amp@@ ()) * 1@@ 0000@@ 00@@ ; } else { com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ log.@@ Log@@ Util.@@ C@@ Log.@@ e@@ ("@@ D@@ et@@ ri@@ c@@ ar@@ t b@@ en@@ ch@@ m@@ ar@@ k int@@ ent g@@ i@@ ve@@ n "); } process@@ Tim@@ est@@ am@@ ps@@ S@@ li@@ ce@@ (@@ 0, load@@ Time@@ , m@@ E@@ l@@ ap@@ sed@@ Tim@@ es@@ .get@@ ((@@ (m@@ E@@ l@@ ap@@ sed@@ Tim@@ es.@@ size@@ ()) - 1@@ )), output@@ File@@ , run@@ Data@@ ); } catch (java.io.IOException e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } m@@ Fi@@ rst@@ R@@ u@@ n = false@@ ; }
private void process@@ Tim@@ est@@ am@@ ps@@ S@@ li@@ ce@@ (@@ int run@@ Index@@ , long start@@ Tim@@ est@@ amp@@ , long end@@ Tim@@ est@@ amp@@ , java.io.@@ Buffer@@ ed@@ Wri@@ ter output@@ File@@ , com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ device@@ .@@ m@@ et@@ ri@@ c.@@ Device@@ M@@ et@@ ri@@ c@@ Data run@@ Data@@ ) throw@@ s java.io.IOException { do@@ u@@ b@@ le min@@ F@@ P@@ S = java.lang.@@ D@@ ou@@ b@@ le.@@ MA@@ X@@ _V@@ AL@@ UE@@ ; do@@ u@@ b@@ le max@@ F@@ P@@ S = 0.@@ 0; long to@@ t@@ al@@ Time@@ N@@ s = 0; output@@ File@@ .@@ write@@ ((@@ (("@@ S@@ ys@@ te@@ m r@@ u@@ n " + run@@ Index@@ ) + " at@@ : ") + start@@ Tim@@ est@@ amp@@ ) + " n@@ s@@ ")); output@@ File@@ .@@ write@@ ("@@ Tim@@ e P@@ er Sec@@ on@@ d long pre@@ v@@ Tim@@ e = 0@@ L@@ ; int n@@ um@@ Of@@ Tim@@ est@@ amp@@ s = 0; for (@@ long tim@@ e : m@@ E@@ l@@ ap@@ sed@@ Tim@@ es) { if (@@ tim@@ e < start@@ Tim@@ est@@ amp@@ ) { continue@@ ; } if (@@ tim@@ e > end@@ Tim@@ est@@ amp@@ ) { break@@ ; } if (p@@ re@@ v@@ Tim@@ e == 0) { pre@@ v@@ Tim@@ e = time@@ ; } long time@@ D@@ if@@ f = tim@@ e - pre@@ v@@ Time@@ ; pre@@ v@@ Tim@@ e = time@@ ; do@@ u@@ b@@ le current@@ F@@ P@@ S = 1.@@ 0@@ E@@ 9 / time@@ D@@ if@@ f@@ ; min@@ F@@ P@@ S = (@@ current@@ F@@ P@@ S < min@@ F@@ P@@ S@@ ) ? current@@ F@@ P@@ S@@ ; max@@ F@@ P@@ S@@ ; max@@ F@@ P@@ S = (@@ current@@ F@@ P@@ S@@ ) ? current@@ F@@ P@@ S : max@@ F@@ P@@ S@@ ; to@@ t@@ al@@ Time@@ N@@ s +@@ = time@@ D@@ if@@ f@@ ; n@@ um@@ Of@@ Tim@@ est@@ am@@ ps@@ ++@@ ; output@@ File@@ .@@ write@@ ((((@@ time@@ D@@ if@@ f + m@@ s ") + current@@ F@@ P@@ S@@ ) + " f@@ p@@ s }@@ ")); output@@ File@@ .@@ write@@ ("@@ \n@@ "); do@@ u@@ b@@ le av@@ g@@ F@@ P@@ S = (@@ n@@ um@@ Of@@ Tim@@ est@@ amp@@ s * 1.@@ 0@@ E@@ 9@@ ) / to@@ t@@ al@@ Time@@ N@@ s; output@@ File@@ .@@ write@@ ((@@ ("@@ F@@ P@@ S@@ : F@@ P@@ S@@ =@@ " + min@@ F@@ P@@ S@@ ) + "@@ \n@@ ")); output@@ File@@ .@@ write@@ ((@@ ("@@ \n@@ ")); output@@ File@@ .@@ write@@ ((@@ ("@@ \n@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@ =@@
private com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info create@@ Apk@@ Info@@ (@@ org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Elem@@ ent elem@@ ent@@ ) { java.util.List<@@ com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info.@@ Argument@@ > arg@@ s = new java.util.ArrayList<@@ >(); org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Node@@ Lis@@ t arg@@ s@@ Node@@ Lis@@ t = elem@@ ent.get@@ Element@@ s@@ By@@ T@@ ag@@ Name("@@ arg@@ s@@ "); if ((@@ arg@@ s@@ Node@@ Lis@@ t.get@@ Length@@ ()) > 0) { org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Node@@ Lis@@ t ch@@ ild@@ re@@ n = arg@@ s@@ Node@@ List.@@ item@@ (0@@ )@@ .get@@ Ch@@ ild@@ No@@ des@@ (); for (@@ int j = 0; j < (@@ ch@@ ild@@ r@@ en@@ .get@@ Length@@ ()); j@@ ++) { org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Node arg@@ Node = ch@@ ild@@ r@@ en@@ .@@ item@@ (@@ j@@ ); if ((@@ arg@@ No@@ d@@ e.get@@ Node@@ Type@@ ()) != (@@ org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ No@@ d@@ e.@@ E@@ LE@@ M@@ ENT_@@ N@@ OD@@ E@@ )) { continue@@ ; } org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Elem@@ ent arg@@ Elem@@ ent = ((@@ org.@@ w@@ 3@@ c@@ .@@ do@@ m.@@ Element@@ ) (@@ arg@@ Node@@ )); java.lang.String type = arg@@ Element.@@ get@@ Attribute@@ ("@@ type@@ "); if ((@@ type == null@@ ) || (@@ typ@@ e.@@ isEmpty@@ ())) { type = "@@ S@@ TR@@ ING@@ "; } args.@@ add@@ (@@ new com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info.@@ Argument@@ (@@ arg@@ Element.@@ get@@ T@@ ag@@ Name@@ (), arg@@ Element.@@ get@@ Text@@ Content@@ (), Apk@@ Info.@@ Arg@@ um@@ ent.@@ Type.@@ value@@ Of@@ (@@ typ@@ e.@@ to@@ Up@@ per@@ C@@ ase@@ (java.util.@@ Loc@@ ale@@ .get@@ Default@@ ())); } } return new com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ Apk@@ Info@@ (get@@ Element@@ (@@ elem@@ ent@@ , "@@ name@@ ", null@@ ), get@@ Element@@ (@@ elem@@ ent@@ , "@@ file@@ Name@@ ", null@@ ), get@@ Element@@ (@@ elem@@ ent@@ , "@@ package@@ Name@@ ", null@@ ), get@@ Element@@ (@@ elem@@ ent@@ , "@@ lay@@ er@@ Name@@ ", null@@ ), arg@@ s, java.lang.Integ@@ er.@@ parse@@ Int@@ (get@@ Element@@ (@@ elem@@ ent@@ , "@@ run@@ Time@@ ", "@@ 1@@ 0000@@ "@@ ))); }
private static boolean ve@@ r@@ if@@ y@@ Package@@ Comp@@ ati@@ b@@ ili@@ ty@@ (@@ java.io.File file@@ ) { try { return android.os.@@ Re@@ co@@ ver@@ y@@ System.@@ ve@@ r@@ if@@ y@@ Package@@ Comp@@ ati@@ b@@ ili@@ ty@@ (file@@ ); } catch (java.io.IOException e) { android.util.Log.@@ w@@ (@@ com.@@ ex@@ amp@@ le.@@ android.@@ s@@ ystem@@ up@@ dat@@ er@@ s@@ amp@@ le.@@ ser@@ vices@@ .@@ Pre@@ par@@ e@@ Stream@@ ing@@ Service.@@ TAG, "@@ Faile@@ d to ve@@ r@@ if@@ y package comp@@ ati@@ b@@ ili@@ ty@@ ", e); return false@@ ; } }
private static void re@@ pe@@ at@@ Con@@ st@@ Method@@ Type@@ 1@@ (java.lang.@@ invok@@ e.@@ Method@@ Type expected) { java.lang.System.out.@@ p@@ r@@ int@@ ("@@ re@@ pe@@ at@@ Con@@ st@@ Method@@ Type@@ 1@@ ("@@ ); java.lang.System.out.@@ p@@ r@@ int@@ (@@ expected@@ ); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ )@@ "); for (@@ int i = 0; i < 12@@ 00@@ 0; ++@@ i@@ ) { java.lang.@@ invok@@ e.@@ Method@@ Type act@@ u@@ al = Main.@@ method@@ Type@@ 0@@ (); if (!(@@ Main.@@ method@@ Type@@ 1@@ ().@@ equals(@@ expected@@ ))) { java.lang.System.out.@@ p@@ r@@ int@@ ("@@ Ex@@ pec@@ ted@@ : "); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (@@ expected@@ ); java.lang.System.out.@@ p@@ r@@ int@@ ("@@ A@@ ct@@ ual@@ : "); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (@@ act@@ ual@@ ); Main.@@ un@@ re@@ ach@@ able@@ (); } }
private static void re@@ pe@@ at@@ Con@@ st@@ Method@@ Type@@ 0@@ (java.lang.@@ invok@@ e.@@ Method@@ Type expected) { java.lang.System.out.@@ p@@ r@@ int@@ ("@@ re@@ pe@@ at@@ Con@@ st@@ Method@@ Type@@ 0@@ ("@@ ); java.lang.System.out.@@ p@@ r@@ int@@ (@@ expected@@ ); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ )@@ "); for (@@ int i = 0; i < 12@@ 00@@ 0; ++@@ i@@ ) { java.lang.@@ invok@@ e.@@ Method@@ Type act@@ u@@ al = Main.@@ method@@ Type@@ 0@@ (); assert@@ Equal@@ s(@@ expected@@ , act@@ ual@@ ); } }
private static void re@@ pe@@ at@@ Con@@ st@@ Method@@ Type@@ 1@@ (java.lang.@@ invok@@ e.@@ Method@@ Type expected) { java.lang.System.out.@@ p@@ r@@ int@@ ("@@ re@@ pe@@ at@@ Con@@ st@@ Method@@ Type@@ 1@@ ("@@ ); java.lang.System.out.@@ p@@ r@@ int@@ (@@ expected@@ ); java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ )@@ "); for (@@ int i = 0; i < 12@@ 00@@ 0; ++@@ i@@ ) { java.lang.@@ invok@@ e.@@ Method@@ Type act@@ u@@ al = Main.@@ method@@ Type@@ 1@@ (); assert@@ Equal@@ s(@@ expected@@ , act@@ ual@@ ); } }
private static void re@@ pe@@ at@@ Con@@ st@@ Method@@ Handle@@ () throw@@ s java.lang.@@ Throw@@ able { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ ("@@ re@@ pe@@ at@@ Con@@ st@@ Method@@ Handle@@ ()@@ "); java.lang.String[] value@@ s = new java.lang.String@@ []{ "@@ A@@ ", "@@ B@@ ", "@@ C@@ " }; for (@@ int i = 0; i < 12@@ 00@@ 0; ++@@ i@@ ) { java.lang.String valu@@ e = valu@@ es@@ [@@ (@@ i % (@@ valu@@ es.@@ length@@ ))@@ ]; Main.@@ set@@ Name@@ Handle@@ ().@@ invok@@ e(@@ value@@ ); java.lang.String act@@ u@@ al = ((@@ java.lang.String@@ ) (@@ M@@ ain@@ .getName@@ Handle@@ ().@@ invok@@ e@@ Ex@@ act@@ ())); M@@ ain@@ .@@ assert@@ Equal@@ s(@@ value@@ , act@@ ual@@ ); M@@ ain@@ .@@ assert@@ Equal@@ s(@@ value@@ , Main.@@ name@@ ); } }
@@@ android.@@ annotation.@@ NonNull com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a get@@ Current@@ S@@ on@@ g@@ Info@@ () { final com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er play@@ er = get@@ Ac@@ tive@@ Play@@ er@@ (); if (p@@ lay@@ er == null@@ ) return com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Util.@@ e@@ mpty@@ _@@ data@@ (); if (!(@@ get@@ Current@@ Media@@ Id@@ ().@@ equal@@ s("@@ "@@ ))) { for (com.android.bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ at@@ a dat@@ a : get@@ No@@ w@@ Play@@ ing@@ List@@ ()) { if (@@ data@@ .@@ m@@ edia@@ Id@@ .@@ equals(@@ get@@ Current@@ Media@@ Id@@ ())) { return data@@ .@@ c@@ lon@@ e@@ (); } } } return play@@ er.get@@ Current@@ M@@ et@@ ad@@ ata@@ (); }
public static void main@@ (@@ java.lang.String[] param@@ s) throw@@ s java.lang.Exception { if ((((@@ param@@ s.@@ length) == 0) || ("@@ --@@ hel@@ p@@ ".@@ equals(@@ param@@ s@@ [0@@ ]@@ ))) || ("@@ -@@ h@@ ".@@ equals(@@ param@@ s@@ [0@@ ]@@ ))) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ p@@ r@@ int@@ U@@ s@@ age@@ (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ H@@ E@@ L@@ P@@ _P@@ A@@ G@@ E_@@ G@@ EN@@ ER@@ AL@@ ); return@@ ; } else if ("@@ --@@ version@@ ".@@ equals(@@ param@@ s@@ [0@@ ]@@ )) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ V@@ E@@ RS@@ ION@@ ); return@@ ; } java.lang.String c@@ m@@ d = param@@ s@@ [0@@ ]; try { if ("@@ sign@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ sign@@ (@@ java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ param@@ s, 1, param@@ s.@@ length@@ )); return@@ ; } else if ("@@ ve@@ r@@ if@@ y@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ ve@@ r@@ if@@ y@@ (@@ java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ param@@ s, 1, param@@ s.@@ length@@ )); return@@ ; } else if ("@@ ro@@ t@@ ate@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ ro@@ t@@ ate@@ (@@ java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ param@@ s, 1, param@@ s.@@ length@@ )); return@@ ; } else if ("@@ hel@@ p@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ p@@ r@@ int@@ U@@ s@@ age@@ (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ H@@ E@@ L@@ P@@ _P@@ A@@ G@@ E_@@ G@@ EN@@ ER@@ AL@@ ); return@@ ; } else if ("@@ version@@ ".@@ equals(@@ c@@ m@@ d@@ )) { java.lang.System.out.@@ p@@ r@@ int@@ ln@@ (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ V@@ E@@ RS@@ ION@@ ); return@@ ; } else if ("@@ dum@@ p@@ -@@ h@@ int@@ s@@ ".@@ equals(@@ c@@ m@@ d@@ )) { com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ dum@@ p@@ H@@ int@@ s(@@ java.util.Arrays.@@ copy@@ Of@@ R@@ ang@@ e(@@ param@@ s, 1, param@@ s.@@ length@@ )); } else { throw new com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ Parameter@@ Exception@@ ((@@ ("@@ --@@ hel@@ p for sup@@ por@@ ted command@@ s@@ "); } } catch (com.android.@@ ap@@ k@@ sign@@ er.@@ Apk@@ S@@ ig@@ ner@@ T@@ oo@@ l.@@ Parameter@@ Exception | com.android.@@ ap@@ k@@ sign@@ er.@@ Option@@ s@@ Par@@ se@@ r e) { java.lang.System.@@ er@@ r.@@ p@@ r@@ int@@ ln@@ (@@ e.get@@ Message@@ ()); java.lang.System.@@ ex@@ it@@ (1@@ ); return@@ ; } } }
@java.lang.Override public void run() { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { m@@ Di@@ al@@ ing@@ Out@@ Time@@ out@@ Ev@@ ent = null@@ ; do@@ For@@ State@@ M@@ ach@@ ine@@ (m@@ Di@@ al@@ ing@@ Out@@ Device@@ , ("@@ N@@ M@@ ach@@ in@@ e) -@@ > state@@ M@@ ach@@ in@@ e.@@ send@@ Message@@ (@@ He@@ ad@@ set@@ State@@ M@@ ach@@ in@@ e.@@ DI@@ AL@@ ING@@ _@@ O@@ U@@ T_@@ RE@@ S@@ UL@@ T@@ , 0, m@@ Di@@ al@@ ing@@ Out@@ Device@@ )); m@@ System@@ Interface@@ .get@@ Au@@ dio@@ Manager@@ ().@@ set@@ Parameter@@ s("@@ A@@ 2@@ d@@ p@@ Su@@ s@@ pend@@ ed@@ =@@ false@@ "); } }
boolean di@@ al@@ Out@@ go@@ ing@@ Call@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice f@@ rom@@ Device@@ , java.lang.String di@@ al@@ Number@@ ) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { if (!(@@ is@@ On@@ State@@ M@@ ach@@ ine@@ Thread@@ ())) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ S@@ ho@@ ul@@ d m@@ us@@ t b@@ e cal@@ le@@ d f@@ ro@@ m st@@ ate m@@ ach@@ in@@ e th@@ re@@ ad "); return false@@ ; } if (m@@ Di@@ al@@ ing@@ Out@@ Time@@ out@@ Event@@ ) != null@@ ) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ S@@ ho@@ ul@@ d al@@ read@@ y di@@ al@@ ing b@@ y " + (m@@ Di@@ al@@ ing@@ Out@@ Time@@ out@@ Event@@ ))); return false@@ ; } if (is@@ V@@ ir@@ t@@ ual@@ Call@@ St@@ ar@@ ted@@ ()) { if (!(@@ st@@ op@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ ())) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ Tr@@ ack@@ ing fa@@ ile@@ d to st@@ o@@ p curr@@ ent vi@@ r@@ t@@ u@@ al cal@@ l return false@@ ; } } if (!(@@ set@@ Ac@@ tive@@ Device@@ (f@@ rom@@ Device@@ ))) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ S@@ ho@@ ul@@ d fa@@ ile@@ d to set ac@@ tiv@@ e de@@ vice to " + f@@ rom@@ Device@@ )); return false@@ ; } m@@ System@@ Interface@@ .get@@ Au@@ dio@@ Manager@@ ().@@ set@@ Parameter@@ s("@@ A@@ 2@@ d@@ p@@ Su@@ s@@ pend@@ ed@@ =@@ true@@ "); android.content.@@ Int@@ ent int@@ ent = new android.content.@@ Intent@@ (android.@@ content.@@ Int@@ ent.@@ AC@@ TION@@ _C@@ AL@@ L@@ _P@@ R@@ I@@ V@@ IL@@ E@@ GE@@ D@@ , android.net.@@ U@@ ri@@ .@@ f@@ rom@@ Par@@ t@@ s(@@ Phone@@ Ac@@ coun@@ t.@@ S@@ CH@@ E@@ M@@ E_@@ TE@@ L@@ , di@@ al@@ Number@@ , null@@ )); int@@ ent.@@ set@@ Flag@@ s(@@ Int@@ ent.@@ F@@ LA@@ G_@@ AC@@ TI@@ V@@ I@@ TY@@ _N@@ E@@ W@@ _@@ TA@@ S@@ K@@ ); start@@ Activity@@ (@@ int@@ ent@@ ); m@@ Di@@ al@@ ing@@ Out@@ Time@@ out@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ Di@@ al@@ ing@@ Out@@ Time@@ out@@ Event@@ (f@@ rom@@ Device@@ ); m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .get@@ Thread@@ Handler@@ ().@@ po@@ st@@ D@@ el@@ ay@@ ed@@ (m@@ Di@@ al@@ ing@@ Out@@ Time@@ out@@ Event@@ , com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ DI@@ AL@@ ING@@ _@@ O@@ U@@ T_@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ ); return true@@ ; } }
@@@ com.@@ android@@ .@@ int@@ er@@ n@@ al.@@ annotations.@@ Vi@@ si@@ ble@@ For@@ Test@@ ing public void on@@ Au@@ dio@@ State@@ Changed@@ From@@ State@@ M@@ ach@@ ine@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ , int f@@ rom@@ State@@ , int to@@ State@@ ) { synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { if ((@@ f@@ rom@@ State != (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { } if ((@@ f@@ rom@@ State != (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) && (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ ))) { if ((@@ ((m@@ Ac@@ tive@@ Device@@ ) != null@@ ) && (!(m@@ Ac@@ tive@@ Device@@ .@@ equals(@@ device@@ )@@ ))) && (s@@ ho@@ ul@@ d@@ Per@@ si@@ st@@ Au@@ dio@@ ())) { if (!(@@ connect@@ Au@@ dio@@ (m@@ Ac@@ tive@@ Device@@ ))) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ((((@@ ("@@ Ac@@ tiv@@ e fa@@ ile@@ d to connec@@ t to new " + de@@ vice ") + (m@@ Ac@@ tive@@ Device@@ )) + " a@@ f@@ ter ") + device@@ ) + " is dis@@ connec@@ ted f@@ ro@@ m S@@ C@@ O }@@ ")); } } } if (@@ to@@ State == (android.@@ bluetooth.@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IO@@ _@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ )) { m@@ System@@ Interface@@ .get@@ Au@@ dio@@ Manager@@ ().@@ set@@ Parameter@@ s("@@ A@@ 2@@ d@@ p@@ Su@@ s@@ pend@@ ed@@ =@@ false@@ "); } }
private boolean start@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ V@@ o@@ i@@ ce@@ Call@@ () { e@@ n@@ for@@ ce@@ Call@@ ing@@ Or@@ S@@ el@@ f@@ Permission@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ IN@@ _P@@ ER@@ M@@ , "@@ N@@ e@@ ed B@@ L@@ UE@@ TO@@ O@@ TH@@ _@@ AD@@ M@@ I@@ N per@@ mission@@ mission@@ "); android.util.Log.@@ i@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, ("@@ start@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ Call@@ St@@ ar@@ ted " + (com.android.bluetooth.@@ Utils.@@ get@@ U@@ id@@ P@@ id@@ String@@ ()))); synchronized@@ (m@@ State@@ M@@ ach@@ in@@ es) { if (is@@ Au@@ dio@@ On@@ ()) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ start@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ Call@@ "); return false@@ ; } if ((m@@ Ac@@ tive@@ Device@@ ) == null@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ start@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ Call@@ St@@ ar@@ ted@@ "); return false@@ ; } boolean in@@ Tele@@ com@@ Cal@@ l = (!(m@@ V@@ ir@@ t@@ ual@@ Call@@ St@@ ar@@ ted@@ )) && ((m@@ System@@ Interface@@ .is@@ In@@ Call@@ ()) || (m@@ System@@ Interface@@ .is@@ R@@ ing@@ ())); if (in@@ Tele@@ com@@ Call@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ start@@ S@@ co@@ m cal@@ l in pro@@ g@@ res@@ s return false@@ ; } if (m@@ V@@ ir@@ t@@ ual@@ Call@@ St@@ ar@@ ted@@ ) { android.util.Log.@@ w@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service.@@ TAG, "@@ S@@ co@@ U@@ sing@@ V@@ ir@@ t@@ ual@@ Call@@ St@@ ar@@ ted = true@@ ; m@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ .get@@ Thread@@ Handler@@ ().@@ po@@ st@@ ((@@ ) -@@ > m@@ System@@ Interface@@ .get@@ Au@@ dio@@ Manager@@ ().@@ set@@ Parameter@@ s("@@ A@@ 2@@ d@@ p@@ Su@@ s@@ pend@@ ed@@ =@@ true@@ ")); phon@@ e@@ State@@ Changed@@ (@@ 0, 0, 0, He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ AL@@ L@@ _@@ STATE_@@ DI@@ AL@@ ING@@ , "@@ ", 0, true@@ ); phon@@ e@@ State@@ Changed@@ (@@ 0, 0, 0, He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ AL@@ L@@ _@@ STATE_@@ ID@@ LE@@ , "@@ ", 0, true@@ ); return true@@ ; } }
@java.lang.Override public void handle@@ Message@@ (android.os.@@ Mess@@ age ms@@ g@@ ) { if ((m@@ s@@ g.@@ wh@@ at@@ ) != (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ Time@@ out@@ Handler.@@ M@@ S@@ G_@@ TI@@ ME@@ O@@ UT@@ )) { android.util.Log.@@ w@@ t@@ f@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ handle@@ Message@@ : mess@@ age on time@@ out hand@@ ler@@ : " + (m@@ s@@ g.@@ wh@@ at@@ ))); return@@ ; } android.util.Log.@@ e@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ : " + (m@@ Package@@ Name@@ ))); android.util.Log.@@ e@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ go@@ t Curr@@ ent M@@ et@@ ad@@ ata@@ : " + (m@@ Package@@ Name@@ ))); android.util.Log.@@ e@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ Curr@@ ent Play@@ state@@ : " + (get@@ Play@@ back@@ State@@ ()))); java.util.List<@@ com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ M@@ et@@ ad@@ ata@@ > current@@ _@@ q@@ ue@@ u@@ e = com.android.@@ bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ("@@ m@@ edia@@ Contro@@ lle@@ r for (@@ int i = 0; i < (m@@ P@@ end@@ ing@@ ue@@ u@@ e.@@ size@@ ()); i++) { android.util.Log.@@ e@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, ((@@ ("@@ handle@@ Message@@ : Q@@ ue@@ ue@@ Item@@ (@@ " + i@@ ) + "@@ : ") + current@@ _@@ q@@ ue@@ u@@ e.get@@ (i@@ )))); } if (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ s@@ Test@@ ing@@ ) android.util.Log.@@ w@@ t@@ f@@ Stack@@ (com.android.bluetooth.@@ av@@ rc@@ p.@@ Media@@ Play@@ er@@ W@@ r@@ app@@ er.@@ TAG, "@@ m@@ edia@@ Contro@@ lle@@ r the st@@ ac@@ k "); }
private int build@@ () { mS@@ ph@@ er@@ e@@ Ver@@ ti@@ ce@@ s = java.nio.Byte@@ Buff@@ er.@@ al@@ loc@@ ate@@ Dire@@ ct@@ ((((@@ ((m@@ N@@ um@@ Se@@ g@@ ment@@ s) * ((m@@ N@@ um@@ Se@@ g@@ ment@@ s) + 1@@ )) * (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ ex@@ amp@@ le.@@ S@@ ph@@ er@@ e.@@ C@@ O@@ OR@@ D@@ S@@ _P@@ ER@@ _V@@ E@@ RT@@ EX@@ )) * (com.android.@@ g@@ rap@@ h@@ ic@@ s.@@ b@@ en@@ ch@@ m@@ ark@@ .@@ ex@@ amp@@ le.@@ S@@ ph@@ er@@ e.@@ V@@ E@@ RT@@ EX@@ _S@@ TR@@ ID@@ E@@ )) * 2@@ )).@@ or@@ der@@ (@@ java.nio.Byte@@ Or@@ der@@ .@@ native@@ Or@@ der@@ ()).@@ as@@ Float@@ Buffer@@ (); m@@ In@@ di@@ ce@@ s = java.nio.Byte@@ Buff@@ er.@@ al@@ loc@@ ate@@ Dire@@ ct@@ ((((@@ (m@@ N@@ um@@ Se@@ g@@ ment@@ s) * ((m@@ N@@ um@@ Se@@ g@@ ment@@ s) + 2@@ )) * 2@@ ) * 4@@ )).@@ or@@ der@@ (@@ java.nio.Byte@@ Or@@ der@@ .@@ native@@ Or@@ der@@ ()).@@ as@@ Int@@ Buffer@@ (); do@@ u@@ b@@ le d@@ Th@@ et@@ a = (@@ 2 * (java.lang.@@ Math.@@ P@@ I@@ )) / (m@@ N@@ um@@ Se@@ g@@ ment@@ s); do@@ u@@ b@@ le d@@ Ph@@ i = (java.lang.@@ Math.@@ P@@ I@@ ) / (m@@ N@@ um@@ Se@@ g@@ ment@@ s); int p@@ o@@ int@@ s = 0; boolean fi@@ rst@@ L@@ oo@@ p = true@@ ; do@@ u@@ b@@ le e@@ p@@ si@@ lo@@ n = 1.@@ 0@@ E@@ -1@@ 0; for (@@ do@@ u@@ b@@ le ph@@ i = -@@ (java.lang.@@ Math.@@ P@@ I@@ ); ph@@ i <@@ = ("@@ <@@ = ( " + e@@ ps@@ il@@ on@@ ); ph@@ i +@@ = d@@ Ph@@ i@@ ) {@@ {@@ " for (@@ do@@ u@@ b@@ le th@@ et@@ a = 0.@@ 0; th@@ et@@ a < ((@@ (java.lang.@@ Math.@@ P@@ I@@ ) * 2@@ ) - e@@ ps@@ il@@ on@@ ); th@@ et@@ a +@@ = d@@ Th@@ eta@@ ) { mS@@ ph@@ er@@ e@@ Ver@@ ti@@ ces@@ .@@ put@@ ((@@ (m@@ R@@ ad@@ i@@ u@@ s) * (java.lang.@@ Math.@@ s@@ in@@ (@@ ph@@ i@@ ))) * (java.lang.@@ Math.@@ co@@ s(@@ th@@ eta@@ ))@@ ))); mS@@ ph@@ er@@ e@@ Ver@@ ti@@ ces@@ .@@ put@@ ((@@ (@@ float@@ ) ((@@ (m@@ R@@ ad@@ i@@ u@@ s) * (java.lang.@@ Math.@@ s@@ in@@ (@@ ph@@ i@@ ))) * (java.lang.@@ Math.@@ s@@ in@@ (@@ th@@ eta@@ ))@@ ))); mS@@ ph@@ er@@ e@@ Ver@@ ti@@ ces@@ .@@ put@@ ((@@ (@@ float@@ ) ((m@@ R@@ ad@@ i@@ u@@ s) * (java.lang.@@ Math.@@ co@@ s(@@ ph@@ i@@ ))@@ ))); if (!@@ fi@@ rst@@ L@@ oo@@ p@@ ) { m@@ In@@ di@@ ces@@ .@@ put@@ ((@@ p@@ o@@ int@@ s - (m@@ N@@ um@@ Se@@ g@@ ment@@ s@@ )); m@@ In@@ di@@ ces@@ .@@ put@@ (p@@ o@@ int@@ s); m@@ N@@ um@@ In@@ di@@ ce@@ s +@@ = 2@@ ; } p@@ o@@ int@@ s@@ ++@@ ; } if (!@@ fi@@ rst@@ L@@ oo@@ p@@ ) { m@@ In@@ di@@ ces@@ .@@ put@@ ((@@ p@@ o@@ int@@ s - (@@ 2 * (m@@ N@@ um@@ Se@@ g@@ ment@@ s@@ Se@@ g@@ ment@@ s@@ ))); m@@ In@@ di@@ ces@@ .@@ put@@ (@@ p@@ o@@ int@@ s@@ )); m@@ N@@ um@@ In@@ di@@ ces@@ .@@ put@@ (@@ 0); m@@ N@@ um@@ In@@ di@@ ces@@ .@@ put@@ (@@ new java.lang.String@@ Builder@@ ); } return false@@ ; }
private void w@@ i@@ re@@ d@@ Au@@ dio@@ Device@@ Connec@@ ted@@ () { if (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ TAG, "@@ w@@ i@@ re@@ d@@ Au@@ dio@@ Device@@ Connec@@ ted@@ "); } set@@ A@@ 2@@ d@@ p@@ Ac@@ tive@@ Device@@ (@@ null@@ ); set@@ H@@ f@@ p@@ Ac@@ tive@@ Device@@ (@@ null@@ ); set@@ He@@ ar@@ ing@@ A@@ id@@ Ac@@ tive@@ Device@@ (@@ null@@ ); }
@java.lang.Override public void on@@ Au@@ dio@@ De@@ vices@@ Add@@ ed@@ (android.@@ media.@@ Au@@ dio@@ Device@@ Info@@ [] add@@ ed@@ De@@ vices@@ ) { if (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ TAG, "@@ on@@ Au@@ dio@@ De@@ vices@@ Add@@ ed@@ "); } boolean has@@ Add@@ ed@@ W@@ i@@ re@@ d@@ De@@ vice = false@@ ; for (android.@@ media.@@ Au@@ dio@@ Device@@ Info device@@ Info : add@@ ed@@ De@@ vices@@ ) { if (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ TAG, ((@@ ("@@ Au@@ di@@ o de@@ vice add@@ ed@@ : " + (@@ device@@ Info@@ .get@@ Pro@@ duct@@ Name@@ ())) + " type@@ : ") + (@@ device@@ Info@@ .get@@ Type@@ ()))); } if (is@@ W@@ i@@ re@@ d@@ He@@ ad@@ set@@ (@@ device@@ Info@@ )) { has@@ Add@@ ed@@ W@@ i@@ re@@ d@@ De@@ vice = true@@ ; break@@ ; } } if (@@ has@@ Add@@ ed@@ W@@ i@@ re@@ d@@ Device@@ ) { w@@ i@@ re@@ d@@ Au@@ dio@@ Device@@ Connec@@ ted@@ (); } }
private boolean is@@ W@@ i@@ re@@ d@@ He@@ ad@@ set@@ (android.@@ media.@@ Au@@ dio@@ Device@@ Info device@@ Info@@ ) { switch (@@ device@@ Info@@ .get@@ Type@@ ()) { case android.@@ media.@@ Au@@ dio@@ Device@@ Info.@@ TYP@@ E_@@ WI@@ RE@@ D_@@ H@@ E@@ AD@@ SE@@ T : case android.@@ media.@@ Au@@ dio@@ Device@@ Info.@@ TYP@@ E_@@ WI@@ RE@@ D_@@ H@@ E@@ AD@@ P@@ H@@ ON@@ E@@ S : case android.@@ media.@@ Au@@ dio@@ Device@@ Info.@@ TYP@@ E_@@ US@@ B@@ _@@ H@@ E@@ AD@@ SE@@ T : return true@@ ; default : break@@ ; } return false@@ ; }
@java.lang.Override public void on@@ Au@@ dio@@ De@@ vices@@ Remo@@ v@@ ed@@ (android.@@ media.@@ Au@@ dio@@ Device@@ Info@@ [] remo@@ v@@ ed@@ De@@ vices@@ ) { if (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ TAG, "@@ on@@ Au@@ dio@@ De@@ vices@@ Remo@@ v@@ ed@@ "); } boolean w@@ as@@ W@@ i@@ re@@ d@@ Au@@ dio@@ Device@@ Remo@@ ve@@ d = false@@ ; for (android.@@ media.@@ Au@@ dio@@ Device@@ Info device@@ Info : remo@@ v@@ ed@@ De@@ vices@@ ) { if (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ TAG, ((@@ ("@@ Au@@ di@@ o de@@ vice remo@@ v@@ ed@@ : " + (@@ device@@ Info@@ .get@@ Pro@@ duct@@ Name@@ ())) + " type@@ : ") + (@@ device@@ Info@@ .get@@ Type@@ ()))); } if (is@@ W@@ i@@ re@@ d@@ He@@ ad@@ set@@ (@@ device@@ Info@@ )) { w@@ as@@ W@@ i@@ re@@ d@@ Au@@ dio@@ Device@@ Remo@@ ve@@ d = true@@ ; break@@ ; } } if (!@@ w@@ as@@ W@@ i@@ re@@ d@@ Au@@ dio@@ Device@@ Remo@@ v@@ ed@@ ) { return@@ ; } boolean has@@ Connec@@ ted@@ W@@ i@@ re@@ d@@ De@@ vice = false@@ ; android.@@ media.@@ Au@@ dio@@ Device@@ Info@@ [] device@@ s = m@@ Au@@ dio@@ Manager.@@ get@@ De@@ vices@@ (@@ Au@@ dio@@ Manager.@@ GE@@ T_@@ DE@@ V@@ IC@@ E@@ S_@@ O@@ UT@@ PUT@@ S@@ ); for (android.@@ media.@@ Au@@ dio@@ Device@@ Info device@@ Info : de@@ vices@@ ) { if (is@@ W@@ i@@ re@@ d@@ He@@ ad@@ set@@ (@@ device@@ Info@@ )) { if (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ D@@ B@@ G) { android.util.Log.d@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager.@@ TAG, ((@@ ("@@ F@@ o@@ un@@ d connec@@ ted w@@ i@@ re@@ d device@@ : " + (@@ device@@ Info@@ .get@@ Pro@@ duct@@ Name@@ ())) + " type@@ : ") + (@@ device@@ Info@@ .get@@ Type@@ ()))); } has@@ Connec@@ ted@@ W@@ i@@ re@@ d@@ De@@ vice = true@@ ; break@@ ; } } if (!@@ has@@ Connec@@ ted@@ W@@ i@@ re@@ d@@ Device@@ ) { all@@ W@@ i@@ re@@ d@@ Au@@ dio@@ De@@ vices@@ Dis@@ connec@@ ted@@ (); }
@org.junit.Test public void w@@ i@@ re@@ d@@ Au@@ dio@@ Device@@ Connec@@ ted@@ _@@ set@@ All@@ Ac@@ tive@@ De@@ vices@@ Null@@ () { a@@ 2@@ d@@ p@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ ); he@@ ad@@ set@@ Connec@@ ted@@ (m@@ A@@ 2@@ d@@ p@@ He@@ ad@@ set@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ A@@ 2@@ d@@ p@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ A@@ 2@@ d@@ p@@ Device@@ ); ve@@ r@@ if@@ y@@ (m@@ He@@ ad@@ set@@ Service@@ , time@@ out@@ (com.android.bluetooth.@@ b@@ t@@ service@@ .@@ Ac@@ tive@@ Device@@ Manager@@ Test.@@ TI@@ ME@@ O@@ UT@@ _M@@ S@@ )@@ ).set@@ Ac@@ tive@@ Device@@ (m@@ He@@ ad@@ set@@ Device@@ ); }
public void test@@ Play@@ S@@ m@@ all@@ Buffer@@ () throw@@ s java.lang.Exception { final java.lang.String TEST_@@ N@@ AM@@ E = "@@ test@@ Play@@ S@@ m@@ all@@ Buffer@@ "; android.@@ media.@@ cts.@@ Au@@ dio@@ Tr@@ ack@@ L@@ at@@ enc@@ y@@ Test.@@ Test@@ Set@@ u@@ p set@@ u@@ p = new android.@@ media.@@ cts.@@ Au@@ dio@@ Tr@@ ack@@ L@@ at@@ enc@@ y@@ Test.@@ Test@@ Set@@ up@@ (); android.@@ media.@@ Au@@ dio@@ Tr@@ ac@@ k tr@@ ac@@ k = set@@ up@@ .@@ create@@ Tr@@ ack@@ (); int f@@ ram@@ es@@ Wri@@ tt@@ en@@ To@@ t@@ al = set@@ up@@ .@@ p@@ ri@@ me@@ Au@@ dio@@ Tr@@ ack@@ (@@ TEST_@@ N@@ AM@@ E); int position@@ 1 = tr@@ ack@@ .get@@ Play@@ back@@ He@@ ad@@ Position@@ (); assert@@ Equal@@ s@@ ((@@ TEST_@@ N@@ AM@@ E + in@@ iti@@ al po@@ si@@ tion 0, position@@ 1); tr@@ ack@@ .@@ play@@ (); final long MA@@ X@@ _@@ TI@@ M@@ E_@@ TO@@ _@@ START@@ _M@@ SE@@ C = 5@@ 00@@ ; long g@@ i@@ ve@@ Up@@ A@@ t = (java.lang.@@ System.@@ current@@ Time@@ Milli@@ s()) + MA@@ X@@ _@@ TI@@ M@@ E_@@ TO@@ _@@ START@@ _M@@ S@@ EC@@ ; int position@@ 2 = tr@@ ack@@ .get@@ Play@@ back@@ He@@ ad@@ Position@@ (); while ((@@ position@@ 1 == position@@ 2@@ ) && ((@@ java.lang.System.@@ current@@ Time@@ Milli@@ s()) < g@@ i@@ ve@@ Up@@ At@@ )) { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (@@ 2@@ 0); position@@ 2 = tr@@ ack@@ .get@@ Play@@ back@@ He@@ ad@@ Position@@ (); } assert@@ True@@ (((@@ TEST_@@ N@@ AM@@ E + d@@ id i@@ t start@@ ?@@ , po@@ si@@ tion a@@ f@@ ter st@@ ar@@ t = ") + position@@ 2@@ ), (@@ position@@ 2 > position@@ 1@@ )); final int se@@ ver@@ al = 4@@ ; java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ ((((@@ se@@ ver@@ al * f@@ ram@@ es@@ Wri@@ tt@@ en@@ To@@ t@@ al@@ ) * (android.@@ media.@@ cts.@@ Au@@ dio@@ Tr@@ ack@@ L@@ at@@ enc@@ y@@ Test.@@ M@@ IL@@ L@@ IS@@ _P@@ ER@@ _S@@ EC@@ ON@@ D@@ )) / (@@ set@@ up@@ .@@ s@@ amp@@ le@@ R@@ ate@@ ))); position@@ 2 = tr@@ ack@@ .get@@ Play@@ back@@ He@@ ad@@ Position@@ (); assert@@ Equal@@ s@@ ((@@ TEST_@@ N@@ AM@@ E + d@@ id i@@ t pla@@ y al@@ l the data@@ ? f@@ ram@@ es@@ Wri@@ tt@@ en@@ To@@ t@@ al@@ , position@@ 2@@ ); tr@@ ack@@ .@@ re@@ le@@ ase@@ (); }
@@@ android.@@ test.@@ su@@ ite@@ builder.@@ annotation.@@ M@@ edi@@ um@@ Test public void test@@ Op@@ port@@ un@@ is@@ tic@@ Scan@@ () { if (!(@@ is@@ B@@ le@@ Sup@@ ported@@ ())) { return@@ ; } android.@@ bluetooth.@@ le.@@ Scan@@ Setting@@ s op@@ port@@ un@@ is@@ tic@@ Scan@@ Setting@@ s = new android.@@ bluetooth.@@ le.@@ Scan@@ Setting@@ s.@@ Builder@@ ().@@ set@@ Scan@@ Mode@@ (@@ Scan@@ Setting@@ s.@@ S@@ C@@ AN@@ _MOD@@ E_@@ O@@ P@@ P@@ O@@ RT@@ UN@@ IS@@ T@@ IC@@ ).@@ build@@ (); android.@@ bluetooth.@@ cts.@@ Bluetooth@@ Le@@ Scan@@ Test.@@ B@@ le@@ Scan@@ Call@@ b@@ ac@@ k e@@ mpty@@ Scan@@ Call@@ b@@ ac@@ k = new android.@@ bluetooth.@@ cts.@@ Bluetooth@@ Le@@ Scan@@ Test.@@ B@@ le@@ Scan@@ Callback@@ (); m@@ Scan@@ ner.@@ start@@ Scan@@ (java.util.@@ Collection@@ s.@@ <@@ android.@@ bluetooth.@@ le.@@ Scan@@ Filter@@ >@@ e@@ mpty@@ List@@ (), op@@ port@@ un@@ is@@ tic@@ Scan@@ Setting@@ s, e@@ mpty@@ Scan@@ Callback@@ ); s@@ le@@ e@@ p@@ (android.@@ bluetooth.@@ cts.@@ Bluetooth@@ Le@@ Scan@@ Test.@@ S@@ C@@ AN@@ _@@ D@@ UR@@ AT@@ ION@@ _M@@ IL@@ L@@ IS@@ ); assert@@ True@@ (@@ e@@ mpty@@ Scan@@ Callback@@ .get@@ Scan@@ Results@@ ().@@ isEmpty@@ ()); android.@@ bluetooth.@@ cts.@@ Bluetooth@@ Le@@ Scan@@ Test.@@ B@@ le@@ Scan@@ Call@@ b@@ ac@@ k reg@@ ul@@ ar@@ Scan@@ Call@@ b@@ ac@@ k = new android.@@ bluetooth.@@ cts.@@ Bluetooth@@ Le@@ Scan@@ Test.@@ B@@ le@@ Scan@@ Callback@@ (); android.@@ bluetooth.@@ le.@@ Scan@@ Setting@@ s reg@@ ul@@ ar@@ Scan@@ Setting@@ s = new android.@@ bluetooth.@@ le.@@ Scan@@ Setting@@ s.@@ Builder@@ ().@@ set@@ Scan@@ Mode@@ (@@ Scan@@ Setting@@ s.@@ S@@ C@@ AN@@ _MOD@@ E_@@ LO@@ W@@ _@@ L@@ AT@@ EN@@ C@@ Y@@ ).@@ build@@ (); java.util.List<@@ android.@@ bluetooth.@@ le.@@ Scan@@ Filter@@ > fil@@ ter@@ s = new java.util.ArrayList<@@ >(); android.@@ bluetooth.@@ le.@@ Scan@@ Fil@@ ter fil@@ ter = create@@ Scan@@ Filter@@ (); if (@@ fil@@ ter != null@@ ) { fil@@ ter@@ s.@@ add(@@ fil@@ ter@@ ); } else { android.util.Log.d@@ (android.@@ bluetooth.@@ cts.@@ Bluetooth@@ Le@@ Scan@@ Test.@@ TAG, "@@ st@@ ar@@ Scan@@ n@@ 't ap@@ pro@@ p@@ ri@@ ate fil@@ ter c@@ an b@@ e set "); } m@@ Scan@@ ner.@@ start@@ Scan@@ (@@ fil@@ ter@@ s, reg@@ ul@@ ar@@ Scan@@ Setting@@ s, reg@@ ul@@ ar@@ Scan@@ Callback@@ ); s@@ le@@ e@@ p@@ (android.@@ bluetooth.@@ cts.@@ Bluetooth@@ Le@@ Scan@@ Test.@@ S@@ C@@ AN@@ _@@ D@@ UR@@ AT@@ ION@@ _M@@ IL@@ L@@ IS@@ ); assert@@ True@@ ("@@ S@@ c@@ an result@@ s sho@@ ul@@ d@@ n@@ 't b@@ e e@@ mp@@ t@@ y (!(@@ e@@ mpty@@ Scan@@ Callback@@ .get@@ Scan@@ Results@@ ().@@ isEmpty@@ ()))); m@@ Scan@@ ner.@@ st@@ op@@ Scan@@ (@@ reg@@ ul@@ ar@@ Scan@@ Callback@@ ); s@@ le@@ e@@ p@@ (1@@ 00@@ 0); e@@ mpty@@ Scan@@ Callback@@ .@@ clear@@ (); s@@ le@@ e@@ p@@ (android.@@ bluetooth.@@ cts.@@ Bluetooth@@ Le@@ Scan@@ Test.@@ S@@ C@@ AN@@ _@@ D@@ UR@@ AT@@ ION@@ _M@@ IL@@ L@@ IS@@ ); assert@@ True@@ ("@@ S@@ C@@ AN@@ _@@ D@@ UR@@ AT@@ ION@@ _M@@ IL@@ L@@ IS@@ ); assert@@ True@@ ("@@ S@@ C@@ AN@@ _@@ D@@ UR@@ AT@@ ION@@ s sc@@ an sho@@ ul@@ d@@ n@@ an sho@@ ul@@ d@@ n@@ 't h@@ av@@ e sc@@ an result@@ s@@ ", e@@ mpty@@ Scan@@ Callback@@ .get@@ Scan@@ Results@@ ().@@ isEmpty@@ ()); }
private java.util.List<@@ android.content.@@ p@@ m.@@ Permission@@ Info@@ > load@@ Ex@@ pec@@ ted@@ Permission@@ s@@ (@@ int android@@ M@@ an@@ if@@ est@@ Id@@ ) throw@@ s java.lang.Exception { java.util.List<@@ android.content.@@ p@@ m.@@ Permission@@ Info@@ > per@@ mission@@ s = new java.util.ArrayList<@@ >(); try (@@ java.io.@@ Input@@ Stream in = get@@ Context@@ ().get@@ Res@@ ources@@ ().@@ open@@ R@@ aw@@ Resource@@ (android.os.@@ )) { org.@@ xml@@ p@@ ul@@ l.@@ v@@ 1.@@ Xml@@ P@@ ull@@ Par@@ se@@ r parse@@ r = android.util.@@ Xml@@ .@@ new@@ P@@ ull@@ Par@@ ser@@ (); par@@ ser.@@ set@@ Input@@ (in, null@@ ); final int ou@@ ter@@ De@@ p@@ th = par@@ s@@ er.get@@ De@@ p@@ th@@ (); int type@@ ; while (((@@ type = par@@ ser.@@ next@@ ()) != (@@ org.@@ xml@@ p@@ ul@@ l.@@ v@@ 1.@@ Xml@@ P@@ ull@@ Par@@ ser.@@ END@@ _@@ D@@ O@@ C@@ U@@ M@@ EN@@ T@@ )) && ((@@ type != (@@ org.@@ xml@@ p@@ ul@@ l.@@ v@@ 1.@@ Xml@@ P@@ ull@@ Par@@ ser.@@ END@@ _@@ TAG@@ )) || ((@@ par@@ s@@ er.get@@ De@@ p@@ th@@ ()) > ou@@ ter@@ De@@ p@@ th@@ ))) { if ((@@ type == (@@ org.@@ xml@@ p@@ ul@@ l.@@ v@@ 1.@@ Xml@@ P@@ ull@@ Par@@ ser.@@ END@@ _@@ TAG@@ )) || (@@ type == (@@ org.@@ xml@@ p@@ ul@@ l.@@ v@@ 1.@@ Xml@@ P@@ ull@@ Par@@ ser.@@ TE@@ X@@ T@@ ))) { continue@@ ; } if (android.@@ per@@ mission@@ 2.@@ cts.@@ Permission@@ Po@@ lic@@ y@@ Test.@@ TAG@@ _P@@ ER@@ M@@ I@@ SS@@ ION@@ .@@ equals(@@ par@@ s@@ er.get@@ Name@@ ())) { android.content.@@ p@@ m.@@ Permission@@ Info per@@ mission@@ Info = new android.content.@@ p@@ m.@@ Permission@@ Info@@ (); per@@ mission@@ Info.@@ name = par@@ s@@ er.get@@ Attribute@@ Value@@ (@@ null@@ , android.@@ per@@ mission@@ 2.@@ cts.@@ Permission@@ Po@@ lic@@ y@@ Test.@@ AT@@ TR@@ _N@@ AM@@ E); per@@ mission@@ Info.@@ g@@ ro@@ u@@ p = par@@ s@@ er.get@@ Attribute@@ Value@@ (@@ null@@ , android.@@ per@@ mission@@ 2.@@ cts.@@ Permission@@ Po@@ lic@@ y@@ Test.@@ AT@@ TR@@ _P@@ ER@@ M@@ I@@ SS@@ ION@@ _@@ G@@ RO@@ U@@ P@@ ); per@@ mission@@ Info.@@ Info.@@ Info.@@ Info.@@ Info.@@ tion@@ Leve@@ l = android.@@ per@@ mission@@ 2.@@ cts.@@ Permission@@ Po@@ lic@@ y@@ Test.@@ parse@@ Pro@@ tec@@ tion@@ Level@@ (@@ par@@ s@@ er.get@@ Attribute@@ Value@@ (@@ null@@ , android.@@ per@@ mission@@ 2.@@ cts.@@ Permission@@ Po@@ lic@@ y@@ Test.@@ AT@@ TR@@ _P@@ RO@@ TE@@ C@@ TION@@ _@@ LE@@ V@@ E@@ L@@ )); per@@ mission@@ s.@@ add(@@ per@@ mission@@ Info@@ ); } else { android.util.Log.@@ e@@ (android.@@ per@@ mission@@ 2.@@ cts.@@ Permission@@ Po@@ lic@@ y@@ Test.@@ LO@@ G_@@ TAG, ("@@ N@@ o t@@ a@@ g " + (@@ par@@ s@@ er.get@@ Name@@ ()))); } } } return per@@ mission@@ s; }
@org.junit.Test public void test@@ Un@@ b@@ ond@@ Device@@ _@@ dis@@ connect@@ B@@ e@@ for@@ e@@ Un@@ b@@ ond@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = get@@ Test@@ Device@@ (@@ 0); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (m@@ He@@ ad@@ set@@ Service.@@ connect@@ (@@ de@@ vice )); ve@@ r@@ if@@ y@@ (m@@ Object@@ s@@ Factory@@ ).@@ m@@ ake@@ State@@ M@@ ach@@ ine@@ (@@ de@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ L@@ oo@@ per@@ (), m@@ He@@ ad@@ set@@ Service@@ , m@@ Adap@@ ter@@ Service@@ , m@@ Native@@ Interface@@ , m@@ System@@ Interface@@ ); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ connect@@ H@@ f@@ p@@ (@@ device@@ ); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent connec@@ ted@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , de@@ vices@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ connec@@ ted@@ Event@@ ); try { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ ); } catch (java.lang.@@ Interrup@@ ted@@ Exception excepti@@ on@@ ) { org.@@ junit.@@ Assert.@@ fail@@ ("@@ dis@@ connec@@ ted st@@ ate } do@@ Return@@ (@@ Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E@@ ).@@ when@@ (m@@ Adap@@ ter@@ Service@@ )@@ .get@@ B@@ ond@@ State@@ (@@ e@@ q@@ (@@ de@@ vice de@@ vice != null@@ )); android.content.@@ Int@@ ent un@@ b@@ ond@@ Int@@ ent = new android.content.@@ Intent@@ (android.@@ bluetooth.@@ Bluetooth@@ Device@@ .@@ AC@@ TION@@ _@@ B@@ ON@@ D_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ ); un@@ b@@ ond@@ Int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ B@@ ON@@ D_@@ STA@@ TE@@ , Bluetooth@@ Device@@ .@@ B@@ ON@@ D_@@ N@@ ON@@ E); un@@ b@@ ond@@ Int@@ ent.@@ put@@ Extra@@ (@@ Bluetooth@@ Device@@ .@@ EX@@ TR@@ A@@ _@@ DE@@ V@@ IC@@ E, de@@ vices@@ ); android.@@ support.@@ test.@@ In@@ strument@@ ation@@ Reg@@ is@@ try@@ .get@@ Target@@ Context@@ ().@@ send@@ B@@ roadcast@@ (@@ un@@ b@@ ond@@ Intent@@ ); ve@@ r@@ if@@ y@@ (m@@ Object@@ s@@ Factory@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ d@@ est@@ ro@@ y@@ State@@ M@@ ach@@ ine@@ (m@@ State@@ M@@ ach@@ ine@@ Arg@@ um@@ ent.@@ c@@ ap@@ t@@ ure@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s@@ (@@ de@@ , m@@ State@@ M@@ ach@@ ine@@ Arg@@ um@@ ent.get@@ Value@@ ().get@@ Device@@ ()); }
private void start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ From@@ H@@ f@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent start@@ V@@ r@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ V@@ R@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ V@@ R@@ _@@ STATE_@@ START@@ E@@ D@@ , device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ start@@ V@@ r@@ Event@@ ); ve@@ r@@ if@@ y@@ (m@@ System@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ ac@@ tiv@@ ate@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (); m@@ He@@ ad@@ set@@ Service.@@ start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ device@@ ); ve@@ r@@ if@@ y@@ (m@@ Au@@ dio@@ Manager@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )@@ ).set@@ Parameter@@ s("@@ A@@ 2@@ d@@ p@@ Su@@ s@@ pend@@ ed@@ =@@ true@@ "); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ at@@ Response@@ Code@@ (@@ device@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ AT_@@ RE@@ S@@ P@@ ON@@ S@@ E_@@ O@@ K@@ , 0); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ connect@@ Au@@ dio@@ (@@ device@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Native@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )); }
@org.junit.Test public void test@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ _S@@ ing@@ le@@ H@@ f@@ In@@ iti@@ ated@@ Su@@ c@@ cess@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = get@@ Test@@ Device@@ (@@ 0); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ From@@ H@@ f@@ (@@ device@@ ); }
@org.junit.Test public void test@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ _S@@ ing@@ le@@ H@@ f@@ In@@ iti@@ ated@@ Faile@@ d@@ To@@ Ac@@ tiv@@ ate@@ () { when@@ (m@@ System@@ Interface@@ .@@ ac@@ tiv@@ ate@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ ()).@@ thenReturn@@ (@@ false@@ ); android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = get@@ Test@@ Device@@ (@@ 0); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent start@@ V@@ r@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ V@@ R@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ V@@ R@@ _@@ STATE_@@ START@@ E@@ D@@ , device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ start@@ V@@ r@@ Event@@ ); ve@@ r@@ if@@ y@@ (m@@ System@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ ac@@ tiv@@ ate@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ at@@ Response@@ Code@@ (@@ device@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ AT_@@ RE@@ S@@ P@@ ON@@ S@@ E_@@ ER@@ RO@@ R@@ , 0); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ System@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Native@@ Interface@@ ); ve@@ r@@ if@@ y@@ Z@@ er@@ o@@ Inter@@ action@@ s@@ (m@@ Au@@ dio@@ Manager@@ ); }
@org.junit.Test public void test@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ _S@@ ing@@ le@@ H@@ f@@ In@@ iti@@ ated@@ Time@@ out@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = get@@ Test@@ Device@@ (@@ 0); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent start@@ V@@ r@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ V@@ R@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ V@@ R@@ _@@ STATE_@@ START@@ E@@ D@@ , device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ start@@ V@@ r@@ Event@@ ); ve@@ r@@ if@@ y@@ (m@@ System@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ ac@@ tiv@@ ate@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ START@@ _V@@ R@@ _@@ TI@@ ME@@ O@@ U@@ T_@@ W@@ A@@ I@@ T@@ _M@@ IL@@ L@@ IS@@ )).@@ at@@ Response@@ Code@@ (@@ device@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ AT_@@ RE@@ S@@ P@@ ON@@ S@@ E_@@ ER@@ RO@@ R@@ , 0); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ System@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Native@@ Interface@@ ); ve@@ r@@ if@@ y@@ Z@@ er@@ o@@ Inter@@ action@@ s@@ (m@@ Au@@ dio@@ Manager@@ ); }
@org.junit.Test public void test@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ _M@@ ulti@@ A@@ g@@ In@@ iti@@ ated@@ Su@@ c@@ cess@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ A = get@@ Test@@ Device@@ (@@ 0); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ A@@ ); android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ B = get@@ Test@@ Device@@ (1@@ ); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ B@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ A@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (m@@ He@@ ad@@ set@@ Service@@ .set@@ Ac@@ tive@@ Device@@ (@@ device@@ B@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ B@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ From@@ A@@ g@@ (); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent start@@ V@@ r@@ Event@@ A = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ V@@ R@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ V@@ R@@ _@@ STATE_@@ START@@ E@@ D@@ , device@@ A@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ start@@ V@@ r@@ Event@@ A@@ ); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ at@@ Response@@ Code@@ (@@ device@@ A@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ RE@@ S@@ P@@ ON@@ S@@ E_@@ ER@@ RO@@ R@@ , 0); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Native@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )); }
@org.junit.Test public void test@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ _S@@ ing@@ le@@ A@@ g@@ St@@ op@@ Su@@ c@@ cess@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = get@@ Test@@ Device@@ (@@ 0); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ From@@ A@@ g@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (m@@ He@@ ad@@ set@@ Service.@@ st@@ op@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ device@@ )); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ st@@ op@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ device@@ ); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ dis@@ connect@@ Au@@ dio@@ (@@ device@@ ); ve@@ r@@ if@@ y@@ (m@@ Au@@ dio@@ Manager@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )@@ ).set@@ Parameter@@ s("@@ A@@ 2@@ d@@ p@@ Su@@ s@@ pend@@ ed@@ =@@ false@@ "); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Native@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )); }
@org.junit.Test public void test@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ _S@@ ing@@ le@@ A@@ g@@ In@@ iti@@ ated@@ Su@@ c@@ cess@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = get@@ Test@@ Device@@ (@@ 0); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ From@@ A@@ g@@ (); }
private void start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ From@@ A@@ g@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ (); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ NotNull@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (m@@ He@@ ad@@ set@@ Service.@@ start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ device@@ )); ve@@ r@@ if@@ y@@ (m@@ Au@@ dio@@ Manager@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )@@ ).set@@ Parameter@@ s("@@ A@@ 2@@ d@@ p@@ Su@@ s@@ pend@@ ed@@ =@@ true@@ "); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ device@@ ); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ connect@@ Au@@ dio@@ (@@ device@@ ); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Native@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )); }
@org.junit.Test public void test@@ Con@@ nect@@ From@@ Api@@ () { org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ java.util.Collection@@ s.@@ sing@@ let@@ on@@ List@@ (@@ device@@ Map@@ ), m@@ He@@ ad@@ set@@ Service@@ .get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (@@ new int@@ []{ android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D }@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s@@ (@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); }
@org.junit.Test public void test@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ _S@@ ing@@ le@@ H@@ f@@ St@@ op@@ Su@@ c@@ cess@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = get@@ Test@@ Device@@ (@@ 0); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ From@@ H@@ f@@ (@@ device@@ ); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent st@@ op@@ V@@ r@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ V@@ R@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ V@@ R@@ _@@ STATE_@@ S@@ TO@@ P@@ P@@ E@@ D@@ , device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ st@@ op@@ V@@ r@@ Event@@ ); ve@@ r@@ if@@ y@@ (m@@ System@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ de@@ ac@@ tiv@@ ate@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (); m@@ He@@ ad@@ set@@ Service.@@ st@@ op@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ device@@ ); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ at@@ Response@@ Code@@ (@@ device@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ AT_@@ RE@@ S@@ P@@ ON@@ S@@ E_@@ O@@ K@@ , 0); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ dis@@ connect@@ Au@@ dio@@ (@@ device@@ ); ve@@ r@@ if@@ y@@ (m@@ Au@@ dio@@ Manager@@ , time@@ out@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )@@ ).set@@ Parameter@@ s("@@ A@@ 2@@ d@@ p@@ Su@@ s@@ pend@@ ed@@ =@@ false@@ "); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Native@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )); }
@org.junit.Test public void test@@ Get@@ He@@ ad@@ set@@ Service@@ () { org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s@@ (m@@ He@@ ad@@ set@@ Service@@ , com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ .get@@ He@@ ad@@ set@@ Service@@ ()); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connection@@ State@@ (@@ de@@ vice )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ He@@ ad@@ set.@@ STATE_@@ A@@ U@@ D@@ IS@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Au@@ dio@@ State@@ ()); }
private void connect@@ H@@ f@@ p@@ Device@@ (android.@@ bluetooth.@@ Bluetooth@@ De@@ vice device@@ ) { org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ True@@ (m@@ He@@ ad@@ set@@ Service.@@ connect@@ (@@ device@@ )); ve@@ r@@ if@@ y@@ (m@@ Object@@ s@@ Factory@@ ).@@ m@@ ake@@ State@@ M@@ ach@@ ine@@ (@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ State@@ M@@ ach@@ in@@ es@@ Thread@@ L@@ oo@@ per@@ (), m@@ He@@ ad@@ set@@ Service@@ , m@@ Adap@@ ter@@ Service@@ , m@@ Native@@ Interface@@ , m@@ System@@ Interface@@ ); ve@@ r@@ if@@ y@@ (m@@ Native@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )).@@ connect@@ H@@ f@@ p@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ ING@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connection@@ State@@ (@@ device@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ java.util.Collection@@ s.@@ sing@@ let@@ on@@ List@@ (@@ device@@ ), m@@ He@@ ad@@ set@@ Service@@ .get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (@@ new int@@ []{ android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ T@@ IN@@ G }@@ )); com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent connec@@ ted@@ Ev@@ ent = new com.android.@@ bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Stack@@ Event@@ (@@ He@@ ad@@ set@@ Stack@@ Ev@@ ent.@@ EV@@ ENT_@@ TYP@@ E_@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ CH@@ AN@@ GE@@ D@@ , He@@ ad@@ set@@ H@@ al@@ Constants.@@ C@@ ON@@ N@@ EC@@ TION@@ _@@ STATE_@@ S@@ L@@ C@@ _C@@ ON@@ N@@ EC@@ TE@@ D@@ , device@@ ); m@@ He@@ ad@@ set@@ Service.@@ message@@ From@@ Native@@ (@@ connec@@ ted@@ Event@@ ); try { java.lang.@@ Thread@@ .@@ s@@ le@@ e@@ p@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ ); } catch (java.lang.@@ Interrup@@ ted@@ Exception excepti@@ on@@ ) { org.@@ junit.@@ Assert.@@ fail@@ (("@@ Interrup@@ ted while wait@@ ing for call@@ b@@ ac@@ k for " + device@@ )); } org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Connection@@ State@@ (@@ device@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Th@@ at@@ (m@@ He@@ ad@@ set@@ Service@@ .get@@ De@@ vices@@ Match@@ ing@@ Connection@@ Stat@@ es@@ (@@ new int@@ []{ android.@@ bluetooth.@@ Bluetooth@@ Pro@@ file.@@ STATE_@@ C@@ ON@@ N@@ EC@@ TE@@ D }@@ ), org.@@ h@@ am@@ c@@ res@@ t.@@ C@@ ore@@ Match@@ er@@ s.@@ has@@ Item@@ (@@ device@@ )); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); }
@org.junit.Test public void test@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ _S@@ ing@@ le@@ A@@ g@@ In@@ iti@@ ated@@ Device@@ Not@@ Connec@@ ted@@ () { android.@@ bluetooth.@@ Bluetooth@@ De@@ vice de@@ vice = get@@ Test@@ Device@@ (@@ 0); connect@@ H@@ f@@ p@@ Device@@ (@@ device@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ Equal@@ s(@@ device@@ , m@@ He@@ ad@@ set@@ Service@@ .get@@ Ac@@ tive@@ Device@@ ()); android.@@ bluetooth.@@ Bluetooth@@ De@@ vice w@@ ron@@ g@@ De@@ vice = get@@ Test@@ Device@@ (1@@ ); org.@@ junit.@@ Asser@@ t@@ .@@ assert@@ False@@ (m@@ He@@ ad@@ set@@ Service.@@ start@@ V@@ o@@ i@@ ce@@ Re@@ co@@ gn@@ i@@ tion@@ (@@ w@@ ron@@ g@@ Device@@ )); ve@@ r@@ if@@ y@@ No@@ M@@ ore@@ Inter@@ action@@ s@@ (m@@ Native@@ Interface@@ , a@@ f@@ ter@@ (com.android.bluetooth.@@ h@@ f@@ p.@@ He@@ ad@@ set@@ Service@@ And@@ State@@ M@@ ach@@ ine@@ Test.@@ A@@ S@@ Y@@ N@@ C@@ _C@@ AL@@ L@@ _@@ TI@@ ME@@ O@@ UT@@ _M@@ IL@@ L@@ IS@@ )); ve@@ r@@ if@@ y@@ Z@@ er@@ o@@ Inter@@ action@@ s@@ (m@@ Au@@ dio@@ Manager@@ ); }
private java.lang.String build@@ Integ@@ er@@ Pat@@ tern@@ String@@ () { java.lang.String rad@@ i@@ x@@ Dig@@ it@@ s = d@@ ig@@ it@@ s.@@ sub@@ string@@ (@@ 0, rad@@ i@@ x@@ ); java.lang.String d@@ ig@@ i@@ t = ("@@ ((@@ ?@@ i@@ )@@ [@@ " + rad@@ i@@ x@@ Dig@@ it@@ s) + "@@ ]@@ |@@ \@@ p@@ {@@ java@@ Dig@@ it@@ }@@ )@@ "; java.lang.String n@@ on@@ Z@@ er@@ o@@ R@@ ad@@ i@@ x@@ Dig@@ it@@ s = ((@@ ("@@ ((@@ ?@@ i@@ )@@ [@@ " + (d@@ ig@@ it@@ s.@@ sub@@ string@@ (1@@ , rad@@ i@@ x@@ ))) + "@@ ]@@ |@@ ("@@ ) + (@@ n@@ on@@ 0@@ Dig@@ it@@ )) + "@@ ))@@ "; java.lang.String g@@ roup@@ ed@@ N@@ um@@ er@@ al = ((((@@ ("@@ (@@ " + n@@ on@@ Z@@ er@@ o@@ R@@ ad@@ i@@ x@@ Dig@@ it@@ s) + d@@ ig@@ it@@ ) + "@@ ?@@ ") + d@@ ig@@ it@@ ) + "@@ ?@@ ") + d@@ ig@@ it@@ ) + "@@ ?@@ ("@@ ) + (@@ g@@ roup@@ Se@@ par@@ ator@@ )) + d@@ ig@@ it@@ ) + d@@ ig@@ it@@ ) + "@@ )@@ +@@ )@@ "; java.lang.String n@@ um@@ er@@ al = ((@@ ("@@ ((@@ " + d@@ ig@@ it@@ ) + "@@ ++@@ )@@ |@@ ") + g@@ roup@@ ed@@ N@@ um@@ er@@ al@@ ) + "@@ )@@ "; java.lang.String java@@ St@@ y@@ le@@ Integ@@ er = ("@@ (@@ [@@ -@@ +@@ ]@@ ?@@ (@@ " + n@@ um@@ er@@ al@@ ) + "@@ ))@@ "; java.lang.String ne@@ g@@ ative@@ Integ@@ er = ((@@ ne@@ g@@ ative@@ Pre@@ fix@@ ) + " n@@ um@@ er@@ al@@ ) + " (@@ ne@@ g@@ ative@@ Su@@ f@@ fix@@ ); java.lang.String po@@ si@@ tive@@ Integ@@ er = ((@@ po@@ si@@ tive@@ Pre@@ fix@@ ) + "@@ : n@@ um@@ er@@ al@@ ) + (@@ po@@ si@@ tive@@ Su@@ f@@ fix@@ ); return ((((@@ ("@@ (@@ " + java@@ St@@ y@@ le@@ Integ@@ er@@ ) + "@@ )@@ |@@ ("@@ ) + po@@ si@@ tive@@ Integ@@ er@@ ) + "@@ )@@ |@@ ("@@ ) + "@@ )@@ |@@ ("@@ ) + ne@@ g@@ ative@@ Integ@@ er@@ ) + "@@ )@@ "; }
public static java.lang.String read@@ File@@ (@@ java.io.File f@@ ) { byte@@ [] t@@ m@@ p = new byte@@ [@@ (@@ int@@ ) (@@ f.@@ length@@ ()@@ ))@@ ]; try (@@ java.io.File@@ Input@@ Stream fi@@ s = new java.io.File@@ InputStream@@ (f@@ )) { int po@@ s = 0; while (@@ po@@ s != (@@ t@@ mp@@ .@@ length@@ )) { int re@@ ad = fi@@ s.@@ read@@ (@@ t@@ mp@@ , po@@ s, ((@@ t@@ mp@@ .@@ length) - pos@@ )); if (re@@ ad == (-1@@ )) { throw new java.io.IO@@ Exception@@ ("@@ U@@ ne@@ x@@ pec@@ ted E@@ O@@ F@@ "); } po@@ s +@@ = read@@ ; } return new java.lang.String@@ (@@ t@@ mp@@ ); } catch (java.lang.Exception e) { throw new java.lang.@@ RuntimeException@@ (@@ e); } }
@java.lang.Override public void on@@ Res@@ um@@ e@@ () { if ((m@@ Bluetooth@@ Adap@@ ter@@ ) != null@@ ) && ((m@@ Bluetooth@@ Adap@@ t@@ er.get@@ State@@ ()) == (android.@@ bluetooth.@@ Bluetooth@@ Adap@@ ter.@@ STATE_@@ ON@@ ))) { final android.@@ bluetooth.@@ Bluetooth@@ Pro@@ fi@@ le pro@@ fi@@ le = m@@ Bluetooth@@ P@@ an@@ .get@@ (); if (pro@@ fi@@ le == null@@ ) { m@@ Bluetooth@@ Adap@@ t@@ er.get@@ Pro@@ file@@ Prox@@ y@@ (m@@ Context@@ , m@@ B@@ t@@ Pro@@ file@@ Service@@ Listener@@ , Bluetooth@@ Pro@@ file.@@ P@@ AN@@ ); } } if ((m@@ A@@ ir@@ p@@ lan@@ e@@ Mode@@ Ob@@ ser@@ ver@@ ) == null@@ ) { m@@ A@@ ir@@ p@@ lan@@ e@@ Mode@@ Ob@@ ser@@ ve@@ r = new com.android.@@ setting@@ s.@@ network@@ .@@ T@@ ether@@ Pre@@ ference@@ Control@@ ler.@@ Setting@@ Ob@@ ser@@ ver@@ (); } if ((m@@ T@@ ether@@ Recei@@ ver@@ ) == null@@ ) { m@@ T@@ ether@@ Recei@@ ve@@ r = new com.android.@@ setting@@ s.@@ network@@ .@@ T@@ ether@@ Pre@@ ference@@ Control@@ ler.@@ T@@ ether@@ B@@ roadcast@@ Recei@@ ver@@ (); } m@@ Context.@@ register@@ Recei@@ ver@@ (m@@ T@@ ether@@ Recei@@ ver@@ , new android.content.@@ Intent@@ Filter@@ (android.net.@@ Connectivity@@ Manager.@@ AC@@ TION@@ _@@ TE@@ TH@@ ER_@@ STATE_@@ CH@@ AN@@ GE@@ D@@ )); m@@ Contex@@ t.get@@ Content@@ Res@@ ol@@ ver@@ ().@@ register@@ Content@@ Ob@@ ser@@ ver@@ (m@@ A@@ ir@@ p@@ lan@@ e@@ Mode@@ Ob@@ server.@@ ur@@ i@@ , false@@ , m@@ A@@ ir@@ p@@ lan@@ e@@ Mode@@ Ob@@ ser@@ ver@@ ); }
private void set@@ Up@@ () throw@@ s java.lang.Exception { m@@ Net@@ wor@@ k = new android.@@ net@@ .@@ S@@ n@@ t@@ p@@ Client@@ Test@@ .@@ S@@ n@@ t@@ p@@ Test@@ Server@@ (@@ ); mC@@ li@@ ent@@ s = new android.@@ net.@@ S@@ n@@ t@@ p@@ C@@ li@@ ent@@ (); }
public void set@@ Ab@@ i@@ Bit@@ n@@ es@@ s(@@ java.lang.String b@@ it@@ n@@ ess@@ ) { m@@ Ab@@ i@@ Bit@@ n@@ es@@ s = b@@ it@@ n@@ ess@@ ; }
private void add@@ V@@ ts@@ Runner@@ Output@@ File@@ (@@ java.io.File log@@ File@@ ) { java.lang.String file@@ Name = log@@ File@@ .getName@@ (); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ Log@@ Data@@ Type type@@ ; if (file@@ Nam@@ e.@@ end@@ sWith@@ ("@@ .@@ h@@ t@@ ml@@ ")) { type = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ Log@@ (@@ log@@ File@@ Nam@@ e.@@ start@@ sWith@@ ("@@ log@@ cat@@ ")) { type = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ Log@@ (@@ log@@ File@@ ); } else if ((@@ file@@ Nam@@ e.@@ start@@ sWith@@ ("@@ bu@@ g@@ re@@ port@@ ")) && (file@@ Nam@@ e.@@ end@@ sWith@@ ("@@ .@@ z@@ ip@@ "@@ ))) { type = com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ Log@@ (@@ type@@ , com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ Log@@ Util.@@ C@@ Log.@@ w@@ ("@@ Un@@ k@@ no@@ w@@ n out@@ put fi@@ le type@@ . S@@ k@@ ip@@ p@@ ing %@@ s@@ ", log@@ File@@ ); return@@ ; } java.lang.String output@@ File@@ Name = ((@@ ((m@@ Test@@ Mod@@ ule@@ Name@@ ) + "@@ _@@ ") + file@@ Name@@ ) + "@@ _@@ ") + (m@@ Ab@@ i@@ Bit@@ n@@ ess@@ ); com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ File@@ InputStream@@ S@@ our@@ ce input@@ S@@ our@@ ce = new com.android.@@ tr@@ ad@@ e@@ f@@ ed.@@ res@@ ult.@@ File@@ InputStream@@ Source@@ (@@ log@@ File@@ ); m@@ List@@ en@@ er.@@ test@@ Log@@ (@@ output@@ File@@ Name, type@@ , input@@ Source@@ ); }
